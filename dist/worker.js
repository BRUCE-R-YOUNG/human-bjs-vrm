/*
  Human: Motion Analytics Demo
  author: <https://github.com/vladmandic>'
*/

var aS=Object.defineProperty,A_=(e,t,n)=>t in e?aS(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,lo=(e,t)=>{for(var n in t)aS(e,n,{get:t[n],enumerable:!0})},me=(e,t,n)=>(A_(e,typeof t!="symbol"?t+"":t,n),n),oS=(e,t,n)=>{if(!t.has(e))throw TypeError("Cannot "+n)},ia=(e,t,n)=>(oS(e,t,"read from private field"),n?n.call(e):t.get(e)),_d=(e,t,n)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,n)},vf=(e,t,n,s)=>(oS(e,t,"write to private field"),s?s.call(e,n):t.set(e,n),n);function he(...e){let t=new Date,n=`${t.getHours().toString().padStart(2,"0")}:${t.getMinutes().toString().padStart(2,"0")}:${t.getSeconds().toString().padStart(2,"0")}.${t.getMilliseconds().toString().padStart(3,"0")}`;e&&console.log(n,"Human:",...e)}function x_(e,t){let n=e.endsWith("/")?"":"/",r=t.startsWith(".")||t.startsWith("/")||t.startsWith("http:")||t.startsWith("https:")||t.startsWith("file:")?`${t}`:`${e}${n}${t}`;if(!r.toLocaleLowerCase().includes(".json"))throw new Error(`modelpath error: expecting json file: ${r}`);return r}var pe=()=>typeof performance<"u"?performance.now():parseInt((Number(process.hrtime.bigint())/1e3/1e3).toString());function iS(e,t,n="config",s=[]){for(let r of Object.keys(t))if(typeof t[r]=="object")iS(e[r],t[r],r,s);else{let a=e&&typeof e[r]<"u";a||s.push({reason:"unknown property",where:`${n}.${r} = ${t[r]}`});let o=e&&typeof e[r]==typeof t[r];a&&!o&&s.push({reason:"property type mismatch",where:`${n}.${r} = ${t[r]}`,expected:typeof e[r]})}return t.debug&&n==="config"&&s.length>0&&he("invalid configuration",s),s}function is(...e){let t=n=>n&&typeof n=="object";return e.reduce((n,s)=>(Object.keys(s||{}).forEach(r=>{let a=n[r],o=s[r];Array.isArray(a)&&Array.isArray(o)?n[r]=a.concat(...o):t(a)&&t(o)?n[r]=is(a,o):n[r]=o}),n),{})}var Tu={backend:"",modelBasePath:"",cacheModels:!0,validateModels:!0,wasmPath:"",wasmPlatformFetch:!1,debug:!1,async:!0,warmup:"full",cacheSensitivity:.7,skipAllowed:!1,deallocate:!1,flags:{},softwareKernels:!1,filter:{enabled:!0,equalization:!1,width:0,height:0,flip:!1,return:!0,brightness:0,contrast:0,sharpness:0,blur:0,saturation:0,hue:0,negative:!1,sepia:!1,vintage:!1,kodachrome:!1,technicolor:!1,polaroid:!1,pixelate:0},gesture:{enabled:!0},face:{enabled:!0,detector:{modelPath:"blazeface.json",rotation:!0,maxDetected:1,skipFrames:99,skipTime:2500,minConfidence:.2,iouThreshold:.1,mask:!1,return:!1},mesh:{enabled:!0,modelPath:"facemesh.json",keepInvalid:!1},attention:{enabled:!1,modelPath:"facemesh-attention.json"},iris:{enabled:!0,modelPath:"iris.json"},emotion:{enabled:!0,minConfidence:.1,skipFrames:99,skipTime:1500,modelPath:"emotion.json"},description:{enabled:!0,modelPath:"faceres.json",skipFrames:99,skipTime:3e3,minConfidence:.1},antispoof:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"antispoof.json"},liveness:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"liveness.json"}},body:{enabled:!0,modelPath:"movenet-lightning.json",maxDetected:-1,minConfidence:.3,skipFrames:1,skipTime:200},hand:{enabled:!0,rotation:!0,skipFrames:99,skipTime:1e3,minConfidence:.5,iouThreshold:.2,maxDetected:-1,landmarks:!0,detector:{modelPath:"handtrack.json"},skeleton:{modelPath:"handlandmark-full.json"}},object:{enabled:!1,modelPath:"mb3-centernet.json",minConfidence:.2,iouThreshold:.4,maxDetected:10,skipFrames:99,skipTime:2e3},segmentation:{enabled:!1,modelPath:"selfie.json",blur:8}},C2={};lo(C2,{Abs:()=>dl,Acos:()=>mc,Acosh:()=>gc,AdadeltaOptimizer:()=>Q0,AdagradOptimizer:()=>eg,AdamOptimizer:()=>tg,AdamaxOptimizer:()=>ng,Add:()=>va,AddN:()=>ho,All:()=>yc,Any:()=>Ac,ArgMax:()=>po,ArgMin:()=>xc,Asin:()=>bc,Asinh:()=>vc,Atan:()=>wc,Atan2:()=>hl,Atanh:()=>kc,AvgPool:()=>fo,AvgPool3D:()=>Nh,AvgPool3DGrad:()=>Jm,AvgPoolGrad:()=>Ym,BackendWasm:()=>iN,BatchMatMul:()=>mo,BatchToSpaceND:()=>pl,Bincount:()=>Qm,BroadcastArgs:()=>e0,BroadcastTo:()=>wS,Callback:()=>L4,CallbackList:()=>U7,Cast:()=>go,Ceil:()=>yo,ClipByValue:()=>wa,Complex:()=>Eh,ComplexAbs:()=>_h,Concat:()=>fl,Conv2D:()=>Ao,Conv2DBackpropFilter:()=>t0,Conv2DBackpropInput:()=>xo,Conv3D:()=>Rh,Conv3DBackpropFilterV2:()=>n0,Conv3DBackpropInputV2:()=>s0,Cos:()=>bo,Cosh:()=>vo,CropAndResize:()=>gl,Cumprod:()=>ml,Cumsum:()=>wo,CustomCallback:()=>H7,DataStorage:()=>Th,DenseBincount:()=>r0,DepthToSpace:()=>yl,DepthwiseConv2dNative:()=>ko,DepthwiseConv2dNativeBackpropFilter:()=>a0,DepthwiseConv2dNativeBackpropInput:()=>o0,Diag:()=>i0,Dilation2D:()=>$h,Dilation2DBackpropFilter:()=>mm,Dilation2DBackpropInput:()=>fm,ENV:()=>$2,EarlyStopping:()=>B4,Einsum:()=>Dh,Elu:()=>Io,EluGrad:()=>l0,Environment:()=>bS,Equal:()=>Al,Erf:()=>Sc,Exp:()=>Co,ExpandDims:()=>xl,Expm1:()=>bl,FFT:()=>u0,Fill:()=>Ic,FlipLeftRight:()=>vl,Floor:()=>To,FloorDiv:()=>No,FromPixels:()=>lh,FusedBatchNorm:()=>Eo,FusedConv2D:()=>Qa,FusedDepthwiseConv2D:()=>eo,GPGPUContext:()=>nh,GatherNd:()=>kl,GatherV2:()=>wl,GraphModel:()=>Ig,Greater:()=>Sl,GreaterEqual:()=>_o,History:()=>G7,IFFT:()=>c0,Identity:()=>Ro,Imag:()=>Fh,InputSpec:()=>Qt,IsFinite:()=>Cc,IsInf:()=>Tc,IsNan:()=>Il,KernelBackend:()=>pc,LRN:()=>Oh,LRNGrad:()=>h0,LayerVariable:()=>P7,LayersModel:()=>fa,LeakyRelu:()=>$o,Less:()=>Cl,LessEqual:()=>Tl,LinSpace:()=>d0,Log:()=>Do,Log1p:()=>Nc,LogSoftmax:()=>SS,LogicalAnd:()=>Nl,LogicalNot:()=>El,LogicalOr:()=>Ec,LogicalXor:()=>kS,LowerBound:()=>cR,MathBackendWebGL:()=>Ep,Max:()=>Fo,MaxPool:()=>Po,MaxPool3D:()=>Ph,MaxPool3DGrad:()=>f0,MaxPoolGrad:()=>p0,MaxPoolWithArgmax:()=>m0,Maximum:()=>Oo,Mean:()=>Mo,Min:()=>zo,Minimum:()=>Lo,MirrorPad:()=>Bo,Mod:()=>_c,MomentumOptimizer:()=>sg,Multinomial:()=>g0,Multiply:()=>Wo,Neg:()=>_l,NonMaxSuppressionV3:()=>$l,NonMaxSuppressionV4:()=>Rc,NonMaxSuppressionV5:()=>Dl,NotEqual:()=>Rl,OP_SCOPE_SUFFIX:()=>P2,OneHot:()=>Ol,OnesLike:()=>Fl,Optimizer:()=>Ia,OptimizerConstructors:()=>Pa,Pack:()=>Pl,PadV2:()=>Vo,Pool:()=>dR,Pow:()=>Uo,Prelu:()=>Go,Prod:()=>Ho,RMSPropOptimizer:()=>rg,RNN:()=>sa,RaggedTensorToTensor:()=>y0,Range:()=>$c,Rank:()=>AA,Real:()=>Mh,RealDiv:()=>So,Reciprocal:()=>Ml,Reduction:()=>Zn,Relu:()=>jo,Relu6:()=>Ko,Reshape:()=>zl,ResizeBilinear:()=>Xo,ResizeBilinearGrad:()=>x0,ResizeNearestNeighbor:()=>qo,ResizeNearestNeighborGrad:()=>A0,Reverse:()=>Ll,RotateWithOffset:()=>Ql,Round:()=>Bl,Rsqrt:()=>Zo,SGDOptimizer:()=>fp,ScatterNd:()=>Wl,SearchSorted:()=>b0,Select:()=>Vl,Selu:()=>Dc,Sequential:()=>rc,Sigmoid:()=>Jo,Sign:()=>Fc,Sin:()=>Yo,Sinh:()=>Gl,Slice:()=>Ul,Softmax:()=>ti,Softplus:()=>Oc,SpaceToBatchND:()=>Hl,SparseFillEmptyRows:()=>zh,SparseReshape:()=>Pc,SparseSegmentMean:()=>Lh,SparseSegmentSum:()=>Bh,SparseToDense:()=>Wh,SplitV:()=>jl,Sqrt:()=>Qo,Square:()=>Mc,SquaredDifference:()=>ni,Step:()=>ai,StridedSlice:()=>ql,StringNGrams:()=>zc,StringSplit:()=>Vh,StringToHashBucketFast:()=>Uh,Sub:()=>si,Sum:()=>ei,SymbolicTensor:()=>Sr,Tan:()=>Xl,Tanh:()=>ri,Tensor:()=>et,TensorBuffer:()=>ln,Tile:()=>ka,TopK:()=>Kl,Transform:()=>Zl,Transpose:()=>Xr,Unique:()=>v0,Unpack:()=>Yl,UnsortedSegmentSum:()=>Gh,UpperBound:()=>hR,Variable:()=>dh,WebGPUBackend:()=>Dg,ZerosLike:()=>Jl,_FusedMatMul:()=>Ja,abs:()=>Yt,acos:()=>J2,acosh:()=>Q2,add:()=>ce,addN:()=>ex,all:()=>k0,any:()=>fh,argMax:()=>Jr,argMin:()=>tx,asin:()=>nx,asinh:()=>sx,atan:()=>rx,atan2:()=>ax,atanh:()=>ox,avgPool:()=>Qh,avgPool3d:()=>lx,backend:()=>yr,backend_util:()=>T,basicLSTMCell:()=>AI,batchNorm:()=>Bc,batchNorm2d:()=>ux,batchNorm3d:()=>cx,batchNorm4d:()=>dx,batchToSpaceND:()=>ep,bincount:()=>hx,booleanMaskAsync:()=>e7,broadcastArgs:()=>xI,broadcastTo:()=>Vi,broadcast_util:()=>eu,browser:()=>Ar,buffer:()=>Le,callbacks:()=>kH,cast:()=>fe,ceil:()=>px,clipByValue:()=>cs,clone:()=>Qn,complex:()=>ga,concat:()=>Et,concat1d:()=>fx,concat2d:()=>tp,concat3d:()=>mx,concat4d:()=>gx,constraints:()=>L7,conv1d:()=>S0,conv2d:()=>ya,conv2dTranspose:()=>I0,conv3d:()=>Ax,conv3dTranspose:()=>xx,copyRegisteredKernels:()=>gR,cos:()=>np,cosh:()=>C0,cosineWindow:()=>X0,cumprod:()=>mh,cumsum:()=>T0,customGrad:()=>Qr,data:()=>dC,denseBincount:()=>vI,deprecationWarn:()=>U2,depthToSpace:()=>bx,depthwiseConv2d:()=>Wc,deregisterOp:()=>CH,device_util:()=>Xh,diag:()=>wI,dilation2d:()=>vx,disableDeprecationWarnings:()=>U$,dispose:()=>le,disposeVariables:()=>G$,div:()=>Ae,divNoNan:()=>wx,dot:()=>kx,dropout:()=>Kx,einsum:()=>kI,elu:()=>Vc,enableDebugMode:()=>V$,enableProdMode:()=>KS,enclosingPowerOfTwo:()=>Zx,engine:()=>bn,env:()=>K,equal:()=>Ns,erf:()=>Sx,euclideanNorm:()=>Tx,exp:()=>Es,expandDims:()=>Jt,expm1:()=>Nx,eye:()=>N0,fft:()=>hp,fill:()=>Gc,findBackend:()=>ZS,findBackendFactory:()=>X$,floor:()=>Hc,floorDiv:()=>Yh,forceHalfFloat:()=>C8,fused:()=>tc,gather:()=>jc,gatherND:()=>r7,gather_util:()=>j2,getBackend:()=>vn,getGradient:()=>gA,getKernel:()=>gm,getKernelsForBackend:()=>Xi,getThreadsCount:()=>sme,gpgpu_util:()=>r8,grad:()=>yO,grads:()=>AO,greater:()=>fs,greaterEqual:()=>li,ifft:()=>ec,imag:()=>Zh,image:()=>He,inTopKAsync:()=>a7,initializers:()=>B7,input:()=>a4,io:()=>Bs,irfft:()=>G0,isFinite:()=>Ex,isInf:()=>_x,isNaN:()=>Rx,keep:()=>mn,kernel_impls:()=>ar,layers:()=>W7,leakyRelu:()=>sp,less:()=>E0,lessEqual:()=>ui,linalg:()=>Qx,linspace:()=>NI,loadGraphModel:()=>cC,loadGraphModelSync:()=>Ej,loadLayersModel:()=>DU,localResponseNormalization:()=>$x,log:()=>_s,log1p:()=>rp,logSigmoid:()=>Dx,logSoftmax:()=>R0,logSumExp:()=>$0,logicalAnd:()=>sr,logicalNot:()=>ap,logicalOr:()=>D0,logicalXor:()=>Fx,losses:()=>y7,lowerBound:()=>_I,matMul:()=>Ye,math:()=>XS,max:()=>Dn,maxPool:()=>op,maxPool3d:()=>Ox,maxPoolWithArgmax:()=>RI,maximum:()=>na,mean:()=>Pt,memory:()=>xm,meshgrid:()=>$I,metrics:()=>P4,min:()=>ja,minimum:()=>qc,mirrorPad:()=>Px,mod:()=>ip,model:()=>RU,models:()=>M4,moments:()=>lp,movingAverage:()=>t7,mul:()=>L,multiRNNCell:()=>DI,multinomial:()=>FI,neg:()=>Nt,nextFrame:()=>eb,norm:()=>Uc,notEqual:()=>Qi,oneHot:()=>Yu,ones:()=>Cs,onesLike:()=>Rs,op:()=>V,outerProduct:()=>OI,pad:()=>Dr,pad1d:()=>PI,pad2d:()=>MI,pad3d:()=>zI,pad4d:()=>LI,pool:()=>Mx,pow:()=>Aa,prelu:()=>cp,print:()=>B2,prod:()=>zx,profile:()=>H$,raggedTensorToTensor:()=>BI,rand:()=>WI,randomGamma:()=>VI,randomNormal:()=>O0,randomStandardNormal:()=>UI,randomUniform:()=>Xc,range:()=>Qu,ready:()=>G2,real:()=>Ju,reciprocal:()=>Wx,registerBackend:()=>Lc,registerCallbackConstructor:()=>FU,registerGradient:()=>IS,registerKernel:()=>Ir,registerOp:()=>IH,regularizers:()=>z4,relu:()=>Fr,relu6:()=>P0,removeBackend:()=>q$,reshape:()=>U,reverse:()=>Hs,reverse1d:()=>GI,reverse2d:()=>HI,reverse3d:()=>jI,reverse4d:()=>qI,rfft:()=>pp,round:()=>M0,rsqrt:()=>z0,scalar:()=>Ee,scatterND:()=>n7,scatter_util:()=>q2,searchSorted:()=>F0,selu:()=>L0,separableConv2d:()=>B0,sequential:()=>$U,serialization:()=>de,setBackend:()=>bm,setPlatform:()=>K$,setThreadsCount:()=>nme,setWasmPath:()=>tme,setWasmPaths:()=>f2,setWebGLContext:()=>X5,setdiff1dAsync:()=>XI,sigmoid:()=>Ts,sign:()=>Vx,signal:()=>g7,sin:()=>W0,sinh:()=>V0,slice:()=>ze,slice1d:()=>dp,slice2d:()=>U0,slice3d:()=>el,slice4d:()=>tl,slice_util:()=>zt,softmax:()=>Kc,softplus:()=>tu,spaceToBatchND:()=>up,sparse:()=>A7,sparseToDense:()=>s7,spectral:()=>m7,split:()=>kn,sqrt:()=>In,square:()=>gt,squaredDifference:()=>H0,squeeze:()=>mt,stack:()=>Pn,step:()=>nu,stridedSlice:()=>Ux,string:()=>x7,sub:()=>ge,sum:()=>Se,sumOutType:()=>qh,tan:()=>Gx,tanh:()=>Yi,tensor:()=>lt,tensor1d:()=>qt,tensor2d:()=>Kr,tensor3d:()=>H2,tensor4d:()=>KI,tensor5d:()=>ZI,tensor6d:()=>YI,tensor_util:()=>Cr,test_util:()=>dI,tidy:()=>Y,tile:()=>Ws,time:()=>j$,topk:()=>Hx,train:()=>Ei,transpose:()=>Qe,truncatedNormal:()=>j0,unique:()=>jx,unregisterGradient:()=>mR,unregisterKernel:()=>fR,unsortedSegmentSum:()=>q0,unstack:()=>ds,upcastType:()=>Fn,upperBound:()=>JI,util:()=>v,valueAndGrad:()=>xO,valueAndGrads:()=>bO,variable:()=>qx,variableGrads:()=>EI,version:()=>yv,version_converter:()=>Rj,version_core:()=>fI,version_layers:()=>wb,version_wasm:()=>rme,version_webgl:()=>Zte,webgl:()=>Yte,webgl_util:()=>N6,webgpu_util:()=>cN,where:()=>On,whereAsync:()=>Xx,zeros:()=>Vt,zerosLike:()=>st});var b_=Object.create,T2=Object.defineProperty,v_=Object.getOwnPropertyDescriptor,lS=Object.getOwnPropertyNames,w_=Object.getPrototypeOf,k_=Object.prototype.hasOwnProperty,tn=(e,t)=>function(){return t||(0,e[lS(e)[0]])((t={exports:{}}).exports,t),t.exports},Ue=(e,t)=>{for(var n in t)T2(e,n,{get:t[n],enumerable:!0})},S_=(e,t,n,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of lS(t))!k_.call(e,r)&&r!==n&&T2(e,r,{get:()=>t[r],enumerable:!(s=v_(t,r))||s.enumerable});return e},uo=(e,t,n)=>(n=e!=null?b_(w_(e)):{},S_(t||!e||!e.__esModule?T2(n,"default",{value:e,enumerable:!0}):n,e)),I_=tn({"node_modules/.pnpm/long@4.0.0/node_modules/long/src/long.js"(e,t){t.exports=s;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function s(F,k,M){this.low=F|0,this.high=k|0,this.unsigned=!!M}s.prototype.__isLong__,Object.defineProperty(s.prototype,"__isLong__",{value:!0});function r(F){return(F&&F.__isLong__)===!0}s.isLong=r;var a={},o={};function i(F,k){var M,z,W;return k?(F>>>=0,(W=0<=F&&F<256)&&(z=o[F],z)?z:(M=u(F,(F|0)<0?-1:0,!0),W&&(o[F]=M),M)):(F|=0,(W=-128<=F&&F<128)&&(z=a[F],z)?z:(M=u(F,F<0?-1:0,!1),W&&(a[F]=M),M))}s.fromInt=i;function l(F,k){if(isNaN(F))return k?b:A;if(k){if(F<0)return b;if(F>=g)return R}else{if(F<=-y)return D;if(F+1>=y)return _}return F<0?l(-F,k).neg():u(F%m|0,F/m|0,k)}s.fromNumber=l;function u(F,k,M){return new s(F,k,M)}s.fromBits=u;var c=Math.pow;function h(F,k,M){if(F.length===0)throw Error("empty string");if(F==="NaN"||F==="Infinity"||F==="+Infinity"||F==="-Infinity")return A;if(typeof k=="number"?(M=k,k=!1):k=!!k,M=M||10,M<2||36<M)throw RangeError("radix");var z;if((z=F.indexOf("-"))>0)throw Error("interior hyphen");if(z===0)return h(F.substring(1),k,M).neg();for(var W=l(c(M,8)),H=A,j=0;j<F.length;j+=8){var Z=Math.min(8,F.length-j),J=parseInt(F.substring(j,j+Z),M);if(Z<8){var Q=l(c(M,Z));H=H.mul(Q).add(l(J))}else H=H.mul(W),H=H.add(l(J))}return H.unsigned=k,H}s.fromString=h;function d(F,k){return typeof F=="number"?l(F,k):typeof F=="string"?h(F,k):u(F.low,F.high,typeof k=="boolean"?k:F.unsigned)}s.fromValue=d;var p=1<<16,f=1<<24,m=p*p,g=m*m,y=g/2,x=i(f),A=i(0);s.ZERO=A;var b=i(0,!0);s.UZERO=b;var w=i(1);s.ONE=w;var S=i(1,!0);s.UONE=S;var C=i(-1);s.NEG_ONE=C;var _=u(-1,2147483647,!1);s.MAX_VALUE=_;var R=u(-1,-1,!0);s.MAX_UNSIGNED_VALUE=R;var D=u(0,-2147483648,!1);s.MIN_VALUE=D;var E=s.prototype;E.toInt=function(){return this.unsigned?this.low>>>0:this.low},E.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},E.toString=function(k){if(k=k||10,k<2||36<k)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(D)){var M=l(k),z=this.div(M),W=z.mul(M).sub(this);return z.toString(k)+W.toInt().toString(k)}else return"-"+this.neg().toString(k);for(var H=l(c(k,6),this.unsigned),j=this,Z="";;){var J=j.div(H),Q=j.sub(J.mul(H)).toInt()>>>0,ae=Q.toString(k);if(j=J,j.isZero())return ae+Z;for(;ae.length<6;)ae="0"+ae;Z=""+ae+Z}},E.getHighBits=function(){return this.high},E.getHighBitsUnsigned=function(){return this.high>>>0},E.getLowBits=function(){return this.low},E.getLowBitsUnsigned=function(){return this.low>>>0},E.getNumBitsAbs=function(){if(this.isNegative())return this.eq(D)?64:this.neg().getNumBitsAbs();for(var k=this.high!=0?this.high:this.low,M=31;M>0&&(k&1<<M)==0;M--);return this.high!=0?M+33:M+1},E.isZero=function(){return this.high===0&&this.low===0},E.eqz=E.isZero,E.isNegative=function(){return!this.unsigned&&this.high<0},E.isPositive=function(){return this.unsigned||this.high>=0},E.isOdd=function(){return(this.low&1)===1},E.isEven=function(){return(this.low&1)===0},E.equals=function(k){return r(k)||(k=d(k)),this.unsigned!==k.unsigned&&this.high>>>31===1&&k.high>>>31===1?!1:this.high===k.high&&this.low===k.low},E.eq=E.equals,E.notEquals=function(k){return!this.eq(k)},E.neq=E.notEquals,E.ne=E.notEquals,E.lessThan=function(k){return this.comp(k)<0},E.lt=E.lessThan,E.lessThanOrEqual=function(k){return this.comp(k)<=0},E.lte=E.lessThanOrEqual,E.le=E.lessThanOrEqual,E.greaterThan=function(k){return this.comp(k)>0},E.gt=E.greaterThan,E.greaterThanOrEqual=function(k){return this.comp(k)>=0},E.gte=E.greaterThanOrEqual,E.ge=E.greaterThanOrEqual,E.compare=function(k){if(r(k)||(k=d(k)),this.eq(k))return 0;var M=this.isNegative(),z=k.isNegative();return M&&!z?-1:!M&&z?1:this.unsigned?k.high>>>0>this.high>>>0||k.high===this.high&&k.low>>>0>this.low>>>0?-1:1:this.sub(k).isNegative()?-1:1},E.comp=E.compare,E.negate=function(){return!this.unsigned&&this.eq(D)?D:this.not().add(w)},E.neg=E.negate,E.add=function(k){r(k)||(k=d(k));var M=this.high>>>16,z=this.high&65535,W=this.low>>>16,H=this.low&65535,j=k.high>>>16,Z=k.high&65535,J=k.low>>>16,Q=k.low&65535,ae=0,ne=0,ie=0,ue=0;return ue+=H+Q,ie+=ue>>>16,ue&=65535,ie+=W+J,ne+=ie>>>16,ie&=65535,ne+=z+Z,ae+=ne>>>16,ne&=65535,ae+=M+j,ae&=65535,u(ie<<16|ue,ae<<16|ne,this.unsigned)},E.subtract=function(k){return r(k)||(k=d(k)),this.add(k.neg())},E.sub=E.subtract,E.multiply=function(k){if(this.isZero())return A;if(r(k)||(k=d(k)),n){var M=n.mul(this.low,this.high,k.low,k.high);return u(M,n.get_high(),this.unsigned)}if(k.isZero())return A;if(this.eq(D))return k.isOdd()?D:A;if(k.eq(D))return this.isOdd()?D:A;if(this.isNegative())return k.isNegative()?this.neg().mul(k.neg()):this.neg().mul(k).neg();if(k.isNegative())return this.mul(k.neg()).neg();if(this.lt(x)&&k.lt(x))return l(this.toNumber()*k.toNumber(),this.unsigned);var z=this.high>>>16,W=this.high&65535,H=this.low>>>16,j=this.low&65535,Z=k.high>>>16,J=k.high&65535,Q=k.low>>>16,ae=k.low&65535,ne=0,ie=0,ue=0,te=0;return te+=j*ae,ue+=te>>>16,te&=65535,ue+=H*ae,ie+=ue>>>16,ue&=65535,ue+=j*Q,ie+=ue>>>16,ue&=65535,ie+=W*ae,ne+=ie>>>16,ie&=65535,ie+=H*Q,ne+=ie>>>16,ie&=65535,ie+=j*J,ne+=ie>>>16,ie&=65535,ne+=z*ae+W*Q+H*J+j*Z,ne&=65535,u(ue<<16|te,ne<<16|ie,this.unsigned)},E.mul=E.multiply,E.divide=function(k){if(r(k)||(k=d(k)),k.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&k.low===-1&&k.high===-1)return this;var M=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,k.low,k.high);return u(M,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?b:A;var z,W,H;if(this.unsigned){if(k.unsigned||(k=k.toUnsigned()),k.gt(this))return b;if(k.gt(this.shru(1)))return S;H=b}else{if(this.eq(D)){if(k.eq(w)||k.eq(C))return D;if(k.eq(D))return w;var j=this.shr(1);return z=j.div(k).shl(1),z.eq(A)?k.isNegative()?w:C:(W=this.sub(k.mul(z)),H=z.add(W.div(k)),H)}else if(k.eq(D))return this.unsigned?b:A;if(this.isNegative())return k.isNegative()?this.neg().div(k.neg()):this.neg().div(k).neg();if(k.isNegative())return this.div(k.neg()).neg();H=A}for(W=this;W.gte(k);){z=Math.max(1,Math.floor(W.toNumber()/k.toNumber()));for(var Z=Math.ceil(Math.log(z)/Math.LN2),J=Z<=48?1:c(2,Z-48),Q=l(z),ae=Q.mul(k);ae.isNegative()||ae.gt(W);)z-=J,Q=l(z,this.unsigned),ae=Q.mul(k);Q.isZero()&&(Q=w),H=H.add(Q),W=W.sub(ae)}return H},E.div=E.divide,E.modulo=function(k){if(r(k)||(k=d(k)),n){var M=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,k.low,k.high);return u(M,n.get_high(),this.unsigned)}return this.sub(this.div(k).mul(k))},E.mod=E.modulo,E.rem=E.modulo,E.not=function(){return u(~this.low,~this.high,this.unsigned)},E.and=function(k){return r(k)||(k=d(k)),u(this.low&k.low,this.high&k.high,this.unsigned)},E.or=function(k){return r(k)||(k=d(k)),u(this.low|k.low,this.high|k.high,this.unsigned)},E.xor=function(k){return r(k)||(k=d(k)),u(this.low^k.low,this.high^k.high,this.unsigned)},E.shiftLeft=function(k){return r(k)&&(k=k.toInt()),(k&=63)===0?this:k<32?u(this.low<<k,this.high<<k|this.low>>>32-k,this.unsigned):u(0,this.low<<k-32,this.unsigned)},E.shl=E.shiftLeft,E.shiftRight=function(k){return r(k)&&(k=k.toInt()),(k&=63)===0?this:k<32?u(this.low>>>k|this.high<<32-k,this.high>>k,this.unsigned):u(this.high>>k-32,this.high>=0?0:-1,this.unsigned)},E.shr=E.shiftRight,E.shiftRightUnsigned=function(k){if(r(k)&&(k=k.toInt()),k&=63,k===0)return this;var M=this.high;if(k<32){var z=this.low;return u(z>>>k|M<<32-k,M>>>k,this.unsigned)}else return k===32?u(M,0,this.unsigned):u(M>>>k-32,0,this.unsigned)},E.shru=E.shiftRightUnsigned,E.shr_u=E.shiftRightUnsigned,E.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},E.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},E.toBytes=function(k){return k?this.toBytesLE():this.toBytesBE()},E.toBytesLE=function(){var k=this.high,M=this.low;return[M&255,M>>>8&255,M>>>16&255,M>>>24,k&255,k>>>8&255,k>>>16&255,k>>>24]},E.toBytesBE=function(){var k=this.high,M=this.low;return[k>>>24,k>>>16&255,k>>>8&255,k&255,M>>>24,M>>>16&255,M>>>8&255,M&255]},s.fromBytes=function(k,M,z){return z?s.fromBytesLE(k,M):s.fromBytesBE(k,M)},s.fromBytesLE=function(k,M){return new s(k[0]|k[1]<<8|k[2]<<16|k[3]<<24,k[4]|k[5]<<8|k[6]<<16|k[7]<<24,M)},s.fromBytesBE=function(k,M){return new s(k[4]<<24|k[5]<<16|k[6]<<8|k[7],k[0]<<24|k[1]<<16|k[2]<<8|k[3],M)}}}),C_=tn({"(disabled):node_modules/.pnpm/node-fetch@2.6.7/node_modules/node-fetch/browser.js"(){}}),T_=tn({"(disabled):util"(){}}),N_=tn({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/alea.js"(e,t){(function(n,s,r){function a(u){var c=this,h=l();c.next=function(){var d=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=d-(c.c=d|0)},c.c=1,c.s0=h(" "),c.s1=h(" "),c.s2=h(" "),c.s0-=h(u),c.s0<0&&(c.s0+=1),c.s1-=h(u),c.s1<0&&(c.s1+=1),c.s2-=h(u),c.s2<0&&(c.s2+=1),h=null}function o(u,c){return c.c=u.c,c.s0=u.s0,c.s1=u.s1,c.s2=u.s2,c}function i(u,c){var h=new a(u),d=c&&c.state,p=h.next;return p.int32=function(){return h.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,d&&(typeof d=="object"&&o(d,h),p.state=function(){return o(h,{})}),p}function l(){var u=4022871197,c=function(h){h=String(h);for(var d=0;d<h.length;d++){u+=h.charCodeAt(d);var p=.02519603282416938*u;u=p>>>0,p-=u,p*=u,u=p>>>0,p-=u,u+=p*4294967296}return(u>>>0)*23283064365386963e-26};return c}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.alea=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),E_=tn({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xor128.js"(e,t){(function(n,s,r){function a(l){var u=this,c="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var d=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^d^d>>>8},l===(l|0)?u.x=l:c+=l;for(var h=0;h<c.length+64;h++)u.x^=c.charCodeAt(h)|0,u.next()}function o(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u}function i(l,u){var c=new a(l),h=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var p=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,h&&(typeof h=="object"&&o(h,c),d.state=function(){return o(c,{})}),d}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xor128=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),__=tn({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xorwow.js"(e,t){(function(n,s,r){function a(l){var u=this,c="";u.next=function(){var d=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(d^d<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,l===(l|0)?u.x=l:c+=l;for(var h=0;h<c.length+64;h++)u.x^=c.charCodeAt(h)|0,h==c.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function o(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u.v=l.v,u.d=l.d,u}function i(l,u){var c=new a(l),h=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var p=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,h&&(typeof h=="object"&&o(h,c),d.state=function(){return o(c,{})}),d}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xorwow=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),R_=tn({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xorshift7.js"(e,t){(function(n,s,r){function a(l){var u=this;u.next=function(){var h=u.x,d=u.i,p,f,m;return p=h[d],p^=p>>>7,f=p^p<<24,p=h[d+1&7],f^=p^p>>>10,p=h[d+3&7],f^=p^p>>>3,p=h[d+4&7],f^=p^p<<7,p=h[d+7&7],p=p^p<<13,f^=p^p<<9,h[d]=f,u.i=d+1&7,f};function c(h,d){var p,f,m=[];if(d===(d|0))f=m[0]=d;else for(d=""+d,p=0;p<d.length;++p)m[p&7]=m[p&7]<<15^d.charCodeAt(p)+m[p+1&7]<<13;for(;m.length<8;)m.push(0);for(p=0;p<8&&m[p]===0;++p);for(p==8?f=m[7]=-1:f=m[p],h.x=m,h.i=0,p=256;p>0;--p)h.next()}c(u,l)}function o(l,u){return u.x=l.x.slice(),u.i=l.i,u}function i(l,u){l==null&&(l=+new Date);var c=new a(l),h=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var p=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,h&&(h.x&&o(h,c),d.state=function(){return o(c,{})}),d}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xorshift7=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),$_=tn({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/xor4096.js"(e,t){(function(n,s,r){function a(l){var u=this;u.next=function(){var h=u.w,d=u.X,p=u.i,f,m;return u.w=h=h+1640531527|0,m=d[p+34&127],f=d[p=p+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=d[p]=m^f,u.i=p,m+(h^h>>>16)|0};function c(h,d){var p,f,m,g,y,x=[],A=128;for(d===(d|0)?(f=d,d=null):(d=d+"\0",f=0,A=Math.max(A,d.length)),m=0,g=-32;g<A;++g)d&&(f^=d.charCodeAt((g+32)%d.length)),g===0&&(y=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(y=y+1640531527|0,p=x[g&127]^=f+y,m=p==0?m+1:0);for(m>=128&&(x[(d&&d.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=x[m+34&127],p=x[m=m+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,x[m]=f^p;h.w=y,h.X=x,h.i=m}c(u,l)}function o(l,u){return u.i=l.i,u.w=l.w,u.X=l.X.slice(),u}function i(l,u){l==null&&(l=+new Date);var c=new a(l),h=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var p=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,h&&(h.X&&o(h,c),d.state=function(){return o(c,{})}),d}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.xor4096=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),D_=tn({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/lib/tychei.js"(e,t){(function(n,s,r){function a(l){var u=this,c="";u.next=function(){var d=u.b,p=u.c,f=u.d,m=u.a;return d=d<<25^d>>>7^p,p=p-f|0,f=f<<24^f>>>8^m,m=m-d|0,u.b=d=d<<20^d>>>12^p,u.c=p=p-f|0,u.d=f<<16^p>>>16^m,u.a=m-d|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,l===Math.floor(l)?(u.a=l/4294967296|0,u.b=l|0):c+=l;for(var h=0;h<c.length+20;h++)u.b^=c.charCodeAt(h)|0,u.next()}function o(l,u){return u.a=l.a,u.b=l.b,u.c=l.c,u.d=l.d,u}function i(l,u){var c=new a(l),h=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var p=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,h&&(typeof h=="object"&&o(h,c),d.state=function(){return o(c,{})}),d}s&&s.exports?s.exports=i:r&&r.amd?r(function(){return i}):this.tychei=i})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),F_=tn({"(disabled):crypto"(){}}),O_=tn({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/seedrandom.js"(e,t){(function(n,s,r){var a=256,o=6,i=52,l="random",u=r.pow(a,o),c=r.pow(2,i),h=c*2,d=a-1,p;function f(w,S,C){var _=[];S=S==!0?{entropy:!0}:S||{};var R=x(y(S.entropy?[w,b(s)]:w??A(),3),_),D=new m(_),E=function(){for(var F=D.g(o),k=u,M=0;F<c;)F=(F+M)*a,k*=a,M=D.g(1);for(;F>=h;)F/=2,k/=2,M>>>=1;return(F+M)/k};return E.int32=function(){return D.g(4)|0},E.quick=function(){return D.g(4)/4294967296},E.double=E,x(b(D.S),s),(S.pass||C||function(F,k,M,z){return z&&(z.S&&g(z,D),F.state=function(){return g(D,{})}),M?(r[l]=F,k):F})(E,R,"global"in S?S.global:this==r,S.state)}function m(w){var S,C=w.length,_=this,R=0,D=_.i=_.j=0,E=_.S=[];for(C||(w=[C++]);R<a;)E[R]=R++;for(R=0;R<a;R++)E[R]=E[D=d&D+w[R%C]+(S=E[R])],E[D]=S;(_.g=function(F){for(var k,M=0,z=_.i,W=_.j,H=_.S;F--;)k=H[z=d&z+1],M=M*a+H[d&(H[z]=H[W=d&W+k])+(H[W]=k)];return _.i=z,_.j=W,M})(a)}function g(w,S){return S.i=w.i,S.j=w.j,S.S=w.S.slice(),S}function y(w,S){var C=[],_=typeof w,R;if(S&&_=="object")for(R in w)try{C.push(y(w[R],S-1))}catch{}return C.length?C:_=="string"?w:w+"\0"}function x(w,S){for(var C=w+"",_,R=0;R<C.length;)S[d&R]=d&(_^=S[d&R]*19)+C.charCodeAt(R++);return b(S)}function A(){try{var w;return p&&(w=p.randomBytes)?w=w(a):(w=new Uint8Array(a),(n.crypto||n.msCrypto).getRandomValues(w)),b(w)}catch{var S=n.navigator,C=S&&S.plugins;return[+new Date,n,C,n.screen,b(s)]}}function b(w){return String.fromCharCode.apply(0,w)}if(x(r.random(),s),typeof t=="object"&&t.exports){t.exports=f;try{p=F_()}catch{}}else typeof define=="function"&&define.amd?define(function(){return f}):r["seed"+l]=f})(typeof self<"u"?self:e,[],Math)}}),Xm=tn({"node_modules/.pnpm/seedrandom@3.0.5/node_modules/seedrandom/index.js"(e,t){var n=N_(),s=E_(),r=__(),a=R_(),o=$_(),i=D_(),l=O_();l.alea=n,l.xor128=s,l.xorwow=r,l.xorshift7=a,l.xor4096=o,l.tychei=i,t.exports=l}}),uS=tn({"(disabled):node_modules/.pnpm/string_decoder@1.3.0/node_modules/string_decoder/lib/string_decoder.js"(){}}),N2=tn({"(disabled):fs"(){}}),dm=tn({"(disabled):path"(){}}),P_=tn({"(disabled):worker_threads"(){}}),M_=tn({"(disabled):perf_hooks"(){}}),z_=tn({"(disabled):os"(){}}),L_=tn({"node_modules/.pnpm/@tensorflow+tfjs-backend-wasm@3.20.0_au2niqrxqvhsnv4oetlud656gy/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(e,t){var n=(()=>{var s=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(s=s||__filename),function(r){r=r||{};function a(){return Fe.buffer!=Wn&&lr(Fe.buffer),Bp}function o(){return Fe.buffer!=Wn&&lr(Fe.buffer),Wp}function i(){return Fe.buffer!=Wn&&lr(Fe.buffer),Ad}function l(){return Fe.buffer!=Wn&&lr(Fe.buffer),Vp}function u(){return Fe.buffer!=Wn&&lr(Fe.buffer),Up}function c(){return Fe.buffer!=Wn&&lr(Fe.buffer),Gp}function h(){return Fe.buffer!=Wn&&lr(Fe.buffer),Hp}var d=typeof r<"u"?r:{},p,f;d.ready=new Promise(function(N,O){p=N,f=O});var m;typeof process<"u"&&process.listeners&&(m={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var g=Object.assign({},d),y=[],x="./this.program",A=(N,O)=>{throw O},b=typeof window=="object",w=typeof importScripts=="function",S=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",C=d.ENVIRONMENT_IS_PTHREAD||!1,_="";function R(N){return d.locateFile?d.locateFile(N,_):_+N}var D,E,F,k;function M(N){if(N instanceof Nd)return;Q("exiting due to exception: "+N)}var z,W,H;if(S){w?_=dm().dirname(_)+"/":_=__dirname+"/",H=()=>{W||(z=N2(),W=dm())},D=function(G,ee){return H(),G=W.normalize(G),z.readFileSync(G,ee?void 0:"utf8")},F=O=>{var G=D(O,!0);return G.buffer||(G=new Uint8Array(G)),G},E=(O,G,ee)=>{H(),O=W.normalize(O),z.readFile(O,function(ye,ve){ye?ee(ye):G(ve.buffer)})},process.argv.length>1&&(x=process.argv[1].replace(/\\/g,"/")),y=process.argv.slice(2),process.on("uncaughtException",function(O){if(!(O instanceof Nd))throw O}),process.on("unhandledRejection",function(O){throw O}),A=(O,G)=>{if(Ai())throw process.exitCode=O,G;M(G),process.exit(O)},d.inspect=function(){return"[Emscripten Module object]"};let N;try{N=P_()}catch(O){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),O}global.Worker=N.Worker}else(b||w)&&(w?_=self.location.href:typeof document<"u"&&document.currentScript&&(_=document.currentScript.src),typeof s<"u"&&s&&(_=s),_.indexOf("blob:")!==0?_=_.substr(0,_.replace(/[?#].*/,"").lastIndexOf("/")+1):_="",S||(D=N=>{var O=new XMLHttpRequest;return O.open("GET",N,!1),O.send(null),O.responseText},w&&(F=N=>{var O=new XMLHttpRequest;return O.open("GET",N,!1),O.responseType="arraybuffer",O.send(null),new Uint8Array(O.response)}),E=(N,O,G)=>{var ee=new XMLHttpRequest;ee.open("GET",N,!0),ee.responseType="arraybuffer",ee.onload=()=>{if(ee.status==200||ee.status==0&&ee.response){O(ee.response);return}G()},ee.onerror=G,ee.send(null)}),k=N=>document.title=N);S&&typeof performance>"u"&&(global.performance=M_().performance);var j=console.log.bind(console),Z=console.warn.bind(console);S&&(H(),j=N=>z.writeSync(1,N+`
`),Z=N=>z.writeSync(2,N+`
`));var J=d.print||j,Q=d.printErr||Z;Object.assign(d,g),g=null,d.arguments&&(y=d.arguments),d.thisProgram&&(x=d.thisProgram),d.quit&&(A=d.quit);var ae=4;function ne(N){ne.shown||(ne.shown={}),ne.shown[N]||(ne.shown[N]=1,Q(N))}function ie(N,O){if(typeof WebAssembly.Function=="function"){for(var G={i:"i32",j:"i64",f:"f32",d:"f64"},ee={parameters:[],results:O[0]=="v"?[]:[G[O[0]]]},ye=1;ye<O.length;++ye)ee.parameters.push(G[O[ye]]);return new WebAssembly.Function(ee,N)}var ve=[1,0,1,96],Ce=O.slice(0,1),Pe=O.slice(1),Ot={i:127,j:126,f:125,d:124};ve.push(Pe.length);for(var ye=0;ye<Pe.length;++ye)ve.push(Ot[Pe[ye]]);Ce=="v"?ve.push(0):ve=ve.concat([1,Ot[Ce]]),ve[1]=ve.length-2;var hr=new Uint8Array([0,97,115,109,1,0,0,0].concat(ve,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0])),pr=new WebAssembly.Module(hr),bf=new WebAssembly.Instance(pr,{e:{f:N}}),Ed=bf.exports.f;return Ed}var ue=[],te;function oe(){if(ue.length)return ue.pop();try{Fs.grow(1)}catch(N){throw N instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":N}return Fs.length-1}function Ne(N,O){for(var G=N;G<N+O;G++){var ee=xu(G);ee&&te.set(ee,G)}}var _e=0,Be=N=>{_e=N},Oe=Atomics.load,nt=Atomics.store,dt=Atomics.compareExchange,ot;d.wasmBinary&&(ot=d.wasmBinary);var ht=d.noExitRuntime||!0;typeof WebAssembly!="object"&&gu("no native wasm support detected");var Fe,vt,xt=!1,zn;function Kt(N,O){N||gu(O)}function gs(N){var O=d["_"+N];return O}function rn(N,O,G,ee,ye){var ve={string:function(xs){var Cu=0;if(xs!=null&&xs!==0){var Zv=(xs.length<<2)+1;Cu=Iu(Zv),aa(xs,Cu,Zv)}return Cu},array:function(xs){var Cu=Iu(xs.length);return oa(xs,Cu),Cu}};function Ce(xs){return O==="string"?Bn(xs):O==="boolean"?Boolean(xs):xs}var Pe=gs(N),Ot=[],hr=0;if(ee)for(var pr=0;pr<ee.length;pr++){var bf=ve[G[pr]];bf?(hr===0&&(hr=vy()),Ot[pr]=bf(ee[pr])):Ot[pr]=ee[pr]}var Ed=Pe.apply(null,Ot);function y_(xs){return hr!==0&&gf(hr),Ce(xs)}return Ed=y_(Ed),Ed}function Ln(N,O,G,ee){G=G||[];var ye=G.every(function(Ce){return Ce==="number"}),ve=O!=="string";return ve&&ye&&!ee?gs(N):function(){return rn(N,O,G,arguments,ee)}}var ys=1;function As(N){var O=new TextDecoder(N);this.decode=G=>(G.buffer instanceof SharedArrayBuffer&&(G=new Uint8Array(G)),O.decode.call(O,G))}var En=typeof TextDecoder<"u"?new As("utf8"):void 0;function Ds(N,O,G){for(var ee=O+G,ye=O;N[ye]&&!(ye>=ee);)++ye;if(ye-O>16&&N.subarray&&En)return En.decode(N.subarray(O,ye));for(var ve="";O<ye;){var Ce=N[O++];if(!(Ce&128)){ve+=String.fromCharCode(Ce);continue}var Pe=N[O++]&63;if((Ce&224)==192){ve+=String.fromCharCode((Ce&31)<<6|Pe);continue}var Ot=N[O++]&63;if((Ce&240)==224?Ce=(Ce&15)<<12|Pe<<6|Ot:Ce=(Ce&7)<<18|Pe<<12|Ot<<6|N[O++]&63,Ce<65536)ve+=String.fromCharCode(Ce);else{var hr=Ce-65536;ve+=String.fromCharCode(55296|hr>>10,56320|hr&1023)}}return ve}function Bn(N,O){return N?Ds(o(),N,O):""}function ra(N,O,G,ee){if(!(ee>0))return 0;for(var ye=G,ve=G+ee-1,Ce=0;Ce<N.length;++Ce){var Pe=N.charCodeAt(Ce);if(Pe>=55296&&Pe<=57343){var Ot=N.charCodeAt(++Ce);Pe=65536+((Pe&1023)<<10)|Ot&1023}if(Pe<=127){if(G>=ve)break;O[G++]=Pe}else if(Pe<=2047){if(G+1>=ve)break;O[G++]=192|Pe>>6,O[G++]=128|Pe&63}else if(Pe<=65535){if(G+2>=ve)break;O[G++]=224|Pe>>12,O[G++]=128|Pe>>6&63,O[G++]=128|Pe&63}else{if(G+3>=ve)break;O[G++]=240|Pe>>18,O[G++]=128|Pe>>12&63,O[G++]=128|Pe>>6&63,O[G++]=128|Pe&63}}return O[G]=0,G-ye}function aa(N,O,G){return ra(N,o(),O,G)}function pu(N){for(var O=0,G=0;G<N.length;++G){var ee=N.charCodeAt(G);ee>=55296&&ee<=57343&&(ee=65536+((ee&1023)<<10)|N.charCodeAt(++G)&1023),ee<=127?++O:ee<=2047?O+=2:ee<=65535?O+=3:O+=4}return O}var _a=typeof TextDecoder<"u"?new As("utf-16le"):void 0;function oa(N,O){a().set(N,O)}function yd(N,O,G){for(var ee=0;ee<N.length;++ee)a()[O++>>0]=N.charCodeAt(ee);G||(a()[O>>0]=0)}function fu(N,O){return N%O>0&&(N+=O-N%O),N}var Wn,Bp,Wp,Ad,Vp,Up,_v,Gp,Hp;C&&(Wn=d.buffer);function lr(N){Wn=N,d.HEAP8=Bp=new Int8Array(N),d.HEAP16=Ad=new Int16Array(N),d.HEAP32=Up=new Int32Array(N),d.HEAPU8=Wp=new Uint8Array(N),d.HEAPU16=Vp=new Uint16Array(N),d.HEAPU32=_v=new Uint32Array(N),d.HEAPF32=Gp=new Float32Array(N),d.HEAPF64=Hp=new Float64Array(N)}var jp=d.INITIAL_MEMORY||16777216;if(C)Fe=d.wasmMemory,Wn=d.buffer;else if(d.wasmMemory)Fe=d.wasmMemory;else if(Fe=new WebAssembly.Memory({initial:jp/65536,maximum:32768,shared:!0}),!(Fe.buffer instanceof SharedArrayBuffer))throw Q("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),S&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");Fe&&(Wn=Fe.buffer),jp=Wn.byteLength,lr(Wn);var Fs,mu=[],Ra=[],Vg=[],qp=[],yi=!1,Ug=!1,Xp=0;function Ai(){return ht||Xp>0}function Vn(){if(d.preRun)for(typeof d.preRun=="function"&&(d.preRun=[d.preRun]);d.preRun.length;)Rv(d.preRun.shift());Jp(mu)}function xd(){yi=!0,!C&&Jp(Ra)}function Gg(){C||(Me.terminateAllThreads(),Ug=!0)}function Hg(){if(!C){if(d.postRun)for(typeof d.postRun=="function"&&(d.postRun=[d.postRun]);d.postRun.length;)bd(d.postRun.shift());Jp(qp)}}function Rv(N){mu.unshift(N)}function $v(N){Ra.unshift(N)}function bd(N){qp.unshift(N)}var $a=0,Kp=null,ur=null;function vd(N){$a++,d.monitorRunDependencies&&d.monitorRunDependencies($a)}function Dv(N){if($a--,d.monitorRunDependencies&&d.monitorRunDependencies($a),$a==0&&(Kp!==null&&(clearInterval(Kp),Kp=null),ur)){var O=ur;ur=null,O()}}d.preloadedImages={},d.preloadedAudios={};function gu(N){C?postMessage({cmd:"onAbort",arg:N}):d.onAbort&&d.onAbort(N),N="Aborted("+N+")",Q(N),xt=!0,zn=1,N+=". Build with -s ASSERTIONS=1 for more info.";var O=new WebAssembly.RuntimeError(N);throw f(O),O}var jg="data:application/octet-stream;base64,";function wd(N){return N.startsWith(jg)}function Zp(N){return N.startsWith("file://")}var Un;Un="tfjs-backend-wasm-threaded-simd.wasm",wd(Un)||(Un=R(Un));function Yp(N){try{if(N==Un&&ot)return new Uint8Array(ot);if(F)return F(N);throw"both async and sync fetching of the wasm failed"}catch(O){gu(O)}}function yu(){if(!ot&&(b||w)){if(typeof fetch=="function"&&!Zp(Un))return fetch(Un,{credentials:"same-origin"}).then(function(N){if(!N.ok)throw"failed to load wasm binary file at '"+Un+"'";return N.arrayBuffer()}).catch(function(){return Yp(Un)});if(E)return new Promise(function(N,O){E(Un,function(G){N(new Uint8Array(G))},O)})}return Promise.resolve().then(function(){return Yp(Un)})}function qg(){var N={env:df,wasi_snapshot_preview1:df};function O(Ce,Pe){var Ot=Ce.exports;if(d.asm=Ot,e1(d.asm.emscripten_tls_init),Fs=d.asm.__indirect_function_table,$v(d.asm.__wasm_call_ctors),vt=Pe,!C){var hr=Me.unusedWorkers.length;Me.unusedWorkers.forEach(function(pr){Me.loadWasmModuleToWorker(pr,function(){--hr||Dv("wasm-instantiate")})})}}C||vd("wasm-instantiate");function G(Ce){O(Ce.instance,Ce.module)}function ee(Ce){return yu().then(function(Pe){return WebAssembly.instantiate(Pe,N)}).then(function(Pe){return Pe}).then(Ce,function(Pe){Q("failed to asynchronously prepare wasm: "+Pe),gu(Pe)})}function ye(){return!ot&&typeof WebAssembly.instantiateStreaming=="function"&&!wd(Un)&&!Zp(Un)&&typeof fetch=="function"?fetch(Un,{credentials:"same-origin"}).then(function(Ce){var Pe=WebAssembly.instantiateStreaming(Ce,N);return Pe.then(G,function(Ot){return Q("wasm streaming compile failed: "+Ot),Q("falling back to ArrayBuffer instantiation"),ee(G)})}):ee(G)}if(d.instantiateWasm)try{var ve=d.instantiateWasm(N,O);return ve}catch(Ce){return Q("Module.instantiateWasm callback failed with error: "+Ce),!1}return ye().catch(f),{}}var Fv,Ov,Xg={};function Jp(N){for(;N.length>0;){var O=N.shift();if(typeof O=="function"){O(d);continue}var G=O.func;typeof G=="number"?O.arg===void 0?xu(G)():xu(G)(O.arg):G(O.arg===void 0?null:O.arg)}}function Au(N){var O=vy(),G=N();return gf(O),G}function I9(N){return N}function Pv(N){var O=/\b_Z[\w\d_]+/g;return N.replace(O,function(G){var ee=G;return G===ee?G:ee+" ["+G+"]"})}function Kg(N){u()[N>>2]=0;var O=Me.pthreads[N];delete Me.pthreads[N],O.worker.terminate(),by(N),Me.runningWorkers.splice(Me.runningWorkers.indexOf(O.worker),1),O.worker.pthread=void 0}function Zg(N){var O=Me.pthreads[N];O.worker.postMessage({cmd:"cancel"})}function Qp(N){var O=Me.pthreads[N];if(O){u()[N>>2]=0;var G=O.worker;Me.returnWorkerToPool(G)}}function ef(N){f_(N)}function Yg(N){if(N instanceof Nd||N=="unwind")return zn;A(1,N)}var Me={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],init:function(){C?Me.initWorker():Me.initMainThread()},initMainThread:function(){for(var N=8,O=0;O<N;++O)Me.allocateUnusedWorker()},initWorker:function(){ht=!1},pthreads:{},setExitStatus:function(N){zn=N},terminateAllThreads:function(){for(var N in Me.pthreads){var O=Me.pthreads[N];O&&O.worker&&Me.returnWorkerToPool(O.worker)}for(var G=0;G<Me.unusedWorkers.length;++G){var ee=Me.unusedWorkers[G];ee.terminate()}Me.unusedWorkers=[]},returnWorkerToPool:function(N){Me.runWithoutMainThreadQueuedCalls(function(){delete Me.pthreads[N.pthread.threadInfoStruct],Me.unusedWorkers.push(N),Me.runningWorkers.splice(Me.runningWorkers.indexOf(N),1),by(N.pthread.threadInfoStruct),N.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(N){u()[Kv>>2]=0;try{N()}finally{u()[Kv>>2]=1}},receiveObjectTransfer:function(N){},threadInit:function(){for(var N in Me.tlsInitFunctions)Me.tlsInitFunctions[N]()},loadWasmModuleToWorker:function(N,O){N.onmessage=G=>{var ee=G.data,ye=ee.cmd;if(N.pthread&&(Me.currentProxiedOperationCallerThread=N.pthread.threadInfoStruct),ee.targetThread&&ee.targetThread!=mf()){var ve=Me.pthreads[ee.targetThread];ve?ve.worker.postMessage(ee,ee.transferList):Q('Internal error! Worker sent a message "'+ye+'" to target pthread '+ee.targetThread+", but that thread no longer exists!"),Me.currentProxiedOperationCallerThread=void 0;return}ye==="processQueuedMainThreadWork"?Gv():ye==="spawnThread"?nf(ee):ye==="cleanupThread"?Qp(ee.thread):ye==="killThread"?Kg(ee.thread):ye==="cancelThread"?Zg(ee.thread):ye==="loaded"?(N.loaded=!0,O&&O(N),N.runPthread&&(N.runPthread(),delete N.runPthread)):ye==="print"?J("Thread "+ee.threadId+": "+ee.text):ye==="printErr"?Q("Thread "+ee.threadId+": "+ee.text):ye==="alert"?alert("Thread "+ee.threadId+": "+ee.text):ee.target==="setimmediate"?N.postMessage(ee):ye==="onAbort"?d.onAbort&&d.onAbort(ee.arg):Q("worker sent an unknown command "+ye),Me.currentProxiedOperationCallerThread=void 0},N.onerror=G=>{var ee="worker sent an error!";throw Q(ee+" "+G.filename+":"+G.lineno+": "+G.message),G},S&&(N.on("message",function(G){N.onmessage({data:G})}),N.on("error",function(G){N.onerror(G)}),N.on("detachedExit",function(){})),N.postMessage({cmd:"load",urlOrBlob:d.mainScriptUrlOrBlob||s,wasmMemory:Fe,wasmModule:vt})},allocateUnusedWorker:function(){var N=R("tfjs-backend-wasm-threaded-simd.worker.js");Me.unusedWorkers.push(new Worker(N))},getNewWorker:function(){return Me.unusedWorkers.length==0&&(Me.allocateUnusedWorker(),Me.loadWasmModuleToWorker(Me.unusedWorkers[0])),Me.unusedWorkers.pop()}};function Jg(){var N=mf(),O=u()[N+44>>2],G=u()[N+48>>2],ee=O-G;Xv(O,ee),gf(O)}d.establishStackSpace=Jg;function tf(N){if(C)return vi(1,0,N);try{ef(N)}catch(O){Yg(O)}}var xi=[];function xu(N){var O=xi[N];return O||(N>=xi.length&&(xi.length=N+1),xi[N]=O=Fs.get(N)),O}function Qg(N,O){return xu(N)(O)}d.invokeEntryPoint=Qg;function Mv(){var N=new Error;if(!N.stack){try{throw new Error}catch(O){N=O}if(!N.stack)return"(no stack trace available)"}return N.stack.toString()}function e1(N,O,G){Me.tlsInitFunctions.push(N)}function zv(N,O){Fs.set(N,O),xi[N]=O}var bi;S?bi=()=>{var N=process.hrtime();return N[0]*1e3+N[1]/1e6}:C?bi=()=>performance.now()-d.__performance_now_clock_drift:bi=()=>performance.now();var t1=!0;function n1(N){return u()[Uv()>>2]=N,N}function s1(N,O){var G;if(N===0)G=Date.now();else if((N===1||N===4)&&t1)G=bi();else return n1(28),-1;return u()[O>>2]=G/1e3|0,u()[O+4>>2]=G%1e3*1e3*1e3|0,0}function r1(N,O){return s1(N,O)}function a1(N){Hv(N,!w,1,!b),Me.threadInit()}function o1(N){C?postMessage({cmd:"cleanupThread",thread:N}):Qp(N)}function nf(N){var O=Me.getNewWorker();if(!O)return 6;Me.runningWorkers.push(O);var G=Me.pthreads[N.pthread_ptr]={worker:O,threadInfoStruct:N.pthread_ptr};O.pthread=G;var ee={cmd:"run",start_routine:N.startRoutine,arg:N.arg,threadInfoStruct:N.pthread_ptr};return O.runPthread=()=>{ee.time=performance.now(),O.postMessage(ee,N.transferList)},O.loaded&&(O.runPthread(),delete O.runPthread),0}function i1(N,O,G,ee){if(typeof SharedArrayBuffer>"u")return Q("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var ye=[],ve=0;if(C&&(ye.length===0||ve))return jv(687865856,N,O,G,ee);if(ve)return ve;var Ce={startRoutine:G,pthread_ptr:N,arg:ee,transferList:ye};return C?(Ce.cmd="spawnThread",postMessage(Ce,ye),0):nf(Ce)}function l1(){return 2097152}function u1(N,O){if(N==O)postMessage({cmd:"processQueuedMainThreadWork"});else if(C)postMessage({targetThread:N,cmd:"processThreadQueue"});else{var G=Me.pthreads[N],ee=G&&G.worker;if(!ee)return;ee.postMessage({cmd:"processThreadQueue"})}return 1}function c1(){gu("")}function d1(){S||w||ne("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function sf(){return 2147483648}function h1(N,O,G){o().copyWithin(N,O,O+G)}function p1(){return S?z_().cpus().length:navigator.hardwareConcurrency}function vi(N,O){var G=arguments.length-2,ee=arguments;return Au(function(){for(var ye=G,ve=Iu(ye*8),Ce=ve>>3,Pe=0;Pe<G;Pe++){var Ot=ee[2+Pe];h()[Ce+Pe]=Ot}return qv(N,ye,ve,O)})}var kd=[];function f1(N,O,G){kd.length=O;for(var ee=G>>3,ye=0;ye<O;ye++)kd[ye]=h()[ee+ye];var ve=N<0,Ce=ve?Xg[-N-1]:D1[N];return Ce.apply(null,kd)}function m1(N){try{return Fe.grow(N-Wn.byteLength+65535>>>16),lr(Fe.buffer),1}catch{}}function g1(N){var O=o().length;if(N=N>>>0,N<=O)return!1;var G=sf();if(N>G)return!1;for(var ee=1;ee<=4;ee*=2){var ye=O*(1+.2/ee);ye=Math.min(ye,N+100663296);var ve=Math.min(G,fu(Math.max(N,ye),65536)),Ce=m1(ve);if(Ce)return!0}return!1}var Ze={inEventHandler:0,removeAllEventListeners:function(){for(var N=Ze.eventHandlers.length-1;N>=0;--N)Ze._removeHandler(N);Ze.eventHandlers=[],Ze.deferredCalls=[]},registerRemoveEventListeners:function(){Ze.removeEventListenersRegistered||(Vg.push(Ze.removeAllEventListeners),Ze.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(N,O,G){function ee(Ce,Pe){if(Ce.length!=Pe.length)return!1;for(var Ot in Ce)if(Ce[Ot]!=Pe[Ot])return!1;return!0}for(var ye in Ze.deferredCalls){var ve=Ze.deferredCalls[ye];if(ve.targetFunction==N&&ee(ve.argsList,G))return}Ze.deferredCalls.push({targetFunction:N,precedence:O,argsList:G}),Ze.deferredCalls.sort(function(Ce,Pe){return Ce.precedence<Pe.precedence})},removeDeferredCalls:function(N){for(var O=0;O<Ze.deferredCalls.length;++O)Ze.deferredCalls[O].targetFunction==N&&(Ze.deferredCalls.splice(O,1),--O)},canPerformEventHandlerRequests:function(){return Ze.inEventHandler&&Ze.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!Ze.canPerformEventHandlerRequests())for(var N=0;N<Ze.deferredCalls.length;++N){var O=Ze.deferredCalls[N];Ze.deferredCalls.splice(N,1),--N,O.targetFunction.apply(null,O.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(N,O){for(var G=0;G<Ze.eventHandlers.length;++G)Ze.eventHandlers[G].target==N&&(!O||O==Ze.eventHandlers[G].eventTypeString)&&Ze._removeHandler(G--)},_removeHandler:function(N){var O=Ze.eventHandlers[N];O.target.removeEventListener(O.eventTypeString,O.eventListenerFunc,O.useCapture),Ze.eventHandlers.splice(N,1)},registerOrRemoveHandler:function(N){var O=function(ye){++Ze.inEventHandler,Ze.currentEventHandler=N,Ze.runDeferredCalls(),N.handlerFunc(ye),Ze.runDeferredCalls(),--Ze.inEventHandler};if(N.callbackfunc)N.eventListenerFunc=O,N.target.addEventListener(N.eventTypeString,O,N.useCapture),Ze.eventHandlers.push(N),Ze.registerRemoveEventListeners();else for(var G=0;G<Ze.eventHandlers.length;++G)Ze.eventHandlers[G].target==N.target&&Ze.eventHandlers[G].eventTypeString==N.eventTypeString&&Ze._removeHandler(G--)},queueEventHandlerOnThread_iiii:function(N,O,G,ee,ye){Au(function(){var ve=Iu(12);u()[ve>>2]=G,u()[ve+4>>2]=ee,u()[ve+8>>2]=ye,xy(N,637534208,O,ee,ve)})},getTargetThreadForEventCallback:function(N){switch(N){case 1:return 0;case 2:return Me.currentProxiedOperationCallerThread;default:return N}},getNodeNameForTarget:function(N){return N?N==window?"#window":N==screen?"#screen":N&&N.nodeName?N.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function y1(N){var O=pu(N)+1,G=Ay(O);return aa(N,G,O),G}function A1(N,O,G,ee){Au(function(){var ye=Iu(12),ve=0;O&&(ve=y1(O)),u()[ye>>2]=ve,u()[ye+4>>2]=G,u()[ye+8>>2]=ee,xy(N,657457152,0,ve,ye)})}function x1(N,O,G,ee){O=O?Bn(O):"",A1(N,O,G,ee)}function b1(N){return N>2?Bn(N):N}var v1=[0,typeof document<"u"?document:0,typeof window<"u"?window:0];function w1(N){N=b1(N);var O=v1[N]||(typeof document<"u"?document.querySelector(N):void 0);return O}function Sd(N){return w1(N)}function rf(N,O,G){var ee=Sd(N);if(!ee)return-4;if(ee.canvasSharedPtr&&(u()[ee.canvasSharedPtr>>2]=O,u()[ee.canvasSharedPtr+4>>2]=G),ee.offscreenCanvas||!ee.controlTransferredOffscreen){ee.offscreenCanvas&&(ee=ee.offscreenCanvas);var ye=!1;if(ee.GLctxObject&&ee.GLctxObject.GLctx){var ve=ee.GLctxObject.GLctx.getParameter(2978);ye=ve[0]===0&&ve[1]===0&&ve[2]===ee.width&&ve[3]===ee.height}ee.width=O,ee.height=G,ye&&ee.GLctxObject.GLctx.viewport(0,0,O,G)}else if(ee.canvasSharedPtr){var Ce=u()[ee.canvasSharedPtr+8>>2];return x1(Ce,N,O,G),1}else return-4;return 0}function af(N,O,G){return C?vi(2,1,N,O,G):rf(N,O,G)}function k1(N,O,G){var ee=Sd(N);return ee?rf(N,O,G):af(N,O,G)}function S1(){throw"unwind"}function I1(N){var O=N.getExtension("ANGLE_instanced_arrays");if(O)return N.vertexAttribDivisor=function(G,ee){O.vertexAttribDivisorANGLE(G,ee)},N.drawArraysInstanced=function(G,ee,ye,ve){O.drawArraysInstancedANGLE(G,ee,ye,ve)},N.drawElementsInstanced=function(G,ee,ye,ve,Ce){O.drawElementsInstancedANGLE(G,ee,ye,ve,Ce)},1}function C1(N){var O=N.getExtension("OES_vertex_array_object");if(O)return N.createVertexArray=function(){return O.createVertexArrayOES()},N.deleteVertexArray=function(G){O.deleteVertexArrayOES(G)},N.bindVertexArray=function(G){O.bindVertexArrayOES(G)},N.isVertexArray=function(G){return O.isVertexArrayOES(G)},1}function T1(N){var O=N.getExtension("WEBGL_draw_buffers");if(O)return N.drawBuffers=function(G,ee){O.drawBuffersWEBGL(G,ee)},1}function N1(N){return!!(N.multiDrawWebgl=N.getExtension("WEBGL_multi_draw"))}var Ft={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},queries:[],stringCache:{},unpackAlignment:4,recordError:function(O){Ft.lastError||(Ft.lastError=O)},getNewId:function(N){for(var O=Ft.counter++,G=N.length;G<O;G++)N[G]=null;return O},getSource:function(N,O,G,ee){for(var ye="",ve=0;ve<O;++ve){var Ce=ee?u()[ee+ve*4>>2]:-1;ye+=Bn(u()[G+ve*4>>2],Ce<0?void 0:Ce)}return ye},createContext:function(N,O){N.getContextSafariWebGL2Fixed||(N.getContextSafariWebGL2Fixed=N.getContext,N.getContext=function(ye,ve){var Ce=N.getContextSafariWebGL2Fixed(ye,ve);return ye=="webgl"==Ce instanceof WebGLRenderingContext?Ce:null});var G=N.getContext("webgl",O);if(!G)return 0;var ee=Ft.registerContext(G,O);return ee},registerContext:function(N,O){var G=Ay(8);u()[G+4>>2]=mf();var ee={handle:G,attributes:O,version:O.majorVersion,GLctx:N};return N.canvas&&(N.canvas.GLctxObject=ee),Ft.contexts[G]=ee,(typeof O.enableExtensionsByDefault>"u"||O.enableExtensionsByDefault)&&Ft.initExtensions(ee),G},makeContextCurrent:function(N){return Ft.currentContext=Ft.contexts[N],d.ctx=cf=Ft.currentContext&&Ft.currentContext.GLctx,!(N&&!cf)},getContext:function(N){return Ft.contexts[N]},deleteContext:function(N){Ft.currentContext===Ft.contexts[N]&&(Ft.currentContext=null),typeof Ze=="object"&&Ze.removeAllHandlersOnTarget(Ft.contexts[N].GLctx.canvas),Ft.contexts[N]&&Ft.contexts[N].GLctx.canvas&&(Ft.contexts[N].GLctx.canvas.GLctxObject=void 0),Vv(Ft.contexts[N].handle),Ft.contexts[N]=null},initExtensions:function(N){if(N||(N=Ft.currentContext),!N.initExtensionsDone){N.initExtensionsDone=!0;var O=N.GLctx;I1(O),C1(O),T1(O),O.disjointTimerQueryExt=O.getExtension("EXT_disjoint_timer_query"),N1(O);var G=O.getSupportedExtensions()||[];G.forEach(function(ee){!ee.includes("lose_context")&&!ee.includes("debug")&&O.getExtension(ee)})}}},E1=["default","low-power","high-performance"];function _1(N,O){var G=O>>2,ee=u()[G+6],ye={alpha:!!u()[G+0],depth:!!u()[G+1],stencil:!!u()[G+2],antialias:!!u()[G+3],premultipliedAlpha:!!u()[G+4],preserveDrawingBuffer:!!u()[G+5],powerPreference:E1[ee],failIfMajorPerformanceCaveat:!!u()[G+7],majorVersion:u()[G+8],minorVersion:u()[G+9],enableExtensionsByDefault:u()[G+10],explicitSwapControl:u()[G+11],proxyContextToMainThread:u()[G+12],renderViaOffscreenBackBuffer:u()[G+13]},ve=Sd(N);if(!ve||ye.explicitSwapControl)return 0;var Ce=Ft.createContext(ve,ye);return Ce}function R1(N,O){return _1(N,O)}var bu={mappings:{},buffers:[null,[],[]],printChar:function(N,O){var G=bu.buffers[N];O===0||O===10?((N===1?J:Q)(Ds(G,0)),G.length=0):G.push(O)},varargs:void 0,get:function(){bu.varargs+=4;var N=u()[bu.varargs-4>>2];return N},getStr:function(N){var O=Bn(N);return O},get64:function(N,O){return N}};function of(N){return C?vi(3,1,N):0}function lf(N,O,G,ee,ye){if(C)return vi(4,1,N,O,G,ee,ye)}function uf(N,O,G,ee){if(C)return vi(5,1,N,O,G,ee);for(var ye=0,ve=0;ve<G;ve++){var Ce=u()[O>>2],Pe=u()[O+4>>2];O+=8;for(var Ot=0;Ot<Pe;Ot++)bu.printChar(N,o()[Ce+Ot]);ye+=Pe}return u()[ee>>2]=ye,0}function $1(N){Be(N)}Me.init();var cf,D1=[null,tf,af,of,lf,uf],Lv=!1,df={__clock_gettime:r1,__emscripten_init_main_thread_js:a1,__emscripten_thread_cleanup:o1,__pthread_create_js:i1,_emscripten_default_pthread_stack_size:l1,_emscripten_notify_thread_queue:u1,abort:c1,emscripten_check_blocking_allowed:d1,emscripten_get_heap_max:sf,emscripten_get_now:bi,emscripten_memcpy_big:h1,emscripten_num_logical_cores:p1,emscripten_receive_on_main_thread_js:f1,emscripten_resize_heap:g1,emscripten_set_canvas_element_size:k1,emscripten_unwind_to_js_event_loop:S1,emscripten_webgl_create_context:R1,exit:ef,fd_close:of,fd_seek:lf,fd_write:uf,memory:Fe||d.wasmMemory,setTempRet0:$1},Bv=qg(),F1=d.___wasm_call_ctors=function(){return(F1=d.___wasm_call_ctors=d.asm.__wasm_call_ctors).apply(null,arguments)},O1=d._init=function(){return(O1=d._init=d.asm.init).apply(null,arguments)},P1=d._init_with_threads_count=function(){return(P1=d._init_with_threads_count=d.asm.init_with_threads_count).apply(null,arguments)},M1=d._get_threads_count=function(){return(M1=d._get_threads_count=d.asm.get_threads_count).apply(null,arguments)},z1=d._register_tensor=function(){return(z1=d._register_tensor=d.asm.register_tensor).apply(null,arguments)},L1=d._dispose_data=function(){return(L1=d._dispose_data=d.asm.dispose_data).apply(null,arguments)},B1=d._dispose=function(){return(B1=d._dispose=d.asm.dispose).apply(null,arguments)},W1=d._Abs=function(){return(W1=d._Abs=d.asm.Abs).apply(null,arguments)},V1=d._Add=function(){return(V1=d._Add=d.asm.Add).apply(null,arguments)},U1=d._AddN=function(){return(U1=d._AddN=d.asm.AddN).apply(null,arguments)},G1=d._All=function(){return(G1=d._All=d.asm.All).apply(null,arguments)},H1=d._Any=function(){return(H1=d._Any=d.asm.Any).apply(null,arguments)},j1=d._ArgMax=function(){return(j1=d._ArgMax=d.asm.ArgMax).apply(null,arguments)},q1=d._AvgPool=function(){return(q1=d._AvgPool=d.asm.AvgPool).apply(null,arguments)},X1=d._BatchMatMul=function(){return(X1=d._BatchMatMul=d.asm.BatchMatMul).apply(null,arguments)},K1=d._Ceil=function(){return(K1=d._Ceil=d.asm.Ceil).apply(null,arguments)},Z1=d._ClipByValue=function(){return(Z1=d._ClipByValue=d.asm.ClipByValue).apply(null,arguments)},Y1=d._Conv2D=function(){return(Y1=d._Conv2D=d.asm.Conv2D).apply(null,arguments)},J1=d._Conv2DBackpropInput=function(){return(J1=d._Conv2DBackpropInput=d.asm.Conv2DBackpropInput).apply(null,arguments)},Q1=d._Cos=function(){return(Q1=d._Cos=d.asm.Cos).apply(null,arguments)},ey=d._Cosh=function(){return(ey=d._Cosh=d.asm.Cosh).apply(null,arguments)},ty=d._CropAndResize=function(){return(ty=d._CropAndResize=d.asm.CropAndResize).apply(null,arguments)},ny=d._Cumprod=function(){return(ny=d._Cumprod=d.asm.Cumprod).apply(null,arguments)},sy=d._Cumsum=function(){return(sy=d._Cumsum=d.asm.Cumsum).apply(null,arguments)},ry=d._DepthToSpace=function(){return(ry=d._DepthToSpace=d.asm.DepthToSpace).apply(null,arguments)},ay=d._DepthwiseConv2dNative=function(){return(ay=d._DepthwiseConv2dNative=d.asm.DepthwiseConv2dNative).apply(null,arguments)},oy=d._Elu=function(){return(oy=d._Elu=d.asm.Elu).apply(null,arguments)},iy=d._Equal=function(){return(iy=d._Equal=d.asm.Equal).apply(null,arguments)},ly=d._Exp=function(){return(ly=d._Exp=d.asm.Exp).apply(null,arguments)},uy=d._FlipLeftRight=function(){return(uy=d._FlipLeftRight=d.asm.FlipLeftRight).apply(null,arguments)},cy=d._Floor=function(){return(cy=d._Floor=d.asm.Floor).apply(null,arguments)},dy=d._FloorDiv=function(){return(dy=d._FloorDiv=d.asm.FloorDiv).apply(null,arguments)},hy=d._FusedBatchNorm=function(){return(hy=d._FusedBatchNorm=d.asm.FusedBatchNorm).apply(null,arguments)},py=d._FusedConv2D=function(){return(py=d._FusedConv2D=d.asm.FusedConv2D).apply(null,arguments)},hf=d._FusedDepthwiseConv2D=function(){return(hf=d._FusedDepthwiseConv2D=d.asm.FusedDepthwiseConv2D).apply(null,arguments)},pf=d._Gather=function(){return(pf=d._Gather=d.asm.Gather).apply(null,arguments)},Id=d._GatherNd=function(){return(Id=d._GatherNd=d.asm.GatherNd).apply(null,arguments)},fy=d._Greater=function(){return(fy=d._Greater=d.asm.Greater).apply(null,arguments)},my=d._GreaterEqual=function(){return(my=d._GreaterEqual=d.asm.GreaterEqual).apply(null,arguments)},vu=d._LeakyRelu=function(){return(vu=d._LeakyRelu=d.asm.LeakyRelu).apply(null,arguments)},Cd=d._Less=function(){return(Cd=d._Less=d.asm.Less).apply(null,arguments)},Td=d._LessEqual=function(){return(Td=d._LessEqual=d.asm.LessEqual).apply(null,arguments)},Wv=d._Log=function(){return(Wv=d._Log=d.asm.Log).apply(null,arguments)},wu=d._LogicalAnd=function(){return(wu=d._LogicalAnd=d.asm.LogicalAnd).apply(null,arguments)},ku=d._LogicalNot=function(){return(ku=d._LogicalNot=d.asm.LogicalNot).apply(null,arguments)},gy=d._LogicalOr=function(){return(gy=d._LogicalOr=d.asm.LogicalOr).apply(null,arguments)},X=d._LogicalXor=function(){return(X=d._LogicalXor=d.asm.LogicalXor).apply(null,arguments)},se=d._Max=function(){return(se=d._Max=d.asm.Max).apply(null,arguments)},xe=d._MaxPool=function(){return(xe=d._MaxPool=d.asm.MaxPool).apply(null,arguments)},Re=d._Maximum=function(){return(Re=d._Maximum=d.asm.Maximum).apply(null,arguments)},it=d._Mean=function(){return(it=d._Mean=d.asm.Mean).apply(null,arguments)},ct=d._Min=function(){return(ct=d._Min=d.asm.Min).apply(null,arguments)},Je=d._Minimum=function(){return(Je=d._Minimum=d.asm.Minimum).apply(null,arguments)},Xe=d._MirrorPad=function(){return(Xe=d._MirrorPad=d.asm.MirrorPad).apply(null,arguments)},Zt=d._Multiply=function(){return(Zt=d._Multiply=d.asm.Multiply).apply(null,arguments)},cr=d._Neg=function(){return(cr=d._Neg=d.asm.Neg).apply(null,arguments)},dr=d._NonMaxSuppressionV3=function(){return(dr=d._NonMaxSuppressionV3=d.asm.NonMaxSuppressionV3).apply(null,arguments)},Su=d._NonMaxSuppressionV4=function(){return(Su=d._NonMaxSuppressionV4=d.asm.NonMaxSuppressionV4).apply(null,arguments)},wi=d._NonMaxSuppressionV5=function(){return(wi=d._NonMaxSuppressionV5=d.asm.NonMaxSuppressionV5).apply(null,arguments)},yy=d._NotEqual=function(){return(yy=d._NotEqual=d.asm.NotEqual).apply(null,arguments)},Gn=d._OneHot=function(){return(Gn=d._OneHot=d.asm.OneHot).apply(null,arguments)},Da=d._PadV2=function(){return(Da=d._PadV2=d.asm.PadV2).apply(null,arguments)},ff=d._Pow=function(){return(ff=d._Pow=d.asm.Pow).apply(null,arguments)},C9=d._Prelu=function(){return(C9=d._Prelu=d.asm.Prelu).apply(null,arguments)},T9=d._Prod=function(){return(T9=d._Prod=d.asm.Prod).apply(null,arguments)},N9=d._RealDiv=function(){return(N9=d._RealDiv=d.asm.RealDiv).apply(null,arguments)},E9=d._Relu=function(){return(E9=d._Relu=d.asm.Relu).apply(null,arguments)},_9=d._Relu6=function(){return(_9=d._Relu6=d.asm.Relu6).apply(null,arguments)},R9=d._ResizeBilinear=function(){return(R9=d._ResizeBilinear=d.asm.ResizeBilinear).apply(null,arguments)},$9=d._ResizeNearestNeighbor=function(){return($9=d._ResizeNearestNeighbor=d.asm.ResizeNearestNeighbor).apply(null,arguments)},D9=d._Reverse=function(){return(D9=d._Reverse=d.asm.Reverse).apply(null,arguments)},F9=d._RotateWithOffset=function(){return(F9=d._RotateWithOffset=d.asm.RotateWithOffset).apply(null,arguments)},O9=d._Round=function(){return(O9=d._Round=d.asm.Round).apply(null,arguments)},P9=d._Rsqrt=function(){return(P9=d._Rsqrt=d.asm.Rsqrt).apply(null,arguments)},M9=d._ScatterNd=function(){return(M9=d._ScatterNd=d.asm.ScatterNd).apply(null,arguments)},z9=d._SelectV2=function(){return(z9=d._SelectV2=d.asm.SelectV2).apply(null,arguments)},L9=d._Sigmoid=function(){return(L9=d._Sigmoid=d.asm.Sigmoid).apply(null,arguments)},B9=d._Sin=function(){return(B9=d._Sin=d.asm.Sin).apply(null,arguments)},W9=d._Softmax=function(){return(W9=d._Softmax=d.asm.Softmax).apply(null,arguments)},V9=d._SparseFillEmptyRows=function(){return(V9=d._SparseFillEmptyRows=d.asm.SparseFillEmptyRows).apply(null,arguments)},U9=d._SparseReshape=function(){return(U9=d._SparseReshape=d.asm.SparseReshape).apply(null,arguments)},G9=d._SparseSegmentReduction=function(){return(G9=d._SparseSegmentReduction=d.asm.SparseSegmentReduction).apply(null,arguments)},H9=d._Sqrt=function(){return(H9=d._Sqrt=d.asm.Sqrt).apply(null,arguments)},j9=d._Square=function(){return(j9=d._Square=d.asm.Square).apply(null,arguments)},q9=d._SquaredDifference=function(){return(q9=d._SquaredDifference=d.asm.SquaredDifference).apply(null,arguments)},X9=d._Step=function(){return(X9=d._Step=d.asm.Step).apply(null,arguments)},K9=d._StridedSlice=function(){return(K9=d._StridedSlice=d.asm.StridedSlice).apply(null,arguments)},Z9=d._Sub=function(){return(Z9=d._Sub=d.asm.Sub).apply(null,arguments)},Y9=d._Sum=function(){return(Y9=d._Sum=d.asm.Sum).apply(null,arguments)},J9=d._Tan=function(){return(J9=d._Tan=d.asm.Tan).apply(null,arguments)},Q9=d._Tanh=function(){return(Q9=d._Tanh=d.asm.Tanh).apply(null,arguments)},e_=d._Tile=function(){return(e_=d._Tile=d.asm.Tile).apply(null,arguments)},t_=d._TopK=function(){return(t_=d._TopK=d.asm.TopK).apply(null,arguments)},n_=d._Transform=function(){return(n_=d._Transform=d.asm.Transform).apply(null,arguments)},s_=d._Transpose=function(){return(s_=d._Transpose=d.asm.Transpose).apply(null,arguments)},r_=d.__FusedMatMul=function(){return(r_=d.__FusedMatMul=d.asm._FusedMatMul).apply(null,arguments)},Ay=d._malloc=function(){return(Ay=d._malloc=d.asm.malloc).apply(null,arguments)},Vv=d._free=function(){return(Vv=d._free=d.asm.free).apply(null,arguments)},a_=d._emscripten_tls_init=function(){return(a_=d._emscripten_tls_init=d.asm.emscripten_tls_init).apply(null,arguments)},Uv=d.___errno_location=function(){return(Uv=d.___errno_location=d.asm.__errno_location).apply(null,arguments)},mf=d._pthread_self=function(){return(mf=d._pthread_self=d.asm.pthread_self).apply(null,arguments)},Gv=d._emscripten_main_thread_process_queued_calls=function(){return(Gv=d._emscripten_main_thread_process_queued_calls=d.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},o_=d.__emscripten_thread_crashed=function(){return(o_=d.__emscripten_thread_crashed=d.asm._emscripten_thread_crashed).apply(null,arguments)},Hv=d.__emscripten_thread_init=function(){return(Hv=d.__emscripten_thread_init=d.asm._emscripten_thread_init).apply(null,arguments)},i_=d._emscripten_current_thread_process_queued_calls=function(){return(i_=d._emscripten_current_thread_process_queued_calls=d.asm.emscripten_current_thread_process_queued_calls).apply(null,arguments)},l_=d._emscripten_main_browser_thread_id=function(){return(l_=d._emscripten_main_browser_thread_id=d.asm.emscripten_main_browser_thread_id).apply(null,arguments)},u_=d._emscripten_sync_run_in_main_thread_2=function(){return(u_=d._emscripten_sync_run_in_main_thread_2=d.asm.emscripten_sync_run_in_main_thread_2).apply(null,arguments)},jv=d._emscripten_sync_run_in_main_thread_4=function(){return(jv=d._emscripten_sync_run_in_main_thread_4=d.asm.emscripten_sync_run_in_main_thread_4).apply(null,arguments)},qv=d._emscripten_run_in_main_runtime_thread_js=function(){return(qv=d._emscripten_run_in_main_runtime_thread_js=d.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},xy=d._emscripten_dispatch_to_thread_=function(){return(xy=d._emscripten_dispatch_to_thread_=d.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},by=d.__emscripten_thread_free_data=function(){return(by=d.__emscripten_thread_free_data=d.asm._emscripten_thread_free_data).apply(null,arguments)},c_=d.__emscripten_thread_exit=function(){return(c_=d.__emscripten_thread_exit=d.asm._emscripten_thread_exit).apply(null,arguments)},d_=d._memalign=function(){return(d_=d._memalign=d.asm.memalign).apply(null,arguments)},Xv=d._emscripten_stack_set_limits=function(){return(Xv=d._emscripten_stack_set_limits=d.asm.emscripten_stack_set_limits).apply(null,arguments)},vy=d.stackSave=function(){return(vy=d.stackSave=d.asm.stackSave).apply(null,arguments)},gf=d.stackRestore=function(){return(gf=d.stackRestore=d.asm.stackRestore).apply(null,arguments)},Iu=d.stackAlloc=function(){return(Iu=d.stackAlloc=d.asm.stackAlloc).apply(null,arguments)},h_=d.dynCall_iijjiiii=function(){return(h_=d.dynCall_iijjiiii=d.asm.dynCall_iijjiiii).apply(null,arguments)},p_=d.dynCall_jiji=function(){return(p_=d.dynCall_jiji=d.asm.dynCall_jiji).apply(null,arguments)},Kv=d.__emscripten_allow_main_runtime_queued_calls=21672;d.cwrap=Ln,d.keepRuntimeAlive=Ai,d.PThread=Me,d.PThread=Me,d.wasmMemory=Fe,d.ExitStatus=Nd;var yf;function Nd(N){this.name="ExitStatus",this.message="Program terminated with exit("+N+")",this.status=N}ur=function N(){yf||wy(),yf||(ur=N)};function wy(N){if(N=N||y,$a>0)return;if(C){p(d),xd(),postMessage({cmd:"loaded"});return}if(Vn(),$a>0)return;function O(){yf||(yf=!0,d.calledRun=!0,!xt&&(xd(),p(d),d.onRuntimeInitialized&&d.onRuntimeInitialized(),Hg()))}d.setStatus?(d.setStatus("Running..."),setTimeout(function(){setTimeout(function(){d.setStatus("")},1),O()},1)):O()}d.run=wy;function f_(N,O){if(zn=N,!O&&C)throw tf(N),"unwind";Ai()||Gg(),m_(N)}function m_(N){zn=N,Ai()||(Me.terminateAllThreads(),d.onExit&&d.onExit(N),xt=!0),A(N,new Nd(N))}if(d.preInit)for(typeof d.preInit=="function"&&(d.preInit=[d.preInit]);d.preInit.length>0;)d.preInit.pop()();wy();var Af;m&&(Af={uncaughtException:process.listeners("uncaughtException").filter(function(N){return!m.uncaughtException.indexOf(N)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(N){return!m.unhandledRejection.indexOf(N)>-1})});var xf;if(typeof WasmBackendModule<"u")xf=WasmBackendModule;else if(typeof r<"u")xf=r;else throw new Error("Could not find wasm module in post.js");if(Af){var g_=xf._dispose;xf._dispose=function(){g_(),Af.uncaughtException.forEach(function(N){process.removeListener("uncaughtException",N)}),Af.unhandledRejection.forEach(function(N){process.removeListener("unhandledRejection",N)})}}return r.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=n)}}),B_=tn({"node_modules/.pnpm/@tensorflow+tfjs-backend-wasm@3.20.0_au2niqrxqvhsnv4oetlud656gy/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.worker.js"(e,t){t.exports.wasmWorkerContents=`"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8"))},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"
");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=((info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports});self.onmessage=(e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInit();try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(Module["keepRuntimeAlive"]()){Module["PThread"].setExitStatus(result)}else{Module["__emscripten_thread_exit"](result)}}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else if(e.data.cmd==="processProxyingQueue"){if(Module["_pthread_self"]()){Module["_emscripten_proxy_execute_queue"](e.data.queue)}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}});`}}),W_=tn({"node_modules/.pnpm/@tensorflow+tfjs-backend-wasm@3.20.0_au2niqrxqvhsnv4oetlud656gy/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(e,t){var n=(()=>{var s=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(s=s||__filename),function(r){r=r||{};var a=typeof r<"u"?r:{},o,i;a.ready=new Promise(function(X,se){o=X,i=se});var l;typeof process<"u"&&process.listeners&&(l={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var u=Object.assign({},a),c=[],h="./this.program",d=(X,se)=>{throw se},p=typeof window=="object",f=typeof importScripts=="function",m=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",g="";function y(X){return a.locateFile?a.locateFile(X,g):g+X}var x,A,b,w;function S(X){if(X instanceof Cd)return;E("exiting due to exception: "+X)}var C,_,R;m?(f?g=dm().dirname(g)+"/":g=__dirname+"/",R=()=>{_||(C=N2(),_=dm())},x=function(se,xe){return R(),se=_.normalize(se),C.readFileSync(se,xe?void 0:"utf8")},b=X=>{var se=x(X,!0);return se.buffer||(se=new Uint8Array(se)),se},A=(X,se,xe)=>{R(),X=_.normalize(X),C.readFile(X,function(Re,it){Re?xe(Re):se(it.buffer)})},process.argv.length>1&&(h=process.argv[1].replace(/\\/g,"/")),c=process.argv.slice(2),process.on("uncaughtException",function(X){if(!(X instanceof Cd))throw X}),process.on("unhandledRejection",function(X){throw X}),d=(X,se)=>{if(Ad())throw process.exitCode=X,se;S(se),process.exit(X)},a.inspect=function(){return"[Emscripten Module object]"}):(p||f)&&(f?g=self.location.href:typeof document<"u"&&document.currentScript&&(g=document.currentScript.src),s&&(g=s),g.indexOf("blob:")!==0?g=g.substr(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1):g="",x=X=>{var se=new XMLHttpRequest;return se.open("GET",X,!1),se.send(null),se.responseText},f&&(b=X=>{var se=new XMLHttpRequest;return se.open("GET",X,!1),se.responseType="arraybuffer",se.send(null),new Uint8Array(se.response)}),A=(X,se,xe)=>{var Re=new XMLHttpRequest;Re.open("GET",X,!0),Re.responseType="arraybuffer",Re.onload=()=>{if(Re.status==200||Re.status==0&&Re.response){se(Re.response);return}xe()},Re.onerror=xe,Re.send(null)},w=X=>document.title=X);var D=a.print||console.log.bind(console),E=a.printErr||console.warn.bind(console);Object.assign(a,u),u=null,a.arguments&&(c=a.arguments),a.thisProgram&&(h=a.thisProgram),a.quit&&(d=a.quit);var F=4;function k(X){k.shown||(k.shown={}),k.shown[X]||(k.shown[X]=1,E(X))}function M(X,se){if(typeof WebAssembly.Function=="function"){for(var xe={i:"i32",j:"i64",f:"f32",d:"f64"},Re={parameters:[],results:se[0]=="v"?[]:[xe[se[0]]]},it=1;it<se.length;++it)Re.parameters.push(xe[se[it]]);return new WebAssembly.Function(Re,X)}var ct=[1,0,1,96],Je=se.slice(0,1),Xe=se.slice(1),Zt={i:127,j:126,f:125,d:124};ct.push(Xe.length);for(var it=0;it<Xe.length;++it)ct.push(Zt[Xe[it]]);Je=="v"?ct.push(0):ct=ct.concat([1,Zt[Je]]),ct[1]=ct.length-2;var cr=new Uint8Array([0,97,115,109,1,0,0,0].concat(ct,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0])),dr=new WebAssembly.Module(cr),Su=new WebAssembly.Instance(dr,{e:{f:X}}),wi=Su.exports.f;return wi}var z=[],W;function H(){if(z.length)return z.pop();try{_a.grow(1)}catch(X){throw X instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":X}return _a.length-1}function j(X,se){for(var xe=X;xe<X+se;xe++){var Re=vd(xe);Re&&W.set(Re,xe)}}var Z=0,J=X=>{Z=X},Q;a.wasmBinary&&(Q=a.wasmBinary);var ae=a.noExitRuntime||!0;typeof WebAssembly!="object"&&yi("no native wasm support detected");var ne,ie=!1,ue;function te(X,se){X||yi(se)}function oe(X){var se=a["_"+X];return se}function Ne(X,se,xe,Re,it){var ct={string:function(Gn){var Da=0;if(Gn!=null&&Gn!==0){var ff=(Gn.length<<2)+1;Da=Id(ff),ht(Gn,Da,ff)}return Da},array:function(Gn){var Da=Id(Gn.length);return xt(Gn,Da),Da}};function Je(Gn){return se==="string"?dt(Gn):se==="boolean"?Boolean(Gn):Gn}var Xe=oe(X),Zt=[],cr=0;if(Re)for(var dr=0;dr<Re.length;dr++){var Su=ct[xe[dr]];Su?(cr===0&&(cr=hf()),Zt[dr]=Su(Re[dr])):Zt[dr]=Re[dr]}var wi=Xe.apply(null,Zt);function yy(Gn){return cr!==0&&pf(cr),Je(Gn)}return wi=yy(wi),wi}function _e(X,se,xe,Re){xe=xe||[];var it=xe.every(function(Je){return Je==="number"}),ct=se!=="string";return ct&&it&&!Re?oe(X):function(){return Ne(X,se,xe,arguments,Re)}}var Be=1,Oe=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function nt(X,se,xe){for(var Re=se+xe,it=se;X[it]&&!(it>=Re);)++it;if(it-se>16&&X.subarray&&Oe)return Oe.decode(X.subarray(se,it));for(var ct="";se<it;){var Je=X[se++];if(!(Je&128)){ct+=String.fromCharCode(Je);continue}var Xe=X[se++]&63;if((Je&224)==192){ct+=String.fromCharCode((Je&31)<<6|Xe);continue}var Zt=X[se++]&63;if((Je&240)==224?Je=(Je&15)<<12|Xe<<6|Zt:Je=(Je&7)<<18|Xe<<12|Zt<<6|X[se++]&63,Je<65536)ct+=String.fromCharCode(Je);else{var cr=Je-65536;ct+=String.fromCharCode(55296|cr>>10,56320|cr&1023)}}return ct}function dt(X,se){return X?nt(Ln,X,se):""}function ot(X,se,xe,Re){if(!(Re>0))return 0;for(var it=xe,ct=xe+Re-1,Je=0;Je<X.length;++Je){var Xe=X.charCodeAt(Je);if(Xe>=55296&&Xe<=57343){var Zt=X.charCodeAt(++Je);Xe=65536+((Xe&1023)<<10)|Zt&1023}if(Xe<=127){if(xe>=ct)break;se[xe++]=Xe}else if(Xe<=2047){if(xe+1>=ct)break;se[xe++]=192|Xe>>6,se[xe++]=128|Xe&63}else if(Xe<=65535){if(xe+2>=ct)break;se[xe++]=224|Xe>>12,se[xe++]=128|Xe>>6&63,se[xe++]=128|Xe&63}else{if(xe+3>=ct)break;se[xe++]=240|Xe>>18,se[xe++]=128|Xe>>12&63,se[xe++]=128|Xe>>6&63,se[xe++]=128|Xe&63}}return se[xe]=0,xe-it}function ht(X,se,xe){return ot(X,Ln,se,xe)}function Fe(X){for(var se=0,xe=0;xe<X.length;++xe){var Re=X.charCodeAt(xe);Re>=55296&&Re<=57343&&(Re=65536+((Re&1023)<<10)|X.charCodeAt(++xe)&1023),Re<=127?++se:Re<=2047?se+=2:Re<=65535?se+=3:se+=4}return se}var vt=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0;function xt(X,se){rn.set(X,se)}function zn(X,se,xe){for(var Re=0;Re<X.length;++Re)rn[se++>>0]=X.charCodeAt(Re);xe||(rn[se>>0]=0)}function Kt(X,se){return X%se>0&&(X+=se-X%se),X}var gs,rn,Ln,ys,As,En,Ds,Bn,ra;function aa(X){gs=X,a.HEAP8=rn=new Int8Array(X),a.HEAP16=ys=new Int16Array(X),a.HEAP32=En=new Int32Array(X),a.HEAPU8=Ln=new Uint8Array(X),a.HEAPU16=As=new Uint16Array(X),a.HEAPU32=Ds=new Uint32Array(X),a.HEAPF32=Bn=new Float32Array(X),a.HEAPF64=ra=new Float64Array(X)}var pu=a.INITIAL_MEMORY||16777216,_a,oa=[],yd=[],fu=[],Wn=!1,Bp=!1,Wp=0;function Ad(){return ae||Wp>0}function Vp(){if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)Hp(a.preRun.shift());bd(oa)}function Up(){Wn=!0,bd(yd)}function _v(){Bp=!0}function Gp(){if(a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;)jp(a.postRun.shift());bd(fu)}function Hp(X){oa.unshift(X)}function lr(X){yd.unshift(X)}function jp(X){fu.unshift(X)}var Fs=0,mu=null,Ra=null;function Vg(X){Fs++,a.monitorRunDependencies&&a.monitorRunDependencies(Fs)}function qp(X){if(Fs--,a.monitorRunDependencies&&a.monitorRunDependencies(Fs),Fs==0&&(mu!==null&&(clearInterval(mu),mu=null),Ra)){var se=Ra;Ra=null,se()}}a.preloadedImages={},a.preloadedAudios={};function yi(X){a.onAbort&&a.onAbort(X),X="Aborted("+X+")",E(X),ie=!0,ue=1,X+=". Build with -s ASSERTIONS=1 for more info.";var se=new WebAssembly.RuntimeError(X);throw i(se),se}var Ug="data:application/octet-stream;base64,";function Xp(X){return X.startsWith(Ug)}function Ai(X){return X.startsWith("file://")}var Vn;Vn="tfjs-backend-wasm.wasm",Xp(Vn)||(Vn=y(Vn));function xd(X){try{if(X==Vn&&Q)return new Uint8Array(Q);if(b)return b(X);throw"both async and sync fetching of the wasm failed"}catch(se){yi(se)}}function Gg(){if(!Q&&(p||f)){if(typeof fetch=="function"&&!Ai(Vn))return fetch(Vn,{credentials:"same-origin"}).then(function(X){if(!X.ok)throw"failed to load wasm binary file at '"+Vn+"'";return X.arrayBuffer()}).catch(function(){return xd(Vn)});if(A)return new Promise(function(X,se){A(Vn,function(xe){X(new Uint8Array(xe))},se)})}return Promise.resolve().then(function(){return xd(Vn)})}function Hg(){var X={env:Au,wasi_snapshot_preview1:Au};function se(Je,Xe){var Zt=Je.exports;a.asm=Zt,ne=a.asm.memory,aa(ne.buffer),_a=a.asm.__indirect_function_table,lr(a.asm.__wasm_call_ctors),qp("wasm-instantiate")}Vg("wasm-instantiate");function xe(Je){se(Je.instance)}function Re(Je){return Gg().then(function(Xe){return WebAssembly.instantiate(Xe,X)}).then(function(Xe){return Xe}).then(Je,function(Xe){E("failed to asynchronously prepare wasm: "+Xe),yi(Xe)})}function it(){return!Q&&typeof WebAssembly.instantiateStreaming=="function"&&!Xp(Vn)&&!Ai(Vn)&&typeof fetch=="function"?fetch(Vn,{credentials:"same-origin"}).then(function(Je){var Xe=WebAssembly.instantiateStreaming(Je,X);return Xe.then(xe,function(Zt){return E("wasm streaming compile failed: "+Zt),E("falling back to ArrayBuffer instantiation"),Re(xe)})}):Re(xe)}if(a.instantiateWasm)try{var ct=a.instantiateWasm(X,se);return ct}catch(Je){return E("Module.instantiateWasm callback failed with error: "+Je),!1}return it().catch(i),{}}var Rv,$v;function bd(X){for(;X.length>0;){var se=X.shift();if(typeof se=="function"){se(a);continue}var xe=se.func;typeof xe=="number"?se.arg===void 0?vd(xe)():vd(xe)(se.arg):xe(se.arg===void 0?null:se.arg)}}function $a(X){return X}function Kp(X){var se=/\b_Z[\w\d_]+/g;return X.replace(se,function(xe){var Re=xe;return xe===Re?xe:Re+" ["+xe+"]"})}var ur=[];function vd(X){var se=ur[X];return se||(X>=ur.length&&(ur.length=X+1),ur[X]=se=_a.get(X)),se}function Dv(){var X=new Error;if(!X.stack){try{throw new Error}catch(se){X=se}if(!X.stack)return"(no stack trace available)"}return X.stack.toString()}function gu(X,se){_a.set(X,se),ur[X]=se}function jg(){yi("")}function wd(){return 2147483648}function Zp(X,se,xe){Ln.copyWithin(X,se,se+xe)}function Un(X){try{return ne.grow(X-gs.byteLength+65535>>>16),aa(ne.buffer),1}catch{}}function Yp(X){var se=Ln.length;X=X>>>0;var xe=wd();if(X>xe)return!1;for(var Re=1;Re<=4;Re*=2){var it=se*(1+.2/Re);it=Math.min(it,X+100663296);var ct=Math.min(xe,Kt(Math.max(X,it),65536)),Je=Un(ct);if(Je)return!0}return!1}var yu={mappings:{},buffers:[null,[],[]],printChar:function(X,se){var xe=yu.buffers[X];se===0||se===10?((X===1?D:E)(nt(xe,0)),xe.length=0):xe.push(se)},varargs:void 0,get:function(){yu.varargs+=4;var X=En[yu.varargs-4>>2];return X},getStr:function(X){var se=dt(X);return se},get64:function(X,se){return X}};function qg(X){return 0}function Fv(X,se,xe,Re,it){}function Ov(X,se,xe,Re){for(var it=0,ct=0;ct<xe;ct++){var Je=En[se>>2],Xe=En[se+4>>2];se+=8;for(var Zt=0;Zt<Xe;Zt++)yu.printChar(X,Ln[Je+Zt]);it+=Xe}return En[Re>>2]=it,0}function Xg(X){J(X)}var Jp=!1,Au={abort:jg,emscripten_get_heap_max:wd,emscripten_memcpy_big:Zp,emscripten_resize_heap:Yp,fd_close:qg,fd_seek:Fv,fd_write:Ov,setTempRet0:Xg},I9=Hg(),Pv=a.___wasm_call_ctors=function(){return(Pv=a.___wasm_call_ctors=a.asm.__wasm_call_ctors).apply(null,arguments)},Kg=a._init=function(){return(Kg=a._init=a.asm.init).apply(null,arguments)},Zg=a._init_with_threads_count=function(){return(Zg=a._init_with_threads_count=a.asm.init_with_threads_count).apply(null,arguments)},Qp=a._get_threads_count=function(){return(Qp=a._get_threads_count=a.asm.get_threads_count).apply(null,arguments)},ef=a._register_tensor=function(){return(ef=a._register_tensor=a.asm.register_tensor).apply(null,arguments)},Yg=a._dispose_data=function(){return(Yg=a._dispose_data=a.asm.dispose_data).apply(null,arguments)},Me=a._dispose=function(){return(Me=a._dispose=a.asm.dispose).apply(null,arguments)},Jg=a._Abs=function(){return(Jg=a._Abs=a.asm.Abs).apply(null,arguments)},tf=a._Add=function(){return(tf=a._Add=a.asm.Add).apply(null,arguments)},xi=a._AddN=function(){return(xi=a._AddN=a.asm.AddN).apply(null,arguments)},xu=a._All=function(){return(xu=a._All=a.asm.All).apply(null,arguments)},Qg=a._Any=function(){return(Qg=a._Any=a.asm.Any).apply(null,arguments)},Mv=a._ArgMax=function(){return(Mv=a._ArgMax=a.asm.ArgMax).apply(null,arguments)},e1=a._AvgPool=function(){return(e1=a._AvgPool=a.asm.AvgPool).apply(null,arguments)},zv=a._BatchMatMul=function(){return(zv=a._BatchMatMul=a.asm.BatchMatMul).apply(null,arguments)},bi=a._Ceil=function(){return(bi=a._Ceil=a.asm.Ceil).apply(null,arguments)},t1=a._ClipByValue=function(){return(t1=a._ClipByValue=a.asm.ClipByValue).apply(null,arguments)},n1=a._Conv2D=function(){return(n1=a._Conv2D=a.asm.Conv2D).apply(null,arguments)},s1=a._Conv2DBackpropInput=function(){return(s1=a._Conv2DBackpropInput=a.asm.Conv2DBackpropInput).apply(null,arguments)},r1=a._Cos=function(){return(r1=a._Cos=a.asm.Cos).apply(null,arguments)},a1=a._Cosh=function(){return(a1=a._Cosh=a.asm.Cosh).apply(null,arguments)},o1=a._CropAndResize=function(){return(o1=a._CropAndResize=a.asm.CropAndResize).apply(null,arguments)},nf=a._Cumprod=function(){return(nf=a._Cumprod=a.asm.Cumprod).apply(null,arguments)},i1=a._Cumsum=function(){return(i1=a._Cumsum=a.asm.Cumsum).apply(null,arguments)},l1=a._DepthToSpace=function(){return(l1=a._DepthToSpace=a.asm.DepthToSpace).apply(null,arguments)},u1=a._DepthwiseConv2dNative=function(){return(u1=a._DepthwiseConv2dNative=a.asm.DepthwiseConv2dNative).apply(null,arguments)},c1=a._Elu=function(){return(c1=a._Elu=a.asm.Elu).apply(null,arguments)},d1=a._Equal=function(){return(d1=a._Equal=a.asm.Equal).apply(null,arguments)},sf=a._Exp=function(){return(sf=a._Exp=a.asm.Exp).apply(null,arguments)},h1=a._FlipLeftRight=function(){return(h1=a._FlipLeftRight=a.asm.FlipLeftRight).apply(null,arguments)},p1=a._Floor=function(){return(p1=a._Floor=a.asm.Floor).apply(null,arguments)},vi=a._FloorDiv=function(){return(vi=a._FloorDiv=a.asm.FloorDiv).apply(null,arguments)},kd=a._FusedBatchNorm=function(){return(kd=a._FusedBatchNorm=a.asm.FusedBatchNorm).apply(null,arguments)},f1=a._FusedConv2D=function(){return(f1=a._FusedConv2D=a.asm.FusedConv2D).apply(null,arguments)},m1=a._FusedDepthwiseConv2D=function(){return(m1=a._FusedDepthwiseConv2D=a.asm.FusedDepthwiseConv2D).apply(null,arguments)},g1=a._Gather=function(){return(g1=a._Gather=a.asm.Gather).apply(null,arguments)},Ze=a._GatherNd=function(){return(Ze=a._GatherNd=a.asm.GatherNd).apply(null,arguments)},y1=a._Greater=function(){return(y1=a._Greater=a.asm.Greater).apply(null,arguments)},A1=a._GreaterEqual=function(){return(A1=a._GreaterEqual=a.asm.GreaterEqual).apply(null,arguments)},x1=a._LeakyRelu=function(){return(x1=a._LeakyRelu=a.asm.LeakyRelu).apply(null,arguments)},b1=a._Less=function(){return(b1=a._Less=a.asm.Less).apply(null,arguments)},v1=a._LessEqual=function(){return(v1=a._LessEqual=a.asm.LessEqual).apply(null,arguments)},w1=a._Log=function(){return(w1=a._Log=a.asm.Log).apply(null,arguments)},Sd=a._LogicalAnd=function(){return(Sd=a._LogicalAnd=a.asm.LogicalAnd).apply(null,arguments)},rf=a._LogicalNot=function(){return(rf=a._LogicalNot=a.asm.LogicalNot).apply(null,arguments)},af=a._LogicalOr=function(){return(af=a._LogicalOr=a.asm.LogicalOr).apply(null,arguments)},k1=a._LogicalXor=function(){return(k1=a._LogicalXor=a.asm.LogicalXor).apply(null,arguments)},S1=a._Max=function(){return(S1=a._Max=a.asm.Max).apply(null,arguments)},I1=a._MaxPool=function(){return(I1=a._MaxPool=a.asm.MaxPool).apply(null,arguments)},C1=a._Maximum=function(){return(C1=a._Maximum=a.asm.Maximum).apply(null,arguments)},T1=a._Mean=function(){return(T1=a._Mean=a.asm.Mean).apply(null,arguments)},N1=a._Min=function(){return(N1=a._Min=a.asm.Min).apply(null,arguments)},Ft=a._Minimum=function(){return(Ft=a._Minimum=a.asm.Minimum).apply(null,arguments)},E1=a._MirrorPad=function(){return(E1=a._MirrorPad=a.asm.MirrorPad).apply(null,arguments)},_1=a._Multiply=function(){return(_1=a._Multiply=a.asm.Multiply).apply(null,arguments)},R1=a._Neg=function(){return(R1=a._Neg=a.asm.Neg).apply(null,arguments)},bu=a._NonMaxSuppressionV3=function(){return(bu=a._NonMaxSuppressionV3=a.asm.NonMaxSuppressionV3).apply(null,arguments)},of=a._NonMaxSuppressionV4=function(){return(of=a._NonMaxSuppressionV4=a.asm.NonMaxSuppressionV4).apply(null,arguments)},lf=a._NonMaxSuppressionV5=function(){return(lf=a._NonMaxSuppressionV5=a.asm.NonMaxSuppressionV5).apply(null,arguments)},uf=a._NotEqual=function(){return(uf=a._NotEqual=a.asm.NotEqual).apply(null,arguments)},$1=a._OneHot=function(){return($1=a._OneHot=a.asm.OneHot).apply(null,arguments)},cf=a._PadV2=function(){return(cf=a._PadV2=a.asm.PadV2).apply(null,arguments)},D1=a._Pow=function(){return(D1=a._Pow=a.asm.Pow).apply(null,arguments)},Lv=a._Prelu=function(){return(Lv=a._Prelu=a.asm.Prelu).apply(null,arguments)},df=a._Prod=function(){return(df=a._Prod=a.asm.Prod).apply(null,arguments)},Bv=a._RealDiv=function(){return(Bv=a._RealDiv=a.asm.RealDiv).apply(null,arguments)},F1=a._Relu=function(){return(F1=a._Relu=a.asm.Relu).apply(null,arguments)},O1=a._Relu6=function(){return(O1=a._Relu6=a.asm.Relu6).apply(null,arguments)},P1=a._ResizeBilinear=function(){return(P1=a._ResizeBilinear=a.asm.ResizeBilinear).apply(null,arguments)},M1=a._ResizeNearestNeighbor=function(){return(M1=a._ResizeNearestNeighbor=a.asm.ResizeNearestNeighbor).apply(null,arguments)},z1=a._Reverse=function(){return(z1=a._Reverse=a.asm.Reverse).apply(null,arguments)},L1=a._RotateWithOffset=function(){return(L1=a._RotateWithOffset=a.asm.RotateWithOffset).apply(null,arguments)},B1=a._Round=function(){return(B1=a._Round=a.asm.Round).apply(null,arguments)},W1=a._Rsqrt=function(){return(W1=a._Rsqrt=a.asm.Rsqrt).apply(null,arguments)},V1=a._ScatterNd=function(){return(V1=a._ScatterNd=a.asm.ScatterNd).apply(null,arguments)},U1=a._SelectV2=function(){return(U1=a._SelectV2=a.asm.SelectV2).apply(null,arguments)},G1=a._Sigmoid=function(){return(G1=a._Sigmoid=a.asm.Sigmoid).apply(null,arguments)},H1=a._Sin=function(){return(H1=a._Sin=a.asm.Sin).apply(null,arguments)},j1=a._Softmax=function(){return(j1=a._Softmax=a.asm.Softmax).apply(null,arguments)},q1=a._SparseFillEmptyRows=function(){return(q1=a._SparseFillEmptyRows=a.asm.SparseFillEmptyRows).apply(null,arguments)},X1=a._SparseReshape=function(){return(X1=a._SparseReshape=a.asm.SparseReshape).apply(null,arguments)},K1=a._SparseSegmentReduction=function(){return(K1=a._SparseSegmentReduction=a.asm.SparseSegmentReduction).apply(null,arguments)},Z1=a._Sqrt=function(){return(Z1=a._Sqrt=a.asm.Sqrt).apply(null,arguments)},Y1=a._Square=function(){return(Y1=a._Square=a.asm.Square).apply(null,arguments)},J1=a._SquaredDifference=function(){return(J1=a._SquaredDifference=a.asm.SquaredDifference).apply(null,arguments)},Q1=a._Step=function(){return(Q1=a._Step=a.asm.Step).apply(null,arguments)},ey=a._StridedSlice=function(){return(ey=a._StridedSlice=a.asm.StridedSlice).apply(null,arguments)},ty=a._Sub=function(){return(ty=a._Sub=a.asm.Sub).apply(null,arguments)},ny=a._Sum=function(){return(ny=a._Sum=a.asm.Sum).apply(null,arguments)},sy=a._Tan=function(){return(sy=a._Tan=a.asm.Tan).apply(null,arguments)},ry=a._Tanh=function(){return(ry=a._Tanh=a.asm.Tanh).apply(null,arguments)},ay=a._Tile=function(){return(ay=a._Tile=a.asm.Tile).apply(null,arguments)},oy=a._TopK=function(){return(oy=a._TopK=a.asm.TopK).apply(null,arguments)},iy=a._Transform=function(){return(iy=a._Transform=a.asm.Transform).apply(null,arguments)},ly=a._Transpose=function(){return(ly=a._Transpose=a.asm.Transpose).apply(null,arguments)},uy=a.__FusedMatMul=function(){return(uy=a.__FusedMatMul=a.asm._FusedMatMul).apply(null,arguments)},cy=a._malloc=function(){return(cy=a._malloc=a.asm.malloc).apply(null,arguments)},dy=a._free=function(){return(dy=a._free=a.asm.free).apply(null,arguments)},hy=a.___errno_location=function(){return(hy=a.___errno_location=a.asm.__errno_location).apply(null,arguments)},py=a._emscripten_main_thread_process_queued_calls=function(){return(py=a._emscripten_main_thread_process_queued_calls=a.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},hf=a.stackSave=function(){return(hf=a.stackSave=a.asm.stackSave).apply(null,arguments)},pf=a.stackRestore=function(){return(pf=a.stackRestore=a.asm.stackRestore).apply(null,arguments)},Id=a.stackAlloc=function(){return(Id=a.stackAlloc=a.asm.stackAlloc).apply(null,arguments)},fy=a.dynCall_iijjiiii=function(){return(fy=a.dynCall_iijjiiii=a.asm.dynCall_iijjiiii).apply(null,arguments)},my=a.dynCall_jiji=function(){return(my=a.dynCall_jiji=a.asm.dynCall_jiji).apply(null,arguments)};a.cwrap=_e;var vu;function Cd(X){this.name="ExitStatus",this.message="Program terminated with exit("+X+")",this.status=X}Ra=function X(){vu||Td(),vu||(Ra=X)};function Td(X){if(X=X||c,Fs>0||(Vp(),Fs>0))return;function se(){vu||(vu=!0,a.calledRun=!0,!ie&&(Up(),o(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),Gp()))}a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),se()},1)):se()}a.run=Td;function Wv(X){ue=X,Ad()||(a.onExit&&a.onExit(X),ie=!0),d(X,new Cd(X))}if(a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);a.preInit.length>0;)a.preInit.pop()();Td();var wu;l&&(wu={uncaughtException:process.listeners("uncaughtException").filter(function(X){return!l.uncaughtException.indexOf(X)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(X){return!l.unhandledRejection.indexOf(X)>-1})});var ku;if(typeof r<"u")ku=r;else if(typeof WasmBackendModuleThreadedSimd<"u")ku=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(wu){var gy=ku._dispose;ku._dispose=function(){gy(),wu.uncaughtException.forEach(function(X){process.removeListener("uncaughtException",X)}),wu.unhandledRejection.forEach(function(X){process.removeListener("unhandledRejection",X)})}}return r.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModule=n)}}),V_=1e-7,U_=1e-4,Th=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},pc=class{refCount(e){return Os("refCount")}incRef(e){return Os("incRef")}timerAvailable(){return!0}time(e){return Os("time")}read(e){return Os("read")}readSync(e){return Os("readSync")}readToGPU(e,t){return Os("readToGPU")}numDataIds(){return Os("numDataIds")}disposeData(e,t){return Os("disposeData")}write(e,t,n){return Os("write")}move(e,t,n,s,r){return Os("move")}memory(){return Os("memory")}floatPrecision(){return Os("floatPrecision")}epsilon(){return this.floatPrecision()===32?V_:U_}dispose(){return Os("dispose")}};function Os(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function cS(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,hm(e,t,n)}function G_(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,s=0;for(;n>0;)s=Math.random()*n|0,n--,hm(e,n,s),hm(t,n,s)}function ih(e,t,n){return Math.max(e,Math.min(t,n))}function H_(e){return e%2===0?e:e+1}function hm(e,t,n){let s=e[t];e[t]=e[n],e[n]=s}function j_(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function q_(e,t){let n=Math.random();return t*n+(1-n)*e}function X_(e,t){let n=0;for(let s=0;s<e.length;s++){let r=Number(e[s])-Number(t[s]);n+=r*r}return n}function P(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function ts(e,t,n=""){P(co(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function cl(e){P(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function qi(e,t=[],n=!1){if(t==null&&(t=[]),Array.isArray(e)||$n(e)&&!n)for(let s=0;s<e.length;++s)qi(e[s],t,n);else t.push(e);return t}function St(e){if(e.length===0)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function K_(e){return e.length===0}function co(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function Xu(e){return e%1===0}function Z_(e){if(Math.tanh!=null)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function Y_(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function J_(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return cS(t),t}function eh(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function Q_(e,t=s=>0,n){return new Promise((s,r)=>{let a=0,o=()=>{if(e()){s();return}a++;let i=t(a);if(n!=null&&a>=n){r();return}setTimeout(o,i)};o()})}function eR(e,t){let n=1,s=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(e[a]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${a}`);s=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(s===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(n===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let r=e.slice();return r[s]=t/n,r}function rr(e,t){let n=t.length;return e=e==null?t.map((s,r)=>r):[].concat(e),P(e.every(s=>s>=-n&&s<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),P(e.every(s=>Xu(s)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(s=>s<0?n+s:s)}function dS(e,t){let n=[],s=[],r=t!=null&&Array.isArray(t)&&t.length===0,a=t==null||r?null:rr(t,e).sort(),o=0;for(let i=0;i<e.length;++i){if(a!=null){if(a[o]===i&&e[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${e[i]}' is not 1`);(a[o]==null||a[o]>i)&&e[i]===1&&(n.push(e[i]),s.push(i)),a[o]<=i&&o++}e[i]!==1&&(n.push(e[i]),s.push(i))}return{newShape:n,keptDims:s}}function hS(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else throw new Error(`Unknown data type ${e}`);return n}function pS(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else if(e==="string")n=new Array(t);else throw new Error(`Unknown data type ${e}`);return n}function fS(e,t){for(let n=0;n<e.length;n++){let s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function mS(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function tR(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function $n(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function mA(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function gS(e){if(e==null)return 0;let t=0;return e.forEach(n=>t+=n.length),t}function Ba(e){return typeof e=="string"||e instanceof String}function yS(e){return typeof e=="boolean"}function AS(e){return typeof e=="number"}function Km(e){return Array.isArray(e)?Km(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":AS(e)?"float32":Ba(e)?"string":yS(e)?"bool":"float32"}function Ya(e){return!!(e&&e.constructor&&e.call&&e.apply)}function pm(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function fc(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function xS(e,t,n,s=!1){let r=new Array;if(t.length===1){let a=t[0]*(s?2:1);for(let o=0;o<a;o++)r[o]=n[e+o]}else{let a=t[0],o=t.slice(1),i=o.reduce((l,u)=>l*u)*(s?2:1);for(let l=0;l<a;l++)r[l]=xS(e+l*i,o,n,s)}return r}function Uu(e,t,n=!1){if(e.length===0)return t[0];let s=e.reduce((r,a)=>r*a)*(n?2:1);if(s===0)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return xS(0,e,t,n)}function E2(e,t){let n=Zm(e,t);for(let s=0;s<n.length;s++)n[s]=1;return n}function Zm(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function nR(e,t){let n=e.reduce((s,r)=>s*r,1);if(t==null||t==="float32")return Uu(e,new Float32Array(n));if(t==="int32")return Uu(e,new Int32Array(n));if(t==="bool")return Uu(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function _2(e){e.forEach(t=>{P(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function sR(e,t,n){if(t===0)return 0;if(t===1)return e[0];let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=n[r]*e[r];return s}function rR(e,t,n){if(t===0)return[];if(t===1)return[e];let s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(e/n[r]),e-=s[r]*n[r];return s[s.length-1]=e,s}function R2(e){return e&&e.then&&typeof e.then=="function"}var Yv="tfjsflags",bS=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=aR,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(K().getBool("IS_TEST")||K().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let s=this.urlFlags[e];K().getBool("IS_TEST")||K().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${s}.`),this.set(e,s)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(R2(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let e=this.getQueryParams(this.global.location.search);Yv in e&&e[Yv].split(",").forEach(n=>{let[s,r]=n.split(":");this.urlFlags[s]=iR(s,r)})}};function aR(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...s)=>(oR(t,s[0],s[1]),s.join("="))),t}function oR(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function iR(e,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function K(){return $2}var $2=null;function lR(e){$2=e}var ky;function vS(){if(ky==null){let e;if(typeof window<"u")e=window;else if(typeof global<"u")e=global;else if(typeof process<"u")e=process;else if(typeof self<"u")e=self;else throw new Error("Could not find a global object");ky=e}return ky}function uR(){let e=vS();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function D2(e,t){let n=uR();if(n.has(e))return n.get(e);{let s=t();return n.set(e,s),n.get(e)}}var dl="Abs",mc="Acos",gc="Acosh",va="Add",ho="AddN",yc="All",Ac="Any",po="ArgMax",xc="ArgMin",bc="Asin",vc="Asinh",wc="Atan",kc="Atanh",hl="Atan2",fo="AvgPool",Ym="AvgPoolGrad",Nh="AvgPool3D",Jm="AvgPool3DGrad",mo="BatchMatMul",pl="BatchToSpaceND",Qm="Bincount",wS="BroadcastTo",e0="BroadcastArgs",go="Cast",yo="Ceil",wa="ClipByValue",Eh="Complex",_h="ComplexAbs",fl="Concat",Ao="Conv2D",t0="Conv2DBackpropFilter",xo="Conv2DBackpropInput",Rh="Conv3D",n0="Conv3DBackpropFilterV2",s0="Conv3DBackpropInputV2",bo="Cos",vo="Cosh",ml="Cumprod",wo="Cumsum",gl="CropAndResize",r0="DenseBincount",yl="DepthToSpace",ko="DepthwiseConv2dNative",a0="DepthwiseConv2dNativeBackpropFilter",o0="DepthwiseConv2dNativeBackpropInput",i0="Diag",$h="Dilation2D",fm="Dilation2DBackpropInput",mm="Dilation2DBackpropFilter",So="RealDiv",Dh="Einsum",Io="Elu",l0="EluGrad",Sc="Erf",Al="Equal",Co="Exp",xl="ExpandDims",bl="Expm1",u0="FFT",Ic="Fill",vl="FlipLeftRight",To="Floor",No="FloorDiv",Eo="FusedBatchNorm",wl="GatherV2",kl="GatherNd",Sl="Greater",_o="GreaterEqual",Ro="Identity",c0="IFFT",Fh="Imag",Cc="IsFinite",Tc="IsInf",Il="IsNan",$o="LeakyRelu",Cl="Less",Tl="LessEqual",d0="LinSpace",Do="Log",Nc="Log1p",Nl="LogicalAnd",El="LogicalNot",Ec="LogicalOr",kS="LogicalXor",SS="LogSoftmax",cR="LowerBound",Oh="LRN",h0="LRNGrad",Fo="Max",Oo="Maximum",Po="MaxPool",p0="MaxPoolGrad",Ph="MaxPool3D",f0="MaxPool3DGrad",m0="MaxPoolWithArgmax",Mo="Mean",zo="Min",Lo="Minimum",Bo="MirrorPad",_c="Mod",g0="Multinomial",Wo="Multiply",_l="Neg",Rl="NotEqual",$l="NonMaxSuppressionV3",Rc="NonMaxSuppressionV4",Dl="NonMaxSuppressionV5",Fl="OnesLike",Ol="OneHot",Pl="Pack",Vo="PadV2",dR="Pool",Uo="Pow",Go="Prelu",Ho="Prod",y0="RaggedTensorToTensor",$c="Range",Mh="Real",Ml="Reciprocal",jo="Relu",zl="Reshape",qo="ResizeNearestNeighbor",A0="ResizeNearestNeighborGrad",Xo="ResizeBilinear",x0="ResizeBilinearGrad",Ko="Relu6",Ll="Reverse",Bl="Round",Zo="Rsqrt",Wl="ScatterNd",b0="SearchSorted",Vl="Select",Dc="Selu",Ul="Slice",Yo="Sin",Gl="Sinh",Fc="Sign",Jo="Sigmoid",Oc="Softplus",Qo="Sqrt",ei="Sum",Hl="SpaceToBatchND",jl="SplitV",ti="Softmax",zh="SparseFillEmptyRows",Pc="SparseReshape",Lh="SparseSegmentMean",Bh="SparseSegmentSum",Wh="SparseToDense",ni="SquaredDifference",Mc="Square",ql="StridedSlice",zc="StringNGrams",Vh="StringSplit",Uh="StringToHashBucketFast",si="Sub",Xl="Tan",ri="Tanh",ka="Tile",Kl="TopK",Zl="Transform",Xr="Transpose",v0="Unique",Yl="Unpack",Gh="UnsortedSegmentSum",hR="UpperBound",Jl="ZerosLike",ai="Step",lh="FromPixels",Ql="RotateWithOffset",Ja="_FusedMatMul",Qa="FusedConv2D",eo="FusedDepthwiseConv2D";function La(...e){K().getBool("IS_TEST")||K().getBool("PROD")||console.warn(...e)}function pR(...e){K().getBool("IS_TEST")||K().getBool("PROD")||console.log(...e)}var Ku=D2("kernelRegistry",()=>new Map),uh=D2("gradRegistry",()=>new Map);function gm(e,t){let n=F2(e,t);return Ku.get(n)}function gA(e){return uh.get(e)}function Xi(e){let t=Ku.entries(),n=[];for(;;){let{done:s,value:r}=t.next();if(s)break;let[a,o]=r,[i]=a.split("_");i===e&&n.push(o)}return n}function Ir(e){let{kernelName:t,backendName:n}=e,s=F2(t,n);Ku.has(s)&&La(`The kernel '${t}' for backend '${n}' is already registered`),Ku.set(s,e)}function IS(e){let{kernelName:t}=e;uh.has(t)&&K().getBool("DEBUG")&&La(`Overriding the gradient for '${t}'`),uh.set(t,e)}function fR(e,t){let n=F2(e,t);if(!Ku.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);Ku.delete(n)}function mR(e){if(!uh.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);uh.delete(e)}function gR(e,t){Xi(e).forEach(s=>{let r=Object.assign({},s,{backendName:t});Ir(r)})}function F2(e,t){return`${t}_${e}`}var v={};Ue(v,{arraysEqual:()=>co,assert:()=>P,assertNonNegativeIntegerDimensions:()=>_2,assertNonNull:()=>cl,assertShapesMatch:()=>ts,bytesFromStringArray:()=>gS,bytesPerElement:()=>mA,checkConversionForErrors:()=>fS,clamp:()=>ih,computeStrides:()=>fc,createScalarValue:()=>wR,createShuffledIndices:()=>J_,decodeString:()=>ym,distSquared:()=>X_,encodeString:()=>jh,fetch:()=>SR,fingerPrint64:()=>vR,flatten:()=>qi,getArrayFromDType:()=>pS,getTypedArrayFromDType:()=>hS,hasEncodingLoss:()=>tR,hexToLong:()=>Hh,indexToLoc:()=>rR,inferDtype:()=>Km,inferFromImplicitShape:()=>eR,isBoolean:()=>yS,isFunction:()=>Ya,isInt:()=>Xu,isNumber:()=>AS,isPromise:()=>R2,isScalarShape:()=>K_,isString:()=>Ba,isTypedArray:()=>$n,isValidDtype:()=>mS,locToIndex:()=>sR,makeOnesTypedArray:()=>E2,makeZerosNestedTypedArray:()=>nR,makeZerosTypedArray:()=>Zm,nearestDivisor:()=>pm,nearestLargerEven:()=>H_,now:()=>ch,parseAxisParam:()=>rr,randUniform:()=>q_,repeatedTry:()=>Q_,rightPad:()=>eh,shuffle:()=>cS,shuffleCombo:()=>G_,sizeFromShape:()=>St,sizeToSquarishShape:()=>Y_,squeezeShape:()=>dS,sum:()=>j_,swap:()=>hm,tanh:()=>Z_,toNestedArray:()=>Uu,toTypedArray:()=>w0});var Jv=uo(I_()),$i=Jv.default||Jv;function Hh(e){return $i.fromString(e,!0,16)}var CS=Hh("c3a5c85c97cb3127"),Ni=Hh("b492b66fbe98f273"),Kn=Hh("9ae16a3b2f90404f");function yA(e){return e.xor(e.shru(47))}function TS(e,t,n){let s=e.slice(t,t+n);return $i.fromBytes(Array.from(s),!0,!0)}function wt(e,t){return TS(e,t,8)}function Qv(e,t){return TS(e,t,4)}function fn(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function Ha(e,t,n=Hh("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function yR(e,t,n,s,r,a){r=r.add(e),a=fn(a.add(r).add(s),21);let o=r;return r=r.add(t),r=r.add(n),a=a.add(fn(r,44)),[r.add(s),a.add(o)]}function wf(e,t,n,s){return yR(wt(e,t),wt(e,t+8),wt(e,t+16),wt(e,t+24),n,s)}function AR(e,t=e.length){if(t>=8){let n=Kn.add(t*2),s=wt(e,0).add(Kn),r=wt(e,t-8),a=fn(r,37).mul(n).add(s),o=fn(s,25).add(r).mul(n);return Ha(a,o,n)}if(t>=4){let n=Kn.add(t*2),s=Qv(e,0);return Ha(s.shl(3).add(t),Qv(e,t-4),n)}if(t>0){let n=e[0],s=e[t>>1],r=e[t-1],a=n+(s<<8),o=t+(r<<2);return yA(Kn.mul(a).xor(CS.mul(o))).mul(Kn)}return Kn}function xR(e,t=e.length){let n=Kn.add(t*2),s=wt(e,0).mul(Ni),r=wt(e,8),a=wt(e,t-8).mul(n),o=wt(e,t-16).mul(Kn);return Ha(fn(s.add(r),43).add(fn(a,30)).add(o),s.add(fn(r.add(Kn),18)).add(a),n)}function bR(e,t=e.length){let n=Kn.add(t*2),s=wt(e,0).mul(Kn),r=wt(e,8),a=wt(e,t-8).mul(n),o=wt(e,t-16).mul(Kn),i=fn(s.add(r),43).add(fn(a,30)).add(o),l=Ha(i,s.add(fn(r.add(Kn),18)).add(a),n),u=wt(e,16).mul(n),c=wt(e,24),h=i.add(wt(e,t-32)).mul(n),d=l.add(wt(e,t-24)).mul(n);return Ha(fn(u.add(c),43).add(fn(h,30)).add(d),u.add(fn(c.add(s),18)).add(h),n)}function vR(e,t=e.length){let n=$i.fromNumber(81,!0);if(t<=32)return t<=16?AR(e,t):xR(e,t);if(t<=64)return bR(e,t);let s=n,r=n.mul(Ni).add(113),a=yA(r.mul(Kn).add(113)).mul(Kn),o=[$i.UZERO,$i.UZERO],i=[$i.UZERO,$i.UZERO];s=s.mul(Kn).add(wt(e,0));let l=0,u=(t-1>>6)*64,c=u+(t-1&63)-63;do s=fn(s.add(r).add(o[0]).add(wt(e,l+8)),37).mul(Ni),r=fn(r.add(o[1]).add(wt(e,l+48)),42).mul(Ni),s=s.xor(i[1]),r=r.add(o[0]).add(wt(e,l+40)),a=fn(a.add(i[0]),33).mul(Ni),o=wf(e,l,o[1].mul(Ni),s.add(i[0])),i=wf(e,l+32,a.add(i[1]),r.add(wt(e,l+16))),[a,s]=[s,a],l+=64;while(l!==u);let h=Ni.add(a.and(255).shl(1));return l=c,i[0]=i[0].add(t-1&63),o[0]=o[0].add(i[0]),i[0]=i[0].add(o[0]),s=fn(s.add(r).add(o[0]).add(wt(e,l+8)),37).mul(h),r=fn(r.add(o[1]).add(wt(e,l+48)),42).mul(h),s=s.xor(i[1].mul(9)),r=r.add(o[0].mul(9).add(wt(e,l+40))),a=fn(a.add(i[0]),33).mul(h),o=wf(e,l,o[1].mul(h),s.add(i[0])),i=wf(e,l+32,a.add(i[1]),r.add(wt(e,l+16))),[a,s]=[s,a],Ha(Ha(o[0],i[0],h).add(yA(r).mul(CS)).add(a),Ha(o[1],i[1],h).add(s),h)}function wR(e,t){return t==="string"?jh(e):w0([e],t)}function kR(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function w0(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=qi(e)),K().getBool("DEBUG")&&fS(e,t),kR(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let n=new Uint8Array(e.length);for(let s=0;s<n.length;++s)Math.round(e[s])!==0&&(n[s]=1);return n}else throw new Error(`Unknown data type ${t}`)}function ch(){return K().platform.now()}function SR(e,t){return K().platform.fetch(e,t)}function jh(e,t="utf-8"){return t=t||"utf-8",K().platform.encode(e,t)}function ym(e,t="utf-8"){return t=t||"utf-8",K().platform.decode(e,t)}var IR=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new TR)}profileKernel(e,t,n){let s,r=()=>{s=n()},a,o=ch();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(r);else{r();for(let l of s)l.dataSync();a=Promise.resolve({kernelMs:ch()-o})}if(K().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<s.length;l++){let u=s[l];u.data().then(c=>{CR(c,u.dtype,e)})}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then(l=>l.kernelMs),extraInfo:a.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:a}=e;n.forEach(o=>{Promise.all([o.data(),s,a]).then(i=>{this.logger.logKernelProfile(t,o,i[0],i[1],r,i[2])})})}};function CR(e,t,n){if(t!=="float32")return!1;for(let s=0;s<e.length;s++){let r=e[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}var TR=class{logKernelProfile(e,t,n,s,r,a){let o=typeof s=="number"?eh(`${s}ms`,9):s.error,i=eh(e,25),l=t.rank,u=t.size,c=eh(t.shape.toString(),14),h="";for(let d in r){let p=r[d];if(p!=null){let f=p.shape||t.shape,m=f.length;h+=`${d}: ${m}D ${m>0?f:""} `}}console.log(`%c${i}	%c${o}	%c${l}D ${c}	%c${u}	%c${h}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function NR(e,t,n){let s={},r={};for(let l=0;l<t.length;l++)s[t[l].id]=!0;for(let l=0;l<e.length;l++){let u=e[l],c=u.inputs;for(let h in c){let d=c[h],p=!1;for(let f=0;f<t.length;f++)if(s[d.id]){u.outputs.forEach(m=>s[m.id]=!0),p=!0,r[u.id]=!0;break}if(p)break}}let a={};a[n.id]=!0;let o={};for(let l=e.length-1;l>=0;l--){let u=e[l],c=u.inputs;for(let h=0;h<u.outputs.length;h++)if(a[u.outputs[h].id]){for(let d in c)a[c[d].id]=!0,o[u.id]=!0;break}}let i=[];for(let l=0;l<e.length;l++){let u=e[l];if(r[u.id]&&o[u.id]){let c={};for(let d in u.inputs){let p=u.inputs[d];s[p.id]&&(c[d]=p)}let h=Object.assign({},u);h.inputs=c,h.outputs=u.outputs,i.push(h)}}return i}function ER(e,t,n,s){for(let r=t.length-1;r>=0;r--){let a=t[r],o=[];if(a.outputs.forEach(l=>{let u=e[l.id];u!=null?o.push(u):o.push(null)}),a.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);let i=a.gradient(o);for(let l in a.inputs){if(!(l in i))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(i)}.`);let u=n(()=>i[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);let c=a.inputs[l];if(!co(u.shape,c.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(e[c.id]==null)e[c.id]=u;else{let h=e[c.id];e[c.id]=s(h,u),h.dispose()}}}}var e3=20,Rd=3,Sy=7;function _R(e,t,n,s){let r=fc(t),a=RR(e,t,n,r),o=t.length,i=Yf(e,t,n,r,a),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${o}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(i.map(u=>"    "+u).join(`
`)),l.join(`
`)}function RR(e,t,n,s){let r=St(t),a=s[s.length-1],o=new Array(a).fill(0),i=t.length,l=n==="complex64"?Md(e):e;if(i>1)for(let u=0;u<r/a;u++){let c=u*a;for(let h=0;h<a;h++)o[h]=Math.max(o[h],Pd(l[c+h],0,n).length)}return o}function Pd(e,t,n){let s;return Array.isArray(e)?s=`${parseFloat(e[0].toFixed(Sy))} + ${parseFloat(e[1].toFixed(Sy))}j`:Ba(e)?s=`'${e}'`:n==="bool"?s=NS(e):s=parseFloat(e.toFixed(Sy)).toString(),eh(s,t)}function NS(e){return e===0?"false":"true"}function Yf(e,t,n,s,r,a=!0){let o=n==="complex64"?2:1,i=t[0],l=t.length;if(l===0){if(n==="complex64"){let m=Md(e);return[Pd(m[0],0,n)]}return n==="bool"?[NS(e[0])]:[e[0].toString()]}if(l===1){if(i>e3){let g=Rd*o,y=Array.from(e.slice(0,g)),x=Array.from(e.slice((i-Rd)*o,i*o));return n==="complex64"&&(y=Md(y),x=Md(x)),["["+y.map((A,b)=>Pd(A,r[b],n)).join(", ")+", ..., "+x.map((A,b)=>Pd(A,r[i-Rd+b],n)).join(", ")+"]"]}let m=n==="complex64"?Md(e):Array.from(e);return["["+m.map((g,y)=>Pd(g,r[y],n)).join(", ")+"]"]}let u=t.slice(1),c=s.slice(1),h=s[0]*o,d=[];if(i>e3){for(let m=0;m<Rd;m++){let g=m*h,y=g+h;d.push(...Yf(e.slice(g,y),u,n,c,r,!1))}d.push("...");for(let m=i-Rd;m<i;m++){let g=m*h,y=g+h;d.push(...Yf(e.slice(g,y),u,n,c,r,m===i-1))}}else for(let m=0;m<i;m++){let g=m*h,y=g+h;d.push(...Yf(e.slice(g,y),u,n,c,r,m===i-1))}let p=l===2?",":"";d[0]="["+d[0]+p;for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function Md(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var ln=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=St(e),n!=null){let s=n.length;P(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||pS(t,this.size),this.strides=fc(e)}set(e,...t){t.length===0&&(t=[0]),P(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let s of e){if(s<0||s>=this.shape[t]){let r=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(r)}t++}let n=e[e.length-1];for(let s=0;s<e.length-1;++s)n+=this.strides[s]*e[s];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return gr().makeTensor(this.values,this.shape,this.dtype)}},gr=null,Pu=null,$R=null;function DR(e){gr=e}function FR(e){Pu=e}function OR(e){$R=e}var et=class{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=St(e),this.strides=fc(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Pu.buffer(this.shape,this.dtype,e)}bufferSync(){return Pu.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Uu(this.shape,e,this.dtype==="complex64")}arraySync(){return Uu(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=gr().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>ym(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),gr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=gr().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>ym(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await gr().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(gr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Pu.print(this,e)}clone(){return this.throwIfDisposed(),Pu.clone(this)}toString(e=!1){let t=this.dataSync();return _R(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Pu.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),gr().makeVariable(this,e,t,n)}};Object.defineProperty(et,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function re(){return D2("Tensor",()=>et)}re();var dh=class extends et{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!co(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);gr().disposeTensor(this),this.dataId=e.dataId,gr().incRef(this,null)}dispose(){gr().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(dh,Symbol.hasInstance,{value:e=>e instanceof et&&e.assign!=null&&e.assign instanceof Function});var Cr={};Ue(Cr,{assertTypesMatch:()=>ES,getTensorsInContainer:()=>O2,isTensorInList:()=>MR,makeTypesMatch:()=>Lt});var AA;(function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"})(AA||(AA={}));var xA;(function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"})(xA||(xA={}));var bA;(function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"})(bA||(bA={}));var vA;(function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"})(vA||(vA={}));var wA;(function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"})(wA||(wA={}));var PR={float32:vA,int32:xA,bool:bA,complex64:wA};function Fn(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return PR[e][t]}function qh(e){return Fn(e,"int32")}function Lt(e,t){if(e.dtype===t.dtype)return[e,t];let n=Fn(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function ES(e,t){P(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function MR(e,t){return t.some(n=>n.id===e.id)}function O2(e){let t=[];return _S(e,t,new Set),t}function _S(e,t,n){if(e==null)return;if(e instanceof et){t.push(e);return}if(!zR(e))return;let s=e;for(let r in s){let a=s[r];n.has(a)||(n.add(a),_S(a,t,n))}}function zR(e){return Array.isArray(e)||typeof e=="object"}function Iy(e){return e.kernelName!=null}var t3=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},hh=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new t3}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(La(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new IR(this.backendInstance),!0}setupRegisteredKernels(){Xi(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Xi(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof pc)&&typeof n.then=="function"){let s=++this.pendingBackendInitId,r=n.then(a=>s<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,La(`Initialization of backend ${e} failed`),La(a.stack||a.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return La(`Initialization of backend ${e} failed`),La(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let s;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(s),()=>(s=t(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,t,n){e();try{let s=n();return t(),s}catch(s){throw t(),s}}nextTensorId(){return hh.nextTensorId++}nextVariableId(){return hh.nextVariableId++}clone(e){let t=B.runKernel(Ro,{x:e}),n={x:e},s=a=>({x:()=>{let o="float32",i={x:a},l={dtype:o};return B.runKernel(go,i,l)}}),r=[];return this.addTapeNode(this.state.activeScope.name,n,[t],s,r,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,!(gm(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let s=this.backend.numDataIds(),r=0;n.forEach(i=>{r+=i.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=s-t-r-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],s=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let o;this.backendName==null&&this.backend;let i,l=Iy(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Iy(e)){let{kernelName:p,inputs:f,attrs:m}=e;this.backendName==null&&this.backend;let g=gm(p,this.backendName);P(g!=null,()=>`Cannot find registered kernel '${p}' for backend '${this.backendName}'`),o=()=>{let y=this.backend.numDataIds();i=g.kernelFunc({inputs:f,attrs:m,backend:this.backend});let x=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(p,y,x);let A=x.map(b=>b.rank!=null?b:this.makeTensorFromTensorInfo(b));if(s){let b=this.getTensorsForGradient(p,f,A);n=this.saveTensorsForBackwardMode(b)}return A}}else{let{forwardFunc:p}=e,f=m=>{!s||(n=m.map(g=>this.keep(this.clone(g))))};o=()=>{let m=this.backend.numDataIds();i=this.tidy(()=>p(this.backend,f));let g=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,m,g),g}}let{inputs:u,attrs:c}=e,h=Iy(e)?null:e.backwardsFunc,d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=o():(d=this.profiler.profileKernel(l,u,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs)}),s&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(p=>u[p]!=null?u[p].shape:null),outputShapes:t.map(p=>p.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let s=gA(e);if(s!=null){let r=s.inputsToSave||[],a=s.outputsToSave||[],o;s.saveAllInputs?(P(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(t).map(l=>t[l])):o=r.map(l=>t[l]);let i=n.filter((l,u)=>a[u]);return o.concat(i)}return[]}makeTensor(e,t,n,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;n==="string"&&Ba(e[0])&&(r=e.map(i=>jh(i)));let a=s.write(r,t,n),o=new et(t,n,a,this.nextTensorId());if(this.trackTensor(o,s),n==="string"){let i=this.state.tensorInfo.get(a),l=gS(r);this.state.numBytes+=l-i.bytes,i.bytes=l}return o}makeTensorFromDataId(e,t,n,s){n=n||"float32";let r={dataId:e,shape:t,dtype:n};return this.makeTensorFromTensorInfo(r,s)}makeTensorFromTensorInfo(e,t){let{dataId:n,shape:s,dtype:r}=e,a=new et(s,r,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.cast(s));let r=new dh(e,t,n,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*mA(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof dh||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*mA(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,s,r,a){let o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},i=gA(e);i!=null&&(s=i.gradFunc),s!=null&&(o.gradient=l=>(l=l.map((u,c)=>{if(u==null){let h=n[c],d=Zm(h.size,h.dtype);return this.makeTensor(d,h.shape,h.dtype)}return u}),s(l.length>1?l:l[0],r,a))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=O2(e),n=new Set(t.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){let a=this.state.activeScope.track[r];!a.kept&&!n.has(a.id)&&a.dispose()}let s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(r=>{!r.kept&&r.scopeId===s.id&&this.track(r)})}gradients(e,t,n,s=!1){if(P(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));P(r instanceof et,()=>"The result y returned by f() must be a tensor.");let a=NR(this.state.activeTape,t,r);if(!s&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let o={};o[r.id]=n??LR(r.shape),ER(o,a,l=>this.tidy(l),BR);let i=t.map(l=>o[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(let u of l.saved)u.dispose()}),this.state.activeTape=null),{value:r,grads:i}})}customGrad(e){return P(Ya(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{P(t.every(o=>o instanceof et),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,s={};t.forEach((o,i)=>{s[i]=o});let r=(o,i)=>(n=e(...t,i),P(n.value instanceof et,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),P(Ya(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(o,i)=>{let l=n.gradFunc(o,i),u=Array.isArray(l)?l:[l];P(u.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),P(u.every(h=>h instanceof et),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let c={};return u.forEach((h,d)=>{c[d]=()=>h}),c};return this.runKernelFunc({forwardFunc:r,backwardsFunc:a,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=ch(),n=await this.backend.time(e);return n.wallMs=ch()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new t3;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};hh.nextTensorId=0;hh.nextVariableId=0;function LR(e){let t=E2(St(e),"float32");return B.makeTensor(t,e,"float32")}function RS(){let e=vS();if(e._tfengine==null){let t=new bS(e);e._tfengine=new hh(t)}return lR(e._tfengine.ENV),DR(()=>e._tfengine),e._tfengine}var B=RS();function BR(e,t){let n={a:e,b:t};return B.runKernel(va,n)}var Xh={};Ue(Xh,{isBrowser:()=>$S,isMobile:()=>UR,mockIsMobile:()=>VR});function WR(){return typeof navigator<"u"&&navigator!=null}var kA;function VR(e){kA=e}function UR(e){if(kA!==void 0)return kA;if(e||WR()){if(e||(e=navigator),e.product==="ReactNative")return!0;let t=e.userAgent||e.vendor||(typeof window<"u"?window.opera:"");if(!t){let n=e;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function $S(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var Gs=K();Gs.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Gs.registerFlag("IS_BROWSER",()=>$S());Gs.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Gs.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Gs.registerFlag("PROD",()=>!1);Gs.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Gs.getBool("DEBUG"));Gs.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Gs.registerFlag("IS_TEST",()=>!1);Gs.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Gs.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Gs.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);Gs.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);function Yr(e,t){let n=e;if($n(e))return t==="string"?[]:[e.length];if(!Array.isArray(e))return[];let s=[];for(;Array.isArray(n)||$n(n)&&t!=="string";)s.push(n.length),n=n[0];return Array.isArray(e)&&K().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&DS(e,s,[]),s}function DS(e,t,n){if(n=n||[],!Array.isArray(e)&&!$n(e)){P(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}P(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),P(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let s=t.slice(1);for(let r=0;r<e.length;++r)DS(e[r],s,n.concat(r))}function n3(e,t,n,s){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function $(e,t,n,s="numeric"){if(e instanceof et)return n3(s,e.dtype,t,n),e;let r=Km(e);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),n3(s,r,t,n),e==null||!$n(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let l=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${l}'`)}let a=Yr(e,r);!$n(e)&&!Array.isArray(e)&&(e=[e]);let i=r!=="string"?w0(e,r):qi(e,[],!0);return B.makeTensor(i,a,r)}function ph(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((a,o)=>$(a,`${t}[${o}]`,n,s))}var P2="__op";function V(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+P2;let r=(...a)=>{B.startScope(n);try{let o=s(...a);return R2(o)&&console.error("Cannot return a Promise inside of tidy."),B.endScope(o),o}catch(o){throw B.endScope(null),o}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}function GR(e,t){let n=$(e,"real","complex"),s=$(t,"imag","complex");ts(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);let r={real:n,imag:s};return B.runKernel(Eh,r)}var ga=V({complex_:GR});function oi(e,t,n,s){if(s==null&&(s=Km(e)),s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!$n(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){_2(t);let r=St(t),a=St(n);P(r===a,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${a}`);for(let o=0;o<n.length;++o){let i=n[o],l=o===n.length-1?i!==St(t.slice(o)):!0;P(n[o]===t[o]||!l,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!$n(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e=s!=="string"?w0(e,s):qi(e,[],!0),B.makeTensor(e,t,s)}function lt(e,t,n){let s=Yr(e,n);return oi(e,t,s,n)}var SA={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},Am=4;async function HR(e,t){let n=[],s=[],r=Array.isArray(e)?e.map(o=>o.name):Object.keys(e);for(let o=0;o<r.length;++o){let i=r[o],l=Array.isArray(e)?e[o].tensor:e[i];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${l.dtype}`);let u={name:i,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let c=new Promise(async h=>{let d=await l.bytes(),p=d.reduce((g,y)=>g+y.length,0)+Am*d.length,f=new Uint8Array(p),m=0;for(let g=0;g<d.length;g++){let y=d[g],x=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(x,m),m+=Am,f.set(y,m),m+=y.length}h(f)});s.push(c)}else s.push(l.data());t!=null&&(u.group=t),n.push(u)}let a=await Promise.all(s);return{data:jR(a),specs:n}}function FS(e,t){let n={},s,r=0;for(let a of t){let o=a.name,i=a.dtype,l=a.shape,u=St(l),c;if("quantization"in a){let h=a.quantization;if(h.dtype==="uint8"||h.dtype==="uint16"){if(!("min"in h&&"scale"in h))throw new Error(`Weight ${a.name} with quantization ${h.dtype} doesn't have corresponding metadata min and scale.`)}else if(h.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${a.name} is quantized with ${h.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${a.name} has unknown quantization dtype ${h.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let d=SA[h.dtype],p=e.slice(r,r+u*d),f=h.dtype==="uint8"?new Uint8Array(p):new Uint16Array(p);if(i==="float32")if(h.dtype==="uint8"||h.dtype==="uint16"){c=new Float32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];c[m]=g*h.scale+h.min}}else if(h.dtype==="float16")s===void 0&&(s=JR()),c=s(f);else throw new Error(`Unsupported quantization type ${h.dtype} for weight type float32.`);else if(i==="int32"){if(h.dtype!=="uint8"&&h.dtype!=="uint16")throw new Error(`Unsupported quantization type ${h.dtype} for weight type int32.`);c=new Int32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];c[m]=Math.round(g*h.scale+h.min)}}else throw new Error(`Unsupported dtype in weight '${o}': ${i}`);r+=u*d}else if(i==="string"){let h=St(a.shape);c=[];for(let d=0;d<h;d++){let p=new Uint32Array(e.slice(r,r+Am))[0];r+=Am;let f=new Uint8Array(e.slice(r,r+p));c.push(f),r+=p}}else{let h=SA[i],d=e.slice(r,r+u*h);if(i==="float32")c=new Float32Array(d);else if(i==="int32")c=new Int32Array(d);else if(i==="bool")c=new Uint8Array(d);else if(i==="complex64"){c=new Float32Array(d);let p=new Float32Array(c.length/2),f=new Float32Array(c.length/2);for(let y=0;y<p.length;y++)p[y]=c[y*2],f[y]=c[y*2+1];let m=lt(p,l,"float32"),g=lt(f,l,"float32");n[o]=ga(m,g),m.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${o}': ${i}`);r+=u*h}i!=="complex64"&&(n[o]=lt(c,l,i))}return n}function jR(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(a=>{if(t+=a.byteLength,n.push(a.byteLength===a.buffer.byteLength?a:new a.constructor(a)),!(a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${a.constructor.name}`)});let s=new Uint8Array(t),r=0;return n.forEach(a=>{s.set(new Uint8Array(a.buffer),r),r+=a.byteLength}),s.buffer}var M2=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function s3(e){return M2?Buffer.byteLength(e):new Blob([e]).size}function qR(e){if(M2)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let s=0,r=t.length;s<r;s++)n+=String.fromCharCode(t[s]);return btoa(n)}function XR(e){if(M2){let s=Buffer.from(e,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n.set([t.charCodeAt(s)],s);return n.buffer}function z2(e){if(e.length===1)return e[0];let t=0;e.forEach(r=>{t+=r.byteLength});let n=new Uint8Array(t),s=0;return e.forEach(r=>{n.set(new Uint8Array(r),s),s+=r.byteLength}),n.buffer}function r3(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let n=e.split(t);return n[n.length-1]}function OS(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),n}async function L2(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),e.weightsManifest!=null){let[s,r]=await t(e.weightsManifest);n.weightSpecs=s,n.weightData=r}return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),n}function Kh(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:s3(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:s3(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:e.weightData.byteLength}}function KR(){let e=n=>{let s=n<<13,r=0;for(;(s&8388608)===0;)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function ZR(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function YR(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function JR(){let e=KR(),t=ZR(),n=YR();return s=>{let r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let o=0;o<s.length;o++){let i=s[o],l=e[n[i>>10]+(i&1023)]+t[i>>10];a[o]=l}return new Float32Array(r)}}var Wt=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Wt.instance==null&&(Wt.instance=new Wt),Wt.instance}static registerSaveRouter(e){Wt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Wt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Wt.getHandlers(e,"save")}static getLoadHandlers(e,t){return Wt.getHandlers(e,"load",t)}static getHandlers(e,t,n){let s=[];return(t==="load"?Wt.getInstance().loadRouters:Wt.getInstance().saveRouters).forEach(a=>{let o=a(e,n);o!==null&&s.push(o)}),s}},QR=e=>Wt.registerSaveRouter(e),e$=e=>Wt.registerLoadRouter(e),t$=e=>Wt.getSaveHandlers(e),n$=(e,t)=>Wt.getLoadHandlers(e,t),IA="tensorflowjs",CA=1,Mi="models_store",Wa="model_info_store";function PS(){if(!K().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window>"u"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function TA(e){let t=e.result;t.createObjectStore(Mi,{keyPath:"modelPath"}),t.createObjectStore(Wa,{keyPath:"modelPath"})}var Ki=class{constructor(e){if(this.indexedDB=PS(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,s)=>{let r=this.indexedDB.open(IA,CA);r.onupgradeneeded=()=>TA(r),r.onsuccess=()=>{let a=r.result;if(t==null){let o=a.transaction(Mi,"readonly"),l=o.objectStore(Mi).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return a.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(l.result.modelArtifacts)},l.onerror=u=>(a.close(),s(l.error)),o.oncomplete=()=>a.close()}else{let o=Kh(t),i=a.transaction(Wa,"readwrite"),l=i.objectStore(Wa),u=l.put({modelPath:this.modelPath,modelArtifactsInfo:o}),c;u.onsuccess=()=>{c=a.transaction(Mi,"readwrite");let d=c.objectStore(Mi).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:o});d.onsuccess=()=>n({modelArtifactsInfo:o}),d.onerror=p=>{l=i.objectStore(Wa);let f=l.delete(this.modelPath);f.onsuccess=()=>(a.close(),s(d.error)),f.onerror=m=>(a.close(),s(d.error))}},u.onerror=h=>(a.close(),s(u.error)),i.oncomplete=()=>{c==null?a.close():c.oncomplete=()=>a.close()}}},r.onerror=a=>s(r.error)})}};Ki.URL_SCHEME="indexeddb://";var MS=e=>K().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ki.URL_SCHEME)?s$(e.slice(Ki.URL_SCHEME.length)):null;Wt.registerSaveRouter(MS);Wt.registerLoadRouter(MS);function s$(e){return new Ki(e)}function r$(e){return e.startsWith(Ki.URL_SCHEME)?e.slice(Ki.URL_SCHEME.length):e}var a$=class{constructor(){this.indexedDB=PS()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(IA,CA);n.onupgradeneeded=()=>TA(n),n.onsuccess=()=>{let s=n.result,r=s.transaction(Wa,"readonly"),o=r.objectStore(Wa).getAll();o.onsuccess=()=>{let i={};for(let l of o.result)i[l.modelPath]=l.modelArtifactsInfo;e(i)},o.onerror=i=>(s.close(),t(o.error)),r.oncomplete=()=>s.close()},n.onerror=s=>t(n.error)})}async removeModel(e){return e=r$(e),new Promise((t,n)=>{let s=this.indexedDB.open(IA,CA);s.onupgradeneeded=()=>TA(s),s.onsuccess=()=>{let r=s.result,a=r.transaction(Wa,"readwrite"),o=a.objectStore(Wa),i=o.get(e),l;i.onsuccess=()=>{if(i.result==null)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let u=o.delete(e),c=()=>{l=r.transaction(Mi,"readwrite");let d=l.objectStore(Mi).delete(e);d.onsuccess=()=>t(i.result.modelArtifactsInfo),d.onerror=p=>n(i.error)};u.onsuccess=c,u.onerror=h=>(c(),r.close(),n(i.error))}},i.onerror=u=>(r.close(),n(i.error)),a.oncomplete=()=>{l==null?r.close():l.oncomplete=()=>r.close()}},s.onerror=r=>n(s.error)})}},da="/",Mu="tensorflowjs_models",zS="info",o$="model_topology",i$="weight_specs",l$="weight_data",u$="model_metadata";function LS(e){return{info:[Mu,e,zS].join(da),topology:[Mu,e,o$].join(da),weightSpecs:[Mu,e,i$].join(da),weightData:[Mu,e,l$].join(da),modelMetadata:[Mu,e,u$].join(da)}}function BS(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function c$(e){let t=e.split(da);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(da)}function d$(e){return e.startsWith(Zi.URL_SCHEME)?e.slice(Zi.URL_SCHEME.length):e}var Zi=class{constructor(e){if(!K().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=LS(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),s=Kh(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,qR(e.weightData));let r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch{throw BS(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;let r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){let o=JSON.parse(r);t.format=o.format,t.generatedBy=o.generatedBy,t.convertedBy=o.convertedBy,o.signature!=null&&(t.signature=o.signature),o.userDefinedMetadata!=null&&(t.userDefinedMetadata=o.userDefinedMetadata),o.modelInitializer!=null&&(t.modelInitializer=o.modelInitializer),o.trainingConfig!=null&&(t.trainingConfig=o.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=XR(a),t}};Zi.URL_SCHEME="localstorage://";var WS=e=>K().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Zi.URL_SCHEME)?h$(e.slice(Zi.URL_SCHEME.length)):null;Wt.registerSaveRouter(WS);Wt.registerLoadRouter(WS);function h$(e){return new Zi(e)}var p$=class{constructor(){P(K().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),P(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Mu+da,n=da+zS;for(let s=0;s<this.LS.length;++s){let r=this.LS.key(s);if(r.startsWith(t)&&r.endsWith(n)){let a=c$(r);e[a]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=d$(e);let t=LS(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return BS(t),n}},Gu="://",os=class{constructor(){this.managers={}}static getInstance(){return os.instance==null&&(os.instance=new os),os.instance}static registerManager(e,t){P(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Gu)&&(e=e.slice(0,e.indexOf(Gu))),P(e.length>0,()=>"scheme must not be an empty string.");let n=os.getInstance();P(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=os.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(os.getInstance().managers)}};function Jf(e){if(e.indexOf(Gu)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${os.getSchemes().join(",")}`);return{scheme:e.split(Gu)[0],path:e.split(Gu)[1]}}async function VS(e,t,n=!1){P(e!==t,()=>`Old path and new path are the same: '${e}'`);let s=Wt.getLoadHandlers(e);P(s.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),P(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${e}.`);let r=s[0],a=Wt.getSaveHandlers(t);P(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),P(a.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`);let o=a[0],i=Jf(e).scheme,l=Jf(e).path,u=i===Jf(e).scheme,c=await r.load();n&&u&&await os.getManager(i).removeModel(l);let h=await o.save(c);return n&&!u&&await os.getManager(i).removeModel(l),h.modelArtifactsInfo}async function f$(){let e=os.getSchemes(),t={};for(let n of e){let s=await os.getManager(n).listModels();for(let r in s){let a=n+Gu+r;t[a]=s[r]}}return t}async function m$(e){let t=Jf(e);return os.getManager(t.scheme).removeModel(t.path)}async function g$(e,t){return VS(e,t,!1)}async function y$(e,t){return VS(e,t,!0)}var A$=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(K().get("IS_BROWSER")){K().setPlatform("browser",new A$);try{os.registerManager(Zi.URL_SCHEME,new p$)}catch{}try{os.registerManager(Ki.URL_SCHEME,new a$)}catch{}}var x$={importFetch:()=>C_()},Cy,b$=class{constructor(){this.util=T_(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return K().global.fetch!=null?K().global.fetch(e,t):(Cy==null&&(Cy=x$.importFetch()),Cy(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};K().get("IS_NODE")&&!K().get("IS_BROWSER")&&K().setPlatform("node",new b$);function Le(e,t="float32",n){return t=t||"float32",_2(e),new ln(e,t,n)}function v$(e,t){let n=$(e,"x","cast");if(!mS(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");let s={x:n},r={dtype:t};return B.runKernel(go,s,r)}var fe=V({cast_:v$});function w$(e){let n={x:$(e,"x","clone","string_or_numeric")};return B.runKernel(Ro,n)}var Qn=V({clone_:w$});function B2(e,t=!1){console.log(e.toString(t))}RS();var k$={buffer:Le,cast:fe,clone:Qn,print:B2};FR(k$);var Bs={};Ue(Bs,{browserFiles:()=>_$,browserHTTPRequest:()=>O$,concatenateArrayBuffers:()=>z2,copyModel:()=>g$,decodeWeights:()=>FS,encodeWeights:()=>HR,fromMemory:()=>M$,fromMemorySync:()=>qS,getLoadHandlers:()=>n$,getModelArtifactsForJSON:()=>L2,getModelArtifactsInfoForJSON:()=>Kh,getSaveHandlers:()=>t$,http:()=>V2,isHTTPScheme:()=>NA,listModels:()=>f$,loadWeights:()=>R$,moveModel:()=>y$,registerLoadRouter:()=>e$,registerSaveRouter:()=>QR,removeModel:()=>m$,weightsLoaderFactory:()=>GS,withSaveHandler:()=>z$,withSaveHandlerSync:()=>L$});var S$="model",I$=".json",C$=".weights.bin";function a3(e){return new Promise(t=>setTimeout(t)).then(e)}var Zu=class{constructor(e){if(!K().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Zu.URL_SCHEME)&&(e=e.slice(Zu.URL_SCHEME.length)),(e==null||e.length===0)&&(e=S$),this.modelJsonFileName=e+I$,this.weightDataFileName=e+C$}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s=OS(e,n),r=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await a3(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let o=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;o.download=this.weightDataFileName,o.href=t,await a3(()=>o.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Kh(e)}}}};Zu.URL_SCHEME="downloads://";var T$=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=s=>{let r=JSON.parse(s.target.result),a=r.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(r.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}let i=L2(r,l=>this.loadWeights(l));e(i)},n.onerror=s=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let a of e)t.push(...a.weights),n.push(...a.paths);let s=this.checkManifestAndWeightFiles(e),r=n.map(a=>this.loadWeightsFile(a,s[a]));return Promise.all(r).then(a=>[t,z2(a)])}loadWeightsFile(e,t){return new Promise((n,s)=>{let r=new FileReader;r.onload=a=>{let o=a.target.result;n(o)},r.onerror=a=>s(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(r=>r3(r.name)),s={};for(let r of e)r.paths.forEach(a=>{let o=r3(a);if(t.indexOf(o)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(t.push(o),n.indexOf(o)===-1)throw new Error(`Weight file with basename '${o}' is not provided.`);s[a]=this.weightsFiles[n.indexOf(o)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}},N$=e=>K().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Zu.URL_SCHEME)?E$(e.slice(Zu.URL_SCHEME.length)):null;Wt.registerSaveRouter(N$);function E$(e="model"){return new Zu(e)}function _$(e){return new T$(e)}function o3(e,t,n,s){o(e),n=n??0,s=s??1,i(n,s);let r=0,a=l=>(l.then(u=>{let c=n+ ++r/e.length*(s-n);return t(c),u}),l);function o(l){P(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function i(l,u){P(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),P(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),P(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(e.map(a))}async function US(e,t){t==null&&(t={});let n=t.fetchFunc==null?K().platform.fetch:t.fetchFunc,s=e.map(h=>n(h,t.requestInit,{isBinary:!0})),r=0,a=.5,i=(t.onProgress==null?await Promise.all(s):await o3(s,t.onProgress,r,a)).map(h=>h.arrayBuffer()),l=.5,u=1;return t.onProgress==null?await Promise.all(i):await o3(i,t.onProgress,l,u)}async function R$(e,t="",n,s){return GS(o=>US(o,{requestInit:s}))(e,t,n)}function GS(e){return async(t,n="",s)=>{let r=t.map(()=>!1),a={},o=s!=null?s.map(()=>!1):[],i=[];if(t.forEach((p,f)=>{let m=0;p.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,x=SA[y]*St(g.shape),A=()=>{r[f]=!0,a[f]==null&&(a[f]=[]),a[f].push({manifestEntry:g,groupOffset:m,sizeBytes:x})};s!=null?s.forEach((b,w)=>{b===g.name&&(A(),o[w]=!0)}):A(),i.push(g.name),m+=x})}),!o.every(p=>p)){let p=s.filter((f,m)=>!o[m]);throw new Error(`Could not find weights in manifest with names: ${p.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}let l=r.reduce((p,f,m)=>(f&&p.push(m),p),[]),u=[];l.forEach(p=>{t[p].paths.forEach(f=>{let m=n+(n.endsWith("/")?"":"/")+f;u.push(m)})});let c=await e(u),h={},d=0;return l.forEach(p=>{let f=t[p].paths.length,m=0;for(let b=0;b<f;b++)m+=c[d+b].byteLength;let g=new ArrayBuffer(m),y=new Uint8Array(g),x=0;for(let b=0;b<f;b++){let w=new Uint8Array(c[d+b]);y.set(w,x),x+=w.byteLength}a[p].forEach(b=>{let w=g.slice(b.groupOffset,b.groupOffset+b.sizeBytes),S=FS(w,[b.manifestEntry]);for(let C in S)h[C]=S[C]}),d+=f}),h}}var $$="application/octet-stream",D$="application/json",W2=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(P(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=K().platform.fetch,P(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&P(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=OS(e,n);t.body.append("model.json",new Blob([JSON.stringify(s)],{type:D$}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:$$}),"model.weights.bin");let r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Kh(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=t.modelTopology,s=t.weightsManifest;if(n==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return L2(t,r=>this.loadWeights(r))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=F$(t),r=this.weightPathPrefix||n,a=[];for(let u of e)a.push(...u.weights);let o=[],i=[];for(let u of e)for(let c of u.paths)this.weightUrlConverter!=null?i.push(this.weightUrlConverter(c)):o.push(r+c+s);this.weightUrlConverter&&o.push(...await Promise.all(i));let l=await US(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,z2(l)]}};W2.URL_SCHEME_REGEX=/^https?:\/\//;function F$(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),s=e.substring(0,t),r=n>t?e.substring(n):"";return[s+"/",r]}function NA(e){return e.match(W2.URL_SCHEME_REGEX)!=null}var HS=(e,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(e)?n=e.every(s=>NA(s)):n=NA(e),n)return V2(e,t)}return null};Wt.registerSaveRouter(HS);Wt.registerLoadRouter(HS);function V2(e,t){return new W2(e,t)}function O$(e,t){return V2(e,t)}var Ty=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},jS=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},P$=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function M$(e,t,n,s){let r=arguments;return new P$(qS(...r))}function qS(e,t,n,s){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new Ty(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ty({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ty({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:s}))}function z$(e){return new jS(e)}function L$(e){return new jS(e)}var XS={};Ue(XS,{confusionMatrix:()=>tD});function B$(e,t,n=!1,s=!1){let r=$(e,"a","matMul"),a=$(t,"b","matMul");[r,a]=Lt(r,a);let o={a:r,b:a},i={transposeA:n,transposeB:s};return B.runKernel(mo,o,i)}var Ye=V({matMul_:B$});function W$(e,t,n=1,s=0,r="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let o={indices:$(e,"indices","oneHot","int32")},i={dtype:r,depth:t,onValue:n,offValue:s};return B.runKernel(Ol,o,i)}var Yu=V({oneHot_:W$});function KS(){K().set("PROD",!0)}function V$(){K().set("DEBUG",!0)}function U$(){K().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function U2(e){K().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}OR(U2);function G$(){B.disposeVariables()}function bn(){return B}function xm(){return B.memory()}function H$(e){return B.profile(e)}function Y(e,t){return B.tidy(e,t)}function le(e){O2(e).forEach(n=>n.dispose())}function mn(e){return B.keep(e)}function j$(e){return B.time(e)}function bm(e){return B.setBackend(e)}function G2(){return B.ready()}function vn(){return B.backendName}function q$(e){B.removeBackend(e)}function ZS(e){return B.findBackend(e)}function X$(e){return B.findBackendFactory(e)}function Lc(e,t,n=1){return B.registerBackend(e,t,n)}function yr(){return B.backend}function K$(e,t){K().setPlatform(e,t)}function Z$(e){let n={input:$(e,"input","imag")};return B.runKernel(Fh,n)}var Zh=V({imag_:Z$});function Y$(e){let n={x:$(e,"x","neg")};return B.runKernel(_l,n)}var Nt=V({neg_:Y$});function J$(e){let n={input:$(e,"input","real")};return B.runKernel(Mh,n)}var Ju=V({real_:J$});function Q$(e,t,n){let s=$(e,"x","transpose");if(t==null&&(t=s.shape.map((o,i)=>i).reverse()),P(s.rank===t.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`),t.forEach(o=>{P(o>=0&&o<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${t}`)}),s.rank<=1)return s.clone();let r={x:s},a={perm:t};return s.dtype==="complex64"?Y(()=>{let o=Ju(s),i=Zh(s);return o=B.runKernel(Xr,{x:o},a),i=B.runKernel(Xr,{x:i},a),n&&(i=Nt(i)),ga(o,i)}):B.runKernel(Xr,r,a)}var Qe=V({transpose_:Q$});function eD(e,t,n){let s=$(e,"labels","confusionMatrix"),r=$(t,"predictions","confusionMatrix");P(n==null||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),P(s.rank===1,()=>`Expected the rank of labels to be 1, but got ${s.rank}`),P(r.rank===1,()=>`Expected the rank of predictions to be 1, but got ${r.rank}`),P(s.shape[0]===r.shape[0],()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`),P(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let a=Yu(fe(s,"int32"),n),o=Yu(fe(r,"int32"),n),i=Qe(a),l=Ye(i,o);return fe(l,"int32")}var tD=V({confusionMatrix_:eD}),eu={};Ue(eu,{assertAndGetBroadcastShape:()=>At,getBroadcastDims:()=>YS,getReductionAxes:()=>en});function YS(e,t){let n=e.length,s=[];for(let r=0;r<n;r++){let a=n-1-r,o=e[a]||1;(t[t.length-1-r]||1)>1&&o===1&&s.unshift(a)}return s}function en(e,t){let n=[];for(let s=0;s<t.length;s++){let r=e[e.length-s-1],a=t.length-s-1,o=t[a];(r==null||r===1&&o>1)&&n.unshift(a)}return n}function At(e,t){let n=[],s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let a=e[e.length-r-1];a==null&&(a=1);let o=t[t.length-r-1];if(o==null&&(o=1),a===1)n.unshift(o);else if(o===1)n.unshift(a);else if(a!==o){let i=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(i)}else n.unshift(a)}return n}var Ar={};Ue(Ar,{fromPixels:()=>lD,fromPixelsAsync:()=>oD,toPixels:()=>iD});function H2(e,t,n){if(cl(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let s=Yr(e,n);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return oi(e,t,s,n)}var ki;function JS(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,a=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData<"u"&&e instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&e instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement)a=!0;else if(e.getContext!=null)o=!0;else if(typeof ImageBitmap<"u"&&e instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(gm(lh,B.backendName)!=null){let f={pixels:e},m={numChannels:t};return B.runKernel(lh,f,m)}let[u,c]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height],h;if(o)h=e.getContext("2d").getImageData(0,0,u,c).data;else if(s||n)h=e.data;else if(a||r||i){if(ki==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")ki=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else ki=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});ki.canvas.width=u,ki.canvas.height=c,ki.drawImage(e,0,0,u,c),h=ki.getImageData(0,0,u,c).data}let d;if(t===4)d=new Int32Array(h);else{let f=u*c;d=new Int32Array(f*t);for(let m=0;m<f;m++)for(let g=0;g<t;++g)d[m*t+g]=h[m*4+g]}return H2(d,[c,u,t],"int32")}function nD(e){return e!=null&&e.data instanceof Uint8Array}function sD(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function rD(e){return e!=null&&e.width!==0&&e.height!==0}function aD(e){return sD()&&!(e instanceof ImageBitmap)&&rD(e)&&!nD(e)}async function oD(e,t=3){let n=null;if(K().getBool("WRAP_TO_IMAGEBITMAP")&&aD(e)){let s;try{s=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch{s=null}s!=null&&s.width===e.width&&s.height===e.height?n=s:n=e}else n=e;return JS(n,t)}async function iD(e,t){let n=$(e,"img","toPixels");if(!(e instanceof et)){let u=n;n=fe(u,"int32"),u.dispose()}if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[s,r]=n.shape.slice(0,2),a=n.rank===2?1:n.shape[2];if(a>4||a===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let o=await n.data(),i=n.dtype==="float32"?255:1,l=new Uint8ClampedArray(r*s*4);for(let u=0;u<s*r;++u){let c=[0,0,0,255];for(let d=0;d<a;d++){let p=o[u*a+d];if(n.dtype==="float32"){if(p<0||p>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${p}.`)}else if(n.dtype==="int32"&&(p<0||p>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${p}.`);a===1?(c[0]=p*i,c[1]=p*i,c[2]=p*i):c[d]=p*i}let h=u*4;l[h+0]=Math.round(c[0]),l[h+1]=Math.round(c[1]),l[h+2]=Math.round(c[2]),l[h+3]=Math.round(c[3])}if(t!=null){t.width=r,t.height=s;let u=t.getContext("2d"),c=new ImageData(l,r,s);u.putImageData(c,0,0)}return n!==e&&n.dispose(),l}var lD=V({fromPixels_:JS}),j2={};Ue(j2,{prepareAndValidate:()=>QS});function QS(e,t){let n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(St(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let r=t.shape,a=r[r.length-1],o=1;for(let h=0;h<r.length-1;++h)o*=r[h];let i=e.shape,l=r.slice();l.pop();let u=1;for(let h=a;h<n;++h)u*=i[h],l.push(i[h]);let c=[...fc(e.shape).map(h=>h/u),1].slice(0,a);return[l,o,u,c]}var q2={};Ue(q2,{calculateShapes:()=>eI,validateInput:()=>K2,validateUpdateShape:()=>X2});function X2(e,t,n){let s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(a+` update.rank != ${r+e.length-s}`);for(let o=0;o<r;++o)if(n.shape[o]!==t.shape[o])throw new Error(a+` updates.shape[${o}] (${n.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<n.rank-r;++o)if(n.shape[o+r]!==e[o+s])throw new Error(a+` updates.shape[${o+r}] (${n.shape[o+r]}) != shape[${o+r}] (${e[o+r]})`)}function K2(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}X2(n,t,e)}function eI(e,t,n){let s=t.shape.length,r=s>1?t.shape[s-1]:1,a=n.length,o=1;for(let h=r;h<a;++h)o*=n[h];let i=r<1?1:r,l=St(t.shape)/i,u=[...fc(n.slice(0,r)),1],c=St(n);return{sliceRank:r,numUpdates:l,sliceSize:o,strides:u,outputSize:c}}var zt={};Ue(zt,{assertParamsValid:()=>cD,computeFlatOffset:()=>mD,computeOutShape:()=>hD,getNormalizedAxes:()=>pD,isSliceContinous:()=>fD,maskToAxes:()=>dD,parseSliceParams:()=>uI,sliceInfo:()=>gD,startForAxis:()=>iI,startIndicesWithElidedDims:()=>rI,stopForAxis:()=>lI,stopIndicesWithElidedDims:()=>aI,stridesForAxis:()=>oI,stridesWithElidedDims:()=>tI});var EA=-2,uD=-1;function cD(e,t,n){let s=e.shape.length;P(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),P(s===n.length,()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)P(t[r]+n[r]<=e.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`)}function dD(e){let t=[],n=0;for(;e>0;)e&1&&t.push(n),e/=2,n++;return t}function hD(e,t,n){let s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function tI(e,t,n,s){let r=[...e];for(let a=r.length;a<s.length;a++)r.push(1);for(let a=0;a<n;a++)a===0?r[t]=1:(r.splice(t,0,1),r.pop());return r}function nI(e,t,n){return n<=e?n:n-(t-1)}function sI(e,t){let n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function pD(e,t,n,s,r,a,o,i,l){let u=e.length,c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){let p=t[0],f=n+1;c=rI(o,p,f,s,e),h=aI(i,p,f,r,e),d=tI(a,p,f,e)}else for(let p=0;p<u;p++)c[p]=iI(o,s,a,e,p,l),h[p]=lI(i,r,a,e,p,l),d[p]=oI(a,p,l);return{begin:c,end:h,strides:d}}function rI(e,t,n,s,r){let a=[...r],o=sI(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=0;else{let l=nI(t,n,i),u=s[l];e&1<<l&&(u=0),a[i]=u}return a}function aI(e,t,n,s,r){let a=[...r],o=sI(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=Number.MAX_SAFE_INTEGER;else{let l=nI(t,n,i),u=s[l];e&1<<l&&(u=Number.MAX_SAFE_INTEGER),a[i]=u}for(let i=0;i<a.length;i++){let l=r[i];a[i]<0&&(a[i]+=l),a[i]=ih(0,a[i],r[i])}return a}function oI(e,t,n){let s=e[t];return(n&1<<t||s==null)&&(s=1),s}function iI(e,t,n,s,r,a){let o=t[r],i=n[r]||1;(e&1<<r||a&1<<r||o==null)&&(i>0?o=Number.MIN_SAFE_INTEGER:o=Number.MAX_SAFE_INTEGER);let l=s[r];return o<0&&(o+=l),o=ih(0,o,l-1),o}function lI(e,t,n,s,r,a){let o=t[r],i=n[r]||1;(e&1<<r||a&1<<r||o==null)&&(i>0?o=Number.MAX_SAFE_INTEGER:o=Number.MIN_SAFE_INTEGER);let l=s[r];return o<0&&(o+=l),i>0?o=ih(0,o,l):o=ih(-1,o,l-1),o}function fD(e,t,n){let s=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){s=r;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function mD(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function uI(e,t,n){let s,r=e.shape.length;typeof t=="number"?s=[t,...new Array(r-1).fill(0)]:t.length<r?s=t.concat(new Array(r-t.length).fill(0)):s=t.slice(),s.forEach(o=>{P(o!==-1,()=>"slice() does not support negative begin indexing.")});let a;return n==null?a=new Array(r).fill(-1):typeof n=="number"?a=[n,...new Array(r-1).fill(-1)]:n.length<r?a=n.concat(new Array(r-n.length).fill(-1)):a=n,a=a.map((o,i)=>o>=0?o:(P(o===-1,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${i}.`),e.shape[i]-s[i])),[s,a]}function gD(e,t,n,s,r,a,o,i,l){let u;if(s==null?(u=new Array(t.length),u.fill(1)):u=s,o!=null&&(o&o-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1,h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:r,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l};for(let A=0;A<h.dims;A++)c&&(1<<A&i)!==0&&h.numAddAxisAfterEllipsis++,1<<A&o&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);let d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};yD(h,d);let p=!0,f=!0,m=!0,g=[],y=[];for(let A=0;A<e.length;++A){if(d.strides[A]===0)throw Error(`strides[${A}] must be non-zero`);let b=!!(d.shrinkAxisMask&1<<A),w=e[A];if(w===-1){g.push(b?1:-1);continue}let S=[d.beginMask&1<<A,d.endMask&1<<A],C=[d.strides[A]>0?0:-1,d.strides[A]>0?w:w-1];if(b&&d.strides[A]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&d.strides[A]===1;let _=!!(d.beginMask&1<<A&&d.endMask&1<<A);if(d.beginValid&&d.endValid){if(b){let F=d.begin[A]<0?w+d.begin[A]:d.begin[A];if(d.begin[A]=F,d.end[A]=d.begin[A]+1,F<0||F>=w)throw Error(`slice index ${d.begin[A]} of dimension ${A} out of bounds.`)}else d.begin[A]=i3(d.begin[A],0,d.strides[A],w,S,C),d.end[A]=i3(d.end[A],1,d.strides[A],w,S,C);let E=d.strides[A]===1&&d.begin[A]===0&&d.end[A]===w;p=p&&E,f=f&&(A===0&&d.strides[A]===1||E)}else p=p&&d.strides[A]===1&&_,f=f&&(A===0&&d.strides[A]===1||_);let R,D=!1;if(d.beginValid&&d.endValid?(R=d.end[A]-d.begin[A],D=!0):b?(R=1,D=!0):_&&w>=0&&(d.strides[A]<0?R=-w:R=w,D=!0),D){let E;R===0||R<0!=d.strides[A]<0?E=0:E=Math.trunc(R/d.strides[A])+(R%d.strides[A]!==0?1:0),g.push(E)}else g.push(-1)}for(let A=0;A<d.finalShapeGatherIndices.length;++A){let b=d.finalShapeGatherIndices[A];b>=0?y.push(g[b]):b===EA&&y.push(1)}return{finalShapeSparse:y.filter((A,b)=>d.finalShapeGatherIndices[b]!==EA),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function yD(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=e.begin!=null,t.endValid=e.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){let r=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push(EA),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);e.begin!=null&&(t.begin[n]=e.begin[s]),e.end!=null&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(uD),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}function i3(e,t,n,s,r,a){if(r[t])return n>0?a[t]:a[t+1&1];{let o=e<0?s+e:e;return o<a[0]?a[0]:o>a[1]?a[1]:o}}var de={};Ue(de,{Serializable:()=>cI,SerializationMap:()=>Di,registerClass:()=>ii});var cI=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},Di=class{constructor(){this.classNameMap={}}static getMap(){return Di.instance==null&&(Di.instance=new Di),Di.instance}static register(e){Di.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function ii(e){P(e.className!=null,()=>"Class being registered does not have the static className property defined."),P(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),P(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Di.register(e)}var dI={};Ue(dI,{TEST_EPSILON_FLOAT16:()=>hI,createVideoElement:()=>ID,encodeStrings:()=>pI,expectArrayBuffersEqual:()=>SD,expectArraysClose:()=>xD,expectArraysEqual:()=>vD,expectNumbersClose:()=>wD,expectPromiseToFail:()=>bD,expectValuesInRange:()=>kD,play:()=>CD,testEpsilon:()=>Z2});var AD=.001,hI=.1;function xD(e,t,n){return n==null&&(n=Z2()),_A(e,t,(s,r)=>Y2(s,r,n))}function Z2(){return B.backend.floatPrecision()===32?AD:hI}function _A(e,t,n){let s=!0;if(($n(e)||$n(t))&&(s=!1),$n(e)&&$n(t)&&(s=!0),s){let o=e.constructor.name,i=t.constructor.name;if(o!==i)throw new Error(`Arrays are of different type. Actual: ${o}. Expected: ${i}`)}if(Array.isArray(e)&&Array.isArray(t)){let o=Yr(e),i=Yr(t);if(!co(o,i))throw new Error(`Arrays have different shapes. Actual: [${o}]. Expected: [${i}]`)}let r=$n(e)?e:qi(e),a=$n(t)?t:qi(t);if(r.length!==a.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${a.length}.
Actual:   ${r}.
Expected: ${a}.`);for(let o=0;o<a.length;++o){let i=r[o],l=a[o];if(!n(i,l))throw new Error(`Arrays differ: actual[${o}] = ${i}, expected[${o}] = ${l}.
Actual:   ${r}.
Expected: ${a}.`)}typeof expect<"u"&&expect().nothing()}function bD(e,t){e().then(()=>t.fail(),()=>t()),typeof expect<"u"&&expect().nothing()}function vD(e,t){let n=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return Ba(e)||Ba(e[0])||Ba(t)||Ba(t[0])?_A(e,n,(s,r)=>s==r):_A(e,t,(s,r)=>Y2(s,r,0))}function wD(e,t,n){if(n==null&&(n=Z2()),!Y2(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);typeof expect<"u"&&expect().nothing()}function Y2(e,t,n){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function kD(e,t,n){for(let s=0;s<e.length;s++)if(e[s]<t||e[s]>n)throw new Error(`Value out of range:${e[s]} low: ${t}, high: ${n}`)}function SD(e,t){let n=new Float32Array(e),s=new Float32Array(t);if(n.length!==s.length)throw new Error(`Expected ArrayBuffer to be of length ${s.length}, but it was ${n.length}`);for(let r=0;r<s.length;r++)if(n[r]!==s[r])throw new Error(`Expected ArrayBuffer value at ${r} to be ${s[r]} but got ${n[r]} instead`)}function pI(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?pI(n):e[t]=jh(n)}return e}function ID(e){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise(n=>{t.addEventListener("loadeddata",s=>n(t)),t.load()})}async function CD(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise(t=>{e.requestVideoFrameCallback(t)})}var fI="3.20.0";function TD(e,t){let n=$(e,"a","add"),s=$(t,"b","add");[n,s]=Lt(n,s);let r={a:n,b:s};return B.runKernel(va,r)}var ce=V({add_:TD});function ND(e,t){let n=$(e,"a","floorDiv"),s=$(t,"b","floorDiv");[n,s]=Lt(n,s);let r={a:n,b:s};return B.runKernel(No,r)}var Yh=V({floorDiv_:ND});function ED(e,t){let n=$(e,"a","div"),s=$(t,"b","div");if([n,s]=Lt(n,s),n.dtype==="int32"&&s.dtype==="int32")return Yh(n,s);let r={a:n,b:s},a={};return B.runKernel(So,r,a)}var Ae=V({div_:ED});function _D(e,t){let n=$(e,"a","mul"),s=$(t,"b","mul");[n,s]=Lt(n,s);let r={a:n,b:s};return B.runKernel(Wo,r)}var L=V({mul_:_D});function RD(e){let t=$(e,"x","abs");if(t.dtype==="complex64"){let n={x:t};return B.runKernel(_h,n)}else{let n={x:t};return B.runKernel(dl,n)}}var Yt=V({abs_:RD});function $D(e){let n={x:$(e,"x","acos")};return B.runKernel(mc,n)}var J2=V({acos_:$D});function DD(e){let n={x:$(e,"x","acosh")};return B.runKernel(gc,n)}var Q2=V({acosh_:DD});function FD(e){P(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),P(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((r,a)=>$(r,`tensors${a}`,"addN")),n=t[0];t.forEach(r=>{if(r.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(r=>{if(!co(r.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let s=t;return B.runKernel(ho,s)}var ex=V({addN_:FD});function OD(e,t=null,n=!1){let r={x:$(e,"x","all","bool")},a={axis:t,keepDims:n};return B.runKernel(yc,r,a)}var k0=V({all_:OD});function PD(e,t=null,n=!1){let r={x:$(e,"x","any","bool")},a={axis:t,keepDims:n};return B.runKernel(Ac,r,a)}var fh=V({any_:PD});function MD(e,t=0){let s={x:$(e,"x","argMax")},r={axis:t};return B.runKernel(po,s,r)}var Jr=V({argMax_:MD});function zD(e,t=0){let s={x:$(e,"x","argMin")},r={axis:t};return B.runKernel(xc,s,r)}var tx=V({argMin_:zD});function LD(e){let n={x:$(e,"x","asin")};return B.runKernel(bc,n)}var nx=V({asin_:LD});function BD(e){let n={x:$(e,"x","asinh")};return B.runKernel(vc,n)}var sx=V({asinh_:BD});function WD(e){let n={x:$(e,"x","atan")};return B.runKernel(wc,n)}var rx=V({atan_:WD});function VD(e,t){let n=$(e,"a","atan2"),s=$(t,"b","atan2");[n,s]=Lt(n,s);let r={a:n,b:s};return B.runKernel(hl,r)}var ax=V({atan2_:VD});function UD(e){let n={x:$(e,"x","atanh")};return B.runKernel(kc,n)}var ox=V({atanh_:UD});function GD(e,t,n,s,r="NHWC",a){let o=e[3],i=[...t,o],l=yI(r);return Jh(e,i,n,a,s,null,null,l)}function mI(e,t,n,s,r,a,o="channelsLast"){let[i,l]=vm(t),u;if(o==="channelsLast")u=[i,l,e[3],e[3]];else if(o==="channelsFirst")u=[i,l,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return Jh(e,u,n,s,r,a,!1,o)}function HD(e,t,n,s,r,a,o="NDHWC"){let[i,l,u]=RA(t),c,h;if(o==="NDHWC")h="channelsLast",c=[i,l,u,e[4],e[4]];else if(o==="NCDHW")h="channelsFirst",c=[i,l,u,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return gI(e,c,n,s,r,!1,h,a)}function Jh(e,t,n,s,r,a,o=!1,i="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if(i==="channelsLast")[l,u,c,h]=e;else if(i==="channelsFirst")[l,h,u,c]=e;else throw new Error(`Unknown dataFormat ${i}`);let[d,p,,f]=t,[m,g]=vm(n),[y,x]=vm(s),A=Hu(d,y),b=Hu(p,x),{padInfo:w,outHeight:S,outWidth:C}=XD(r,u,c,m,g,A,b,a,i),_=o?f*h:f,R;return i==="channelsFirst"?R=[l,_,S,C]:i==="channelsLast"&&(R=[l,S,C,_]),{batchSize:l,dataFormat:i,inHeight:u,inWidth:c,inChannels:h,outHeight:S,outWidth:C,outChannels:_,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:A,effectiveFilterWidth:b,dilationHeight:y,dilationWidth:x,inShape:e,outShape:R,filterShape:t}}function gI(e,t,n,s,r,a=!1,o="channelsLast",i){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if(o==="channelsLast")[l,u,c,h,d]=e;else if(o==="channelsFirst")[l,d,u,c,h]=e;else throw new Error(`Unknown dataFormat ${o}`);let[p,f,m,,g]=t,[y,x,A]=RA(n),[b,w,S]=RA(s),C=Hu(p,b),_=Hu(f,w),R=Hu(m,S),{padInfo:D,outDepth:E,outHeight:F,outWidth:k}=KD(r,u,c,h,y,x,A,C,_,R,i),M=a?g*d:g,z;return o==="channelsFirst"?z=[l,M,E,F,k]:o==="channelsLast"&&(z=[l,E,F,k,M]),{batchSize:l,dataFormat:o,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:E,outHeight:F,outWidth:k,outChannels:M,padInfo:D,strideDepth:y,strideHeight:x,strideWidth:A,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:C,effectiveFilterHeight:_,effectiveFilterWidth:R,dilationDepth:b,dilationHeight:w,dilationWidth:S,inShape:e,outShape:z,filterShape:t}}function jD(e,t,n,s,r){s==null&&(s=ix(e,t,n));let a=e[0],o=e[1],i=Wi((a-t+2*s)/n+1,r),l=Wi((o-t+2*s)/n+1,r);return[i,l]}function qD(e,t,n,s,r,a){r==null&&(r=ix(e,t,s));let o=e[0],i=e[1],l=e[2],u=Wi((o-t+2*r)/s+1,a),c=Wi((i-t+2*r)/s+1,a),h=Wi((l-t+2*r)/s+1,a);return[u,c,h,n]}function ix(e,t,n,s=1){let r=Hu(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function vm(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function RA(e){return typeof e=="number"?[e,e,e]:e}function Hu(e,t){return t<=1?e:e+(e-1)*(t-1)}function XD(e,t,n,s,r,a,o,i,l){let u,c,h;if(typeof e=="number"){u={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let p=jD([t,n],a,s,e,i);c=p[0],h=p[1]}else if(e==="same"){c=Math.ceil(t/s),h=Math.ceil(n/r);let d=Math.max(0,(c-1)*s+a-t),p=Math.max(0,(h-1)*r+o-n),f=Math.floor(d/2),m=d-f,g=Math.floor(p/2),y=p-g;u={top:f,bottom:m,left:g,right:y,type:"SAME"}}else if(e==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/s),h=Math.ceil((n-o+1)/r);else if(typeof e=="object"){let d=l==="channelsLast"?e[1][0]:e[2][0],p=l==="channelsLast"?e[1][1]:e[2][1],f=l==="channelsLast"?e[2][0]:e[3][0],m=l==="channelsLast"?e[2][1]:e[3][1];u={top:d,bottom:p,left:f,right:m,type:d===0&&p===0&&f===0&&m===0?"VALID":"EXPLICIT"},c=Wi((t-a+d+p)/s+1,i),h=Wi((n-o+f+m)/r+1,i)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:u,outHeight:c,outWidth:h}}function KD(e,t,n,s,r,a,o,i,l,u,c){let h,d,p,f;if(typeof e=="number"){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let g=qD([t,n,s,1],i,1,r,e,c);d=g[0],p=g[1],f=g[2]}else if(e==="same"){d=Math.ceil(t/r),p=Math.ceil(n/a),f=Math.ceil(s/o);let m=(d-1)*r+i-t,g=(p-1)*a+l-n,y=(f-1)*o+u-s,x=Math.floor(m/2),A=m-x,b=Math.floor(g/2),w=g-b,S=Math.floor(y/2),C=y-S;h={top:b,bottom:w,left:S,right:C,front:x,back:A,type:"SAME"}}else if(e==="valid")h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-i+1)/r),p=Math.ceil((n-l+1)/a),f=Math.ceil((s-u+1)/o);else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}function Wi(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function to(e){let[t,n,s]=vm(e);return t===1&&n===1&&s===1}function ta(e,t){return to(e)||to(t)}function yI(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function ns(e,t,n){if(n!=null){if(typeof t=="string")throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if(typeof t=="number")P(Xu(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else if(typeof t=="object")t.forEach(s=>{s.forEach(r=>{P(Xu(r),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${r}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}function ZD(e,t){let s={x:$(e,"x","reshape","string_or_numeric")},r={shape:t};return B.runKernel(zl,s,r)}var U=V({reshape_:ZD});function YD(e,t,n,s,r){let a=$(e,"x","avgPool","float32"),o=1;P(ta(n,o),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`);let i=a,l=!1;a.rank===3&&(l=!0,i=U(a,[1,a.shape[0],a.shape[1],a.shape[2]])),P(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),ns("avgPool",s,r);let u={x:i},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r},h=B.runKernel(fo,u,c);return h=fe(h,a.dtype),l?U(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var Qh=V({avgPool_:YD});function JD(e,t,n,s,r,a="NDHWC"){let o=$(e,"x","avgPool3d","float32"),i=o,l=!1;o.rank===4&&(l=!0,i=U(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),P(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),P(a==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),ns("avgPool3d",s,r);let u={x:i},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},h=B.runKernel(Nh,u,c);return h=fe(h,i.dtype),l?U(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var lx=V({avgPool3d_:JD});function QD(e,t=0){P(e.length>=1,()=>"Pass at least one tensor to concat");let n=ph(e,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(a=>{if(a.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${a.dtype}. `)}),n.length===1)return Qn(n[0]);let s=n,r={axis:t};return B.runKernel(fl,s,r)}var Et=V({concat_:QD});function eF(e){let n={x:$(e,"x","sigmoid","float32")};return B.runKernel(Jo,n)}var Ts=V({sigmoid_:eF});function tF(e,t,n){let s=$(e,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");let r={x:s},a={begin:t,size:n};return B.runKernel(Ul,r,a)}var ze=V({slice_:tF});function nF(e){let n={x:$(e,"x","tanh","float32")};return B.runKernel(ri,n)}var Yi=V({tanh_:nF});function sF(e,t,n,s,r,a){let o=$(e,"forgetBias","basicLSTMCell"),i=$(t,"lstmKernel","basicLSTMCell"),l=$(n,"lstmBias","basicLSTMCell"),u=$(s,"data","basicLSTMCell"),c=$(r,"c","basicLSTMCell"),h=$(a,"h","basicLSTMCell"),d=Et([u,h],1),p=Ye(d,i),f=ce(p,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],x=ze(f,[0,0],y),A=ze(f,[0,g],y),b=ze(f,[0,g*2],y),w=ze(f,[0,g*3],y),S=ce(L(Ts(x),Yi(A)),L(c,Ts(ce(o,b)))),C=L(Yi(S),Ts(w));return[S,C]}var AI=V({basicLSTMCell_:sF});function rF(e,t,n){let s=$(e,"x","batchToSpaceND"),r=t.reduce((i,l)=>i*l);P(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),P(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),P(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);let a={x:s},o={blockShape:t,crops:n};return B.runKernel(pl,a,o)}var ep=V({batchToSpaceND_:rF});function aF(e){let t;return e.rank===0||e.rank===1?t=U(e,[1,1,1,e.size]):e.rank===2?t=U(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=U(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function oF(e,t,n,s,r,a){a==null&&(a=.001);let o=$(e,"x","batchNorm"),i=$(t,"mean","batchNorm"),l=$(n,"variance","batchNorm"),u;r!=null&&(u=$(r,"scale","batchNorm"));let c;s!=null&&(c=$(s,"offset","batchNorm")),P(i.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),P(c==null||i.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),P(u==null||i.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let d={x:aF(o),scale:u,offset:c,mean:i,variance:l},p={varianceEpsilon:a},f=B.runKernel(Eo,d,p);return U(f,o.shape)}var Bc=V({batchNorm_:oF});function iF(e,t,n,s,r,a){let o=$(e,"x","batchNorm"),i=$(t,"mean","batchNorm"),l=$(n,"variance","batchNorm"),u;r!=null&&(u=$(r,"scale","batchNorm"));let c;return s!=null&&(c=$(s,"offset","batchNorm")),P(o.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),P(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),P(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&P(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&P(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Bc(o,i,l,c,u,a)}var ux=V({batchNorm2d_:iF});function lF(e,t,n,s,r,a){let o=$(e,"x","batchNorm"),i=$(t,"mean","batchNorm"),l=$(n,"variance","batchNorm"),u;r!=null&&(u=$(r,"scale","batchNorm"));let c;return s!=null&&(c=$(s,"offset","batchNorm")),P(o.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),P(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),P(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&P(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&P(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Bc(o,i,l,c,u,a)}var cx=V({batchNorm3d_:lF});function uF(e,t,n,s,r,a){let o=$(e,"x","batchNorm"),i=$(t,"mean","batchNorm"),l=$(n,"variance","batchNorm"),u;r!=null&&(u=$(r,"scale","batchNorm"));let c;return s!=null&&(c=$(s,"offset","batchNorm")),P(o.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),P(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),P(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&P(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&P(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Bc(o,i,l,c,u,a)}var dx=V({batchNorm4d_:uF});function cF(e,t,n){let s=$(e,"x","bincount"),r=$(t,"weights","bincount");P(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),P(n>=0,()=>`size must be non-negative, but got ${n}.`),P(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);let a={x:s,weights:r},o={size:n};return B.runKernel(Qm,a,o)}var hx=V({bincount_:cF});function dF(e,t){let n=$(e,"s0","broadcastArgs","int32"),s=$(t,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);let r={s0:n,s1:s};return B.runKernel(e0,r)}var xI=V({broadcastArgs_:dF});function hF(e,t){let n=$(e,"broadcastTo","x"),s=n.shape;if(t.some(u=>!(u>0)||u%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let u=n.shape.slice();for(;u.length<t.length;)u.unshift(1);n=U(n,u)}let r=n.shape,a=Array.from(t);for(let u=t.length-1;u>=0;u--)if(r[u]===t[u])a[u]=1;else if(n.shape[u]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(a.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length===0)return Qn(n);let i={x:n},l={reps:a};return B.runKernel(ka,i,l)}var Vi=V({broadcastTo_:hF});function pF(e){let n={x:$(e,"x","ceil","float32")};return B.runKernel(yo,n)}var px=V({ceil_:pF});function fF(e,t,n){let s=$(e,"x","clipByValue");P(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);let r={x:s},a={clipValueMin:t,clipValueMax:n};return B.runKernel(wa,r,a)}var cs=V({clipByValue_:fF});function mF(e){return Et(e,0)}var fx=V({concat1d_:mF});function gF(e,t){return Et(e,t)}var tp=V({concat2d_:gF});function yF(e,t){return Et(e,t)}var mx=V({concat3d_:yF});function AF(e,t){return Et(e,t)}var gx=V({concat4d_:AF});function xF(e,t,n,s,r="NHWC",a=[1,1],o){let i=$(e,"x","conv2d","float32"),l=$(t,"filter","conv2d","float32"),u=i,c=!1;i.rank===3&&(c=!0,u=U(i,[1,i.shape[0],i.shape[1],i.shape[2]])),P(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),P(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),ns("conv2d",s,o);let h=r==="NHWC"?u.shape[3]:u.shape[1];P(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),P(ta(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);let d={x:u,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o},f=B.runKernel(Ao,d,p);return c?U(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var ya=V({conv2d_:xF});function bF(e,t,n,s,r="NWC",a=1,o){let i=$(e,"x","conv1d"),l=$(t,"filter","conv1d"),u=i,c=!1;i.rank===2&&(c=!0,u=U(i,[1,i.shape[0],i.shape[1]])),P(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),P(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),ns("conv1d",s,o),P(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),P(ta(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`),P(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);let h=U(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=U(u,[u.shape[0],1,u.shape[1],u.shape[2]]),g=ya(d,h,[1,n],s,"NHWC",[1,a],o);return c?U(g,[g.shape[2],g.shape[3]]):U(g,[g.shape[0],g.shape[2],g.shape[3]])}var S0=V({conv1d_:bF});function vF(e,t,n,s,r,a="NHWC",o){P(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let i=e,l=t,u=!1;t.rank===3&&(u=!0,l=U(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),P(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),P(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),P(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let c=a==="NHWC"?i[3]:i[1],h=a==="NHWC"?l.shape[3]:l.shape[1];P(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),P(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),ns("conv2dDerInput",r,o);let d={dy:l,filter:n},p={strides:s,pad:r,dataFormat:a,dimRoundingMode:o,inputShape:i},f=B.runKernel(xo,d,p);return u?U(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var yx=V({conv2DBackpropInput_:vF});function wF(e,t,n,s,r,a){let o=$(e,"x","conv2dTranspose"),i=$(t,"filter","conv2dTranspose");return yx(n,o,i,s,r,"NHWC",a)}var I0=V({conv2dTranspose_:wF});function kF(e,t,n,s,r="NDHWC",a=[1,1,1]){let o=$(e,"x","conv3d"),i=$(t,"filter","conv3d"),l=o,u=!1;o.rank===4&&(u=!0,l=U(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),P(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),P(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),P(l.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${i.shape[3]}.`),P(ta(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),P(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`);let c={x:l,filter:i},h={strides:n,pad:s,dataFormat:r,dilations:a},d=B.runKernel(Rh,c,h);return u?U(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var Ax=V({conv3d_:kF});function SF(e,t,n,s,r){P(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let a=e,o=t,i=!1;t.rank===4&&(i=!0,o=U(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);let l=a[4],u=o.shape[4];P(a.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),P(o.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),P(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),P(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),P(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);let c={dy:o,filter:n},h={pad:r,strides:s,inputShape:a},d=B.runKernel(s0,c,h);return i?U(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var bI=V({conv3DBackpropInput_:SF});function IF(e,t,n,s,r){let a=$(e,"x","conv3dTranspose"),o=$(t,"filter","conv3dTranspose");return bI(n,a,o,s,r)}var xx=V({conv3dTranspose_:IF});function CF(e){let n={x:$(e,"x","cos","float32")};return B.runKernel(bo,n)}var np=V({cos_:CF});function TF(e){let n={x:$(e,"x","cosh","float32")};return B.runKernel(vo,n)}var C0=V({cosh_:TF});function NF(e,t=0,n=!1,s=!1){let a={x:$(e,"x","cumprod")},o={axis:t,exclusive:n,reverse:s};return B.runKernel(ml,a,o)}var mh=V({cumprod_:NF});function EF(e,t=0,n=!1,s=!1){let a={x:$(e,"x","cumsum")},o={axis:t,exclusive:n,reverse:s};return B.runKernel(wo,a,o)}var T0=V({cumsum_:EF});function _F(e,t,n,s=!1){let r=$(e,"x","denseBincount"),a=$(t,"weights","denseBincount");P(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),P(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),P(n>=0,()=>`size must be non-negative, but got ${n}.`),P(a.size===r.size||a.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${a.shape}.`);let o={x:r,weights:a},i={size:n,binaryOutput:s};return B.runKernel(r0,o,i)}var vI=V({denseBincount_:_F});function RF(e,t,n="NHWC"){let s=$(e,"x","depthToSpace","float32"),r=n==="NHWC"?s.shape[1]:s.shape[2],a=n==="NHWC"?s.shape[2]:s.shape[3],o=n==="NHWC"?s.shape[3]:s.shape[1];P(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),P(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${s.shape}`),P(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t} for depthToSpace with input shape
        ${s.shape}`),P(o%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${s.shape}`);let i={x:s},l={blockSize:t,dataFormat:n};return B.runKernel(yl,i,l)}var bx=V({depthToSpace_:RF});function $F(e,t,n,s,r="NHWC",a=[1,1],o){let i=$(e,"x","depthwiseConv2d","float32"),l=$(t,"filter","depthwiseConv2d","float32"),u=i,c=!1;i.rank===3&&(c=!0,u=U(i,[1,i.shape[0],i.shape[1],i.shape[2]])),P(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),P(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);let h=r==="NHWC"?u.shape[3]:u.shape[1];P(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),ns("depthwiseConv2d",s,o);let d={x:u,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o},f=B.runKernel(ko,d,p);return c?U(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Wc=V({depthwiseConv2d_:$F});function DF(e){let n={x:$(e,"x","diag")};return B.runKernel(i0,n)}var wI=V({diag_:DF});function FF(e,t,n,s,r=[1,1],a="NHWC"){let o=$(e,"x","dilation2d"),i=$(t,"filter","dilation2d");P(o.rank===3||o.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),P(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),P(a==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let l=o,u=!1;o.rank===3&&(l=U(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=!0);let c={x:l,filter:i},h={strides:n,pad:s,dilations:r},d=B.runKernel($h,c,h);return u?U(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var vx=V({dilation2d_:FF});function OF(e,t){let n=$(e,"a","equal","string_or_numeric"),s=$(t,"b","equal","string_or_numeric");[n,s]=Lt(n,s),At(n.shape,s.shape);let r={a:n,b:s};return B.runKernel(Al,r)}var Ns=V({equal_:OF});function PF(e,t,n){let s=$(t,"a","where"),r=$(n,"b","where"),a=$(e,"condition","where","bool"),o=At(At(a.shape,s.shape),r.shape),i=Vi(a,o),l=Vi(s,o),u=Vi(r,o),c={condition:i,t:l,e:u};return B.runKernel(Vl,c)}var On=V({where_:PF});function MF(e){let n={x:$(e,"x","zerosLike")};return B.runKernel(Jl,n)}var st=V({zerosLike_:MF});function zF(e,t){let n=$(e,"a","div"),s=$(t,"b","div");[n,s]=Lt(n,s);let r=Ae(n,s),a=st(r),o=Ns(s,a);return On(o,a,r)}var wx=V({divNoNan_:zF});function LF(e,t){let n=$(e,"t1","dot"),s=$(t,"t2","dot");P((n.rank===1||n.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`);let r=n.rank===1?n.size:n.shape[1],a=s.rank===1?s.size:s.shape[0];if(P(r===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`),n.rank===1&&s.rank===1){let o=U(n,[1,-1]),i=U(s,[-1,1]),l=Ye(o,i);return U(l,[])}else if(n.rank===1&&s.rank===2){let o=U(n,[1,-1]),i=U(s,[s.shape[0],s.shape[1]]),l=Ye(o,i);return U(l,[l.size])}else if(n.rank===2&&s.rank===1){let o=U(s,[-1,1]),i=Ye(n,o);return U(i,[i.size])}else{let o=U(s,[s.shape[0],s.shape[1]]);return Ye(n,o)}}var kx=V({dot_:LF});function BF(e,...t){let n=t.map((r,a)=>$(r,`tensors${a}`,"einsum")),s={equation:e};return B.runKernel(Dh,n,s)}var kI=V({einsum_:BF});function WF(e){let n={x:$(e,"x","elu","float32")};return B.runKernel(Io,n)}var Vc=V({elu_:WF});function VF(e){let t=$(e,"x","erf");P(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=fe(t,"float32"));let n={x:t};return B.runKernel(Sc,n)}var Sx=V({erf_:VF});function Ix(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function SI(e,t,n){let s=e.length+t.length,r=[],a=0,o=0;for(let i=0;i<s;i++)n.indexOf(i)===-1?r.push(e[a++]):r.push(t[o++]);return r}function II(e,t){let n=[],s=e.length;for(let a=0;a<s;a++)t.indexOf(a)===-1&&n.push(e[a]);let r=t.map(a=>e[a]);return[n,r]}function Ji(e,t){let n=t.map(s=>1);return SI(e,n,t)}function UF(e,t,n){P(Ix(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function CI(e,t){if(Ix(e,t))return null;let n=[];for(let s=0;s<t;++s)e.indexOf(s)===-1&&n.push(s);return e.forEach(s=>n.push(s)),n}function Cx(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function GF(e,t){let n=[];for(let s=t-e;s<t;++s)n.push(s);return n}function HF(e,t=null,n=!1){let r={x:$(e,"x","max")},a={reductionIndices:t,keepDims:n};return B.runKernel(Fo,r,a)}var Dn=V({max_:HF});function jF(e,t=null,n=!1){let r={x:$(e,"x","min")},a={axis:t,keepDims:n};return B.runKernel(zo,r,a)}var ja=V({min_:jF});function qF(e,t){let n=$(e,"base","pow"),s=$(t,"exp","pow");[n,s]=Lt(n,s);let r={a:n,b:s};return B.runKernel(Uo,r)}var Aa=V({pow_:qF});function Ee(e,t){if(($n(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&$n(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return oi(e,[],[],t)}function XF(e){let n={x:$(e,"x","sqrt","float32")};return B.runKernel(Qo,n)}var In=V({sqrt_:XF});function KF(e){let t=$(e,"x","square"),n={};return B.runKernel("Square",{x:t},n)}var gt=V({square_:KF});function ZF(e,t=null,n=!1){let s=$(e,"x","sum");s.dtype==="bool"&&(s=fe(s,"int32"));let r={x:s},a={axis:t,keepDims:n};return B.runKernel(ei,r,a)}var Se=V({sum_:ZF});function YF(e,t="euclidean",n=null,s=!1){e=$(e,"x","norm");let r=TI(e,t,n),a=r.shape;if(s){let o=rr(n,e.shape);a=Ji(r.shape,o)}return U(r,a)}function TI(e,t,n=null){if(e.rank===0)return Yt(e);if(e.rank!==1&&n===null)return TI(U(e,[-1]),t,n);if(e.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return Se(Yt(e),n);if(t===1/0)return Dn(Yt(e),n);if(t===-1/0)return ja(Yt(e),n);if(t==="euclidean"||t===2)return In(Se(Aa(Yt(e),Ee(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return Dn(Se(Yt(e),n[0]),n[1]-1);if(t===1/0)return Dn(Se(Yt(e),n[1]),n[0]);if(t===-1/0)return ja(Se(Yt(e),n[1]),n[0]);if(t==="fro"||t==="euclidean")return In(Se(gt(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var Uc=V({norm_:YF});function JF(e,t=null,n=!1){return Uc(e,"euclidean",t,n)}var Tx=V({euclideanNorm_:JF});function QF(e){let n={x:$(e,"x","exp")};return B.runKernel(Co,n)}var Es=V({exp_:QF});function eO(e,t=0){let n=$(e,"x","expandDims","string_or_numeric");P(t<=n.rank,()=>"Axis must be <= rank of the tensor");let s={input:n},r={dim:t};return B.runKernel(xl,s,r)}var Jt=V({expandDims_:eO});function tO(e){let n={x:$(e,"x","expm1")};return B.runKernel(bl,n)}var Nx=V({expm1_:tO});function nO(e,t){let n=$(e,"x","tile","string_or_numeric");P(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);let s={x:n},r={reps:t};return B.runKernel(ka,s,r)}var Ws=V({tile_:nO});function sO(e,t,n,s="float32"){t==null&&(t=e);let r=Le([e,t],s),a=e<=t?e:t;for(let i=0;i<a;++i)r.set(1,i,i);let o=U(r.toTensor(),[e,t]);if(n==null)return o;if(n.length===1)return Ws(Jt(o,0),[n[0],1,1]);if(n.length===2)return Ws(Jt(Jt(o,0),0),[n[0],n[1],1,1]);if(n.length===3)return Ws(Jt(Jt(Jt(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var N0=V({eye_:sO});function Gc(e,t,n){let s={shape:e,value:t,dtype:n};return B.runKernel(Ic,{},s)}function rO(e){let n={x:$(e,"x","floor","float32")};return B.runKernel(To,n)}var Hc=V({floor_:rO});function aO(e,t,n=0,s=0){let r=$(e,"x","gather"),a=$(t,"indices","gather","int32"),o={x:r,indices:a},i={axis:n,batchDims:s};return B.runKernel(wl,o,i)}var jc=V({gather_:aO});function oO(e,t){let n=$(e,"a","greater","string_or_numeric"),s=$(t,"b","greater","string_or_numeric");[n,s]=Lt(n,s),At(n.shape,s.shape);let r={a:n,b:s};return B.runKernel(Sl,r)}var fs=V({greater_:oO});function iO(e,t){let n=$(e,"a","greaterEqual","string_or_numeric"),s=$(t,"b","greaterEqual","string_or_numeric");[n,s]=Lt(n,s),At(n.shape,s.shape);let r={a:n,b:s};return B.runKernel(_o,r)}var li=V({greaterEqual_:iO});function lO(e){let n={x:$(e,"x","isFinite")};return B.runKernel(Cc,n)}var Ex=V({isFinite_:lO});function uO(e){let n={x:$(e,"x","isInf")};return B.runKernel(Tc,n)}var _x=V({isInf_:uO});function cO(e){let n={x:$(e,"x","isNaN")};return B.runKernel(Il,n)}var Rx=V({isNaN_:cO});function dO(e,t=.2){let s={x:$(e,"x","leakyRelu")},r={alpha:t};return B.runKernel($o,s,r)}var sp=V({leakyRelu_:dO});function hO(e,t){let n=$(e,"a","less","string_or_numeric"),s=$(t,"b","less","string_or_numeric");[n,s]=Lt(n,s),At(n.shape,s.shape);let r={a:n,b:s};return B.runKernel(Cl,r)}var E0=V({less_:hO});function pO(e,t){let n=$(e,"a","lessEqual","string_or_numeric"),s=$(t,"b","lessEqual","string_or_numeric");[n,s]=Lt(n,s),At(n.shape,s.shape);let r={a:n,b:s};return B.runKernel(Tl,r)}var ui=V({lessEqual_:pO});function NI(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let s={start:e,stop:t,num:n};return B.runKernel(d0,{},s)}function fO(e,t=5,n=1,s=1,r=.5){let a=$(e,"x","localResponseNormalization");P(a.rank===4||a.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${a.rank}.`),P(Xu(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let o=a,i=!1;a.rank===3&&(i=!0,o=U(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let l={x:o},u={depthRadius:t,bias:n,alpha:s,beta:r},c=B.runKernel(Oh,l,u);return i?U(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var $x=V({localResponseNormalization_:fO});function mO(e){let n={x:$(e,"x","log","float32")};return B.runKernel(Do,n)}var _s=V({log_:mO});function gO(e){let n={x:$(e,"x","log1p")};return B.runKernel(Nc,n)}var rp=V({log1p_:gO});function yO(e){return P(Ya(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{let s=$(t,"x","tf.grad","string_or_numeric"),r=n!=null?$(n,"dy","tf.grad"):null;return B.tidy(()=>{let{value:a,grads:o}=B.gradients(()=>e(s),[s],r);return r!=null&&ts(a.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),_0(o),o[0]})}}function AO(e){return P(Ya(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{P(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let s=ph(t,"args","tf.grads","string_or_numeric"),r=n!=null?$(n,"dy","tf.grads"):null;return B.tidy(()=>{let{value:a,grads:o}=B.gradients(()=>e(...s),s,r);return r!=null&&ts(a.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),_0(o),o})}}function xO(e){return P(Ya(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{P(t instanceof et,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),P(n==null||n instanceof et,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:s,value:r}=B.gradients(()=>e(t),[t],n);return _0(s),{grad:s[0],value:r}}}function bO(e){return P(Ya(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{P(Array.isArray(t)&&t.every(r=>r instanceof et),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),P(n==null||n instanceof et,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let s=B.gradients(()=>e(...t),t,n);return n!=null&&ts(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),_0(s.grads),s}}function EI(e,t){P(Ya(e),()=>"The f passed in variableGrads(f) must be a function"),P(t==null||Array.isArray(t)&&t.every(u=>u instanceof dh),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=t!=null;if(!n){t=[];for(let u in B.registeredVariables)t.push(B.registeredVariables[u])}let s=n?t.filter(u=>!u.trainable):null,r=t.length;t=t.filter(u=>u.trainable),P(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);let a=!0,{value:o,grads:i}=B.gradients(e,t,null,a);P(i.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),P(o.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);let l={};return t.forEach((u,c)=>{i[c]!=null&&(l[u.name]=i[c])}),s?.forEach(u=>l[u.name]=null),{value:o,grads:l}}function Qr(e){return B.customGrad(e)}function _0(e){if(e.filter(n=>n==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function vO(e){let n={x:$(e,"x","softplus")};return B.runKernel(Oc,n)}var tu=V({softplus_:vO});function wO(e){let t=$(e,"x","logSigmoid");return Qr(s=>({value:Nt(tu(Nt(s))),gradFunc:o=>L(o,Ts(Nt(s)))}))(t)}var Dx=V({logSigmoid_:wO});function kO(e,t){let n=$(e,"a","sub"),s=$(t,"b","sub");[n,s]=Lt(n,s);let r={a:n,b:s};return B.runKernel(si,r)}var ge=V({sub_:kO});function SO(e,t=-1){let n=$(e,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Qr((r,a)=>{let i=Dn(r,t,!0),l=ge(r,i),u=ge(fe(l,"float32"),_s(Se(Es(l),t,!0)));return a([u]),{value:u,gradFunc:(h,d)=>{let[p]=d,f=!0,m=Es(p);return ge(h,L(Se(h,t,f),m))}}})(n)}var R0=V({logSoftmax_:SO});function IO(e,t=null,n=!1){let s=$(e,"x","logSumExp"),r=rr(t,s.shape),a=Dn(s,r,!0),o=ge(s,a),i=Es(o),l=Se(i,r),u=_s(l),c=ce(U(a,u.shape),u);if(n){let h=Ji(c.shape,r);return U(c,h)}return c}var $0=V({logSumExp_:IO});function CO(e,t){let n=$(e,"a","logicalAnd","bool"),s=$(t,"b","logicalAnd","bool");At(n.shape,s.shape);let r={a:n,b:s};return B.runKernel(Nl,r)}var sr=V({logicalAnd_:CO});function TO(e){let n={x:$(e,"x","logicalNot","bool")};return B.runKernel(El,n)}var ap=V({logicalNot_:TO});function NO(e,t){let n=$(e,"a","logicalOr","bool"),s=$(t,"b","logicalOr","bool");At(n.shape,s.shape);let r={a:n,b:s};return B.runKernel(Ec,r)}var D0=V({logicalOr_:NO});function EO(e,t){let n=$(e,"a","logicalXor","bool"),s=$(t,"b","logicalXor","bool");return At(n.shape,s.shape),sr(D0(e,t),ap(sr(e,t)))}var Fx=V({logicalXor_:EO}),kf=2147483648;function _O(e,t,n="left"){let s=$(e,"sortedSequence","searchSorted"),r=$(t,"values","searchSorted"),a=s.shape[s.shape.length-1],o=r.shape[r.shape.length-1],i=U(s,[-1,a]),l=U(r,[-1,o]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(St(l.shape)>=kf)throw new Error(`values tensor size must less than ${kf}`);if(i.shape[1]>=kf)throw new Error(`trailing dim_size must less than ${kf} for int32 output type, was ${i.shape[1]}`);let u={sortedSequence:i,values:l},c={side:n};return B.runKernel(b0,u,c)}var F0=V({searchSorted_:_O});function _I(e,t){return F0(e,t,"left")}function RO(e,t,n,s,r){let a=$(e,"x","maxPool"),o=1,i=a,l=!1;a.rank===3&&(l=!0,i=U(a,[1,a.shape[0],a.shape[1],a.shape[2]])),P(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),P(ta(n,o),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),ns("maxPool",s,r);let u={x:i},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r},h=B.runKernel(Po,u,c);return l?U(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var op=V({maxPool_:RO});function $O(e,t=[1,1,1],n,s,r,a="NDHWC"){let o=$(e,"x","maxPool3d"),i=o,l=!1;o.rank===4&&(l=!0,i=U(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),P(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),P(a==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),ns("maxPool3d",s,r);let u={x:i},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},h=B.runKernel(Ph,u,c);return l?U(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var Ox=V({maxPool3d_:$O});function DO(e,t,n,s,r=!1){let o={x:$(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:s,includeBatchInIndex:r},l=B.runKernel(m0,o,i);return{result:l[0],indexes:l[1]}}var RI=V({maxPoolWithArgmax_:DO});function FO(e,t){let n=$(e,"a","maximum"),s=$(t,"b","maximum");[n,s]=Lt(n,s),n.dtype==="bool"&&(n=fe(n,"int32"),s=fe(s,"int32")),At(n.shape,s.shape);let r={a:n,b:s};return B.runKernel(Oo,r)}var na=V({maximum_:FO});function OO(e,t=null,n=!1){let r={x:$(e,"x","mean")},a={axis:t,keepDims:n};return B.runKernel(Mo,r,a)}var Pt=V({mean_:OO});function Vt(e,t="float32"){if(t==="complex64"){let s=Vt(e,"float32"),r=Vt(e,"float32");return ga(s,r)}let n=Zm(St(e),t);return B.makeTensor(n,e,t)}function Cs(e,t="float32"){if(t==="complex64"){let s=Cs(e,"float32"),r=Vt(e,"float32");return ga(s,r)}let n=E2(St(e),t);return B.makeTensor(n,e,t)}function $I(e,t,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(e===void 0)return[];let s=$(e,"x","meshgrid",e instanceof et?e.dtype:"float32");if(t===void 0)return[s];let r=$(t,"y","meshgrid",t instanceof et?t.dtype:"float32"),a=St(s.shape),o=St(r.shape);return n==="xy"?(s=U(s,[1,-1]),r=U(r,[-1,1]),[Ye(Cs([o,1],s.dtype),s),Ye(r,Cs([1,a],r.dtype))]):(s=U(s,[-1,1]),r=U(r,[1,-1]),[Ye(s,Cs([1,o],s.dtype)),Ye(Cs([a,1],r.dtype),r)])}function PO(e,t){let n=$(e,"a","minimum"),s=$(t,"b","minimum");[n,s]=Lt(n,s),n.dtype==="bool"&&(n=fe(n,"int32"),s=fe(s,"int32")),At(n.shape,s.shape);let r={a:n,b:s};return B.runKernel(Lo,r)}var qc=V({minimum_:PO});function MO(e,t,n){P(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let s=$(e,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");P(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);let r=n==="reflect"?1:0;for(let i=0;i<s.rank;i++)P(t[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),P(t[i][0]>=0&&t[i][0]<=s.shape[i]-r&&t[i][1]>=0&&t[i][1]<=s.shape[i]-r,()=>`Padding in dimension ${i} cannot be greater than or equal to ${s.shape[i]-r} or less than 0 for input of shape ${s.shape}`);let a={paddings:t,mode:n},o={x:s};return B.runKernel(Bo,o,a)}var Px=V({mirrorPad_:MO});function zO(e,t){let n=$(e,"a","mod"),s=$(t,"b","mod");[n,s]=Lt(n,s);let r={a:n,b:s};return B.runKernel(_c,r)}var ip=V({mod_:zO});function LO(e,t=null,n=!1){e=$(e,"x","moments");let s=rr(t,e.shape),r=Pt(e,s,n),a=r.shape;n||(a=Ji(r.shape,s));let o=gt(ge(fe(e,"float32"),U(r,a))),i=Pt(o,s,n);return{mean:r,variance:i}}var lp=V({moments_:LO});function BO(e,t,n,s){let r=$(t,"data","multiRNNCell"),a=ph(n,"c","multiRNNCell"),o=ph(s,"h","multiRNNCell"),i=r,l=[];for(let h=0;h<e.length;h++){let d=e[h](i,a[h],o[h]);l.push(d[0]),l.push(d[1]),i=d[1]}let u=[],c=[];for(let h=0;h<l.length;h+=2)u.push(l[h]),c.push(l[h+1]);return[u,c]}var DI=V({multiRNNCell_:BO});function WO(e,t,n,s=!1){let r=$(e,"logits","multinomial"),a=r.size,o=r.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();let l={logits:o===1?U(r,[1,-1]):r},u={numSamples:t,seed:n,normalized:s},c=B.runKernel(g0,l,u);return o===1?U(c,[c.size]):c}var FI=V({multinomial_:WO});function VO(e,t){let n=$(e,"a","notEqual","string_or_numeric"),s=$(t,"b","notEqual","string_or_numeric");[n,s]=Lt(n,s),At(n.shape,s.shape);let r={a:n,b:s};return B.runKernel(Rl,r)}var Qi=V({notEqual_:VO});function UO(e){let n={x:$(e,"x","onesLike")};return B.runKernel(Fl,n)}var Rs=V({onesLike_:UO});function GO(e,t){let n=$(e,"v1","outerProduct"),s=$(t,"v2","outerProduct");P(n.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${s.rank}.`);let r=U(n,[-1,1]),a=U(s,[1,-1]);return Ye(r,a)}var OI=V({outerProduct_:GO});function HO(e,t,n=0){let s=$(e,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let r={paddings:t,constantValue:n},a={x:s};return B.runKernel(Vo,a,r)}var Dr=V({pad_:HO});function jO(e,t,n=0){return P(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),Dr(e,[t],n)}var PI=V({pad1d_:jO});function qO(e,t,n=0){return P(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Dr(e,t,n)}var MI=V({pad2d_:qO});function XO(e,t,n=0){return P(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Dr(e,t,n)}var zI=V({pad3d_:XO});function KO(e,t,n=0){return P(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Dr(e,t,n)}var LI=V({pad4d_:KO});function ZO(e,t,n){let s=$(e,"x","spaceToBatchND");P(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),P(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),P(s.shape.reduce((o,i,l)=>l>0&&l<=t.length?o&&(i+n[l-1][0]+n[l-1][1])%t[l-1]===0:o,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);let r={x:s},a={blockShape:t,paddings:n};return B.runKernel(Hl,r,a)}var up=V({spaceToBatchND_:ZO});function YO(e,t,n,s,r,a,o){r==null&&(r=[1,1]),a==null&&(a=1),s===0&&(s="valid");let i=$(e,"x","maxPool"),l=i,u=!1;i.rank===3&&(u=!0,l=U(i,[1,i.shape[0],i.shape[1],i.shape[2]])),P(ta(a,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`);let c=mI(l.shape,t,a,r,s),h=[c.dilationHeight,c.dilationWidth],d;s==="same"?d=QO([c.filterHeight,c.filterWidth],h):d=[[0,0],[0,0]];let p=h[0]===1&&h[1]===1,[f,m]=JO([c.inHeight,c.inWidth],h,d),g=p?s:"valid",y=p?l:up(l,h,f),A=(n==="avg"?()=>Qh(y,t,a,g,o):()=>op(y,t,a,g,o))(),b=p?A:ep(A,h,m);return u?U(b,[b.shape[1],b.shape[2],b.shape[3]]):b}function JO(e,t,n){let s=n.map(c=>c[0]),r=n.map(c=>c[1]),a=e.concat(s,r),o=t.map((c,h)=>(c-a[h]%c)%c),i=r.map((c,h)=>c+o[h]),l=t.map((c,h)=>[s[h],i[h]]),u=t.map((c,h)=>[0,o[h]]);return[l,u]}function QO(e,t){let s=e.map((o,i)=>o+(o-1)*(t[i]-1)).map(o=>o-1),r=s.map(o=>Math.floor(o/2)),a=s.map((o,i)=>o-r[i]);return s.map((o,i)=>[r[i],a[i]])}var Mx=V({pool_:YO});function eP(e,t){let n=$(e,"x","prelu"),s=$(t,"alpha","prelu"),r={x:n,alpha:s};return B.runKernel(Go,r)}var cp=V({prelu_:eP});function tP(e,t=null,n=!1){let s=$(e,"x","prod");s.dtype==="bool"&&(s=fe(s,"int32"));let r={x:s},a={axis:t,keepDims:n};return B.runKernel(Ho,r,a)}var zx=V({prod_:tP});function nP(e,t,n,s,r){let a=$(e,"shape","raggedTensorToTensor","int32"),o=$(t,"values","raggedTensorToTensor"),i=$(n,"defaultValue","raggedTensorToTensor",o.dtype),l=s.map((h,d)=>$(h,`tensors${d}`,"raggedTensorToTensor","int32")),u={shape:a,values:o,defaultValue:i,rowPartitionTensors:l},c={rowPartitionTypes:r};return B.runKernel(y0,u,c)}var BI=V({raggedTensorToTensor_:nP});function sP(e,t,n){let s=St(e),r=null;if(n==null||n==="float32")r=new Float32Array(s);else if(n==="int32")r=new Int32Array(s);else if(n==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${n}`);for(let a=0;a<s;a++)r[a]=t();return B.makeTensor(r,e,n)}var WI=V({rand_:sP}),Lx=uo(Xm()),Bx=class{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=r||Math.random();this.random=Lx.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let s=this.nextVal;return this.nextVal=NaN,s}let e,t,n=!1;for(;!n;){let s,r,a;do s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r;while(a>=1||a===0);let o=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*o,t=this.mean+this.stdDev*r*o,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},rP=class{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;let r=s||Math.random();this.randu=Lx.alea(r.toString()),this.randn=new Bx(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,s,r,a;for(;;){do s=this.randn.nextValue(),a=1+this.c*s;while(a<=0);if(a*=a*a,e=s*s,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),r=this.randu(),r<t||Math.log(r)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},aP=class{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Lx.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function oP(e,t,n=1,s="float32",r){if(n==null&&(n=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);let a=new rP(t,n,s,r),o=Le(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var VI=V({randomGamma_:oP});function iP(e,t=0,n=1,s,r){if(s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);let a=new Bx(t,n,s,!1,r),o=Le(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var O0=V({randomNormal_:iP});function lP(e,t,n){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return O0(e,0,1,t,n)}var UI=V({randomStandardNormal_:lP});function uP(e,t=0,n=1,s="float32",r){let a=Le(e,s),o=new aP(t,n,null,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}var Xc=V({randomUniform_:uP});function Qu(e,t,n=1,s="float32"){if(n===0)throw new Error("Cannot have a step of zero");let r={start:e,stop:t,step:n,dtype:s};return B.runKernel($c,{},r)}function cP(e){let n={x:$(e,"x","reciprocal")};return B.runKernel(Ml,n)}var Wx=V({reciprocal_:cP});function dP(e){let n={x:$(e,"x","relu")};return B.runKernel(jo,n)}var Fr=V({relu_:dP});function hP(e){let n={x:$(e,"x","relu6")};return B.runKernel(Ko,n)}var P0=V({relu6_:hP});function pP(e,t){let s={x:$(e,"x","reverse")},r={dims:t};return B.runKernel(Ll,s,r)}var Hs=V({reverse_:pP});function fP(e){let t=$(e,"x","reverse");return P(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Hs(t,0)}var GI=V({reverse1d_:fP});function mP(e,t){let n=$(e,"x","reverse");return P(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Hs(n,t)}var HI=V({reverse2d_:mP});function gP(e,t){let n=$(e,"x","reverse");return P(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Hs(n,t)}var jI=V({reverse3d_:gP});function yP(e,t){let n=$(e,"x","reverse");return P(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Hs(n,t)}var qI=V({reverse4d_:yP});function AP(e){let n={x:$(e,"x","round")};return B.runKernel(Bl,n)}var M0=V({round_:AP});function xP(e){let n={x:$(e,"x","rsqrt","float32")};return B.runKernel(Zo,n)}var z0=V({rsqrt_:xP});function bP(e){let n={x:$(e,"x","selu")};return B.runKernel(Dc,n)}var L0=V({selu_:bP});function vP(e,t,n,s,r,a=[1,1],o="NHWC"){let i=$(e,"x","separableConv2d"),l=$(t,"depthwiseFilter","separableConv2d"),u=$(n,"pointwiseFilter","separableConv2d"),c=i,h=!1;if(i.rank===3&&(h=!0,c=U(i,[1,i.shape[0],i.shape[1],i.shape[2]])),o==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");P(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),P(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),P(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),P(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),P(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let d=l.shape[2],p=l.shape[3];P(u.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`);let f=Wc(c,l,s,r,o,a),g=ya(f,u,1,"valid",o);return h?U(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var B0=V({separableConv2d_:vP});async function wP(e,t){let n=$(e,"x","setdiff1d"),s=$(t,"y","setdiff1d");P(n.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`),P(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),P(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);let r=await n.data(),a=await s.data(),o=new Set(a),i=0;for(let c=0;c<r.length;c++)o.has(r[c])||i++;let l=new ln([i],n.dtype),u=new ln([i],"int32");for(let c=0,h=0;c<r.length;c++)o.has(r[c])||(l.values[h]=r[c],u.values[h]=c,h++);return[l.toTensor(),u.toTensor()]}var XI=wP;function kP(e){let n={x:$(e,"x","sign")};return B.runKernel(Fc,n)}var Vx=V({sign_:kP});function SP(e){let n={x:$(e,"x","sin","float32")};return B.runKernel(Yo,n)}var W0=V({sin_:SP});function IP(e){let n={x:$(e,"x","sinh")};return B.runKernel(Gl,n)}var V0=V({sinh_:IP});function CP(e,t,n){let s=$(e,"x","slice1d");return P(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),ze(s,[t],[n])}var dp=V({slice1d_:CP});function TP(e,t,n){let s=$(e,"x","slice2d");return P(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),ze(s,t,n)}var U0=V({slice2d_:TP});function NP(e,t,n){let s=$(e,"x","slice3d");return P(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),ze(s,t,n)}var el=V({slice3d_:NP});function EP(e,t,n){let s=$(e,"x","slice4d");return P(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),ze(s,t,n)}var tl=V({slice4d_:EP});function _P(e,t=-1){let n=$(e,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let s={logits:n},r={dim:t};return B.runKernel(ti,s,r)}var Kc=V({softmax_:_P});function RP(e){P(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return B.runKernel(u0,t)}var hp=V({fft_:RP});function $P(e){P(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return B.runKernel(c0,t)}var ec=V({ifft_:$P});function DP(e){let t=e.shape[e.shape.length-1],n=e.size/t,s;if(t<=2){let r=U(e,[n,t]);s=ec(r)}else{let r=[n,2*(t-1)],a=U(Ju(e),[n,t]),o=U(Zh(e),[n,t]),i=Hs(ze(a,[0,1],[n,t-2]),1),l=L(Hs(ze(o,[0,1],[n,t-2]),1),Ee(-1)),u=Et([a,i],1),c=Et([o,l],1),h=U(ga(u,c),[r[0],r[1]]);s=ec(h)}if(s=Ju(s),e.rank===3&&e.shape[0]!==0){let r=s,a=e.shape[0];s=U(s,[a,s.shape[0]/a,s.shape[1]]),r.dispose()}return s}var G0=V({irfft_:DP});function FP(e,t,n=0){let r={x:$(e,"x","split")},a={numOrSizeSplits:t,axis:n};return B.runKernel(jl,r,a)}var kn=V({split_:FP});function OP(e,t){P(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1],s=e.size/n,r;if(t!=null&&t<n){let f=e.shape.map(g=>0),m=e.shape.map(g=>g);m[e.shape.length-1]=t,r=ze(e,f,m),n=t}else if(t!=null&&t>n){let f=e.shape.map(m=>m);f[e.shape.length-1]=t-n,r=Et([e,Vt(f)],e.shape.length-1),n=t}else r=e;let a=st(r),o=U(ga(r,a),[s,n]),i=hp(o),l=Math.floor(n/2)+1,u=Ju(i),c=Zh(i),h=kn(u,[l,n-l],u.shape.length-1),d=kn(c,[l,n-l],c.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=l,U(ga(h[0],d[0]),p)}var pp=V({rfft_:OP});function PP(e,t){let n=$(e,"a","squaredDifference"),s=$(t,"b","squaredDifference");[n,s]=Lt(n,s),At(n.shape,s.shape);let r={a:n,b:s},a={};return B.runKernel(ni,r,a)}var H0=V({squaredDifference_:PP});function MP(e,t){let n=$(e,"x","squeeze","string_or_numeric");return U(n,dS(n.shape,t).newShape)}var mt=V({squeeze_:MP});function zP(e,t=0){let n=ph(e,"tensors","stack","string_or_numeric");P(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&P(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");let s=n,r={axis:t};return B.runKernel(Pl,s,r)}var Pn=V({stack_:zP});function LP(e,t=0){let s={x:$(e,"x","step")},r={alpha:t};return B.runKernel(ai,s,r)}var nu=V({step_:LP});function BP(e,t,n,s,r=0,a=0,o=0,i=0,l=0){let c={x:$(e,"x","stridedSlice","string_or_numeric")},h={begin:t,end:n,strides:s,beginMask:r,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l};return B.runKernel(ql,c,h)}var Ux=V({stridedSlice_:BP});function WP(e){let n={x:$(e,"x","tan","float32")};return B.runKernel(Xl,n)}var Gx=V({tan_:WP});function qt(e,t){cl(e);let n=Yr(e,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return oi(e,null,n,t)}function Kr(e,t,n){if(cl(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let s=Yr(e,n);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return oi(e,t,s,n)}function KI(e,t,n){if(cl(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let s=Yr(e,n);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return oi(e,t,s,n)}function ZI(e,t,n){if(cl(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let s=Yr(e,n);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return oi(e,t,s,n)}function YI(e,t,n){if(cl(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let s=Yr(e,n);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||s,oi(e,t,s,n)}function VP(e,t=1,n=!0){let s=$(e,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);let a={x:s},o={k:t,sorted:n},[i,l]=B.runKernel(Kl,a,o);return{values:i,indices:l}}var Hx=V({topk_:VP});function UP(e,t=0,n=1,s,r){if(s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");let a=new Bx(t,n,s,!0,r),o=Le(e,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}var j0=V({truncatedNormal_:UP});function GP(e,t=0){let n=$(e,"x","unique","string_or_numeric");P(n.rank>0,()=>"The input tensor must be at least 1D");let s={x:n},r={axis:t},[a,o]=B.runKernel(v0,s,r);return{values:a,indices:o}}var jx=V({unique_:GP});function HP(e,t,n){let s=$(e,"x","unsortedSegmentSum"),r=$(t,"segmentIds","unsortedSegmentSum","int32");P(Xu(n),()=>"numSegments must be of dtype int");let a={x:s,segmentIds:r},o={numSegments:n};return B.runKernel(Gh,a,o)}var q0=V({unsortedSegmentSum_:HP});function jP(e,t=0){let n=$(e,"x","unstack","string_or_numeric");P(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);let s={value:n},r={axis:t};return B.runKernel(Yl,s,r)}var ds=V({unstack_:jP});function JI(e,t){return F0(e,t,"right")}function qx(e,t=!0,n,s){return B.makeVariable(e,t,n,s)}function QI(e,t){let n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);let s=Le(e,"int32"),r=Le([n.length,e.length],"int32");for(let a=0;a<n.length;a++){let o=s.indexToLoc(n[a]),i=a*e.length;r.values.set(o,i)}return r.toTensor()}async function qP(e){let t=$(e,"condition","whereAsync","bool"),n=await t.data(),s=QI(t.shape,n);return e!==t&&t.dispose(),s}var Xx=qP;async function XP(e,t,n){let s=$(e,"tensor","boolMask"),r=$(t,"mask","boolMask","bool"),a=n??0,o=r.rank,i=s.shape;P(o>0,()=>"mask cannot be scalar"),ts(i.slice(a,a+o),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=a;m<a+o;m++)l*=i[m];let u=i.slice(0,a).concat([l],i.slice(a+o)),c=U(s,u),h=U(r,[-1]),d=await Xx(h),p=mt(d,[1]),f=jc(c,p,a);return e!==s&&s.dispose(),t!==r&&r.dispose(),p.dispose(),c.dispose(),h.dispose(),d.dispose(),f}var e7=XP;function KP(e,t,n,s,r=!0){let a=$(e,"v","movingAverage"),o=$(t,"x","movingAverage"),i=$(n,"decay","movingAverage");ES(a,o),P(co(a.shape,o.shape),()=>"Shape mismatch in v and x");let l=Ee(1),u=ge(l,i),c=L(ge(o,a),u);if(r){P(s!=null,()=>"When using zeroDebias: true, step is required.");let h=$(s,"step","movingAverage");c=Ae(c,ge(l,Aa(i,h)))}return ce(a,c)}var t7=V({movingAverage_:KP});function ZP(e,t,n){let s=$(e,"indices","scatterND","int32"),r=$(t,"updates","scatterND");K2(r,s,n);let a={indices:s,updates:r},o={shape:n};return B.runKernel(Wl,a,o)}var n7=V({scatterND_:ZP});function YP(e,t,n,s){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let r=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);let o=t.size;if(!(t.rank===0||t.rank===1&&o===r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function JP(e,t,n,s=0){let r=$(e,"sparseIndices","sparseToDense","int32"),a=$(t,"sparseValues","sparseToDense","string_or_numeric"),o=$(s,"defaultValue","sparseToDense",a.dtype);YP(r,a,n,o);let i={sparseIndices:r,sparseValues:a,defaultValue:o},l={outputShape:n};return B.runKernel(Wh,i,l)}var s7=V({sparseToDense_:JP});function QP(e,t){let n=$(t,"indices","gatherND","int32"),r={params:$(e,"x","gatherND","string_or_numeric"),indices:n};return B.runKernel(kl,r)}var r7=V({gatherND_:QP});function eM(e,t){if(t==null)return e.shape.slice();if(co(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let s=0;s<e.shape.length;s++)t[s]==null&&e.shape[s]!=null?n.push(e.shape[s]):n.push(t[s]);return n}return t}function tM(e,t,n,s){let r=$(e,"x","dropout");if(P(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),P(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof et?r.clone():r;let a=eM(r,n),o=1-t,i=Ae(Hc(ce(Xc(a,0,1,"float32",s),o)),o);return L(r,i)}var Kx=V({dropout_:tM});function Zx(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function X0(e,t,n){let s=1-e%2,r=new Float32Array(e);for(let a=0;a<e;++a){let o=2*Math.PI*a/(e+s-1);r[a]=t-n*Math.cos(o)}return qt(r,"float32")}async function nM(e,t,n=1){let s=$(e,"predictions","inTopK"),r=$(t,"targets","inTopK");P(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),P(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),ts(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let a=s.shape[s.shape.length-1];P(n>0&&n<=a,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`);let o=await s.data(),i=await r.data(),[l,u]=[o.length/a,a],c=hS("bool",l);for(let h=0;h<l;h++){let d=h*u,p=o.subarray(d,d+u),f=[];for(let m=0;m<p.length;m++)f.push({value:p[m],index:m});f.sort((m,g)=>g.value-m.value),c[h]=0;for(let m=0;m<n;m++)if(f[m].index===i[h]){c[h]=1;break}}return e!==s&&s.dispose(),t!==r&&r.dispose(),lt(c,r.shape,"bool")}var a7=nM,tc={};Ue(tc,{conv2d:()=>aM,depthwiseConv2d:()=>uM,matMul:()=>dM});function sM(e,t,n,s,r,a="NHWC",o){let i=e;e.rank===3&&(i=U(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=U(t,[1,t.shape[0],t.shape[1],t.shape[2]])),P(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),P(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),P(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let u=a==="NHWC"?i.shape[3]:i.shape[1],c=a==="NHWC"?l.shape[3]:l.shape[1];P(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),P(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),ns("conv2dDerFilter",r,o);let h={x:i,dy:l},d={strides:s,pad:r,dataFormat:a,dimRoundingMode:o,filterShape:n};return B.runKernel(t0,h,d)}var Yx=V({conv2DBackpropFilter_:sM});function K0(e,t,n){if(n==null||n==="linear")return e;if(n==="relu")return L(e,nu(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Z0(e,t){let n=t,s=en(e.shape,t.shape);return s.length>0&&(n=Se(n,s)),U(n,e.shape)}function Y0(e,t,n,s){if(t==="linear")return e;if(t==="relu")return Fr(e);if(t==="elu")return Vc(e);if(t==="relu6")return P0(e);if(t==="prelu")return cp(e,n);if(t==="leakyrelu")return sp(e,s);if(t==="sigmoid")return Ts(e);throw new Error(`Unknown fused activation ${t}.`)}var J0=(e,t)=>!(e>0)||t==="linear";function rM({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",J0(B.state.gradientDepth,l)===!1){P(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let S=ya(e,t,n,s,r,a,o);return i!=null&&(S=ce(S,i)),Y0(S,l,u,c)}let h=$(e,"x","conv2d","float32"),d=$(t,"filter","conv2d","float32"),p=h,f=!1;h.rank===3&&(f=!0,p=U(h,[1,h.shape[0],h.shape[1],h.shape[2]])),P(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),P(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),ns("fused conv2d",s,o);let m=r==="NHWC"?p.shape[3]:p.shape[1];P(d.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`),P(ta(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);let g=Jh(p.shape,d.shape,n,a,s,o),y;i!=null&&(y=$(i,"bias","fused conv2d"),[y]=Lt(y,h),r==="NHWC"?At(g.outShape,y.shape):(P(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),P(y.shape.length===0||y.shape[0]===g.outChannels||y.shape[0]===1,()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let x;if(u!=null){let S=u.shape;if(P(S.length<=1||S.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${S.length}.`),S.length===1)P(S[0]===1||S[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${S}) is not compatible with the number of output channels (${g.outChannels}).`);else if(S.length===3)try{At(S,g.outShape)}catch{let _=`Error in fused conv2d: PReLU activation weights (${S}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(_)}x=$(u,"prelu weights","fused conv2d")}let A=(S,C)=>{P(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);let[_,R,D,E]=C,F=K0(S,D,l);P(to(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);let k=yx(R.shape,F,_,n,s),M=Yx(R,F,_.shape,n,s),z=[k,M];if(E!=null){let W=Z0(E,F);z.push(W)}return z},b={x:p,filter:d,bias:y,preluActivationWeights:x},w={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o,activation:l,leakyreluAlpha:c};return i==null?Qr((C,_,R)=>{let D=B.runKernel(Qa,b,w);return R([_,C,D]),f&&(D=U(D,[D.shape[1],D.shape[2],D.shape[3]])),{value:D,gradFunc:A}})(p,d):Qr((C,_,R,D)=>{let E=B.runKernel(Qa,b,w);return D([_,C,E,R]),f&&(E=U(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:A}})(p,d,y)}var aM=V({fusedConv2d_:rM});function oM(e,t,n,s,r,a=[1,1],o){let i=e;e.rank===3&&(i=U(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=U(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:i,dy:l},c={strides:s,pad:r,dimRoundingMode:o,dilations:a,filterShape:n};return B.runKernel(a0,u,c)}var o7=V({depthwiseConv2dNativeBackpropFilter_:oM});function iM(e,t,n,s,r,a=[1,1],o){let i=t,l=!1;t.rank===3&&(l=!0,i=U(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:i,filter:n},c={strides:s,pad:r,dimRoundingMode:o,dilations:a,inputShape:e},h=B.runKernel(o0,u,c);return l?U(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var i7=V({depthwiseConv2dNativeBackpropInput_:iM});function lM({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(J0(B.state.gradientDepth,l)===!1){let w=Wc(e,t,n,s,r,a,o);return i!=null&&(w=ce(w,i)),Y0(w,l,u,c)}let h=$(e,"x","depthwiseConv2d","float32"),d=$(t,"filter","depthwiseConv2d","float32"),p=h,f=!1;h.rank===3&&(f=!0,p=U(h,[1,h.shape[0],h.shape[1],h.shape[2]])),P(p.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),P(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),P(p.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),a==null&&(a=[1,1]),P(ta(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),ns("fused depthwiseConv2d",s,o);let m=Jh(p.shape,d.shape,n,a,s,o,!0),g;i!=null&&(g=$(i,"bias","fused conv2d"),[g]=Lt(g,h),At(m.outShape,g.shape));let y;u!=null&&(y=$(u,"prelu weights","fused depthwiseConv2d"));let x=(w,S)=>{P(to(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);let[C,_,R,D]=S,E=K0(w,R,l),F=i7(_.shape,E,C,n,s,a,o),k=o7(_,E,C.shape,n,s,a,o);if(D!=null){let M=Z0(g,E);return[F,k,M]}return[F,k]},A={x:p,filter:d,bias:g,preluActivationWeights:y},b={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:o,activation:l,leakyreluAlpha:c};return i==null?Qr((S,C,_)=>{let R=B.runKernel(eo,A,b);return _([C,S,R]),f&&(R=U(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:x}})(p,d):Qr((S,C,_,R)=>{let D=B.runKernel(eo,A,b);return R([C,S,D,_]),f&&(D=U(D,[D.shape[1],D.shape[2],D.shape[3]])),{value:D,gradFunc:x}})(p,d,g)}var uM=V({fusedDepthwiseConv2d_:lM});function cM({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:o,leakyreluAlpha:i=.2}){if(J0(B.state.gradientDepth,a)===!1){let E=Ye(e,t,n,s);return r!=null&&(E=ce(E,r)),Y0(E,a,o,i)}let l=$(e,"a","fused matMul"),u=$(t,"b","fused matMul");[l,u]=Lt(l,u);let c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=St(f),y=St(m);P(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${s} must match.`);let A=At(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,p]),b=n?U(l,[g,c,d]):U(l,[g,d,c]),w=s?U(u,[y,p,h]):U(u,[y,h,p]),S;r!=null&&(S=$(r,"bias","fused matMul"),[S]=Lt(S,l),At(A,S.shape));let C;o!=null&&(C=$(o,"prelu weights","fused matMul"));let _=(E,F)=>{let[k,M,z,W]=F,H=K0(U(E,z.shape),z,a),j,Z;if(!n&&!s?(j=Ye(H,M,!1,!0),Z=Ye(k,H,!0,!1)):!n&&s?(j=Ye(H,M,!1,!1),Z=Ye(H,k,!0,!1)):n&&!s?(j=Ye(M,H,!1,!0),Z=Ye(k,H,!1,!1)):(j=Ye(M,H,!0,!0),Z=Ye(H,k,!0,!0)),r!=null){let J=Z0(W,H);return[j,Z,J]}else return[j,Z]},R={a:b,b:w,bias:S,preluActivationWeights:C},D={transposeA:n,transposeB:s,activation:a,leakyreluAlpha:i};return r==null?Qr((F,k,M)=>{let z=B.runKernel(Ja,R,D);return M([F,k,z]),{value:U(z,A),gradFunc:_}})(b,w):Qr((F,k,M,z)=>{let W=B.runKernel(Ja,R,D);return z([F,k,W,M]),{value:U(W,A),gradFunc:_}})(b,w,S)}var dM=V({fusedMatMul_:cM});function hM(e){return X0(e,.54,.46)}var pM=V({hammingWindow_:hM});function fM(e){return X0(e,.5,.5)}var l7=V({hannWindow_:fM});function mM(e,t,n,s=!1,r=0){let a=0,o=[];for(;a+t<=e.size;)o.push(ze(e,a,t)),a+=n;if(s)for(;a<e.size;){let i=a+t-e.size,l=Et([ze(e,a,t-i),Gc([i],r)]);o.push(l),a+=n}return o.length===0?Kr([],[0,t]):U(Et(o),[o.length,t])}var u7=V({frame_:mM});function gM(e,t,n,s,r=l7){s==null&&(s=Zx(t));let a=u7(e,t,n),o=L(a,r(t));return pp(o,s)}var yM=V({stft_:gM});function AM(e,t,n,s,r="bilinear",a=0){let o=$(e,"image","cropAndResize"),i=$(t,"boxes","cropAndResize","float32"),l=$(n,"boxInd","cropAndResize","int32"),u=i.shape[0];P(o.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),P(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${i.shape}.`),P(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${i.shape}.`),P(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),P(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),P(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);let c={image:o,boxes:i,boxInd:l},h={method:r,extrapolationValue:a,cropSize:s};return B.runKernel(gl,c,h)}var xM=V({cropAndResize_:AM});function bM(e){let t=$(e,"image","flipLeftRight","float32");P(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let n={image:t};return B.runKernel(vl,n,{})}var vM=V({flipLeftRight_:bM});function wM(e){let t=$(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];P(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),P(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);let r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,Ws(t,r)}var kM=V({grayscaleToRGB_:wM});function SM(e,t,n=0,s=.5){let r=$(e,"image","rotateWithOffset","float32");P(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);let a={image:r},o={radians:t,fillValue:n,center:s};return B.runKernel(Ql,a,o)}var IM=V({rotateWithOffset_:SM});function Zc(e,t,n,s,r,a){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),a==null&&(a=0);let o=e.shape[0];return n=Math.min(n,o),P(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),P(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),P(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),P(t.rank===1,()=>"scores must be a 1D tensor"),P(t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`),P(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}function CM(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){let a=$(e,"boxes","nonMaxSuppression","float32"),o=$(t,"scores","nonMaxSuppression","float32"),i=Zc(a,o,n,s,r);n=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;let l={maxOutputSize:n,iouThreshold:s,scoreThreshold:r};return B.runKernel($l,{boxes:a,scores:o},l)}var TM=V({nonMaxSuppression_:CM});function NM(e,t,n){let s=EM(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function EM(e,t,n){return RM(e,t,n||_M)}function _M(e,t){return e>t?1:e<t?-1:0}function RM(e,t,n){let s=0,r=e.length,a=0,o=!1;for(;s<r;){a=s+(r-s>>>1);let i=n(t,e[a]);i>0?s=a+1:(r=a,o=!i)}return o?s:-s-1}function c7(e,t,n,s,r){return Jx(e,t,n,s,r,0)}function d7(e,t,n,s,r,a){return Jx(e,t,n,s,r,0,!1,a,!0)}function h7(e,t,n,s,r,a){return Jx(e,t,n,s,r,a,!0)}function Jx(e,t,n,s,r,a,o=!1,i=!1,l=!1){let u=[];for(let g=0;g<t.length;g++)t[g]>r&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(l3);let c=a>0?-.5/a:0,h=[],d=[];for(;h.length<n&&u.length>0;){let g=u.pop(),{score:y,boxIndex:x,suppressBeginIndex:A}=g;if(y<r)break;let b=!1;for(let w=h.length-1;w>=A;--w){let S=$M(e,x,h[w]);if(S>=s){b=!0;break}if(g.score=g.score*DM(s,c,S),g.score<=r)break}g.suppressBeginIndex=h.length,b||(g.score===y?(h.push(x),d.push(g.score)):g.score>r&&NM(u,g,l3))}let p=h.length,f=n-p;i&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));let m={selectedIndices:h};return o&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function $M(e,t,n){let s=e.subarray(t*4,t*4+4),r=e.subarray(n*4,n*4+4),a=Math.min(s[0],s[2]),o=Math.min(s[1],s[3]),i=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(i-a)*(l-o),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;let m=Math.max(a,u),g=Math.max(o,c),y=Math.min(i,h),x=Math.min(l,d),A=Math.max(y-m,0)*Math.max(x-g,0);return A/(p+f-A)}function DM(e,t,n){let s=Math.exp(t*n*n);return n<=e?s:0}function l3(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function FM(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){let a=$(e,"boxes","nonMaxSuppressionAsync"),o=$(t,"scores","nonMaxSuppressionAsync"),i=Zc(a,o,n,s,r);n=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;let l=await Promise.all([a.data(),o.data()]),u=l[0],c=l[1],{selectedIndices:h}=c7(u,c,n,s,r);return a!==e&&a.dispose(),o!==t&&o.dispose(),qt(h,"int32")}var OM=FM;function PM(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){let o=$(e,"boxes","nonMaxSuppression"),i=$(t,"scores","nonMaxSuppression"),l=Zc(o,i,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;let u={boxes:o,scores:i},c={maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a},h=B.runKernel(Dl,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}var MM=V({nonMaxSuppressionWithScore_:PM});async function zM(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){let o=$(e,"boxes","nonMaxSuppressionAsync"),i=$(t,"scores","nonMaxSuppressionAsync"),l=Zc(o,i,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;let u=await Promise.all([o.data(),i.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=h7(c,h,n,s,r,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:qt(d,"int32"),selectedScores:qt(p)}}var LM=zM;function BM(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){let o=$(e,"boxes","nonMaxSuppression"),i=$(t,"scores","nonMaxSuppression"),l=Zc(o,i,n,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,d={boxes:o,scores:i},p={maxOutputSize:u,iouThreshold:c,scoreThreshold:h,padToMaxOutputSize:a},f=B.runKernel(Rc,d,p);return{selectedIndices:f[0],validOutputs:f[1]}}var WM=V({nonMaxSuppressionPadded_:BM});async function VM(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){let o=$(e,"boxes","nonMaxSuppressionAsync"),i=$(t,"scores","nonMaxSuppressionAsync"),l=Zc(o,i,n,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=d7(d,p,u,c,h,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:qt(f,"int32"),validOutputs:Ee(m,"int32")}}var UM=VM;function GM(e,t,n=!1,s=!1){let r=$(e,"images","resizeBilinear");P(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),P(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),P(s===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=r,o=!1;r.rank===3&&(o=!0,a=U(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,i={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},u=B.runKernel(Xo,i,l);return o?U(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var p7=V({resizeBilinear_:GM});function HM(e,t,n=!1,s=!1){let r=$(e,"images","resizeNearestNeighbor");P(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),P(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),P(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),P(s===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=r,o=!1;r.rank===3&&(o=!0,a=U(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,i={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},u=B.runKernel(qo,i,l);return o?U(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var f7=V({resizeNearestNeighbor_:HM});function jM(e,t="binary",n=!1,s=.5){let r=$(e,"image","threshold"),a=.2989,o=.587,i=.114,l=r.shape[0]*r.shape[1],u=L(qt([s]),255),c,h,d,p;if(P(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),P(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),P(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),P(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),r.shape[2]===3){[c,h,d]=kn(r,[1,1,1],-1);let g=L(c,a),y=L(h,o),x=L(d,i);p=ce(ce(g,y),x)}else p=e;if(t==="otsu"){let g=hx(fe(M0(p),"int32"),lt([]),256);u=qM(g,l)}let f=n?ui(p,u):fs(p,u);return fe(L(f,255),"int32")}function qM(e,t){let n=qt([-1]),s=qt([0]),r=qt([0]),a,o,i,l,u,c;for(let h=0;h<e.size-1;h++){a=ze(e,0,h+1),o=ze(e,h+1),u=Ae(Se(a),t),c=Ae(Se(o),t);let d=Se(L(a,Qu(0,a.size)));i=Ae(d,Se(a));let p=Gc(o.shape,a.size),f=ce(Qu(0,o.size),p),m=L(o,f);l=Ae(Se(m),Se(o));let g=ge(i,l),y=ge(i,l),x=L(u,c);r=L(L(x,g),y);let A=fs(r,s);s=On(A,r,s),n=On(A,qt([h]),n)}return n}var XM=V({threshold_:jM});function KM(e,t,n="nearest",s="constant",r=0,a){let o=$(e,"image","transform","float32"),i=$(t,"transforms","transform","float32");P(o.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),P(i.rank===2&&(i.shape[0]===o.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),P(a==null||a.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`);let l={image:o,transforms:i},u={interpolation:n,fillMode:s,fillValue:r,outputShape:a};return B.runKernel(Zl,l,u)}var ZM=V({transform_:KM});function YM(e,t,n){P(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),P(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);let s=$(e,"a","bandPart");P(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);let r=s.shape,[a,o]=s.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=a),n<0&&(n=o);let i=U(Qu(0,a,1,"int32"),[-1,1]),l=Qu(0,o,1,"int32"),u=ge(i,l),c=sr(ui(u,Ee(+t,"int32")),li(u,Ee(-n,"int32"))),h=Vt([a,o],s.dtype);return U(Pn(ds(U(s,[-1,a,o])).map(d=>On(c,d,h))),r)}var JM=V({bandPart_:YM});function QM(e){let t;if(Array.isArray(e)){t=!1,P(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let r=e[0].shape[0];for(let a=1;a<e.length;++a)P(e[a].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[a].shape[0]} vs. ${r})`)}else t=!0,e=kn(e,e.shape[0],0).map(r=>mt(r,[0]));P(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],s=e;for(let r=0;r<e.length;++r)n.push(B.tidy(()=>{let a=s[r];if(r>0)for(let o=0;o<r;++o){let i=L(Se(L(n[o],a)),n[o]);a=ge(a,i)}return Ae(a,Uc(a,"euclidean"))}));return t?Pn(n,0):n}var ez=V({gramSchmidt_:QM});function tz(e,t=!1){if(P(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return u3(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((l,u)=>l*u),s=ds(U(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],a=[];s.forEach(l=>{let[u,c]=u3(l,t);r.push(u),a.push(c)});let o=U(Pn(r,0),e.shape),i=U(Pn(a,0),e.shape);return[o,i]}}function u3(e,t=!1){return B.tidy(()=>{P(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],s=e.shape[1],r=N0(n),a=Qn(e),o=Kr([[1]],[1,1]),i=Qn(o),l=n>=s?s:n;for(let u=0;u<l;++u){let c=a,h=i,d=r;[i,a,r]=B.tidy(()=>{let p=ze(a,[u,u],[n-u,1]),f=Uc(p),m=ze(a,[u,u],[1,1]),g=On(fs(m,0),Kr([[-1]]),Kr([[1]])),y=ge(m,L(g,f)),x=Ae(p,y);x.shape[0]===1?i=Qn(o):i=Et([o,ze(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);let A=Nt(Ae(Ye(g,y),f)),b=ze(a,[u,0],[n-u,s]),w=L(A,i),S=Qe(i);if(u===0)a=ge(b,Ye(w,Ye(S,b)));else{let R=ge(b,Ye(w,Ye(S,b)));a=Et([ze(a,[0,0],[u,s]),R],0)}let C=Qe(w),_=ze(r,[0,u],[n,r.shape[1]-u]);if(u===0)r=ge(_,Ye(Ye(_,i),C));else{let R=ge(_,Ye(Ye(_,i),C));r=Et([ze(r,[0,0],[n,u]),R],1)}return[i,a,r]}),le([c,h,d])}return!t&&n>s&&(r=ze(r,[0,0],[n,s]),a=ze(a,[0,0],[s,s])),[r,a]})}var nz=V({qr_:tz}),Zn;(function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Zn||(Zn={}));function sz(e,t,n=Zn.SUM_BY_NONZERO_WEIGHTS){let s=$(e,"losses","computeWeightedLoss"),r=null;t!=null&&(r=$(t,"weights","computeWeightedLoss"));let a=r==null?s:L(s,r);if(n===Zn.NONE)return a;if(n===Zn.SUM)return Se(a);if(n===Zn.MEAN){if(r==null)return Pt(a);{let o=s.size/r.size,i=Ae(Se(a),Se(r));return o>1?Ae(i,Ee(o)):i}}if(n===Zn.SUM_BY_NONZERO_WEIGHTS){if(r==null)return Ae(Se(a),Ee(s.size));{let o=L(r,Cs(s.shape)),i=fe(Se(Qi(o,Ee(0))),"float32");return Ae(Se(a),i)}}throw Error(`Unknown reduction: ${n}`)}var Sa=V({computeWeightedLoss_:sz});function rz(e,t,n,s=Zn.SUM_BY_NONZERO_WEIGHTS){let r=$(e,"labels","absoluteDifference"),a=$(t,"predictions","absoluteDifference"),o=null;n!=null&&(o=$(n,"weights","absoluteDifference")),ts(r.shape,a.shape,"Error in absoluteDifference: ");let i=Yt(ge(r,a));return Sa(i,o,s)}var az=V({absoluteDifference_:rz});function oz(e,t,n,s,r=Zn.SUM_BY_NONZERO_WEIGHTS){let a=$(e,"labels","cosineDistance"),o=$(t,"predictions","cosineDistance"),i=null;s!=null&&(i=$(s,"weights","cosineDistance")),ts(a.shape,o.shape,"Error in cosineDistance: ");let l=Ee(1),u=ge(l,Se(L(a,o),n,!0));return Sa(u,i,r)}var iz=V({cosineDistance_:oz});function lz(e,t,n,s=Zn.SUM_BY_NONZERO_WEIGHTS){let r=$(e,"labels","hingeLoss"),a=$(t,"predictions","hingeLoss"),o=null;n!=null&&(o=$(n,"weights","hingeLoss")),ts(r.shape,a.shape,"Error in hingeLoss: ");let i=Ee(1);r=ge(L(Ee(2),r),i);let l=Fr(ge(i,L(r,a)));return Sa(l,o,s)}var uz=V({hingeLoss_:lz});function cz(e,t,n,s=1,r=Zn.SUM_BY_NONZERO_WEIGHTS){let a=$(e,"labels","huberLoss"),o=$(t,"predictions","huberLoss"),i=null;n!=null&&(i=$(n,"weights","huberLoss")),ts(a.shape,o.shape,"Error in huberLoss: ");let l=Ee(s),u=Yt(ge(o,a)),c=qc(u,l),h=ge(u,c),d=ce(L(Ee(.5),gt(c)),L(l,h));return Sa(d,i,r)}var dz=V({huberLoss_:cz});function hz(e,t,n,s=1e-7,r=Zn.SUM_BY_NONZERO_WEIGHTS){let a=$(e,"labels","logLoss"),o=$(t,"predictions","logLoss"),i=null;n!=null&&(i=$(n,"weights","logLoss")),ts(a.shape,o.shape,"Error in logLoss: ");let l=Ee(1),u=Ee(s),c=Nt(L(a,_s(ce(o,u)))),h=L(ge(l,a),_s(ce(ge(l,o),u))),d=ge(c,h);return Sa(d,i,r)}var pz=V({logLoss_:hz});function fz(e,t,n,s=Zn.SUM_BY_NONZERO_WEIGHTS){let r=$(e,"labels","meanSquaredError"),a=$(t,"predictions","meanSquaredError"),o=null;n!=null&&(o=$(n,"weights","meanSquaredError")),ts(r.shape,a.shape,"Error in meanSquaredError: ");let i=H0(r,a);return Sa(i,o,s)}var mz=V({meanSquaredError_:fz});function gz(e,t){let n=$(e,"labels","sigmoidCrossEntropyWithLogits"),s=$(t,"logits","sigmoidCrossEntropyWithLogits");ts(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");let r=Fr(s),a=L(s,n),o=rp(Es(Nt(Yt(s))));return ce(ge(r,a),o)}function yz(e,t,n,s=0,r=Zn.SUM_BY_NONZERO_WEIGHTS){let a=$(e,"multiClassLabels","sigmoidCrossEntropy"),o=$(t,"logits","sigmoidCrossEntropy"),i=null;if(n!=null&&(i=$(n,"weights","sigmoidCrossEntropy")),ts(a.shape,o.shape,"Error in sigmoidCrossEntropy: "),s>0){let u=Ee(s),c=Ee(1),h=Ee(.5);a=ce(L(a,ge(c,u)),L(h,u))}let l=gz(a,o);return Sa(l,i,r)}var Az=V({sigmoidCrossEntropy_:yz});function xz(e,t,n=-1){if(n===-1&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Qr((r,a,o)=>{let l=$0(a,[n],!0),u=ge(fe(a,"float32"),l);o([r,u]);let c=Nt(L(u,r));return{value:Se(c,[n]),gradFunc:(p,f)=>{let[m,g]=f,y=Ji(p.shape,[n]);return[L(U(p,y),ge(fe(m,"float32"),Es(g))),L(U(p,y),ge(Es(g),fe(m,"float32")))]}}})(e,t)}function bz(e,t,n,s=0,r=Zn.SUM_BY_NONZERO_WEIGHTS){let a=$(e,"onehotLabels","softmaxCrossEntropy"),o=$(t,"logits","softmaxCrossEntropy"),i=null;if(n!=null&&(i=$(n,"weights","softmaxCrossEntropy")),ts(a.shape,o.shape,"Error in softmaxCrossEntropy: "),s>0){let u=Ee(s),c=Ee(1),h=Ee(a.shape[1]);a=ce(L(a,ge(c,u)),Ae(u,h))}let l=xz(a,o);return Sa(l,i,r)}var vz=V({softmaxCrossEntropy_:bz});function wz(e,t,n,s){let r=$(e,"indices","sparseFillEmptyRows","int32"),a=$(t,"values","sparseFillEmptyRows"),o=$(n,"denseShape","sparseFillEmptyRows","int32"),i=$(s,"defaultValue","sparseFillEmptyRows",a.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(a.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(o.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);let l={indices:r,values:a,denseShape:o,defaultValue:i},u=B.runKernel(zh,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}var kz=V({sparseFillEmptyRows_:wz});function Sz(e,t,n){let s=$(e,"inputIndices","sparseReshape","int32"),r=$(t,"inputShape","sparseReshape","int32"),a=$(n,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(a.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);let o={inputIndices:s,inputShape:r,newShape:a},i=B.runKernel(Pc,o);return{outputIndices:i[0],outputShape:i[1]}}var Iz=V({sparseReshape_:Sz});function Cz(e,t,n){let s=$(e,"data","sparseSegmentMean"),r=$(t,"indices","sparseSegmentMean","int32"),a=$(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${a.shape}`);let o={data:s,indices:r,segmentIds:a};return B.runKernel(Lh,o)}var Tz=V({sparseSegmentMean_:Cz});function Nz(e,t,n){let s=$(e,"data","sparseSegmentSum"),r=$(t,"indices","sparseSegmentSum","int32"),a=$(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${a.shape}`);let o={data:s,indices:r,segmentIds:a};return B.runKernel(Bh,o)}var Ez=V({sparseSegmentSum_:Nz});function _z(e,t,n,s,r,a,o,i){let l=$(e,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=$(t,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let c={separator:n,nGramWidths:s,leftPad:r,rightPad:a,padWidth:o,preserveShortSequences:i},h={data:l,dataSplits:u},d=B.runKernel(zc,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}var Rz=V({stringNGrams_:_z});function $z(e,t,n=!0){let s=$(e,"input","stringSplit","string"),r=$(t,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);let a={skipEmpty:n},o={input:s,delimiter:r},i=B.runKernel(Vh,o,a);return{indices:i[0],values:i[1],shape:i[2]}}var Dz=V({stringSplit_:$z});function Fz(e,t){let n=$(e,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let r={input:n};return B.runKernel(Uh,r,s)}var Oz=V({stringToHashBucketFast_:Fz}),m7={fft:hp,ifft:ec,rfft:pp,irfft:G0},g7={hammingWindow:pM,hannWindow:l7,frame:u7,stft:yM},He={flipLeftRight:vM,grayscaleToRGB:kM,resizeNearestNeighbor:f7,resizeBilinear:p7,rotateWithOffset:IM,cropAndResize:xM,nonMaxSuppression:TM,nonMaxSuppressionAsync:OM,nonMaxSuppressionWithScore:MM,nonMaxSuppressionWithScoreAsync:LM,nonMaxSuppressionPadded:WM,nonMaxSuppressionPaddedAsync:UM,threshold:XM,transform:ZM},Qx={bandPart:JM,gramSchmidt:ez,qr:nz},y7={absoluteDifference:az,computeWeightedLoss:Sa,cosineDistance:iz,hingeLoss:uz,huberLoss:dz,logLoss:pz,meanSquaredError:mz,sigmoidCrossEntropy:Az,softmaxCrossEntropy:vz},A7={sparseFillEmptyRows:kz,sparseReshape:Iz,sparseSegmentMean:Tz,sparseSegmentSum:Ez},x7={stringNGrams:Rz,stringSplit:Dz,stringToHashBucketFast:Oz},Ia=class extends cI{minimize(e,t=!1,n){let{value:s,grads:r}=this.computeGradients(e,n);if(n!=null){let a=n.map(o=>({name:o.name,tensor:r[o.name]}));this.applyGradients(a)}else this.applyGradients(r);return le(r),t?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return EI(e,t)}dispose(){this.iterations_!=null&&le(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Ee(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Ia,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var Q0=class extends Ia{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=B.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=B.registeredVariables[n],a=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${n}/accum_grad`,variable:Y(()=>st(r).variable(a))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${n}/accum_var`,variable:Y(()=>st(r).variable(a))});let o=Array.isArray(e)?e[s].tensor:e[n];if(o==null)return;let i=this.accumulatedGrads[s].variable,l=this.accumulatedUpdates[s].variable;Y(()=>{let u=ce(L(i,this.rho),L(gt(o),1-this.rho)),c=L(Ae(In(ce(l,this.epsilon)),In(ce(i,this.epsilon))),o),h=ce(L(l,this.rho),L(gt(c),1-this.rho));i.assign(u),l.assign(h);let d=ce(L(c,-this.learningRate),r);r.assign(d)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(le(this.accumulatedGrads.map(e=>e.variable)),le(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};Q0.className="Adadelta";ii(Q0);var eg=class extends Ia{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=B.registeredVariables[n];this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${n}/accumulator`,variable:Y(()=>Gc(r.shape,this.initialAccumulatorValue).variable(!1))});let a=Array.isArray(e)?e[s].tensor:e[n];if(a==null)return;let o=this.accumulatedGrads[s].variable;Y(()=>{let i=ce(o,gt(a));o.assign(i);let l=ce(L(Ae(a,In(ce(i,B.backend.epsilon()))),-this.learningRate),r);r.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&le(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};eg.className="Adagrad";ii(eg);var tg=class extends Ia{constructor(e,t,n,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Y(()=>{this.accBeta1=Ee(t).variable(),this.accBeta2=Ee(n).variable()}),s==null&&(this.epsilon=B.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);Y(()=>{let n=ge(1,this.accBeta1),s=ge(1,this.accBeta2);t.forEach((r,a)=>{let o=B.registeredVariables[r],i=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:Y(()=>st(o).variable(i))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${r}/v`,variable:Y(()=>st(o).variable(i))});let l=Array.isArray(e)?e[a].tensor:e[r];if(l==null)return;let u=this.accumulatedFirstMoment[a].variable,c=this.accumulatedSecondMoment[a].variable,h=ce(L(u,this.beta1),L(l,1-this.beta1)),d=ce(L(c,this.beta2),L(gt(l),1-this.beta2)),p=Ae(h,n),f=Ae(d,s);u.assign(h),c.assign(d);let m=ce(L(Ae(p,ce(In(f),this.epsilon)),-this.learningRate),o);o.assign(m)}),this.accBeta1.assign(L(this.accBeta1,this.beta1)),this.accBeta2.assign(L(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&le(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&le(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),Y(()=>{this.accBeta1.assign(Aa(this.beta1,this.iterations_+1)),this.accBeta2.assign(Aa(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};tg.className="Adam";ii(tg);var ng=class extends Ia{constructor(e,t,n,s=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Y(()=>{this.iteration=Ee(0).variable(),this.accBeta1=Ee(t).variable()}),s==null&&(this.epsilon=B.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);Y(()=>{let n=ge(1,this.accBeta1),s=Ae(-this.learningRate,ce(L(this.iteration,this.decay),1));t.forEach((r,a)=>{let o=B.registeredVariables[r],i=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:st(o).variable(i)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${r}/v`,variable:st(o).variable(i)});let l=Array.isArray(e)?e[a].tensor:e[r];if(l==null)return;let u=this.accumulatedFirstMoment[a].variable,c=this.accumulatedWeightedInfNorm[a].variable,h=ce(L(u,this.beta1),L(l,1-this.beta1)),d=L(c,this.beta2),p=Yt(l),f=na(d,p);u.assign(h),c.assign(f);let m=ce(L(Ae(s,n),Ae(h,ce(f,this.epsilon))),o);o.assign(m)}),this.iteration.assign(ce(this.iteration,1)),this.accBeta1.assign(L(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&le(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&le(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};ng.className="Adamax";ii(ng);var fp=class extends Ia{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=Array.isArray(e)?e[s].tensor:e[n];if(r==null)return;let a=B.registeredVariables[n];Y(()=>{let o=ce(L(this.c,r),a);a.assign(o)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=mn(Ee(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};fp.className="SGD";ii(fp);var sg=class extends fp{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Ee(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=B.registeredVariables[n];this.accumulations[s]==null&&(this.accumulations[s]={originalName:`${n}/momentum`,variable:Y(()=>st(r).variable(!1))});let a=this.accumulations[s].variable,o=Array.isArray(e)?e[s].tensor:e[n];o!=null&&Y(()=>{let i,l=ce(L(this.m,a),o);this.useNesterov?i=ce(L(this.c,ce(o,L(l,this.m))),r):i=ce(L(this.c,l),r),a.assign(l),r.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&le(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};sg.className="Momentum";ii(sg);var rg=class extends Ia{constructor(e,t=.9,n=0,s=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,s==null&&(this.epsilon=B.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=B.registeredVariables[n],a=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${n}/rms`,variable:Y(()=>st(r).variable(a))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${n}/momentum`,variable:Y(()=>st(r).variable(a))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${n}/mg`,variable:Y(()=>st(r).variable(a))});let o=Array.isArray(e)?e[s].tensor:e[n];if(o==null)return;let i=this.accumulatedMeanSquares[s].variable,l=this.accumulatedMoments[s].variable;Y(()=>{let u=ce(L(i,this.decay),L(gt(o),1-this.decay));if(this.centered){let c=this.accumulatedMeanGrads[s].variable,h=ce(L(c,this.decay),L(o,1-this.decay)),d=Ae(L(o,this.learningRate),In(ge(u,ce(gt(h),this.epsilon)))),p=ce(L(l,this.momentum),d);i.assign(u),c.assign(h),l.assign(p);let f=ge(r,p);r.assign(f)}else{let c=ce(L(i,this.decay),L(gt(o),1-this.decay)),h=ce(L(l,this.momentum),Ae(L(o,this.learningRate),In(ce(c,this.epsilon))));i.assign(c),l.assign(h);let d=ge(r,h);r.assign(d)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&le(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&le(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&le(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};rg.className="RMSProp";ii(rg);var Pa=class{static sgd(e){return new fp(e)}static momentum(e,t,n=!1){return new sg(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new rg(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new tg(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new Q0(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new ng(e,t,n,s,r)}static adagrad(e,t=.1){return new eg(e,t)}},Ei={sgd:Pa.sgd,momentum:Pa.momentum,adadelta:Pa.adadelta,adagrad:Pa.adagrad,rmsprop:Pa.rmsprop,adamax:Pa.adamax,adam:Pa.adam},Pz=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:e=>e())();function eb(){return new Promise(e=>Pz(()=>e()))}var T={};Ue(T,{ERF_A1:()=>Yz,ERF_A2:()=>Jz,ERF_A3:()=>Qz,ERF_A4:()=>eL,ERF_A5:()=>tL,ERF_P:()=>Zz,PARALLELIZE_THRESHOLD:()=>tb,RowPartitionType:()=>Ur,SELU_SCALE:()=>v7,SELU_SCALEALPHA:()=>b7,applyActivation:()=>Y0,assertAndGetBroadcastShape:()=>At,assertAxesAreInnerMostDims:()=>UF,assertParamsConsistent:()=>Mz,assignToTypedArray:()=>iL,axesAreInnerMostDims:()=>Ix,calculateShapes:()=>eI,checkEinsumDimSizes:()=>pL,checkPadOnDimRoundingMode:()=>ns,combineLocations:()=>SI,combineRaggedTensorToTensorShapes:()=>Lz,complexWithEvenIndex:()=>rL,complexWithOddIndex:()=>aL,computeConv2DInfo:()=>Jh,computeConv3DInfo:()=>gI,computeDefaultPad:()=>ix,computeDilation2DInfo:()=>GD,computeOptimalWindowSize:()=>Uz,computeOutAndReduceShapes:()=>II,computeOutShape:()=>zz,computePool2DInfo:()=>mI,computePool3DInfo:()=>HD,convertConv2DDataFormat:()=>yI,decodeEinsumEquation:()=>dL,eitherStridesOrDilationsAreOne:()=>ta,expandShapeToKeepDim:()=>Ji,exponent:()=>uL,exponents:()=>lL,fromStringArrayToUint8:()=>FL,fromUint8ToStringArray:()=>DL,getAxesPermutation:()=>CI,getBroadcastDims:()=>YS,getComplexWithIndex:()=>oL,getEinsumComputePath:()=>fL,getEinsumPermutation:()=>hL,getFusedBiasGradient:()=>Z0,getFusedDyActivation:()=>K0,getImageCenter:()=>Gz,getInnerMostAxes:()=>GF,getPermuted:()=>jz,getRaggedRank:()=>Wz,getReductionAxes:()=>en,getReshaped:()=>Hz,getReshapedPermuted:()=>qz,getRowPartitionTypesHelper:()=>Bz,getSliceBeginCoords:()=>Xz,getSliceSize:()=>Kz,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>AL,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>xL,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>bL,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>kL,getSparseReshapeInputOutputMismatchErrorMessage:()=>IL,getSparseReshapeInputOutputMultipleErrorMessage:()=>SL,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>vL,getSparseReshapeNegativeOutputDimErrorMessage:()=>wL,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>EL,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>CL,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>TL,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>NL,getUndoAxesPermutation:()=>Cx,isIdentityPermutation:()=>mL,log:()=>pR,mergeRealAndImagArrays:()=>nL,prepareAndValidate:()=>QS,prepareSplitSize:()=>yL,segment_util:()=>w7,shouldFuse:()=>J0,slice_util:()=>zt,splitRealAndImagArrays:()=>sL,tupleValuesAreOne:()=>to,upcastType:()=>Fn,validateDefaultValueShape:()=>Vz,validateInput:()=>K2,validateUpdateShape:()=>X2,warn:()=>La});function Mz(e,t){let n=e[0].length;e.forEach((r,a)=>{P(r.length===n,()=>`Error in concat${n}D: rank of tensors[${a}] must be the same as the rank of the rest (${n})`)}),P(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let s=e[0];e.forEach((r,a)=>{for(let o=0;o<n;o++)P(o===t||r[o]===s[o],()=>`Error in concat${n}D: Shape of tensors[${a}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${a}.`)})}function zz(e,t){let n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}var Ur;(function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"})(Ur||(Ur={}));function Lz(e,t,n){let s=new Array;if(n==null&&t==null)return s;if(t==null)for(;s.length<e+n.length;)s.push(-1);else s=t.slice();if(n==null)return s;if(e+n.length!==s.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${s.length}`);for(let r=1;r<n.length;++r){let a=n[r],o=s[s.length-n.length+r],i=s[o];if(a>=0)if(i>=0){if(i!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+e}] = ${a} but shape[${r+e}] = ${i}`)}else s[o]=a}return s}function Bz(e){let t={FIRST_DIM_SIZE:Ur.FIRST_DIM_SIZE,VALUE_ROWIDS:Ur.VALUE_ROWIDS,ROW_LENGTHS:Ur.ROW_LENGTHS,ROW_SPLITS:Ur.ROW_SPLITS,ROW_LIMITS:Ur.ROW_LIMITS,ROW_STARTS:Ur.ROW_STARTS},n=[];for(let s of e)if(s in t)n.push(t[s]);else break;return n}function Wz(e){return e.length===0?0:e[0]===Ur.FIRST_DIM_SIZE?e.length-1:e.length}function Vz(e,t){if(e==null||t==null)return;let n=e.length,s=t.length;if(n>=s)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(n,s-1);++r){let a=e[r],o=t[r+1];if(a>=0&&o>=0&&a!==1&&a!==o)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-e.length}] = ${a} but ragged tensor input.flatValues.shape[${r-e.length}] = ${o}`)}}var tb=30;function Uz(e){return e<=tb?e:pm(e,Math.floor(Math.sqrt(e)))}function Gz(e,t,n){let s=n*(typeof e=="number"?e:e[0]),r=t*(typeof e=="number"?e:e[1]);return[s,r]}function Hz(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);let a=t.length;for(let o=0;o<a;++o)r=r.concat([e[o+1]/t[o],t[o]]);r=r.concat(e.slice(a+1))}return r}function jz(e,t,n=!0){let s=[];if(n){s.push(t);for(let r=t+1;r<e;++r)r<=2*t?(s.push(r),s.push(r-(t+1))):s.push(r)}else{let r=[],a=[];for(let o=1;o<e;++o)o>=t*2+1||o%2===1?a.push(o):r.push(o);s.push(...r),s.push(0),s.push(...a)}return s}function qz(e,t,n,s=!0){let r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let a=1;a<e.length;++a)a<=t.length?s?r.push(t[a-1]*e[a]):r.push(e[a]/t[a-1]):r.push(e[a]);return r}function Xz(e,t){let n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function Kz(e,t,n){let s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}var b7=1.7580993408473768,v7=1.0507009873554805,Zz=.3275911,Yz=.254829592,Jz=-.284496736,Qz=1.421413741,eL=-1.453152027,tL=1.061405429;function nL(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(e.length*2);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function sL(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function rL(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function aL(e){let t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function oL(e,t){let n=e[t*2],s=e[t*2+1];return{real:n,imag:s}}function iL(e,t,n,s){e[s*2]=t,e[s*2+1]=n}function lL(e,t){let n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){let a=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function uL(e,t,n){let s=(n?2:-2)*Math.PI*(e/t),r=Math.cos(s),a=Math.sin(s);return{real:r,imag:a}}var Ny="->",cL=/->/g,c3=",",d3="...";function dL(e,t){e=e.replace(/\s/g,"");let n=(e.length-e.replace(cL,"").length)/Ny.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Ny}").`);let[s,r]=e.split(Ny);P(s.indexOf(d3)===-1,()=>`The ellipsis notation ("${d3}") is not supported yet.`);let a=s.split(c3),o=a.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let i=[];for(let d=0;d<r.length;++d){let p=r[d];if(!a.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);i.indexOf(p)===-1&&i.push(p)}for(let d=0;d<s.length;++d){let p=s[d];i.indexOf(p)===-1&&p!==c3&&i.push(p)}let l=new Array(a.length);for(let d=0;d<o;++d){if(new Set(a[d].split("")).size!==a[d].length)throw new Error(`Found duplicate axes in input component ${a[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let p=0;p<a[d].length;++p)l[d].push(i.indexOf(a[d][p]))}let u=i.length,c=r.length,h=[];for(let d=c;d<u;++d)h.push(d);return{allDims:i,summedDims:h,idDims:l}}function hL(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;let s=[];for(let r=0;r<e;++r)n[r]===-1&&s.push(r);return n=n.filter(r=>r!==-1),{permutationIndices:n,expandDims:s}}function pL(e,t,n){let s=new Array(e);for(let r=0;r<n.length;++r){let a=n[r].shape;for(let o=0;o<t[r].length;++o)s[t[r][o]]===void 0?s[t[r][o]]=a[o]:P(s[t[r][o]]===a[o],()=>`Expected dimension ${s[t[r][o]]} at axis ${o} of input shaped ${JSON.stringify(a)}, but got dimension ${a[o]}`)}}function fL(e,t){let n=e,s=[],r=0;e.length===0&&n.push(-1),r=e.length+1;for(let o=0;o<r;++o)s.push([]);let a=[];for(let o=0;o<n.length;++o){let i=n[o],l=gL(t,i);for(let u of l)a.indexOf(u)===-1&&(s[o].push(u),a.push(u))}return{path:n,steps:s}}function mL(e){return e.every((t,n)=>t===n)}function gL(e,t){let n=[];for(let s=0;s<e.length;++s)(e[s].length===0||e[s].indexOf(t)!==-1||t===-1)&&n.push(s);return n}function yL(e,t,n=0){let s=[];if(typeof t=="number")P(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(e.shape[n]/t);else{let r=t.reduce((o,i)=>(i===-1&&(o+=1),o),0);P(r<=1,()=>"There should be only one negative value in split array.");let a=t.indexOf(-1);if(a!==-1){let o=t.reduce((i,l)=>l>0?i+l:i);t[a]=e.shape[n]-o}P(e.shape[n]===t.reduce((o,i)=>o+i),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}function AL(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function xL(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function bL(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function vL(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function wL(e,t){return`size ${e} must be non-negative, not ${t}`}function kL(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function SL(e,t){let n=St(e),s=St(t);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${e} outputShape= ${t}`}function IL(e,t){let n=St(e),s=St(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${s}. inputShape=${e} outputShape=${t}`}function CL(){return"segment ids must be >= 0"}function TL(){return"segment ids are not increasing"}function NL(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function EL(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var w7={};Ue(w7,{collectGatherOpShapeInfo:()=>$L,computeOutShape:()=>RL,segOpComputeOptimalWindowSize:()=>_L});function _L(e,t){let n=!1,s;for(e<=tb?(s=e,n=!0):s=pm(e,Math.floor(Math.sqrt(e)));!n;)s>t||s===e?n=!0:s=pm(e,s+1);return s}function RL(e,t,n){let s=[],r=e.length;for(let a=0;a<r;a++)a!==t?s.push(e[a]):s.push(n);return s}function $L(e,t,n,s){let r=t.shape.length,a=e.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let h=0;h<s;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);let o=e.shape[n],i=[],l=1,u=1,c=1;for(let h=0;h<s;++h)i.push(e.shape[h]),l*=e.shape[h];for(let h=s;h<n;h++)i.push(e.shape[h]),u*=e.shape[h];for(let h=s;h<r;h++)i.push(t.shape[h]);for(let h=n+1;h<a;h++)i.push(e.shape[h]),c*=e.shape[h];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:o,outputShape:i}}function DL(e){try{return e.map(t=>ym(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function FL(e){return e.map(t=>jh(t))}var ar={};Ue(ar,{nonMaxSuppressionV3Impl:()=>c7,nonMaxSuppressionV4Impl:()=>d7,nonMaxSuppressionV5Impl:()=>h7,whereImpl:()=>QI});var k7={kernelName:dl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,nu(fe(n,"float32"),-1))}}},OL={kernelName:mc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=gt(fe(n,"float32")),r=In(ge(Ee(1),s));return Nt(Ae(e,r))}}}},PL={kernelName:gc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=In(ge(gt(fe(n,"float32")),1));return Ae(e,s)}}}},ML={kernelName:va,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=At(n.shape,s.shape);return{a:()=>{let i=e,l=en(n.shape,r);return l.length>0&&(i=Se(i,l)),U(i,n.shape)},b:()=>{let i=e,l=en(s.shape,r);return l.length>0&&(i=Se(i,l)),U(i,s.shape)}}}},zL={kernelName:ho,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((s,r)=>{n[r]=()=>e.clone()}),n}},LL={kernelName:po,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>st(n)}}},BL={kernelName:xc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>st(n)}}},WL={kernelName:bc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ae(e,In(ge(Ee(1),gt(fe(n,"float32")))))}}},VL={kernelName:vc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=In(ce(Ee(1),gt(fe(n,"float32"))));return Ae(e,s)}}}},UL={kernelName:hl,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=At(n.shape,s.shape);return{a:()=>{let i=ce(gt(n),gt(s)),l=L(e,Ae(s,i)),u=en(n.shape,r);return u.length>0&&(l=Se(l,u)),U(l,n.shape)},b:()=>{let i=ce(gt(n),gt(s)),l=Nt(L(e,Ae(n,i))),u=en(s.shape,r);return u.length>0&&(l=Se(l,u)),U(l,s.shape)}}}},GL={kernelName:wc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ae(e,ce(gt(fe(n,"float32")),1))}}},HL={kernelName:kc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ae(e,ge(Ee(1),gt(fe(n,"float32"))))}}};function jL(e,t,n,s,r,a){let o=$(e,"dy","avgPool3dGrad"),i=$(t,"input","avgPool3dGrad"),l=o,u=i,c=!1;i.rank===4&&(c=!0,l=U(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),u=U(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),P(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),P(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),ns("avgPool3dGrad",r,a);let h={dy:l,input:u},d={filterSize:n,strides:s,pad:r,dimRoundingMode:a},p=B.runKernel(Jm,h,d);return c?U(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var qL=V({avgPool3dGrad_:jL}),XL={kernelName:Nh,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{filterSize:r,strides:a,pad:o,dimRoundingMode:i}=n;return{x:()=>qL(e,s,r,a,o,i)}}};function KL(e,t,n,s,r){let a=$(e,"dy","avgPoolGrad"),o=$(t,"input","avgPoolGrad");P(o.rank===a.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${a.rank})`);let i=o,l=a,u=!1;o.rank===3&&(u=!0,i=U(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=U(a,[1,a.shape[0],a.shape[1],a.shape[2]])),P(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),P(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);let c={dy:l,input:i},h={filterSize:n,strides:s,pad:r},d=B.runKernel(Ym,c,h);return u?U(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var ZL=V({avgPoolGrad_:KL}),YL={kernelName:fo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{filterSize:r,strides:a,pad:o}=n;return{x:()=>ZL(e,s,r,a,o)}}},JL={kernelName:mo,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[s,r]=t,{transposeA:a,transposeB:o}=n;return!a&&!o?{a:()=>Ye(e,r,!1,!0),b:()=>Ye(s,e,!0,!1)}:!a&&o?{a:()=>Ye(e,r,!1,!1),b:()=>Ye(e,s,!0,!1)}:a&&!o?{a:()=>Ye(r,e,!1,!0),b:()=>Ye(s,e,!1,!1)}:{a:()=>Ye(r,e,!0,!0),b:()=>Ye(e,s,!0,!0)}}},QL={kernelName:pl,gradFunc:(e,t,n)=>{let{blockShape:s,crops:r}=n;return{x:()=>up(e,s,r)}}},eB={kernelName:wS,gradFunc:(e,t,n)=>{let s=n,r=s.inputShape,a=s.shape,o=Array.from(a);for(let l=r.length-1;l>=0;l--)if(r[l]===a[l])o[l]=1;else if(r[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);let i=[];for(let l=0;l<o.length;l++)o[l]>1&&i.push(l);return{x:()=>Se(e,i,!0)}}},tB={kernelName:go,gradFunc:e=>({x:()=>e.clone()})},nB={kernelName:yo,gradFunc:e=>({x:()=>st(e)})},sB={kernelName:wa,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>On(sr(li(s,r),ui(s,a)),e,st(e))}}},rB={kernelName:_h,inputsToSave:["x"],gradFunc:k7.gradFunc},aB={kernelName:fl,saveAllInputs:!0,gradFunc:(e,t,n)=>{let s=t.map(l=>l.shape),{axis:r}=n,a=rr(r,t[0].shape)[0],o=s.map(l=>l[a]);return kn(e,o,a).map(l=>()=>l)}},oB={kernelName:Ao,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,{dilations:a,strides:o,pad:i,dataFormat:l}=n;return P(to(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>yx(s.shape,e,r,o,i,l),filter:()=>Yx(s,e,r.shape,o,i,l)}}},iB={kernelName:xo,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,{strides:a,pad:o,dataFormat:i,dimRoundingMode:l}=n;return{dy:()=>ya(e,r,a,o,i,1,l),filter:()=>Yx(e,s,r.shape,a,o,i,l)}}};function lB(e,t,n,s,r){let a=e;e.rank===4&&(a=U(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;o.rank===4&&(o=U(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),P(a.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`),P(o.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`),P(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),P(a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),P(o.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`);let i={x:a,dy:o},l={strides:s,pad:r,filterShape:n};return B.runKernel(n0,i,l)}var uB=V({conv3DBackpropFilter_:lB}),cB={kernelName:Rh,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:s,strides:r,pad:a}=n;P(to(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let[o,i]=t;return{x:()=>bI(o.shape,e,i,r,a),filter:()=>uB(o,e,i.shape,r,a)}}},dB={kernelName:bo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(Nt(W0(fe(n,"float32"))),e)}}},hB={kernelName:vo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(V0(fe(n,"float32")),e)}}},pB={kernelName:wo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r,exclusive:a,reverse:o}=n;return{x:()=>{let i=CI([r],s.rank),l=T0(e,r,a,!o);return i!=null&&(l=Qe(l,i)),l}}}},fB={kernelName:ko,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:s,strides:r,pad:a,dimRoundingMode:o}=n,i=s??[1,1];P(to(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[l,u]=t;return P(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),P(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),P(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),P(ta(r,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${i}'.`),ns("depthwiseConv2d",a,o),{x:()=>i7(l.shape,e,u,r,a,i,o),filter:()=>o7(l,e,u.shape,r,a,i,o)}}},mB={kernelName:$h,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,a={x:s,filter:r,dy:e},o={x:s,filter:r,dy:e};return{x:()=>B.runKernel(fm,a,n),filter:()=>B.runKernel(mm,o,n)}}},gB={kernelName:Io,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,s={dy:e,y:n};return{x:()=>B.runKernel(l0,s)}}},yB={kernelName:Sc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,s=L(Es(Nt(gt(n))),2/Math.sqrt(Math.PI));return{x:()=>L(e,s)}}},AB={kernelName:Co,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,n)}}},xB={kernelName:xl,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>U(e,n.shape)}}},bB={kernelName:bl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,Es(n))}}},vB={kernelName:To,gradFunc:e=>({x:()=>st(e)})},wB={kernelName:No,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=At(n.shape,s.shape);return{a:()=>{let i=Ae(e,fe(s,"float32")),l=en(n.shape,r);return l.length>0?U(Se(i,l),n.shape):i},b:()=>{let i=L(e,fe(n,"float32")),l=en(s.shape,r);l.length>0&&(i=U(Se(i,l),s.shape));let u=gt(s);return Nt(Ae(i,fe(u,"float32")))}}}},kB={kernelName:Eo,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:s}=n,[r,a,o,i]=t,l=i??Ee(1),u=en(a.shape,r.shape),c=[];if(a.rank===1){for(let b=0;b<r.shape.length-1;++b)c.push(r.shape[b]);c.push(1)}let h=ge(r,a),d=L(e,l),p=z0(ce(o,Ee(s))),f=L(L(L(p,p),p),Ee(-.5));return{x:()=>a.rank===1?U(L(L(e,Ws(U(p,[1,1,1,a.shape[0]]),c)),l),r.shape):U(L(L(e,p),l),r.shape),mean:()=>{let b=L(L(p,Ee(-1)),d);return a.rank===1&&(b=Se(b,u)),U(b,a.shape)},variance:()=>{let b=L(L(f,h),d);return a.rank===1&&(b=Se(b,u)),U(b,a.shape)},scale:()=>{let b=L(h,p),w=L(e,b);return a.rank===1&&(w=Se(w,u)),U(w,a.shape)},offset:()=>{let b=e;return a.rank===1&&(b=Se(b,u)),U(b,a.shape)}}}},SB={kernelName:wl,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[s,r]=t,{axis:a}=n,o=rr(a,s.shape)[0];return{x:()=>{let l=s.shape,u=r.size,c=l.slice(0,o),h=c.length,d=l.slice(a,l.length).slice(1),p=d.length,f=h3(0,h),m=h3(h+1,h+1+p),g=p3([c,[u],d]),y=U(e,g),x=U(r,[u]),A=p3([[h],f,m]),b=Qe(y,A),w=q0(b,x,s.shape[o]),S=Cx(A);return w=Qe(w,S),w},indices:()=>r}}};function h3(e,t){let n=[];for(let s=e;s<t;++s)n.push(s);return n}function p3(e){let t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}var IB={kernelName:_o,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>st(n),b:()=>st(s)}}},CB={kernelName:Ro,gradFunc:e=>({x:()=>fe(e,"float32")})},TB={kernelName:Cc,gradFunc:e=>({x:()=>st(e)})},NB={kernelName:Tc,gradFunc:e=>({x:()=>st(e)})},EB={kernelName:Il,gradFunc:e=>({x:()=>st(e)})},_B={kernelName:$o,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{alpha:r}=n,a=fs(s,0);return{x:()=>On(a,e,L(e,r))}}},RB={kernelName:Nc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ae(e,ce(n,1))}}},$B={kernelName:Do,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ae(e,fe(n,"float32"))}}},DB={kernelName:SS,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n;return{logits:()=>{let o=Es(s);return ge(e,L(Se(e,r,!0),o))}}}};function FB(e,t,n,s=5,r=1,a=1,o=.5){let i={x:e,y:t,dy:n},l={depthRadius:s,bias:r,alpha:a,beta:o};return B.runKernel(h0,i,l)}var OB=V({localResponseNormalizationBackprop_:FB}),PB={kernelName:Oh,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{depthRadius:a,bias:o,alpha:i,beta:l}=n;return{x:()=>OB(s,r,e,a,o,i,l)}}};function S7(e,t,n,s){return t.rank<n.rank&&(t=U(t,Ji(t.shape,s))),e.rank<n.rank&&(e=U(e,Ji(e.shape,s))),{x:()=>L(e,fe(Ns(n,t),e.dtype))}}var f3={kernelName:Fo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let s=n,{reductionIndices:r}=s,a=t[0],o=t[1],i=rr(r,a.shape),l=S7(e,o,a,i);return{x:()=>l.x()}}},MB={kernelName:Oo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>L(e,fe(li(n,s),"float32")),b:()=>L(e,fe(E0(n,s),"float32"))}}};function zB(e,t,n,s,r,a,o){let i=$(e,"dy","maxPool3dGrad"),l=$(t,"input","maxPool3dGrad"),u=$(n,"output","maxPool3dGrad"),c=i,h=l,d=u,p=!1;l.rank===4&&(p=!0,c=U(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),h=U(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=U(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),P(c.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),P(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),P(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),ns("maxPool3dGrad",a,o);let f={dy:c,input:h,output:d},m={filterSize:s,strides:r,pad:a,dimRoundingMode:o},g=B.runKernel(f0,f,m);return p?U(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var LB=V({maxPool3dGrad_:zB}),BB={kernelName:Ph,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=n;return{x:()=>LB(e,s,r,a,o,i,l)}}};function WB(e,t,n,s,r,a,o){let i=$(e,"dy","maxPoolGrad"),l=$(t,"input","maxPoolGrad"),u=$(n,"output","maxPoolGrad");P(l.rank===i.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${i.rank})`),P(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),P(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),ns("maxPoolGrad",a,o);let c={dy:i,input:l,output:u},h={filterSize:s,strides:r,pad:a,dimRoundingMode:o};return B.runKernel(p0,c,h)}var VB=V({maxPoolGrad_:WB}),UB={kernelName:Po,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{filterSize:a,strides:o,pad:i}=n;return{x:()=>VB(e,s,r,a,o,i)}}},GB={kernelName:Mo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n,a=rr(r,s.shape),i=II(s.shape,a)[1],l=St(i);return{x:()=>{let c=s.shape.slice();a.forEach(p=>{c[p]=1});let h=U(e,c);return Ae(L(h,Cs(s.shape,"float32")),l)}}}},HB={kernelName:zo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let s=n,{axis:r}=s,[a,o]=t,i=rr(r,a.shape),l=S7(e,o,a,i);return{x:()=>l.x()}}},jB={kernelName:Lo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>L(e,fe(ui(n,s),"float32")),b:()=>L(e,fe(fs(n,s),"float32"))}}},qB={kernelName:Bo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let s=t[0],{paddings:r}=n,a=r.map(o=>o[0]);return{x:()=>ze(e,a,s.shape)}}},XB={kernelName:_c,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=At(n.shape,s.shape);return{a:()=>{let i=en(n.shape,r);return i.length>0?U(Se(e,i),n.shape):e},b:()=>{let i=L(e,Nt(Hc(Ae(n,s)))),l=en(s.shape,r);return l.length>0?U(Se(i,l),s.shape):i}}}},KB={kernelName:Wo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=At(n.shape,s.shape);return{a:()=>{let i=L(e,fe(s,"float32")),l=en(n.shape,r);return l.length>0?U(Se(i,l),n.shape):i},b:()=>{let i=L(e,fe(n,"float32")),l=en(s.shape,r);return l.length>0?U(Se(i,l),s.shape):i}}}},ZB={kernelName:_l,gradFunc:e=>({x:()=>Nt(e)})},YB={kernelName:Ol,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>Vt(n.shape,"float32")}}},JB={kernelName:Fl,gradFunc:e=>({x:()=>st(e)})},QB={kernelName:Pl,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:s}=n;return ds(e,s).map(a=>()=>a)}},m3={kernelName:Vo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let s=t[0],{paddings:r}=n,a=r.map(o=>o[0]);return{x:()=>ze(e,a,s.shape)}}},eW={kernelName:Uo,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,s,r]=t,a=n,o=s,i=At(a.shape,o.shape);return{a:()=>{let c=fe(o,"float32"),h=L(e,L(c,Aa(a,ge(c,Ee(1))))),d=en(a.shape,i);return d.length>0&&(h=Se(h,d)),U(h,a.shape)},b:()=>{let c=fs(a,0),h=On(c,_s(a),st(a)),d=L(e,L(r,h)),p=en(o.shape,i);return p.length>0&&(d=Se(d,p)),U(d,o.shape)}}}},tW={kernelName:Go,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,s]=t,r=fs(n,0);return{x:()=>On(r,e,L(e,s)),alpha:()=>{let a=On(r,st(e),L(e,n)),o=en(s.shape,e.shape);return o.length>0&&(a=Se(a,o)),U(a,s.shape)}}}};function nW(e,t,n){let s=e.shape.slice();s[n]=1;let r=U(t,s),a=mh(e,n,!0,!1),o=mh(e,n,!0,!0),i=L(a,o);return L(r,i)}function sW(e,t,n){let s=e.shape.length,r=s-n.length,a=T.getAxesPermutation(n,s),o=e;a!=null&&(o=Qe(e,a));let i=o.shape.slice(),u=i.splice(s-n.length,n.length).reduce((d,p)=>d*p,1);i.push(u);let c=o.reshape(i),h=nW(c,t,r);if(h=h.reshape(o.shape),a!=null){let d=T.getUndoAxesPermutation(a);h=Qe(h,d)}return h}var rW={kernelName:Ho,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n,a=[];return r==null?a=s.shape.map((o,i)=>i):typeof r=="number"?a=[r]:a=r,{x:()=>sW(s,e,a)}}},aW={kernelName:So,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=At(n.shape,s.shape);return{a:()=>{let i=Ae(e,fe(s,"float32")),l=en(n.shape,r);return l.length>0?U(Se(i,l),n.shape):i},b:()=>{let i=L(e,fe(n,"float32")),l=en(s.shape,r);l.length>0&&(i=U(Se(i,l),s.shape));let u=gt(s);return Nt(Ae(i,fe(u,"float32")))}}}},oW={kernelName:Ml,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ae(e,Nt(gt(n)))}}},iW={kernelName:Ko,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,s=L(ui(n,6),nu(n));return{x:()=>L(e,fe(s,"float32"))}}},lW={kernelName:jo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,fe(nu(n),"float32"))}}},uW={kernelName:zl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>U(e,n.shape)}}},cW={kernelName:Xo,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[s]=t,r={dy:e,images:s};return{images:()=>B.runKernel(x0,r,n)}}},dW={kernelName:qo,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[s]=t,r={dy:e,images:s};return{images:()=>B.runKernel(A0,r,n)}}},hW={kernelName:Ll,gradFunc:(e,t,n)=>{let{dims:s}=n,r=rr(s,e.shape);return{x:()=>Hs(e,r)}}},pW={kernelName:Bl,gradFunc:e=>({x:()=>st(e)})},fW={kernelName:Zo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Nt(Ae(e,L(Aa(n,1.5),2)))}}},mW={kernelName:Vl,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>fe(st(n),"float32"),t:()=>L(e,fe(n,e.dtype)),e:()=>L(e,fe(ap(n),e.dtype))}}},gW={kernelName:Dc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=fs(n,Ee(0)),r=Ee(b7),a=Ee(v7),o=L(e,a),i=L(L(e,r),Es(fe(n,"float32")));return On(s,o,i)}}}},yW={kernelName:Jo,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,L(n,ge(Ee(1),n)))}}},AW={kernelName:Fc,gradFunc:e=>({x:()=>st(e)})},xW={kernelName:Yo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(np(fe(n,"float32")),e)}}},bW={kernelName:Gl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(C0(fe(n,"float32")),e)}}},vW={kernelName:Ul,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{begin:r,size:a}=n,o=s.shape,[i,l]=uI(s,r,a),u=[];for(let c=0;c<e.rank;c++)u.push([i[c],o[c]-i[c]-l[c]]);return{x:()=>Dr(e,u)}}},wW={kernelName:ti,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s]=t,{dim:r}=n,a=!0,o=L(e,s);return{logits:()=>ge(o,L(Se(o,[r],a),s))}}},kW={kernelName:Oc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,Ts(n))}}},g3={kernelName:Hl,gradFunc:(e,t,n)=>{let{blockShape:s,paddings:r}=n;return{x:()=>ep(e,s,r)}}},y3={kernelName:jl,gradFunc:(e,t,n)=>{let{axis:s}=n;return{x:()=>Et(e,s)}}},SW={kernelName:Qo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ae(e,L(In(fe(n,"float32")),2))}}},IW={kernelName:Mc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(e,L(fe(n,"float32"),2))}}},CW={kernelName:ni,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=Ee(2);return{a:()=>L(e,L(r,ge(n,s))),b:()=>L(e,L(r,ge(s,n)))}}},TW={kernelName:ai,gradFunc:e=>({x:()=>st(e)})},NW={kernelName:si,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=At(n.shape,s.shape);return{a:()=>{let i=e,l=en(n.shape,r);return l.length>0&&(i=Se(i,l)),U(i,n.shape)},b:()=>{let i=e,l=en(s.shape,r);return l.length>0&&(i=Se(i,l)),U(Nt(i),s.shape)}}}},EW={kernelName:ei,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,r=s.shape.slice(),{axis:a}=n;rr(a,s.shape).forEach(u=>{r[u]=1});let i=U(e,r),l=L(i,Cs(s.shape,"float32"));return{x:()=>l}}},_W={kernelName:Xl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ae(e,gt(np(n)))}}},RW={kernelName:ri,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>L(ge(Ee(1),gt(n)),e)}}},$W={kernelName:ka,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{reps:r}=n;return{x:()=>{let o=st(s);if(s.rank===1)for(let i=0;i<r[0];++i)o=ce(o,ze(e,[i*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)o=ce(o,ze(e,[i*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)o=ce(o,ze(e,[i*s.shape[0],l*s.shape[1],u*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)for(let c=0;c<r[3];++c)o=ce(o,ze(e,[i*s.shape[0],l*s.shape[1],u*s.shape[2],c*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return o}}}},DW={kernelName:Xr,gradFunc:(e,t,n)=>{let s=n,{perm:r}=s,a=Cx(r);return{x:()=>Qe(e,a)}}},FW={kernelName:Yl,gradFunc:(e,t,n)=>{let s=n,{axis:r}=s;return{value:()=>Pn(e,r)}}},OW={kernelName:Gh,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>PW(e,n)}}};function PW(e,t){let n=na(t,st(t)),s=jc(e,n),r=li(t,Ee(0,"int32")),a=s.rank-r.rank;for(let i=0;i<a;++i)r=Jt(r,i+1);r=sr(r,Cs(s.shape,"bool"));let o=st(s);return On(r,s,o)}var MW={kernelName:Jl,gradFunc:e=>({x:()=>st(e)})},zW=[k7,OL,PL,ML,zL,LL,BL,WL,VL,UL,GL,HL,XL,YL,JL,QL,eB,tB,nB,sB,rB,aB,iB,oB,cB,dB,hB,pB,fB,mB,aW,gB,yB,AB,xB,bB,wB,vB,kB,SB,IB,CB,TB,NB,EB,_B,RB,$B,DB,PB,f3,f3,MB,BB,UB,GB,HB,jB,qB,XB,KB,ZB,YB,JB,QB,m3,m3,eW,tW,rW,oW,iW,lW,uW,cW,dW,hW,pW,fW,mW,gW,yW,AW,xW,bW,vW,wW,kW,g3,g3,y3,y3,SW,CW,IW,TW,NW,EW,_W,RW,$W,DW,FW,OW,MW];for(let e of zW)IS(e);re().prototype.abs=function(){return this.throwIfDisposed(),Yt(this)};re().prototype.acos=function(){return this.throwIfDisposed(),J2(this)};re().prototype.acosh=function(){return this.throwIfDisposed(),Q2(this)};re().prototype.add=function(e){return this.throwIfDisposed(),ce(this,e)};re().prototype.all=function(e,t){return this.throwIfDisposed(),k0(this,e,t)};re().prototype.any=function(e,t){return this.throwIfDisposed(),fh(this,e,t)};re().prototype.argMax=function(e){return this.throwIfDisposed(),Jr(this,e)};re().prototype.argMin=function(e){return this.throwIfDisposed(),tx(this,e)};re().prototype.asScalar=function(){return this.throwIfDisposed(),P(this.size===1,()=>"The array must have only 1 element."),U(this,[])};re().prototype.asType=function(e){return this.throwIfDisposed(),fe(this,e)};re().prototype.as1D=function(){return this.throwIfDisposed(),U(this,[this.size])};re().prototype.as2D=function(e,t){return this.throwIfDisposed(),U(this,[e,t])};re().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),U(this,[e,t,n])};re().prototype.as4D=function(e,t,n,s){return this.throwIfDisposed(),U(this,[e,t,n,s])};re().prototype.as5D=function(e,t,n,s,r){return this.throwIfDisposed(),U(this,[e,t,n,s,r])};re().prototype.asin=function(){return this.throwIfDisposed(),nx(this)};re().prototype.asinh=function(){return this.throwIfDisposed(),sx(this)};re().prototype.atan=function(){return this.throwIfDisposed(),rx(this)};re().prototype.atan2=function(e){return this.throwIfDisposed(),ax(this,e)};re().prototype.atanh=function(){return this.throwIfDisposed(),ox(this)};re().prototype.avgPool=function(e,t,n,s){return this.throwIfDisposed(),Qh(this,e,t,n,s)};re().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),ep(this,e,t)};re().prototype.batchNorm=function(e,t,n,s,r){return this.throwIfDisposed(),Bc(this,e,t,n,s,r)};re().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Vi(this,e)};re().prototype.cast=function(e){return this.throwIfDisposed(),fe(this,e)};re().prototype.ceil=function(){return this.throwIfDisposed(),px(this)};re().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),cs(this,e,t)};re().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof et&&(e=[e]),Et([this,...e],t)};re().prototype.conv1d=function(e,t,n,s,r,a){return this.throwIfDisposed(),S0(this,e,t,n,s,r,a)};re().prototype.conv2dTranspose=function(e,t,n,s,r){return this.throwIfDisposed(),I0(this,e,t,n,s,r)};re().prototype.conv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),ya(this,e,t,n,s,r,a)};re().prototype.cos=function(){return this.throwIfDisposed(),np(this)};re().prototype.cosh=function(){return this.throwIfDisposed(),C0(this)};re().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),mh(this,e,t,n)};re().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),T0(this,e,t,n)};re().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),bx(this,e,t)};re().prototype.depthwiseConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),Wc(this,e,t,n,s,r,a)};re().prototype.dilation2d=function(e,t,n,s,r){return this.throwIfDisposed(),vx(this,e,t,n,s,r)};re().prototype.divNoNan=function(e){return this.throwIfDisposed(),wx(this,e)};re().prototype.div=function(e){return this.throwIfDisposed(),Ae(this,e)};re().prototype.dot=function(e){return this.throwIfDisposed(),kx(this,e)};re().prototype.elu=function(){return this.throwIfDisposed(),Vc(this)};re().prototype.equal=function(e){return this.throwIfDisposed(),Ns(this,e)};re().prototype.erf=function(){return this.throwIfDisposed(),Sx(this)};re().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Tx(this,e,t)};re().prototype.exp=function(){return this.throwIfDisposed(),Es(this)};re().prototype.expandDims=function(e){return this.throwIfDisposed(),Jt(this,e)};re().prototype.expm1=function(){return this.throwIfDisposed(),Nx(this)};re().prototype.fft=function(){return this.throwIfDisposed(),hp(this)};re().prototype.flatten=function(){return this.throwIfDisposed(),U(this,[this.size])};re().prototype.floor=function(){return this.throwIfDisposed(),Hc(this)};re().prototype.floorDiv=function(e){return this.throwIfDisposed(),Yh(this,e)};re().prototype.gather=function(e,t){return this.throwIfDisposed(),jc(this,e,t)};re().prototype.greaterEqual=function(e){return this.throwIfDisposed(),li(this,e)};re().prototype.greater=function(e){return this.throwIfDisposed(),fs(this,e)};re().prototype.ifft=function(){return this.throwIfDisposed(),ec(this)};re().prototype.irfft=function(){return this.throwIfDisposed(),G0(this)};re().prototype.isFinite=function(){return this.throwIfDisposed(),Ex(this)};re().prototype.isInf=function(){return this.throwIfDisposed(),_x(this)};re().prototype.isNaN=function(){return this.throwIfDisposed(),Rx(this)};re().prototype.leakyRelu=function(e){return this.throwIfDisposed(),sp(this,e)};re().prototype.lessEqual=function(e){return this.throwIfDisposed(),ui(this,e)};re().prototype.less=function(e){return this.throwIfDisposed(),E0(this,e)};re().prototype.localResponseNormalization=function(e,t,n,s){return this.throwIfDisposed(),$x(this,e,t,n,s)};re().prototype.logSigmoid=function(){return this.throwIfDisposed(),Dx(this)};re().prototype.logSoftmax=function(e){return this.throwIfDisposed(),R0(this,e)};re().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),$0(this,e,t)};re().prototype.log=function(){return this.throwIfDisposed(),_s(this)};re().prototype.log1p=function(){return this.throwIfDisposed(),rp(this)};re().prototype.logicalAnd=function(e){return this.throwIfDisposed(),sr(this,e)};re().prototype.logicalNot=function(){return this.throwIfDisposed(),ap(this)};re().prototype.logicalOr=function(e){return this.throwIfDisposed(),D0(this,e)};re().prototype.logicalXor=function(e){return this.throwIfDisposed(),Fx(this,e)};re().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Ye(this,e,t,n)};re().prototype.maxPool=function(e,t,n,s){return this.throwIfDisposed(),op(this,e,t,n,s)};re().prototype.max=function(e,t){return this.throwIfDisposed(),Dn(this,e,t)};re().prototype.maximum=function(e){return this.throwIfDisposed(),na(this,e)};re().prototype.mean=function(e,t){return this.throwIfDisposed(),Pt(this,e,t)};re().prototype.min=function(e,t){return this.throwIfDisposed(),ja(this,e,t)};re().prototype.minimum=function(e){return this.throwIfDisposed(),qc(this,e)};re().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Px(this,e,t)};re().prototype.mod=function(e){return this.throwIfDisposed(),ip(this,e)};re().prototype.mul=function(e){return this.throwIfDisposed(),L(this,e)};re().prototype.neg=function(){return this.throwIfDisposed(),Nt(this)};re().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Uc(this,e,t,n)};re().prototype.notEqual=function(e){return this.throwIfDisposed(),Qi(this,e)};re().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Yu(this,e,t,n)};re().prototype.onesLike=function(){return this.throwIfDisposed(),Rs(this)};re().prototype.pad=function(e,t){return this.throwIfDisposed(),Dr(this,e,t)};re().prototype.pool=function(e,t,n,s,r,a){return this.throwIfDisposed(),Mx(this,e,t,n,s,r,a)};re().prototype.pow=function(e){return this.throwIfDisposed(),Aa(this,e)};re().prototype.prelu=function(e){return this.throwIfDisposed(),cp(this,e)};re().prototype.prod=function(e,t){return this.throwIfDisposed(),zx(this,e,t)};re().prototype.reciprocal=function(){return this.throwIfDisposed(),Wx(this)};re().prototype.relu=function(){return this.throwIfDisposed(),Fr(this)};re().prototype.relu6=function(){return this.throwIfDisposed(),P0(this)};re().prototype.reshapeAs=function(e){return this.throwIfDisposed(),U(this,e.shape)};re().prototype.reshape=function(e){return this.throwIfDisposed(),U(this,e)};re().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),p7(this,e,t,n)};re().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),f7(this,e,t,n)};re().prototype.reverse=function(e){return this.throwIfDisposed(),Hs(this,e)};re().prototype.rfft=function(){return this.throwIfDisposed(),pp(this)};re().prototype.round=function(){return this.throwIfDisposed(),M0(this)};re().prototype.rsqrt=function(){return this.throwIfDisposed(),z0(this)};re().prototype.selu=function(){return this.throwIfDisposed(),L0(this)};re().prototype.separableConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),B0(this,e,t,n,s,r,a)};re().prototype.sigmoid=function(){return this.throwIfDisposed(),Ts(this)};re().prototype.sign=function(){return this.throwIfDisposed(),Vx(this)};re().prototype.sin=function(){return this.throwIfDisposed(),W0(this)};re().prototype.sinh=function(){return this.throwIfDisposed(),V0(this)};re().prototype.slice=function(e,t){return this.throwIfDisposed(),ze(this,e,t)};re().prototype.softmax=function(e){return this.throwIfDisposed(),Kc(this,e)};re().prototype.softplus=function(){return this.throwIfDisposed(),tu(this)};re().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),up(this,e,t)};re().prototype.split=function(e,t){return this.throwIfDisposed(),kn(this,e,t)};re().prototype.sqrt=function(){return this.throwIfDisposed(),In(this)};re().prototype.square=function(){return this.throwIfDisposed(),gt(this)};re().prototype.squaredDifference=function(e){return this.throwIfDisposed(),H0(this,e)};re().prototype.squeeze=function(e){return this.throwIfDisposed(),mt(this,e)};re().prototype.stack=function(e,t){this.throwIfDisposed();let n=e instanceof et?[this,e]:[this,...e];return Pn(n,t)};re().prototype.step=function(e){return this.throwIfDisposed(),nu(this,e)};re().prototype.stridedSlice=function(e,t,n,s,r,a,o,i){return this.throwIfDisposed(),Ux(this,e,t,n,s,r,a,o,i)};re().prototype.sub=function(e){return this.throwIfDisposed(),ge(this,e)};re().prototype.sum=function(e,t){return this.throwIfDisposed(),Se(this,e,t)};re().prototype.tan=function(){return this.throwIfDisposed(),Gx(this)};re().prototype.tanh=function(){return this.throwIfDisposed(),Yi(this)};re().prototype.tile=function(e){return this.throwIfDisposed(),Ws(this,e)};re().prototype.toBool=function(){return this.throwIfDisposed(),fe(this,"bool")};re().prototype.toFloat=function(){return this.throwIfDisposed(),fe(this,"float32")};re().prototype.toInt=function(){return this.throwIfDisposed(),fe(this,"int32")};re().prototype.topk=function(e,t){return this.throwIfDisposed(),Hx(this,e,t)};re().prototype.transpose=function(e){return this.throwIfDisposed(),Qe(this,e)};re().prototype.unique=function(e){return this.throwIfDisposed(),jx(this,e)};re().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),q0(this,e,t)};re().prototype.unstack=function(e){return this.throwIfDisposed(),ds(this,e)};re().prototype.where=function(e,t){return this.throwIfDisposed(),On(e,this,t)};re().prototype.zerosLike=function(){return this.throwIfDisposed(),st(this)};var la=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,la.prototype)}},kr=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,kr.prototype)}},q=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,q.prototype)}},je=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,je.prototype)}},I7=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,I7.prototype)}},C7=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=e}};function nl(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}else{let n=new Array(t);return n.fill(e),n}}function Gr(e,t){if(!e)throw new I7(t)}function A3(e,t){let n=0;for(let s of e)s===t&&n++;return n}function ls(e){return e.length===1?e[0]:e}function Tt(e){return Array.isArray(e)?e:[e]}function ua(e){let n=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return n[0]!=="_"?n:"private"+n}function Fi(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}var Xs={};function nb(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function $A(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>$A(t));else{let t=Object.keys(e);for(let n of t){let s=e[n];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?e[n]=s.value:$A(s))}}}function mp(e,t={},n={},s="object",r=!1){if(typeof e=="string"){let a=e,o;if(a in n)o=n[a];else if(a in Xs)o=Xs[a];else if(o=t[a],o==null)throw new q(`Unknown ${s}: ${e}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}else{let a=e;if(a.className==null||a.config==null)throw new q(`${s}: Improper config format: ${JSON.stringify(a)}.
'className' and 'config' must set.`);let o=a.className,i,l;if(o in n?[i,l]=n[o]:o in Xs?[i,l]=Xs.className:o in t&&([i,l]=t[o]),i==null)throw new q(`Unknown ${s}: ${o}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let u={};for(let p of Object.keys(Xs))u[p]=Xs[p];for(let p of Object.keys(n))u[p]=n[p];let c=a.config;c.customObjects=u;let h=Object.assign({},Xs);for(let p of Object.keys(n))Xs[p]=n[p];$A(a.config);let d=l(i,a.config,n,r);return Xs=Object.assign({},h),d}else{let u=Object.assign({},Xs);for(let h of Object.keys(n))Xs[h]=n[h];let c=new i(a.config);return Xs=Object.assign({},u),c}}}function LW(e,t){return e<t?-1:e>t?1:0}function Sf(e,t){return-1*LW(e,t)}function qa(e){if(e==null)return e;let t=[];for(let n of e)t.indexOf(n)===-1&&t.push(n);return t}function BW(e){if(e==null)throw new q(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function su(e,t,n){if(n!=null&&e.indexOf(n)<0)throw new q(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function sb(e,t,n=0,s=1/0){return Gr(n>=0),Gr(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every(r=>typeof r===t)}function gn(e,t){Array.isArray(e)?(v.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((n,s)=>gn(n,`element ${s+1} of ${t}`))):v.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${T7(e)}.`)}function T7(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>T7(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function WW(e,t,n){let s=n!=null?n():v.now(),r;return(...o)=>{let i=n!=null?n():v.now();return i-s<t||(s=i,r=e(...o)),r}}function N7(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}var VW=0;function E7(){return VW++}var If={};function ag(e=""){return e in If||(If[e]=0),If[e]+=1,e+If[e].toString()}var UW=["channelsFirst","channelsLast"],GW=["nearest","bilinear"],HW=["valid","same","causal"],jW=["max","avg"],qW=["sum","mul","concat","ave"],Nu=new Map;function Xt(e){su(UW,"DataFormat",e)}function XW(e){su(GW,"InterpolationFormat",e)}function qs(e){su(HW,"PaddingMode",e)}function _7(e){su(jW,"PoolMode",e)}var th=[],x3="/";function Ui(e,t){th.push(e);try{let n=t();return th.pop(),n}catch(n){throw th.pop(),n}}function KW(){return th.length===0?"":th.join(x3)+x3}function R7(e){if(!D7(e))throw new Error("Not a valid tensor name: '"+e+"'");return KW()+e}function $7(e){if(!D7(e))throw new Error("Not a valid tensor name: '"+e+"'");Nu.has(e)||Nu.set(e,0);let t=Nu.get(e);if(Nu.set(e,Nu.get(e)+1),t>0){let n=`${e}_${t}`;return Nu.set(n,1),n}else return e}var ZW=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function D7(e){return!!e.match(ZW)}function YW(e){return e===parseInt(e.toString(),10)}function Xa(e,t,n){t==null&&(t=0),n==null&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function nc(e){if(e.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let s=e[n];s<t&&(t=s)}return t}function no(e){if(e.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let s=e[n];s>t&&(t=s)}return t}function _r(e,t){if(t<e)throw new q(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let s=e;s<t;++s)n.push(s);return n}var Ey;function on(){return Ey==null&&(Ey=yr().epsilon()),Ey}function Rr(){return"channelsLast"}function og(e,t){return fe(e,t)}function gp(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),U(e,n)}function JW(e,t){return Y(()=>{if(e.shape.length!==2)throw new q(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let n=gp(e,1);return DA(n,[1,t,1])})}function QW(e){let t=[Xa(e.shape)];return U(e,t)}function eV(e){if(e.rank<=1)throw new q(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],Xa(e.shape,1)];return U(e,t)}function Gi(e,t,n){return Y(()=>{switch(e.rank){case 1:return dp(e,t,n);case 2:return U0(e,[t,0],[n,e.shape[1]]);case 3:return el(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return tl(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return ze(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return ze(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new q(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function _y(e,t,n){return Y(()=>{switch(e.rank){case 1:return dp(e,t,n);case 2:return U0(e,[0,t],[e.shape[0],n]);case 3:return el(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return tl(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new q(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Cf(e,t,n,s){return Y(()=>{switch(e.rank){case 1:return dp(e,t,n);case 2:switch(s){case 1:return Gi(e,t,n);case 2:return _y(e,t,n);default:throw new q(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Gi(e,t,n);case 2:return el(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return _y(e,t,n);default:throw new q(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Gi(e,t,n);case 2:return tl(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return tl(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return _y(e,t,n);default:throw new q(`The axis is not within the rank of the tensor ${s}`)}default:throw new q(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function rb(e,t=-1){let n;return t<0&&(n=e[0].rank,n!==0?t=n:t=0),t===e[0].rank&&(t=-1),Et(e,t)}function b3(e,t){switch(e.rank){case 1:return fx([e,t]);case 2:return tp([e,t],0);case 3:return mx([e,t],0);case 4:return gx([e,t],0);default:throw new q(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function DA(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new q(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Ws(e,t)}function ig(e,t=0,n=1,s,r){return O0(e,t,n,s,r)}function Zr(e,t,n,s){if(e.rank<2||t.rank<2)throw new je(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let r=e.shape.slice(-1)[0],a=t.shape.slice(-2)[0];if(r!==a)throw new je(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2)return tc.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?FA(e.rank,s,Rr()):null,activation:n});{let r=e.shape.slice(),a=r.pop();e=U(e,[-1,a]);let o=t.shape.slice(),i=o.pop(),l=o.pop(),u=[...o,i],c=Array.from({length:t.rank},(f,m)=>m===0?t.rank-2:m<=t.rank-2?m-1:m);t=U(Qe(t,c),[l,-1]);let h=[...r,...u],d=!1,p=!1;return U(tc.matMul({a:e,b:t,transposeA:d,transposeB:p,bias:s?FA(e.rank,s,Rr()):null,activation:n}),h)}}function F7(e,t,n){return Y(()=>(Array.isArray(t)?t=qt(t,"int32"):t=fe(t,"int32"),jc(e,t,n)))}function yp(e){return L(e,e)}function FA(e,t,n){let s=t.shape;if(t.rank!==1&&t.rank!==e)throw new q(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(n==="channelsFirst")return s.length===1?U(t,[1,s[0],1,1,1]):U(t,[1,s[3],s[0],s[1],s[2]]);if(n==="channelsLast")return s.length===1?U(t,[1,1,1,1,s[0]]):U(t,[1].concat(s))}else if(e===4){if(n==="channelsFirst")return s.length===1?U(t,[1,s[0],1,1]):U(t,[1,s[2],s[0],s[1]]);if(n==="channelsLast")return s.length===1?U(t,[1,1,1,s[0]]):U(t,[1].concat(s))}else if(e===3){if(n==="channelsFirst")return s.length===1?U(t,[1,s[0],1]):U(t,[1,s[1],s[0]]);if(n==="channelsLast")return s.length===1?U(t,[1,1,s[0]]):U(t,[1].concat(s))}else if(e<3)return t;throw new q(`Unsupported input rank by biasAdd: ${t.rank}`)}function Or(e,t,n){return Y(()=>(n==null&&(n=Rr()),Xt(n),ce(e,FA(e.rank,t,n))))}function tV(e,t=1){if(t!==1)throw new je(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Vc(e)}function nV(e){return Y(()=>Ae(e,ce(Yt(e),1)))}function O7(e,t,n,s){return Y(()=>Kx(e,t,n,s))}function sV(e){return Y(()=>{let t=ce(.5,L(.2,e));return cs(t,0,1)})}function Ap(e,t,n=!1){return n?e():t()}var rV=["fanIn","fanOut","fanAvg"],aV=["normal","uniform","truncatedNormal"];function oV(e){su(rV,"FanMode",e)}function iV(e){su(aV,"Distribution",e)}var or=class extends de.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},ab=class extends or{apply(e,t){return Vt(e,t)}};ab.className="Zeros";de.registerClass(ab);var lg=class extends or{apply(e,t){return Cs(e,t)}};lg.className="Ones";de.registerClass(lg);var ob=class extends or{constructor(e){if(super(),typeof e!="object")throw new q(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new q(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Y(()=>L(Ee(this.value),Cs(e,t)))}getConfig(){return{value:this.value}}};ob.className="Constant";de.registerClass(ob);var ib=class extends or{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Xc(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};ib.className="RandomUniform";de.registerClass(ib);var lb=class extends or{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new je(`randomNormal does not support dType ${t}.`);return ig(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};lb.className="RandomNormal";de.registerClass(lb);var ub=class extends or{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new je(`truncatedNormal does not support dType ${t}.`);return j0(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};ub.className="TruncatedNormal";de.registerClass(ub);var cb=class extends or{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return Y(()=>{if(e.length!==2||e[0]!==e[1])throw new q("Identity matrix initializer can only be used for 2D square matrices.");return L(this.gain,N0(e[0]))})}getConfig(){return{gain:this.gain}}};cb.className="Identity";de.registerClass(cb);function lV(e,t="channelsLast"){let n,s;if(Xt(t),e.length===2)n=e[0],s=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let r=Xa(e,2);n=e[1]*r,s=e[0]*r}else if(t==="channelsLast"){let r=Xa(e,0,e.length-2);n=e[e.length-2]*r,s=e[e.length-1]*r}}else{let r=Xa(e);n=Math.sqrt(r),s=Math.sqrt(r)}return[n,s]}var hs=class extends or{constructor(e){if(super(),e.scale<0)throw new q(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,oV(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,iV(this.distribution),this.seed=e.seed}apply(e,t){let n=lV(e),s=n[0],r=n[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,s):this.mode==="fanOut"?a/=Math.max(1,r):a/=Math.max(1,(s+r)/2),this.distribution==="normal"){let o=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new je(`${this.getClassName()} does not support dType ${t}.`);return j0(e,0,o,t,this.seed)}else{let o=Math.sqrt(3*a);return Xc(e,-o,o,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};hs.className="VarianceScaling";de.registerClass(hs);var ug=class extends hs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return hs.className}};ug.className="GlorotUniform";de.registerClass(ug);var cg=class extends hs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return hs.className}};cg.className="GlorotNormal";de.registerClass(cg);var dg=class extends hs{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return hs.className}};dg.className="HeNormal";de.registerClass(dg);var hg=class extends hs{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return hs.className}};hg.className="HeUniform";de.registerClass(hg);var pg=class extends hs{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return hs.className}};pg.className="LeCunNormal";de.registerClass(pg);var fg=class extends hs{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return hs.className}};fg.className="LeCunNormal";de.registerClass(fg);var db=class extends or{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new je("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Y(()=>{if(e.length<2)throw new je("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,s=ig(n,0,1,"float32"),r=Qx.gramSchmidt(s);return e[0]>e[1]&&(r=Qe(r)),L(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}};db.className="Orthogonal";de.registerClass(db);var v3={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function w3(e,t={}){return mp(e,de.SerializationMap.getMap().classNameMap,t,"initializer")}function Mt(e){return nb(e)}function Rt(e){if(typeof e=="string"){let t=e in v3?v3[e]:e;if(t==="GlorotNormal")return new cg;if(t==="GlorotUniform")return new ug;if(t==="HeNormal")return new dg;if(t==="HeUniform")return new hg;if(t==="LeCunNormal")return new pg;if(t==="LeCunUniform")return new fg;{let n={};return n.className=t,n.config={},w3(n)}}else return e instanceof or?e:w3(e)}function OA(e){return Array.isArray(e)&&Array.isArray(e[0])}function wm(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function qe(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new q(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function pt(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new q(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function km(e){let t=0;for(let n of e)n.shape.length===0?t+=1:t+=n.shape.reduce((s,r)=>s*r);return t}var k3="Variable",P7=class{constructor(e,t="float32",n=k3,s=!0,r=null){this.dtype=t??"float32",this.shape=e.shape,this.id=E7(),n=n??k3,this.originalName=R7(n),this.name=$7(this.originalName),this.trainable_=s,this.constraint=r,this.val=qx(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),uV(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function uV(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function PA(e){return e.map(t=>t.read())}function hb(e){e.forEach(t=>{t[0].write(t[1])})}var Qt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Sr=class{constructor(e,t,n,s,r,a,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=o,this.id=E7(),a!=null&&(this.originalName=R7(a),this.name=$7(this.originalName)),this.rank=t.length}},cV=0,mg=class{constructor(e,t){this.callArgs=t,this.id=cV++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n?.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},dV=0,rt=class extends de.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=dV++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=ua(n)+"_"+ag(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let r=null;e.batchSize!=null&&(r=e.batchSize),n=[r].concat(e.inputShape)}this.batchInputShape=n;let s=e.dtype;s==null&&(s=e.inputDType),s==null&&(s="float32"),this.dtype=s}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new kr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new q(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return ls(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return ls(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new la(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new la(`Layer ${this.name} is not connected, no input to return.`);return ls(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new la(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new la(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return ls(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Tt(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=Tt(this.inputSpec);if(e.length!==t.length)throw new q(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let s=e[n],r=t[n];if(r==null)continue;let a=s.rank;if(r.ndim!=null&&a!==r.ndim)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(r.maxNDim!=null&&a>r.maxNDim)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(r.minNDim!=null&&a<r.minNDim)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(r.dtype!=null&&s.dtype!==r.dtype)throw new q(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){let o=s.shape;for(let i in r.axes){let l=Number(i),u=r.axes[i],c=l>=0?o[l]:o[o.length+l];if(u!=null&&[u,null].indexOf(c)===-1)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${u} but got shape ${o}.`)}}if(r.shape!=null)for(let o=0;o<r.shape.length;++o){let i=r.shape[o],l=s.shape[o];if(i!=null&&l!=null&&i!==l)throw new q(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=Tt(e),s=!0;for(let a of n)if(!(a instanceof Sr)){s=!1;break}let r=!0;for(let a of n)if(a instanceof Sr){r=!1;break}if(s===r)throw new q("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ui(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let a=[];for(let o of Tt(e))a.push(o.shape);this.build(ls(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t),o=Tt(a),i=[];for(let l of o)n.indexOf(l)!==-1&&(l=l.clone()),i.push(l);if(a=ls(i),this.activityRegularizer!=null)throw new je("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{let a=hV(e),o=this.computeOutputShape(a),i,l=pV(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),o!=null&&o.length>0&&Array.isArray(o[0])?i=o.map((u,c)=>new Sr(l,u,this,Tt(e),t,this.name,c)):i=new Sr(l,o,this,Tt(e),t,this.name),this.addInboundNode(e,i,null,null,a,o,t),this._refCount++,this.activityRegularizer!=null)throw new je("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,s)=>{n!=null&&e[s]!=null&&e[s]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new la(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new la(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new kr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return km(this.weights)}build(e){this.built=!0}getWeights(e=!1){return PA(e?this.trainableWeights:this.weights)}setWeights(e){Y(()=>{let t=this.weights;if(t.length!==e.length)throw new q(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],s=PA(t);for(let r=0;r<s.length;++r){let a=s[r],o=t[r],i=e[r];if(!v.arraysEqual(a.shape,i.shape))throw new q(`Layer weight shape ${a.shape} not compatible with provided weight shape ${i.shape}`);n.push([o,i])}hb(n)})}addWeight(e,t,n,s,r,a,o,i){if(this._addedWeightNames.indexOf(e)!==-1)throw new q(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(s=i!=null?i():Rt("zeros"));let l=s.apply(t,n),u=new P7(l,n,e,a,o);return l.dispose(),r!=null&&this.addLoss(()=>r.apply(u.read())),a==null&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=Tt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,s,r,a,o=null){let i=Tt(e);t=Tt(t),n=Tt(n),s=Tt(s),r=wm(r),a=wm(a);let l=[],u=[],c=[];for(let h of i)l.push(h.sourceLayer),u.push(h.nodeIndex),c.push(h.tensorIndex);new mg({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},o);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function hV(e){e=Tt(e);let t=[];for(let n of e)t.push(n.shape);return ls(t)}function pV(e){return"float32"}function M7(e,t,n){if((t==null||n!=null&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),t.inboundNodes.length===0)return[e];{let s=t.inboundNodes[n];if(s.inboundLayers.length===0)return s.inputTensors;{let r=[];for(let a=0;a<s.inboundLayers.length;a++){let o=s.inputTensors[a],i=s.inboundLayers[a],l=s.nodeIndices[a],u=M7(o,i,l);for(let c of u)r.indexOf(c)===-1&&r.push(c)}return r}}}var Yc=class extends rt{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:ag("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new q("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new q("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new q("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let s=new Sr(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new mg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new q(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};Yc.className="InputLayer";de.registerClass(Yc);function z7(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new q("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let n=e.dtype;return n==null&&(n="float32"),new Yc({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}function fV(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return fe(t,e.dtype)}catch{throw new q(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var zi=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof zi)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=fV(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new q(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Sr){if(this.id2Value[e.id]==null)throw new q(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new q(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Sr){if(this.id2Value[e.id]==null)throw new q(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new q(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&le(this.id2Mask)}},Sm=new C7,Im=new C7;function mV(e){Sm?.setMaxEntries(e),Im?.setMaxEntries(e)}function zd(e,t,n,s){let r=n==null?!1:n.training,a=Array.isArray(e),o=a?e:[e],i=o.map(f=>f.name),l=[],u=t.names();for(let f of i)u.indexOf(f)!==-1?l.push(t.getValue(f)):l.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);let c=i.join(",")+"|"+t.names().sort().join(","),h=Sm.get(c),d;if(h==null){let f=gV(o,t);h=f.sorted,d=f.recipientCounts,Sm.put(c,h),Im.put(c,d)}d={},r||Object.assign(d,Im.get(c));let p=new zi(t);for(let f=0;f<h.length;++f){if(s!=null){let R=xm().numTensors;R>s.maxNumTensors&&(s.maxNumTensors=R),R<s.minNumTensors&&(s.minNumTensors=R)}let m=h[f],g=m.sourceLayer;if(g instanceof Yc)continue;let y=[],x=[],A=[],b=!1;for(let R of m.inputs){let D=p.getValue(R),E=p.getMask(R);y.push(D),x.push(E),E!=null&&(b=!0),r||(d[R.name]--,d[R.name]===0&&!t.hasKey(R)&&i.indexOf(R.name)===-1&&!D.isDisposed&&R.sourceLayer.stateful!==!0&&A.push(D))}b&&(n=n||{},n.mask=x[0]);let w=Tt(g.apply(y,n)),S=null;g.supportsMasking&&(S=g.computeMask(y,x));let C=AV(m),_=Array.isArray(C)?C:[C];for(let R=0;R<_.length;++R){p.hasKey(_[R])||p.add(_[R],w[R],Array.isArray(S)?S[0]:S);let D=i.indexOf(_[R].name);D!==-1&&(l[D]=w[R])}r||le(A)}return p.disposeMasks(),a?l:l[0]}function gV(e,t){v.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],s={};if(e.length===1){let r=S3(e[0],t);n=r.sorted,s=r.recipientMap}else{let r=new Set;for(let a of e){let{sorted:o,recipientMap:i}=S3(a,t);for(let l of o)r.has(l.name)||(n.push(l),r.add(l.name));for(let l in i)s[l]==null&&(s[l]=new Set),i[l].forEach(u=>s[l].add(u))}}return{sorted:n,recipientCounts:yV(s)}}function yV(e){let t={};for(let n in e)t[n]=e[n].size;return t}function S3(e,t){let n=new Set,s=[],r={};for(let i of t.names())n.add(i);let a=[],o=[];for(a.push(e);a.length>0;){let i=a[a.length-1];if(n.has(i.name)){a.pop();continue}let l=o[o.length-1]===a.length-1;if(i.inputs.length===0||l)a.pop(),s.push(i),n.add(i.name),l&&o.pop();else{o.push(a.length-1);for(let u of i.inputs)r[u.name]==null&&(r[u.name]=new Set),r[u.name].add(i.name),!n.has(u.name)&&a.push(u)}}return{sorted:s,recipientMap:r}}function AV(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let n=null;for(let s=0;s<e.sourceLayer.inboundNodes.length;++s)for(let r of e.sourceLayer.inboundNodes[s].outputTensors)if(r.id===e.id){n=s;break}t=e.sourceLayer.getOutputAt(n)}return t}var xV=K();xV.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,mV);var L7={};Ue(L7,{maxNorm:()=>bV,minMaxNorm:()=>kV,nonNeg:()=>wV,unitNorm:()=>vV});function pb(e,t){return Y(()=>In(Se(L(e,e),t,!0)))}var xp=class extends de.Serializable{getConfig(){return{}}},fb=class extends xp{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Y(()=>{let t=pb(e,this.axis),n=cs(t,0,this.maxValue);return L(e,Ae(n,ce(on(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};fb.className="MaxNorm";de.registerClass(fb);var mb=class extends xp{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Y(()=>Ae(e,ce(on(),pb(e,this.axis))))}getConfig(){return{axis:this.axis}}};mb.className="UnitNorm";de.registerClass(mb);var gb=class extends xp{apply(e){return Fr(e)}};gb.className="NonNeg";de.registerClass(gb);var yb=class extends xp{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Y(()=>{let t=pb(e,this.axis),n=ce(L(this.rate,cs(t,this.minValue,this.maxValue)),L(1-this.rate,t));return L(e,Ae(n,ce(on(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};yb.className="MinMaxNorm";de.registerClass(yb);var I3={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function un(e){return nb(e)}function C3(e,t={}){return mp(e,de.SerializationMap.getMap().classNameMap,t,"constraint")}function cn(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in I3?I3[e]:e,config:{}};return C3(n)}else return e instanceof xp?e:C3(e)}function bV(e){return new fb(e)}function vV(e){return new mb(e)}function wV(){return new gb}function kV(e){return new yb(e)}var B7={};Ue(B7,{constant:()=>CV,glorotNormal:()=>DV,glorotUniform:()=>$V,heNormal:()=>FV,heUniform:()=>OV,identity:()=>_V,leCunNormal:()=>PV,leCunUniform:()=>MV,ones:()=>IV,orthogonal:()=>zV,randomNormal:()=>NV,randomUniform:()=>TV,truncatedNormal:()=>EV,varianceScaling:()=>RV,zeros:()=>SV});function SV(){return new ab}function IV(){return new lg}function CV(e){return new ob(e)}function TV(e){return new ib(e)}function NV(e){return new lb(e)}function EV(e){return new ub(e)}function _V(e){return new cb(e)}function RV(e){return new hs(e)}function $V(e){return new ug(e)}function DV(e){return new cg(e)}function FV(e){return new dg(e)}function OV(e){return new hg(e)}function PV(e){return new pg(e)}function MV(e){return new fg(e)}function zV(e){return new db(e)}var W7={};Ue(W7,{Layer:()=>rt,RNN:()=>sa,RNNCell:()=>Sp,activation:()=>cG,add:()=>xG,alphaDropout:()=>nH,average:()=>bG,averagePooling1d:()=>S5,averagePooling2d:()=>I5,averagePooling3d:()=>C5,avgPool1d:()=>EG,avgPool2d:()=>RG,avgPool3d:()=>DG,avgPooling1d:()=>_G,avgPooling2d:()=>$G,avgPooling3d:()=>FG,batchNormalization:()=>CG,bidirectional:()=>XG,concatenate:()=>vG,conv1d:()=>tG,conv2d:()=>nG,conv2dTranspose:()=>sG,conv3d:()=>rG,conv3dTranspose:()=>aG,convLstm2d:()=>GG,convLstm2dCell:()=>HG,cropping2D:()=>iG,dense:()=>dG,depthwiseConv2d:()=>uG,dot:()=>IG,dropout:()=>hG,elu:()=>KU,embedding:()=>AG,flatten:()=>fG,gaussianDropout:()=>tH,gaussianNoise:()=>eH,globalAveragePooling1d:()=>OG,globalAveragePooling2d:()=>PG,globalMaxPool1d:()=>ZG,globalMaxPool2d:()=>YG,globalMaxPooling1d:()=>$4,globalMaxPooling2d:()=>D4,gru:()=>zG,gruCell:()=>LG,input:()=>a4,inputLayer:()=>XU,layerNormalization:()=>TG,leakyReLU:()=>YU,lstm:()=>BG,lstmCell:()=>WG,masking:()=>sH,maxPool1d:()=>JG,maxPool2d:()=>QG,maxPooling1d:()=>F4,maxPooling2d:()=>O4,maxPooling3d:()=>MG,maximum:()=>wG,minimum:()=>kG,multiply:()=>SG,permute:()=>yG,prelu:()=>JU,reLU:()=>ZU,repeatVector:()=>mG,reshape:()=>gG,rnn:()=>jG,separableConv2d:()=>oG,simpleRNN:()=>VG,simpleRNNCell:()=>UG,softmax:()=>QU,spatialDropout1d:()=>pG,stackedRNNCells:()=>qG,thresholdedReLU:()=>eG,timeDistributed:()=>KG,upSampling2d:()=>lG,zeroPadding2d:()=>NG});async function Ma(e){if(e==null)return;let t=[],n=[],s=[];for(let r in e){let a=e[r];if(typeof a!="number"){let o=a;t.push(o.data()),n.push(r),s.push(o)}}if(t.length>0){let r=await Promise.all(t);for(let a=0;a<r.length;++a)e[n[a]]=r[a][0];le(s)}}function V7(e){if(e!=null)for(let t in e){let n=e[t];typeof n!="number"&&n.dispose()}}var T3;(function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"})(T3||(T3={}));var LV=125,sc=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},U7=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},BV=class extends sc{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let s in t){let r=t[s];if(typeof r=="number")this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+r*n;else{let a;s in this.totals?a=this.totals[s]:this.totals[s]=0;let o=Y(()=>ce(this.totals[s],L(r,n)));this.totals[s]=o,a?.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:Y(()=>{let s=L(Ae(1,this.seen),this.totals[n]);t[n]=s,this.totals[n].dispose(),mn(t[n])}))}},G7=class extends sc{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let r in this.history){let a=this.history[r];for(let o=0;o<a.length;++o)if(typeof a[o]!="number"){let i=a[o];e.push(i.data()),t.push(r),n.push(o)}}let s=await Promise.all(e);for(let r=0;r<s.length;++r)this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=s[r][0]}},H7=class extends sc{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||eb,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=LV),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");v.isNumber(this.yieldEvery)&&(this.maybeWait=WW(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let s=[];this.yield!=null&&(await Ma(n),s.push(this.yield(e,t,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Ma(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await Ma(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Ma(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await Ma(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):v.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await Ma(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Ma(e),await this.trainEnd(e))}};function j7(e,t){return e==null&&(e={}),e instanceof sc?[e]:Array.isArray(e)&&e[0]instanceof sc?e:Tt(e).map(s=>new H7(s,t))}var Ys=class{constructor(){}static registerCallbackConstructor(e,t){v.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Ys.checkForDuplicate(t),Ys.constructors[e]==null&&(Ys.constructors[e]=[]),Ys.constructors[e].push(t)}static checkForDuplicate(e){for(let t in Ys.constructors)Ys.constructors[+t].forEach(s=>{if(s===e)throw new q("Duplicate callback constructor.")})}static clear(){Ys.constructors={}}static createCallbacks(e){let t=[];for(let n in Ys.constructors){let s=+n;e>=s&&t.push(...Ys.constructors[s])}return t.map(n=>new n)}};Ys.constructors={};function q7(e,t,n,s,r,a,o,i,l){let u=new G7,c=[new BV,...Ys.createCallbacks(t)];e!=null&&c.push(...e),c.push(u);let h=new U7(c);return h.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:o,verbose:t,doValidation:i,metrics:l}),{callbackList:h,history:u}}function Tr(e,t={},n=!1){return mp(e,de.SerializationMap.getMap().classNameMap,t,"layer",n)}function Cm(e,t){return Y(()=>{e.dtype!=="float32"&&(e=fe(e,"float32"));let n=Se(yp(e),t,!0),s=Gc(n.shape,on()),r=In(na(n,s));return Ae(e,r)})}function ru(e,t){return Y(()=>Pt(yp(ge(t,e)),-1))}function gg(e,t){return Y(()=>Pt(Yt(ge(t,e)),-1))}function Jc(e,t){return Y(()=>{let n=ge(e,t),s=cs(Yt(e),on(),Number.MAX_VALUE),r=Yt(Ae(n,s));return L(100,Pt(r,-1))})}function WV(e,t){return Y(()=>{let n=cs(t,on(),Number.MAX_VALUE),s=_s(ce(1,n)),r=cs(e,on(),Number.MAX_VALUE),a=_s(ce(1,r));return Pt(yp(ge(s,a)),-1)})}function VV(e,t){return Y(()=>{let n=na(0,ge(1,L(e,t)));return Pt(yp(n),-1)})}function UV(e,t){return Y(()=>{let n=na(0,ge(1,L(e,t)));return Pt(n,-1)})}function GV(e,t){return Y(()=>{let n=Se(L(e,t),-1),s=Dn(L(ge(1,e),t),-1);return na(0,ce(1,ge(s,n)))})}function HV(e,t){return Y(()=>{let n=Math.log(2),s=ge(t,e),r=ge(ce(s,tu(L(-2,s))),n);return Pt(r,-1)})}function gh(e,t,n=!1){return Y(()=>{if(n)t=Kc(t);else{let s=Se(t,t.shape.length-1,!0);t=Ae(t,s)}return t=cs(t,on(),1-on()),Nt(Se(L(fe(e,"float32"),_s(t)),t.shape.length-1))})}function Tm(e,t,n=!1){return Y(()=>{let s=fe(Hc(QW(e)),"int32");t=cs(t,on(),1-on());let r=t.shape,a=U(Yu(s,r[r.length-1]),r);return gh(a,t,n)})}function jV(e,t){if(!v.arraysEqual(e.shape,t.shape))throw new q(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Y(()=>{let n=Fr(t),s=Nt(Yt(t));return ce(ge(n,L(t,e)),rp(Es(s)))})}function yg(e,t){return Y(()=>{let n;return n=cs(t,on(),1-on()),n=_s(Ae(n,ge(1,n))),Pt(jV(e,n),-1)})}function qV(e,t){return Y(()=>{let n=cs(e,on(),1),s=cs(t,on(),1);return Se(L(e,_s(Ae(n,s))),-1)})}function XV(e,t){return Y(()=>{let n=_s(ce(on(),t));return Pt(ge(t,L(e,n)),-1)})}function Ab(e,t){return Y(()=>{let n=Cm(e,-1),s=Cm(t,-1),r=L(n,s);return Nt(Se(r,-1))})}var Nm={meanSquaredError:ru,meanAbsoluteError:gg,meanAbsolutePercentageError:Jc,meanSquaredLogarithmicError:WV,squaredHinge:VV,hinge:UV,categoricalHinge:GV,logcosh:HV,categoricalCrossentropy:gh,sparseCategoricalCrossentropy:Tm,binaryCrossentropy:yg,kullbackLeiblerDivergence:qV,poisson:XV,cosineProximity:Ab};function Ry(e){if(typeof e=="string"){if(e in Nm)return Nm[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new q(t)}else return e}function xb(e,t){return Y(()=>{let n=L(.5,Rs(t)),s=og(fs(t,n),e.dtype);return Pt(Ns(e,s),-1)})}function bb(e,t){return Y(()=>og(Ns(Jr(e,-1),Jr(t,-1)),"float32"))}function X7(e,t){return Y(()=>fe(Se(sr(Ns(e,1),Ns(t,1))),"float32"))}function KV(e,t){return Y(()=>fe(Se(sr(Ns(e,1),Ns(t,0))),"float32"))}function ZV(e,t){return Y(()=>fe(Se(sr(Ns(e,0),Ns(t,1))),"float32"))}function K7(e,t){return Y(()=>{let n=X7(e,t),s=ZV(e,t),r=ce(n,s);return fe(On(fs(r,0),Ae(n,r),0),"float32")})}function YV(e,t){return Y(()=>{let n=X7(e,t),s=KV(e,t),r=ce(n,s);return fe(On(fs(r,0),Ae(n,r),0),"float32")})}function Z7(e,t){return yg(e,t)}function Y7(e,t){return e.rank===t.rank&&(e=mt(e,[e.rank-1])),t=Jr(t,-1),t.dtype!==e.dtype&&(t=fe(t,e.dtype)),fe(Ns(e,t),"float32")}var JV=ru,QV=ru,eU=gg,tU=gg,nU=Jc,sU=Jc,vb=gh,rU=Ab,J7=Tm,Em={binaryAccuracy:xb,categoricalAccuracy:bb,precision:K7,categoricalCrossentropy:vb,sparseCategoricalCrossentropy:J7,mse:JV,MSE:QV,mae:eU,MAE:tU,mape:nU,MAPE:sU,cosine:rU};function aU(e){if(typeof e=="string"&&e in Em)return Em[e];if(typeof e!="string"&&e!=null)return e;throw new q(`Unknown metric ${e}`)}function Tf(e){if(Gr(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let n of Object.keys(Nm))if(Nm[n]===e){t=n;break}if(t!==void 0)return t;for(let n of Object.keys(Em))if(Em[n]===e){t=n;break}return t!==void 0?t:e.name}}function oU(e){let t={Adagrad:()=>Ei.adagrad(.01),Adadelta:()=>Ei.adadelta(1,.95,on()),Adam:()=>Ei.adam(.001,.9,.999,on()),Adamax:()=>Ei.adamax(.002,.9,.999,on(),0),RMSProp:()=>Ei.rmsprop(.001,.9,0,on()),SGD:()=>Ei.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new q(`Unknown Optimizer ${e}`)}var N3=1*1024*1024;function E3(e,t,n=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!MA(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let s=JSON.stringify(e);s.length>N3&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${N3}.`)}}function MA(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if(typeof n!="string"||!MA(e[n]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!MA(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function iU(e,t,n,s=console.log){let r=uU(e),a=["Layer (type)","Input Shape","Output shape","Param #"];r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(c=>Math.floor(t*c)));let o;if(!r){a.push("Receives inputs"),o=[];for(let c in e.nodesByDepth)o.push(...e.nodesByDepth[c])}s("_".repeat(t)),_m(a,n,s),s("=".repeat(t));let i=e.layers;for(let c=0;c<i.length;++c)r?cU(i[c],n,s):dU(i[c],n,o,s),s((c===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=lU(e),u=km(e.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(t))}function lU(e){let t;return e.collectedTrainableWeights!=null?t=km(e.collectedTrainableWeights):t=km(e.trainableWeights),t}function uU(e){let t=!0,n=[],s=[];for(let r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(let r of n){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(let r of e.layers){let a=!1;for(let o of r.inboundNodes)if(s.indexOf(o)!==-1)if(a){t=!1;break}else a=!0;if(!t)break}return t}function _m(e,t,n=console.log){let s="";for(let r=0;r<e.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=e[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);n(s)}function cU(e,t,n){let s,r;try{r=e.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{r="multiple"}try{s=JSON.stringify(e.outputShape)}catch{s="multiple"}let a=e.name,o=e.getClassName(),i=[`${a} (${o})`,r,s,e.countParams().toString()];_m(i,t,n)}function dU(e,t,n,s){let r,a;try{a=e.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{a="multiple"}try{r=JSON.stringify(e.outputShape)}catch{r="multiple"}let o=[];for(let h of e.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){let p=h.inboundLayers[d].name,f=h.nodeIndices[d],m=h.tensorIndices[d];o.push(`${p}[${f}][${m}]`)}let i=e.name,l=e.getClassName(),u=o.length===0?"":o[0],c=[`${i} (${l})`,a,r,e.countParams().toString(),u];_m(c,t,s);for(let h=1;h<o.length;++h)_m(["","","","",o[h]],t,s)}function Q7(e,t,n){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof n=="string"}function yh(e,t){if(e===null)return null;if(typeof e=="string")return Fi(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],s=e.length;for(let r=0;r<s;++r){let a=e[r];Q7(t,r,a)?n.push(a):n.push(yh(a,t))}return n}else{let n={};for(let s of Object.keys(e)){let r=e[s];if(s==="name"&&typeof r=="string")n[s]=r;else{let a=Fi(s);n[a]=yh(r,a)}}return n}}function zA(e,t){if(e==null)return null;if(typeof e=="string")return ua(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],s=e.length;for(let r=0;r<s;++r){let a=e[r];Q7(t,r,a)?n.push(a):n.push(zA(a,t))}return n}else{let n={};for(let s of Object.keys(e)){let r=e[s],a=ua(s);(s==="name"||s==="className")&&typeof r=="string"?n[a]=r:n[a]=zA(r,s)}return n}}var wb="3.20.0",Br=class extends rt{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){let y=this.getClassName().toLowerCase();this.name=ag(y)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],qa(this.inputs).length!==this.inputs.length)throw new q(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(y=>y.name)}`);qa(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(y=>y.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let y of this.outputs){let x=y.sourceLayer,A=y.nodeIndex,b=y.tensorIndex;this.outputLayers.push(x),this.outputLayersNodeIndices.push(A),this.outputLayersTensorIndices.push(b)}for(let y of this.inputs){let x=y.sourceLayer,A=y.nodeIndex,b=y.tensorIndex;Gr(A===0,"input layer has >1 nodes"),Gr(b===0,"input layer has >1 tensors"),this.inputLayers.push(x),this.inputLayersNodeIndices.push(A),this.inputLayersTensorIndices.push(b)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){let x=this.inputLayers[y];if(!(x instanceof Yc))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${x.getClassName()}.`);this.inputNames.push(x.name),this.feedInputShapes.push(x.batchInputShape),this.feedInputNames.push(x.name)}for(let y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(y=>y.shape),this.internalOutputShapes=this.outputs.map(y=>y.shape);let t={},n={},s={},r={},a={},o=[],i=(y,x,A,b,w,S)=>{(b==null||w==null||S==null)&&(b=y.sourceLayer,w=y.nodeIndex,S=y.tensorIndex);let C=b.inboundNodes[w];if(A.indexOf(C)!==-1)throw new kr(`The tensor ${y.name} at layer "${b.name}" is part of a cycle.`);if(x.indexOf(C)!==-1)return;this.containerNodes.add(Br.nodeKey(b,w)),b.id in a||(a[b.id]=Object.keys(a).length),A.indexOf(C)===-1&&A.push(C);let _=C.inboundLayers.length;for(let R=0;R<_;R++){let D=C.inputTensors[R],E=C.inboundLayers[R],F=C.nodeIndices[R],k=C.tensorIndices[R];i(D,x,A,E,F,k)}for(x.push(C);A.indexOf(C)>=0;)A.splice(A.indexOf(C),1);o.push(C)},l=[],u=[];for(let y of this.outputs)i(y,l,u);let c=o.slice().reverse();for(let y of c){n[y.id]=y,y.id in t||(t[y.id]=0);let x=t[y.id],A=s[y.outboundLayer.id]==null?0:s[y.outboundLayer.id];x=Math.max(x,A),s[y.outboundLayer.id]=x,r[y.outboundLayer.id]=y.outboundLayer,t[y.id]=x;for(let b=0;b<y.inboundLayers.length;b++){let w=y.inboundLayers[b],S=y.nodeIndices[b],C=w.inboundNodes[S],_=t[C.id]==null?0:t[C.id];t[C.id]=Math.max(x+1,_),n[C.id]=C}}let h={};for(let y in t){let x=t[y];x in h||(h[x]=[]),h[x].push(n[y])}let d={};for(let y in s){let x=s[y];x in d||(d[x]=[]),d[x].push(r[y])}let p=Object.keys(d).map(y=>parseInt(y,10)).sort(Sf);this.layers=[];for(let y of p){let x=d[y];x.sort((A,b)=>{let w=a[A.id],S=a[b.id];return w<S?-1:w>S?1:0});for(let A of x)A instanceof Br&&this.internalContainerRefs.push(A),this.layers.push(A)}this.layersByDepth=d,p=Object.keys(h).map(y=>parseInt(y,10)).sort(Sf);let f=this.inputs.slice(),m=[];for(let y of p)for(let x of h[y]){let A=x.outboundLayer;if(A!=null){for(let b of x.inputTensors)if(f.indexOf(b)===-1)throw new kr(`Graph disconnected: cannot obtain value for tensor ${b} at layer "${A.name}". The following previous layers were accessed without issue: ${m}`);for(let b of x.outputTensors)f.push(b);m.push(A.name)}}this.nodesByDepth=h;let g=this.layers.map(y=>y.name);for(let y of g){let x=g.filter(A=>A===y).length;if(x!==1)throw new kr(`The name "${y}" is used ${x} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new mg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(y=>null),outputMasks:this.outputs.map(y=>null),inputShapes:this.inputs.map(y=>y.shape),outputShapes:this.outputs.map(y=>y.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new q("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},s=0;for(let a of this.layers)for(let o of a.weights){if(n[o.originalName]!=null)throw new q(`Duplicate weight name: ${o.originalName}`);n[o.originalName]=o,s++}let r=[];for(let a in e){let o=a;if(n[a]==null){let i=a.split("/");o=i.slice(0,-2).concat([i[i.length-1]]).join("/")}if(n[o]!=null)r.push([n[o],e[a]]);else if(t)throw new q(`Provided weight data has no target variable: ${a}`);delete n[o]}if(t){let a=[];for(let o in n)a.push(o);if(a.length>0)throw new q(`${a.length} of ${s} weights are not set: ${a}`)}hb(r)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${wb}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=zA(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Y(()=>{e=Tt(e);let n=new zi;for(let s=0;s<this.inputs.length;++s)n.add(this.inputs[s],e[s]);return zd(this.outputs,n,t)})}computeMask(e,t){return Y(()=>{e=Tt(e);let n;return t==null?n=nl(null,e.length):n=Tt(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=wm(e);if(t.length!==this.inputLayers.length)throw new q(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let o=0;o<t.length;o++){let i=this.inputLayers[o],l=t[o],u=i.name+"_0_0";n[u]=l}let s=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(Sf);if(s.length>1)for(let o of s){let i=this.nodesByDepth[o];for(let l of i){let u=l.outboundLayer;if(this.inputLayers.map(f=>f.id).indexOf(u.id)!==-1)continue;let c=[];for(let f=0;f<l.inboundLayers.length;f++){let m=l.inboundLayers[f],g=l.nodeIndices[f],y=l.tensorIndices[f],x=`${m.name}_${g}_${y}`,A=n[x];c.push(A)}let h=u.computeOutputShape(ls(c)),d=wm(h),p=u.inboundNodes.indexOf(l);for(let f=0;f<d.length;f++){let m=`${u.name}_${p}_${f}`;n[m]=d[f]}}}let r=[],a=[];for(let o=0;o<this.outputLayers.length;o++){let i=this.outputLayers[o],l=this.outputLayersNodeIndices[o],u=this.outputLayersTensorIndices[o],c=`${i.name}_${l}_${u}`;a.push(c)}for(let o=0;o<a.length;o++){let i=a[o];Gr(i in n),r.push(n[i])}return ls(r)}runInternalGraph(e,t){t==null&&(t=nl(null,e.length));let n={};for(let i=0;i<this.inputs.length;++i){let l=this.inputs[i],u=e[i],c=t[i];n[l.id]=[u,c]}let s=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(Sf);for(let i of s){let l=this.nodesByDepth[i];for(let u of l){let c=u.outboundLayer,h=u.inputTensors,d=u.outputTensors,p=new Array;for(let f of h)f.id in n&&p.push(n[f.id]);if(p.length===h.length){let f={},m,g,y,x;if(u.callArgs!=null&&(f=u.callArgs),p.length===1){let[A,b]=p[0];f.mask==null&&(f.mask=b),y=Tt(c.call(A,f)),x=Tt(c.computeMask(A,b)),m=[A],g=[b]}else m=p.map(A=>A[0]),g=p.map(A=>A[1]),f.mask==null&&(f.mask=g),y=Tt(c.call(m,f)),x=Tt(c.computeMask(m,g));if(c.activityRegularizer)throw new je("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let A=0;A<d.length;++A){let b=d[A],w=y[A],S=x[A];n[b.id]=[w,S]}}}}let r=[],a=[],o=[];for(let i of this.outputs){Gr(i.id in n,`Could not compute output ${i.name} : ${i.id}`);let[l,u]=n[i.id];o.push(l.shape),r.push(l),a.push(u)}return[r,a,o]}buildNodeConversionMap(e){let t={},n;for(let s of this.layers){n=s instanceof Br?1:0;for(let r=0;r<s.inboundNodes.length;r++){let a=Br.nodeKey(s,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new q(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new q("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new q(`No such layer: ${e}`)}calculateLosses(){return Y(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let s=Br.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let a of this.layers){let o=a.getClassName(),i=a.getConfig(),l=[];for(let c=0;c<a.inboundNodes.length;c++){let h=a.inboundNodes[c],d=Br.nodeKey(a,c),p={};if(this.containerNodes.has(d)){if(h.callArgs)try{JSON.stringify(h.callArgs),p=h.callArgs}catch{console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${h.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),p={}}if(h.inboundLayers.length>0){let f=[];for(let m=0;m<h.inboundLayers.length;m++){let g=h.inboundLayers[m],y=h.nodeIndices[m],x=h.tensorIndices[m],A=Br.nodeKey(g,y),b=t[A];b==null&&(b=0),f.push([g.name,b,x,p])}l.push(f)}}}let u={};u.name=a.name,u.className=o,u.config=i,u.inboundNodes=l,n.push(u)}e.layers=n;let s=[];for(let a=0;a<this.inputLayers.length;a++){let o=this.inputLayers[a],i=this.inputLayersNodeIndices[a],l=Br.nodeKey(o,i);if(!this.containerNodes.has(l))continue;let u=t[l];u==null&&(u=0);let c=this.inputLayersTensorIndices[a];s.push([o.name,u,c])}e.inputLayers=s;let r=[];for(let a=0;a<this.outputLayers.length;a++){let o=this.outputLayers[a],i=this.outputLayersNodeIndices[a],l=Br.nodeKey(o,i);if(!this.containerNodes.has(l))continue;let u=t[l];u==null&&(u=0);let c=this.outputLayersTensorIndices[a];r.push([o.name,u,c])}return e.outputLayers=r,e}static fromConfig(e,t,n={},s=!1){let r={},a={};function o(m,g){m.name in a?a[m.name].push(g):a[m.name]=[g]}function i(m,g){let y=[],x;for(let A of g){let b=A[0],w=A[1],S=A[2];if(x=A[3]==null?{}:A[3],!(b in r)){o(m,g);return}let C=r[b];if(C.inboundNodes.length<=w){o(m,g);return}let _=C.inboundNodes[w];y.push(_.outputTensors[S])}y.length>0&&m.apply(ls(y),x)}function l(m){let g=m.name,y=Tr(m,t.customObjects!=null?t.customObjects:{});y.setFastWeightInitDuringBuild(s),r[g]=y,m.inboundNodes.forEach(A=>{if(!(A instanceof Array))throw new q(`Corrupted configuration, expected array for nodeData: ${A}`);o(y,A)})}let u=t.name,c=t.layers;for(let m of c)l(m);for(;!BW(a);)for(let m of c){let g=r[m.name];if(g.name in a){let y=a[g.name];delete a[g.name];for(let x of y)i(g,x)}}let h=[],d=[],p=t.inputLayers;for(let m of p){let g=m[0],y=m[1],x=m[2];Gr(g in r);let b=r[g].inboundNodes[y].outputTensors;h.push(b[x])}let f=t.outputLayers;for(let m of f){let g=m[0],y=m[1],x=m[2];Gr(g in r);let b=r[g].inboundNodes[y].outputTensors;d.push(b[x])}return new e({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new q("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Y(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function hU(e,t,n){let s=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>null);if(s===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let r=[];return t.forEach(a=>{a in e?r.push(e[a]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function e4(e,t){return hU(e,t,"classWeight")}async function t4(e,t,n,s){if(t!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){let r=Y(()=>{if(e.shape.length===1)return Qn(e);if(e.shape.length===2){if(e.shape[1]>1)return Jr(e,1);if(e.shape[1]===1)return U(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),a=Array.from(await r.data());le(r);let o=[];return a.forEach(i=>{if(n[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);o.push(n[i])}),qt(o,"float32")}else return null}function pU(e,t){return L(e,t)}var fU=32;function n4(e,t){let n,s,r=t;n=r.xs,s=r.ys,v.assert(n!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let a=_3("input",e.inputNames,n),o=_3("output",e.outputNames,s),i=a[0].shape[0];v.assert(a.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),v.assert(o.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let l=0;l<a.length;l++)v.assert(a[l].shape[0]===i,()=>`Batch size mismatch: input ${e.inputNames[l]} has ${a[l].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);for(let l=0;l<o.length;l++)v.assert(o[l].shape[0]===i,()=>`Batch size mismatch: output ${e.outputNames[l]} has ${o[l].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);return{xs:a,ys:o}}function _3(e,t,n){if(n instanceof et)return[n];if(Array.isArray(n))return v.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let s=[];for(let r of t){if(n[r]==null)throw new q(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}function mU(e){if(e.length===3)throw new je("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function gU(e,t,n){let s=n.batchesPerEpoch!=null;if(v.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),v.assert(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),v.assert(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),v.assert(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),v.assert(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let r=n.validationData!=null,a,o;if(r)if(R3(n.validationData))v.assert(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let g=mU(n.validationData);a=g.xs,o=g.ys}let i=e.makeTrainFunction(),l=e.getDedupedMetricsNames(),u;r?u=l.slice().concat(l.map(g=>"val_"+g)):u=l.slice();let c=j7(n.callbacks,n.yieldEvery),h=n.verbose==null?1:n.verbose,{callbackList:d,history:p}=q7(c,h,n.epochs,null,null,yU(t,n),null,r,u);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=n.initialEpoch==null?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let g={};await d.onEpochBegin(f);let y=0,x=0;for(s||(m=await t.iterator());!s||y<n.batchesPerEpoch;){let A=await m.next();if(s&&A.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(A.value!=null){let{xs:b,ys:w}=n4(e,A.value),S={};S.batch=x,S.size=b[0].shape[0],await d.onBatchBegin(x,S);let C=[];if(n.classWeight!=null){let D=e4(n.classWeight,e.outputNames);for(let E=0;E<D.length;++E)C.push(await t4(w[E],null,D[E]))}let _=b.concat(w).concat(C),R=i(_);le(_);for(let D=0;D<l.length;++D){let E=l[D],F=R[D];S[E]=F,mn(F)}await d.onBatchEnd(x,S),V7(S),x++,y++}if(s?y>=n.batchesPerEpoch:A.done){if(r){let b;R3(n.validationData)?b=Tt(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):b=Tt(e.evaluate(a,o,{batchSize:n.validationBatchSize==null?fU:n.validationBatchSize,verbose:0}));for(let w=0;w<e.metricsNames.length;++w)g[`val_${e.metricsNames[w]}`]=b[w]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,g),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function yU(e,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function R3(e){return typeof e.iterator=="function"}function AU(e){return typeof e.next=="function"}async function xU(e,t,n){n=n||{};let s=n.batches!=null,r=e.testFunction,a=[];if(n.verbose>0)throw new je("Verbose mode is not implemented yet.");v.assert(!s||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let o=AU(t)?t:await t.iterator(),i=0,l=0;for(;!s||l<n.batches;){let u=await o.next();if(a=Y(()=>{if(u.value){let{xs:c,ys:h}=n4(e,u.value),d=c.concat(h),p=Y(()=>r(d));if(le(d),l===0)for(let m=0;m<p.length;++m)a.push(Ee(0));let f=d[0].shape[0];for(let m=0;m<p.length;++m){let g=p[m],y=a[m];a[m]=Y(()=>ce(a[m],L(f,g))),l>0&&le(y)}le(p),i+=f,++l}return a}),u.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<a.length;++u){let c=a[u];a[u]=Ae(a[u],i),le(c)}return ls(a)}function LA(e){v.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function Ld(e,t,n){return e==null?[null]:Array.isArray(e)?e.map(s=>Gi(s,t,n-t)):Gi(e,t,n-t)}function kb(e,t){return Y(()=>e==null?null:Array.isArray(e)?e.map(n=>kb(n,t)):F7(e,t.dtype==="int32"?t:fe(t,"int32")))}function BA(e,t){let n=[],s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}async function bU(e,t,n,s,r,a,o,i,l,u,c,h,d,p,f){r==null&&(r=32),a==null&&(a=1),c==null&&(c=!0),d==null&&(d=0);let m=!1;if(l!=null&&u!=null&&(m=!0),f!=null&&(m=!0,p==null))throw new q("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=e.checkNumSamples(n,r,p,"steps_per_epoch"),y;g!=null&&(y=_r(0,g)),o==null&&(o=1);let{callbackList:x,history:A}=q7(i,o,a,d,g,p,r,m,h);x.setModel(e),e.history=A,await x.onTrainBegin(),e.stopTraining_=!1;for(let b=d;b<a;++b){await x.onEpochBegin(b);let w={};if(p!=null)throw new je("stepsPerEpoch mode is not implemented yet.");{if(c==="batch")throw new je("batch shuffling is not implemneted yet");c&&v.shuffle(y);let S=qt(y),C=BA(g,r);for(let _=0;_<C.length;++_){let R={};if(await x.onBatchBegin(_,R),Y(()=>{let D=C[_][0],E=C[_][1],F=Gi(S,D,E-D);R.batch=_,R.size=E-D;let k=kb(n,F),M=t(k);for(let z=0;z<s.length;++z){let W=s[z],H=M[z];R[W]=H,mn(H)}if(_===C.length-1&&m){let z=e.testLoop(l,u,r);for(let W=0;W<s.length;++W){let H=s[W],j=z[W];mn(j),w["val_"+H]=j}}}),await x.onBatchEnd(_,R),V7(R),e.stopTraining_)break}S.dispose()}if(await x.onEpochEnd(b,w),e.stopTraining_)break}return await x.onTrainEnd(),await e.history.syncData(),e.history}async function vU(e,t,n,s={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;let r,a,o,i,l,u,c,h,d;try{let p=s.batchSize==null?32:s.batchSize;LA(p);let f=!1,m=await e.standardizeUserData(t,n,s.sampleWeight,s.classWeight,f,p);r=m[0],a=m[1],d=m[2];let g=!1,y;if(s.validationData!=null&&s.validationData.length>0){if(g=!0,s.validationData.length===2)l=s.validationData[0],u=s.validationData[1];else throw s.validationData.length===3?new je("validationData including sample weights is not supported yet."):new q(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);let R=!0,D=await e.standardizeUserData(l,u,null,null,R,p);c=D[0],h=D[1],y=c.concat(h)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){g=!0;let R=Math.floor(r[0].shape[0]*(1-s.validationSplit)),D=r[0].shape[0];c=Ld(r,R,D),o=r,r=Ld(r,0,R),h=Ld(a,R,D),i=a,a=Ld(a,0,R),y=c.concat(h)}else s.validationSteps!=null&&(g=!0);let x=r.concat(a).concat(d);e.checkTrainableWeightsConsistency();let A=e.makeTrainFunction(),b=e.getDedupedMetricsNames(),w,S;g?(e.makeTestFunction(),w=e.testFunction,S=b.slice().concat(b.map(R=>"val_"+R))):(w=null,y=[],S=b.slice());let C=j7(s.callbacks,s.yieldEvery);return await bU(e,A,x,b,p,s.epochs,s.verbose,C,w,y,s.shuffle,S,s.initialEpoch,null,null)}finally{e.isTraining=!1,xr(r,t),xr(a,n),xr(o,t),xr(i,n),xr(c,l),xr(h,u),d!=null&&le(d)}}function s4(e){let t=[];e instanceof et&&(e=[e]);for(let n=0;n<e.length;++n){let s=e[n];if(s.rank===1)t.push(gp(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function xr(e,t){if(e==null)return;let n=[];if(t instanceof et)n.push(t.id);else if(Array.isArray(t))t.forEach(r=>n.push(r.id));else if(t!=null)for(let r in t){let a=t[r];n.push(a.id)}let s=[];if(e instanceof et)n.indexOf(e.id)===-1&&s.push(e);else if(Array.isArray(e))e.forEach(r=>{n.indexOf(r.id)===-1&&s.push(r)});else if(e!=null)for(let r in e){let a=e[r];n.indexOf(a.id)===-1&&s.push(a)}s.forEach(r=>{r.isDisposed||r.dispose()})}function wU(e){return e instanceof et}function WA(e){return Array.isArray(e)}function $3(e){return!wU(e)&&!WA(e)}function D3(e,t,n,s=!0,r=""){if(t==null||t.length===0){if(e!=null){let o=!1;if(WA(e)&&e.length>0)o=!0;else if($3(e)){for(let i in e)if(e.hasOwnProperty(i)){o=!0;break}}else o=!0;if(o)throw new q(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(o=>null);let a;if($3(e)){e=e,a=[];for(let o of t){if(e[o]==null)throw new q(`No data provided for "${o}". Need data for each key in: ${t}`);a.push(e[o])}}else if(WA(e)){if(e=e,e.length!==t.length)throw new q(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new q(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=s4(a),n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;let i=a[o];if(i.shape.length!==n[o].length)throw new q(`Error when checking ${r}: expected ${t[o]} to have ${n[o].length} dimension(s). but got array with shape ${i.shape}`);for(let l=0;l<n[o].length;++l){if(l===0&&!s)continue;let u=i.shape[l],c=n[o][l];if(c!=null&&c>=0&&u!==c)throw new q(`${r} expected a batch of elements where each example has shape [${n[o].slice(1,n[o].length)}] (i.e.,tensor shape [*,${n[o].slice(1,n[o].length)}]) but the ${r} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function kU(e,t,n){let s=qa(e.map(a=>a.shape[0]));s.sort();let r=qa(t.map(a=>a.shape[0]));if(r.sort(),s.length>1)throw new q(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(a=>a.shape))}`);if(r.length>1)throw new q(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(a=>a.shape))}`);if(s.length>0&&r.length>0&&!v.arraysEqual(s,r))throw new q(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function SU(e,t,n){let s=[ru,yg,gh];for(let r=0;r<e.length;++r){let a=e[r],o=t[r],i=n[r];if(o!=null){if(o===gh&&a.shape[a.shape.length-1]===1)throw new q(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(o)!==-1){let l=a.shape.slice(1),u=i.slice(1);for(let c=0;c<l.length;++c){let h=l[c],d=u[c];if(d!=null&&h!==d)throw new q(`A target Tensor with shape ${a.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function F3(e,t,n,s=!0,r=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new q(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new q(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;let i=a[o];if(i.shape.length!==n[o].length)throw new q(`Error when checking ${r}: expected ${t[o]} to have ${n[o].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let l=0;l<n[o].length;++l){if(l===0&&!s)continue;let u=i.shape[l],c=n[o][l];if(c!=null&&c!==u)throw new q(`Error when checking ${r}: expected ${t[o]} to have shape ${JSON.stringify(n[o])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function IU(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(s=>[]);let n;if(typeof e=="string"||typeof e=="function")n=[e];else if(Array.isArray(e)||typeof e=="object")n=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(s=>n);{let s=[];for(let r of t){let a=n.hasOwnProperty(r)?n[r]:[];Array.isArray(a)||(a=[a]),s.push(a)}return s}}var CU="layers-model",fa=class extends Br{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new q("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");iU(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=oU(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Ia))throw new q("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new q(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(Ry(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new q(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(o=>Ry(o))}else{let a=Ry(e.loss);this.outputs.forEach(o=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let o=this.internalOutputShapes[a],i=this.outputNames[a];this.feedOutputNames.push(i),this.feedOutputShapes.push(o),this.feedLossFns.push(this.lossFunctions[a])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ui("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let o=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([o,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let s=IU(e.metrics,this.outputNames),r=(a,o,i)=>{this.outputNames.length>1&&(o=this.outputNames[a]+"_"+o),this.metricsNames.push(o),this.metricsTensors.push([i,a])};Ui("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let o=s[a];(l=>{let u="",c,h,d;for(let p of l){if(typeof p=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(p)!==-1){let m=this.internalOutputShapes[a];m[m.length-1]===1||this.lossFunctions[a]===yg?["accuracy","acc"].indexOf(p)!==-1?h=xb:["crossentropy","ce"].indexOf(p)!==-1&&(h=Z7):this.lossFunctions[a]===Tm?["accuracy","acc"].indexOf(p)!==-1?h=Y7:["crossentropy","ce"].indexOf(p)!==-1&&(h=J7):["accuracy","acc"].indexOf(p)!==-1?h=bb:["crossentropy","ce"].indexOf(p)!==-1&&(h=vb);let g;["accuracy","acc"].indexOf(p)!==-1?g="acc":["crossentropy","ce"].indexOf(p)!==-1&&(g="ce"),d=h,c=u+g}else d=aU(p),c=u+Tf(p);let f;Ui(c,()=>{f=d}),r(a,c,f)}})(o)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let s=n.batchSize==null?32:n.batchSize;LA(s);let r=!0,a=this.standardizeUserDataXY(e,t,r,s);try{let o=a[0].concat(a[1]);this.makeTestFunction();let i=this.testFunction,l=this.testLoop(i,o,s,n.verbose,n.steps);return ls(l)}finally{xr(a[0],e),xr(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),xU(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(n!=null){if(r=null,t!=null)throw new q(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?r=e[0].shape[0]:r=e.shape[0];else throw new q(`Either the input data should have a defined shape, or ${s} shoud be specified.`);return r}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new q("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),a=new zi;if(e instanceof et&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new q(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let i=0;i<this.inputs.length;++i)a.add(this.inputs[i],e[i])}else for(let i of this.inputs){let l=e[i.name];if(l==null)throw new q(`No value is provided for the model's input ${i.name}`);a.add(i,l)}let o=zd(r,a);return n?o:o[0]}retrieveSymbolicTensors(e){let t=nl(null,e.length),n=e.length;for(let s of this.layers){let r=Array.isArray(s.output)?s.output:[s.output],a=r.map(o=>o.name);for(let o=0;o<e.length;++o){let i=a.indexOf(e[o]);if(i!==-1&&(t[o]=r[i],n--),n===0)break}if(n===0)break}if(n>0){let s=[];throw t.forEach((r,a)=>{r==null&&s.push(e[a])}),new q(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(s)}`)}return t}predictLoop(e,t=32,n=!1){return Y(()=>{let s=this.checkNumSamples(e);if(n)throw new je("Verbose predictLoop() is not implemented yet.");let r=BA(s,t),a=this.outputs.map(o=>[]);for(let o=0;o<r.length;++o)Y(()=>{let l=r[o][0],u=r[o][1],c=Ld(e,l,u),h=[];if(Array.isArray(c))for(let p=0;p<c.length;++p)h.push({key:this.inputs[p],value:c[p]});else h.push({key:this.inputs[0],value:c});let d=new zi(h);return zd(this.outputs,d)}).forEach((l,u)=>a[u].push(l));return ls(a.map(o=>Et(o,0)))})}predict(e,t={}){let n=s4(e);F3(n,this.inputNames,this.feedInputShapes,!1);try{let s=t.batchSize==null?32:t.batchSize;return LA(s),this.predictLoop(n,s)}finally{xr(n,e)}}predictOnBatch(e){F3(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(this.optimizer_==null)throw new kr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let r=[];for(let a=0;a<this.feedOutputShapes.length;++a){let o=this.feedOutputShapes[a];this.feedLossFns[a]===Tm?r.push(o.slice(0,o.length-1).concat([1])):r.push(o)}if(e=D3(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=D3(t,this.feedOutputNames,r,!1,"target"),kU(e,t,null),SU(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&s!=null&&s>0&&e[0].shape[0]%s!==0)throw new q(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,a){let[o,i]=this.standardizeUserDataXY(e,t,r,a);if(n!=null)throw new Error("sample weight is not supported yet.");let l=null;if(s!=null){let u=e4(s,this.outputNames);l=[];for(let c=0;c<u.length;++c)l.push(await t4(i[c],null,u[c]))}return[o,i,l]}testLoop(e,t,n,s=0,r){return Y(()=>{let a=this.checkNumSamples(t,n,r,"steps"),o=[];if(s>0)throw new je("Verbose mode is not implemented yet.");if(r!=null)throw new je("steps mode in testLoop() is not implemented yet");{let i=BA(a,n),l=qt(_r(0,a));for(let u=0;u<i.length;++u){let c=i[u][0],h=i[u][1],d=Gi(l,c,h-c),p=kb(t,d),f=e(p);if(u===0)for(let m=0;m<f.length;++m)o.push(Ee(0));for(let m=0;m<f.length;++m){let g=f[m];o[m]=ce(o[m],L(h-c,g))}}for(let u=0;u<o.length;++u)o[u]=Ae(o[u],a)}return o})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let s=e[n],r=s;A3(e,s)>1&&(r+=`_${A3(e.slice(0,n),s)}`),t.push(r)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],o=()=>{let c=[];for(let f=0;f<this.inputs.length;++f)c.push({key:this.inputs[f],value:n[f]});let h=new zi(c),d=zd(this.outputs,h,{training:!0}),p;for(let f=0;f<this.lossFunctions.length;++f){let m=this.lossFunctions[f],g=m(s[f],d[f]);r[f]!=null&&(g=pU(g,r[f]));let y=Pt(g);t.push(y),f===0?p=g:p=ce(p,g)}for(let f=0;f<this.metricsTensors.length;++f){let m;if(this.outputs.length>1&&f<this.outputs.length)m=t[f];else{let g=this.metricsTensors[f][0],y=this.metricsTensors[f][1];m=Pt(g(s[y],d[y]))}mn(m),a.push(m)}return p=Pt(p),this.calculateLosses().forEach(f=>{p=ce(p,f)}),p},i=this.collectedTrainableWeights.map(c=>c.read()),l=!0;return[this.optimizer_.minimize(o,l,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>Y(()=>{let t=[],n,s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let l=0;l<this.inputs.length;++l)a.push({key:this.inputs[l],value:s[l]});let o=new zi(a),i=zd(this.outputs,o);for(let l=0;l<this.lossFunctions.length;++l){let u=this.lossFunctions[l],c=Pt(u(r[l],i[l]));l===0?n=c:n=ce(n,c),t.push(n)}for(let l=0;l<this.metricsTensors.length;++l){let u=this.metricsTensors[l][0],c=this.metricsTensors[l][1],h=Pt(u(r[c],i[c]));t.push(h)}return t})}async fit(e,t,n={}){return vU(this,e,t,n)}async fitDataset(e,t){return gU(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),s=n[0],r=n[1],o=this.makeTrainFunction()(s.concat(r)),i=[];for(let l of o){let u=await l.data();i.push(u[0])}return le(o),xr(n[0],e),xr(n[1],t),ls(i)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let a=0;a<s.length;++a)n&&!s[a].trainable||t.push({name:s[a].originalName,tensor:r[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=xm().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-xm().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=ua(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>ua(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let s of t)if(typeof n[s]=="string")e[s]=ua(n[s]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[ua(Tf(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>ua(Tf(e)));{let e={};for(let t in this.metrics)e[t]=ua(Tf(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=yh(e.optimizer_config),n=Tr(t),s;if(typeof e.loss=="string")s=Fi(e.loss);else if(Array.isArray(e.loss))s=e.loss.map(a=>Fi(a));else if(e.loss!=null){s={};for(let a in e.loss)s[a]=Fi(e.loss[a])}let r;if(Array.isArray(e.metrics))r=e.metrics.map(a=>Fi(a));else if(e.metrics!=null){r={};for(let a in e.metrics)r[a]=Fi(e.metrics[a])}this.compile({loss:s,metrics:r,optimizer:n})}async save(e,t){if(typeof e=="string"){let l=Bs.getSaveHandlers(e);if(l.length===0)throw new q(`Cannot find any save handlers for URL '${e}'`);if(l.length>1)throw new q(`Found more than one (${l.length}) save handlers for URL '${e}'`);e=l[0]}if(e.save==null)throw new q("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await Bs.encodeWeights(this.getNamedWeights(t)),s=!1,r=null,o={modelTopology:this.toJSON(r,s),format:CU,generatedBy:`TensorFlow.js tfjs-layers v${wb}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){o.trainingConfig=this.getTrainingConfig();let l="optimizer",{data:u,specs:c}=await Bs.encodeWeights(await this.optimizer.getWeights(),l);n.specs.push(...c),n.data=Bs.concatenateArrayBuffers([n.data,u])}return this.userDefinedMetadata!=null&&(E3(this.userDefinedMetadata,this.name,!0),o.userDefinedMetadata=this.userDefinedMetadata),o.weightData=n.data,o.weightSpecs=n.specs,e.save(o)}setUserDefinedMetadata(e){E3(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};fa.className="Model";de.registerClass(fa);var r4=class extends fa{};r4.className="Functional";de.registerClass(r4);async function TU(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let n=e.modelTopology;n.model_config!=null&&(n=n.model_config);let s=yh(n),r=Tr(s,t);if(e.weightsManifest!=null){let a=await Bs.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map(i=>i.originalName)),o={};for(let i of r.weights)o[i.originalName]=a[i.originalName];r.loadWeights(o),le(a)}return r}async function NU(e,t){if(t==null&&(t={}),typeof e=="string"){let n=Bs.getLoadHandlers(e,t);if(n.length===0)n.push(Bs.browserHTTPRequest(e,t));else if(n.length>1)throw new q(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return EU(e,void 0,t)}async function EU(e,t,n){if(n==null&&(n={}),e.load==null)throw new q("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let s=await e.load(),r=s.modelTopology;r.model_config!=null&&(r=r.model_config);let a=n.strict==null?!0:n.strict,o=s.weightData!=null&&s.weightSpecs!=null&&a,i=Tr(yh(r),t,o),l=s.trainingConfig;if(l!=null&&i.loadTrainingConfig(l),s.userDefinedMetadata!=null&&i.setUserDefinedMetadata(s.userDefinedMetadata),s.weightData!=null){if(s.weightSpecs==null)throw new q("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:u,optimizerWeights:c}=_U(s.weightData,s.weightSpecs);i.loadWeights(u,a),i.optimizer!=null&&c.length>0&&await i.optimizer.setWeights(c),le(u),le(c.map(h=>h.tensor))}return i}function _U(e,t){let n=Bs.decodeWeights(e,t),s={},r=[];return t.forEach(a=>{a.group==="optimizer"?r.push({name:a.name,tensor:n[a.name]}):s[a.name]=n[a.name]}),{modelWeights:s,optimizerWeights:r}}var rc=class extends fa{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:ag("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new q(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof rc||e instanceof fa,n;if(t){if(n=e,n.outputs.length!==1)throw new q("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new q("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new q("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let s=z7({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(s)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new q(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new q("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=M7(this.outputs[0])}this.inboundNodes=[],new mg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:nl(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(s=>s.shape),outputShapes:this.outputs[0].shape})}else{let s=e.apply(this.outputs[0]);if(Array.isArray(s))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[s],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(pt(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new fa({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new kr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new kr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new kr("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new kr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let r,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new q("Legacy serialization format not supported yet.");r=t}else v.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=t.layers,delete t.layers,a=t;let o=new e(a);if(!(o instanceof rc))throw new je(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(let i of r){let u=Tr(i,void 0,s);s&&u.setFastWeightInitDuringBuild(!0),o.add(u)}return o}set stopTraining(e){if(this.model==null)throw new q("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new q("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};rc.className="Sequential";de.registerClass(rc);function RU(e){return new fa(e)}function $U(e){return new rc(e)}function DU(e,t){return t==null&&(t={}),NU(e,t)}function a4(e){return z7(e)}function FU(e,t){Ys.registerCallbackConstructor(e,t)}var ms=class extends de.Serializable{getConfig(){return{}}},o4=class extends ms{apply(e,t=1){return tV(e,t)}};o4.className="elu";de.registerClass(o4);var i4=class extends ms{apply(e){return L0(e)}};i4.className="selu";de.registerClass(i4);var l4=class extends ms{apply(e){return Fr(e)}};l4.className="relu";de.registerClass(l4);var u4=class extends ms{apply(e){return Y(()=>qc(6,Fr(e)))}};u4.className="relu6";de.registerClass(u4);var c4=class extends ms{apply(e){return e}};c4.className="linear";de.registerClass(c4);var d4=class extends ms{apply(e){return Ts(e)}};d4.className="sigmoid";de.registerClass(d4);var h4=class extends ms{apply(e){return sV(e)}};h4.className="hardSigmoid";de.registerClass(h4);var p4=class extends ms{apply(e){return tu(e)}};p4.className="softplus";de.registerClass(p4);var f4=class extends ms{apply(e){return nV(e)}};f4.className="softsign";de.registerClass(f4);var m4=class extends ms{apply(e){return Yi(e)}};m4.className="tanh";de.registerClass(m4);var Sb=class extends ms{apply(e,t=-1){return Kc(e,t)}};Sb.className="softmax";de.registerClass(Sb);var g4=class extends ms{apply(e,t=-1){return R0(e,t)}};g4.className="logSoftmax";de.registerClass(g4);var y4=class extends ms{apply(e,t=1){return Y(()=>L(Ts(L(e,t)),e))}};y4.className="swish";de.registerClass(y4);var A4=class extends ms{apply(e){return Y(()=>L(e,Yi(tu(e))))}};A4.className="mish";de.registerClass(A4);function so(e){return e.getClassName()}function $y(e,t={}){return mp(e,de.SerializationMap.getMap().classNameMap,t,"activation")}function ro(e){if(e==null){let t={};return t.className="linear",t.config={},$y(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},$y(t)}else return e instanceof ms?e:$y(e)}function Ib(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var x4=class extends de.Serializable{},bp=class extends x4{constructor(e){super(),Ib(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return Y(()=>{let t=Vt([1]);return this.hasL1&&(t=ce(t,Se(L(this.l1,Yt(e))))),this.hasL2&&(t=ce(t,Se(L(this.l2,yp(e))))),U(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};bp.className="L1L2";de.registerClass(bp);function OU(e){return Ib(e),new bp({l1:e!=null?e.l1:null,l2:0})}function PU(e){return Ib(e),new bp({l2:e!=null?e.l2:null,l1:0})}var O3={l1l2:"L1L2"};function bt(e){return nb(e)}function P3(e,t={}){return mp(e,de.SerializationMap.getMap().classNameMap,t,"regularizer")}function $t(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in O3?O3[e]:e,config:{}};return P3(n)}else return e instanceof x4?e:P3(e)}var Cb=class extends rt{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=qe(e);let n=Fr(e);return this.maxValue!=null&&(n=cs(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};Cb.className="ReLU";de.registerClass(Cb);var Tb=class extends rt{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=qe(e);return sp(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Tb.className="LeakyReLU";de.registerClass(Tb);var Nb=class extends rt{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Rt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=$t(e.alphaRegularizer),this.alphaConstraint=cn(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new q(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=pt(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let s of this.sharedAxes)t[s-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let s=1;s<e.length;++s)n[s]=e[s];this.inputSpec=[new Qt({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=qe(e),cp(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Mt(this.alphaInitializer),alphaRegularizer:bt(this.alphaRegularizer),alphaConstraint:un(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};Nb.className="PReLU";de.registerClass(Nb);var Eb=class extends rt{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new je(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=qe(e);return Vc(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Eb.className="ELU";de.registerClass(Eb);var _b=class extends rt{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=qe(e);return L(n,fe(fs(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};_b.className="ThresholdedReLU";de.registerClass(_b);var Rb=class extends rt{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new Sb().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=qe(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Rb.className="Softmax";de.registerClass(Rb);function ju(e,t,n){if(typeof e=="number")return nl(e,t);if(e.length!==t)throw new q(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){let r=e[s];if(!YW(r))throw new q(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${r}`)}return e}function Nr(e,t,n,s,r=1){if(e==null)return e;let a=t+(t-1)*(r-1),o;return n==="same"?o=e:o=e-a+1,Math.floor((o+s-1)/s)}function Hr(e,t,n,s){if(e==null)return null;if(s==="valid")e=e*t+no([n-t,0]);else if(s==="same")e=e*t;else throw new q(`Unsupport padding mode: ${s}.`);return e}function $b(e,t){return Y(()=>(Xt(t),t==="channelsFirst"?Qe(e,[0,2,3,1]):e))}function b4(e,t){return Y(()=>(Xt(t),t==="channelsFirst"?Qe(e,[0,2,3,4,1]):e))}function MU(e,t,n,s=1,r="valid",a,o=1){return Y(()=>{if(a==null&&(a=Rr()),Xt(a),e.shape.length!==3)throw new q(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new q(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new q(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(a==="channelsFirst"&&(e=Qe(e,[0,2,1])),r==="causal")throw new je("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=S0(e,t,s,r==="same"?"same":"valid","NWC",o);return n!=null&&(i=Or(i,n)),i})}function M3(e,t,n,s=[1,1],r="valid",a,o,i=null){return Y(()=>{if(a==null&&(a=Rr()),Xt(a),e.rank!==3&&e.rank!==4)throw new q(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new q(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=$b(e,a);if(r==="causal")throw new je("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=tc.conv2d({x:l,filter:t,strides:s,pad:r==="same"?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:i}),a==="channelsFirst"&&(l=Qe(l,[0,3,1,2])),l})}function zU(e,t,n,s=[1,1,1],r="valid",a,o){return Y(()=>{if(a==null&&(a=Rr()),Xt(a),e.rank!==4&&e.rank!==5)throw new q(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new q(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let i=b4(e,a);if(r==="causal")throw new je("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=Ax(i,t,s,r==="same"?"same":"valid","NDHWC",o),n!=null&&(i=Or(i,n)),a==="channelsFirst"&&(i=Qe(i,[0,4,1,2,3])),i})}var Db=class extends rt{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Db.verifyArgs(t),this.rank=e,gn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new je(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=ju(t.kernelSize,e,"kernelSize"),this.strides=ju(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,qs(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Xt(this.dataFormat),this.activation=ro(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=Rt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=cn(t.biasConstraint),this.biasRegularizer=$t(t.biasRegularizer),this.activityRegularizer=$t(t.activityRegularizer),this.dilationRate=ju(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new q(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new q(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new q(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Gr("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!sb(e.kernelSize,"number",1,3))throw new q(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:so(this.activation),useBias:this.useBias,biasInitializer:Mt(this.biasInitializer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),biasConstraint:un(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},vp=class extends Db{constructor(e,t){super(e,t),this.kernel=null,vp.verifyArgs(t),this.filters=t.filters,gn(this.filters,"filters"),this.kernelInitializer=Rt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=cn(t.kernelConstraint),this.kernelRegularizer=$t(t.kernelRegularizer)}build(e){e=pt(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new q(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Y(()=>{e=qe(e);let n,s=this.bias==null?null:this.bias.read(),r=N7(this.activation.getClassName());if(r!=null&&this.rank===2)n=M3(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)n=MU(e,this.kernel.read(),s,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=M3(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=zU(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new je("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=pt(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){let a=Nr(n[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);t.push(a)}let s=[e[0]];return this.dataFormat==="channelsLast"?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){let e={filters:this.filters,kernelInitializer:Mt(this.kernelInitializer),kernelRegularizer:bt(this.kernelRegularizer),kernelConstraint:un(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new q(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},wp=class extends vp{constructor(e){super(2,e),wp.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!sb(e.kernelSize,"number",1,2))throw new q(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};wp.className="Conv2D";de.registerClass(wp);var kp=class extends vp{constructor(e){super(3,e),kp.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new q(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};kp.className="Conv3D";de.registerClass(kp);var Fb=class extends wp{constructor(e){if(super(e),this.inputSpec=[new Qt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new q(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=pt(e),e.length!==4)throw new q("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new q("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Qt({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Y(()=>{let n=qe(e);if(n.shape.length!==4)throw new q(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,r=s[0],a,o;this.dataFormat==="channelsFirst"?(a=2,o=3):(a=1,o=2);let i=s[a],l=s[o],u=this.kernelSize[0],c=this.kernelSize[1],h=this.strides[0],d=this.strides[1],p=Hr(i,h,u,this.padding),f=Hr(l,d,c,this.padding),m=[r,p,f,this.filters];this.dataFormat!=="channelsLast"&&(n=Qe(n,[0,2,3,1]));let g=I0(n,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=Qe(g,[0,3,1,2])),this.bias!=null&&(g=Or(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=pt(e);let t=e.slice(),n,s,r;this.dataFormat==="channelsFirst"?(n=1,s=2,r=3):(n=3,s=1,r=2);let a=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[s]=Hr(t[s],i,a,this.padding),t[r]=Hr(t[r],l,o,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Fb.className="Conv2DTranspose";de.registerClass(Fb);var Ob=class extends kp{constructor(e){if(super(e),this.inputSpec=[new Qt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new q(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=pt(e),e.length!==5)throw new q("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new q("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Qt({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Y(()=>{let n=qe(e);if(n.shape.length!==5)throw new q(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,r=s[0],a,o,i;this.dataFormat==="channelsFirst"?(i=2,a=3,o=4):(i=1,a=2,o=3);let l=s[i],u=s[a],c=s[o],h=this.kernelSize[0],d=this.kernelSize[1],p=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],y=Hr(l,f,h,this.padding),x=Hr(u,m,d,this.padding),A=Hr(c,g,p,this.padding),b=[r,y,x,A,this.filters];this.dataFormat!=="channelsLast"&&(n=Qe(n,[0,2,3,4,1]));let w=xx(n,this.kernel.read(),b,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(w=Qe(w,[0,4,1,2,3])),this.bias!==null&&(w=Or(w,this.bias.read(),this.dataFormat)),this.activation!==null&&(w=this.activation.apply(w)),w})}computeOutputShape(e){e=pt(e);let t=e.slice(),n,s,r,a;this.dataFormat==="channelsFirst"?(n=1,s=2,r=3,a=4):(n=4,s=1,r=2,a=3);let o=this.kernelSize[0],i=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[s]=Hr(t[s],u,o,this.padding),t[r]=Hr(t[r],c,i,this.padding),t[a]=Hr(t[a],h,l,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};Ob.className="Conv3DTranspose";de.registerClass(Ob);var v4=class extends vp{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new q("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new q("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new q(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Rt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=$t(t.depthwiseRegularizer),this.depthwiseConstraint=cn(t.depthwiseConstraint),this.pointwiseInitializer=Rt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=$t(t.pointwiseRegularizer),this.pointwiseConstraint=cn(t.pointwiseConstraint)}build(e){if(e=pt(e),e.length<this.rank+2)throw new q(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new q(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let o=0;o<this.rank;++o)r.push(1);r.push(n*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Qt({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Y(()=>{e=qe(e);let n;if(this.rank===1)throw new je("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Qe(e,[0,2,3,1])),n=B0(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=Or(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=Qe(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Mt(this.depthwiseInitializer),e.pointwiseInitializer=Mt(this.pointwiseInitializer),e.depthwiseRegularizer=bt(this.depthwiseRegularizer),e.pointwiseRegularizer=bt(this.pointwiseRegularizer),e.depthwiseConstraint=un(this.depthwiseConstraint),e.pointwiseConstraint=un(this.pointwiseConstraint),e}};v4.className="SeparableConv";var Pb=class extends v4{constructor(e){super(2,e)}};Pb.className="SeparableConv2D";de.registerClass(Pb);var Ag=class extends vp{constructor(e){super(1,e),Ag.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!sb(e.kernelSize,"number",1,1))throw new q(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};Ag.className="Conv1D";de.registerClass(Ag);var Mb=class extends rt{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Y(()=>{if(e=qe(e),this.dataFormat==="channelsLast"){let n=Cf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Cf(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=Cf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Cf(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Mb.className="Cropping2D";de.registerClass(Mb);var zb=class extends rt{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Xt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,XW(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Y(()=>{let n=qe(e),s=n.shape;if(this.dataFormat==="channelsFirst"){n=Qe(n,[0,2,3,1]);let r=this.size[0]*s[2],a=this.size[1]*s[3],o=this.interpolation==="nearest"?He.resizeNearestNeighbor(n,[r,a]):He.resizeBilinear(n,[r,a]);return Qe(o,[0,3,1,2])}else{let r=this.size[0]*s[1],a=this.size[1]*s[2];return this.interpolation==="nearest"?He.resizeNearestNeighbor(n,[r,a]):He.resizeBilinear(n,[r,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}};zb.className="UpSampling2D";de.registerClass(zb);function LU(e,t,n=[1,1],s="valid",r,a){return Y(()=>{r==null&&(r=Rr()),Xt(r);let o=$b(e,r);if(e.rank!==4)throw new q(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new q(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=Wc(o,t,n,s==="same"?"same":"valid","NHWC",a),r==="channelsFirst"&&(o=Qe(o,[0,3,1,2])),o})}var Lb=class extends Db{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Rt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=cn(e.depthwiseConstraint),this.depthwiseRegularizer=$t(e.depthwiseRegularizer)}build(e){if(e=pt(e),e.length<4)throw new q(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new q(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Y(()=>{e=qe(e);let n=LU(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=Or(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=pt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=Nr(t,this.kernelSize[0],this.padding,this.strides[0]),a=Nr(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],s,r,a]:[e[0],r,a,s]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Mt(this.depthwiseInitializer),e.depthwiseRegularizer=bt(this.depthwiseRegularizer),e.depthwiseConstraint=un(this.depthwiseRegularizer),e}};Lb.className="DepthwiseConv2D";de.registerClass(Lb);function w4(e,t,n,s){if(Array.isArray(e)){if(t!=null||n!=null)throw new q("When inputs is an array, neither initialState or constants should be provided");s!=null&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(a){return a==null||Array.isArray(a)?a:[a]}return t=r(t),n=r(n),{inputs:e,initialState:t,constants:n}}function k4(e,t,n,s=!1,r,a,o=!1,i=!1){return Y(()=>{let l=t.shape.length;if(l<3)throw new q(`Input should be at least 3D, but is ${l}D.`);let u=[1,0].concat(_r(2,l));if(t=Qe(t,u),a!=null)throw new je("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=fe(fe(r,"bool"),"float32"),r.rank===l-1&&(r=Jt(r,-1)),r=Qe(r,u)),s&&(t=Hs(t,0),r!=null&&(r=Hs(r,0)));let c=[],h,d=n,p=t.shape[0],f=ds(t),m;r!=null&&(m=ds(r));for(let y=0;y<p;++y){let x=f[y],A=Y(()=>e(x,d));if(r==null)h=A[0],d=A[1];else{let b=Y(()=>{let w=m[y],S=ge(Rs(w),w),C=ce(L(A[0],w),L(d[0],S)),_=d.map((R,D)=>ce(L(A[1][D],w),L(R,S)));return{output:C,newStates:_}});h=b.output,d=b.newStates}i&&c.push(h)}let g;return i&&(g=Pn(c,1)),[h,g,d]})}var sa=class extends rt{constructor(e){super(e);let t;if(e.cell==null)throw new q("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new vg({cells:e.cell}):t=e.cell,t.stateSize==null)throw new q("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Qt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return _r(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){OA(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],s;if(this.returnSequences?s=[e[0],e[1],n]:s=[e[0],n],this.returnState){let r=[];for(let a of t)r.push([e[0],a]);return[s].concat(r)}else return s}computeMask(e,t){return Y(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let s=this.states.map(r=>null);return[n].concat(s)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new je("Constants support is not implemented in RNN yet.");OA(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new Qt({shape:[n,null,...s]});let r=[e[0]].concat(e.slice(2));this.cell.build(r);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!v.arraysEqual(this.stateSpec.map(o=>o.shape[o.shape.length-1]),a))throw new q(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(o=>new Qt({shape:[null,o]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){Y(()=>{if(!this.stateful)throw new la("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new q("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Vt([n,s])):this.states_=[Vt([n,this.cell.stateSize])];else if(e==null)le(this.states_),this.keptStates!=null&&(le(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Vt([n,s])):this.states_[0]=Vt([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new q(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):le(this.states_);for(let s=0;s<this.states_.length;++s){let r=e[s],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[s]:this.cell.stateSize,o=[n,a];if(!v.arraysEqual(r.shape,o))throw new q(`State ${s} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${r.shape}`);this.states_[s]=r}}this.states_=this.states_.map(s=>mn(s.clone()))})}apply(e,t){let n=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});let r=w4(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let a=[],o=[];if(n!=null){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(let l of n)this.stateSpec.push(new Qt({shape:l.shape}));o=o.concat(this.stateSpec)}if(s!=null&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof Sr){let l=[e].concat(a),u=this.inputSpec.concat(o),c=this.inputSpec;this.inputSpec=u;let h=super.apply(l,t);return this.inputSpec=c,h}else return super.apply(e,t)}call(e,t){return Y(()=>{let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;e=qe(e),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(e));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new q(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let o={training:s},l=k4((p,f)=>{let m=this.cell.call([p].concat(f),o);return[m[0],m.slice(1)]},e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),u=l[0],c=l[1],h=l[2];this.stateful&&this.resetStates(h,s);let d=this.returnSequences?c:u;return this.returnState?[d].concat(h):d})}getInitialState(e){return Y(()=>{let t=Vt(e.shape);return t=Se(t,[1,2]),t=gp(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?DA(t,[1,n]):t):this.cell.stateSize>1?[DA(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===sa.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){let s=t.cell,r=Tr(s,n);return new e(Object.assign(t,{cell:r}))}};sa.className="RNN";de.registerClass(sa);var Sp=class extends rt{},xg=class extends Sp{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,gn(this.units,"units"),this.activation=ro(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Rt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Rt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Rt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=$t(e.kernelRegularizer),this.recurrentRegularizer=$t(e.recurrentRegularizer),this.biasRegularizer=$t(e.biasRegularizer),this.kernelConstraint=cn(e.kernelConstraint),this.recurrentConstraint=cn(e.recurrentConstraint),this.biasConstraint=cn(e.biasConstraint),this.dropout=nc([1,no([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=nc([1,no([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=pt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Y(()=>{if(e=e,e.length!==2)throw new q(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let s=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ao({ones:()=>Rs(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ao({ones:()=>Rs(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));let r,a=this.dropoutMask,o=this.recurrentDropoutMask;a!=null?r=Zr(L(e,a),this.kernel.read()):r=Zr(e,this.kernel.read()),this.bias!=null&&(r=Or(r,this.bias.read())),o!=null&&(n=L(n,o));let i=ce(r,Zr(n,this.recurrentKernel.read()));return this.activation!=null&&(i=this.activation.apply(i)),[i,i]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:so(this.activation),useBias:this.useBias,kernelInitializer:Mt(this.kernelInitializer),recurrentInitializer:Mt(this.recurrentInitializer),biasInitializer:Mt(this.biasInitializer),kernelRegularizer:bt(this.kernelRegularizer),recurrentRegularizer:bt(this.recurrentRegularizer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),kernelConstraint:un(this.kernelConstraint),recurrentConstraint:un(this.recurrentConstraint),biasConstraint:un(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}};xg.className="SimpleRNNCell";de.registerClass(xg);var Bb=class extends sa{constructor(e){e.cell=new xg(e),super(e)}call(e,t){return Y(()=>{this.cell.dropoutMask!=null&&(le(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(le(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return new e(t)}};Bb.className="SimpleRNN";de.registerClass(Bb);var bg=class extends Sp{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new q("GRUCell does not support reset_after parameter set to true.");this.units=e.units,gn(this.units,"units"),this.activation=ro(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=ro(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Rt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Rt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Rt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=$t(e.kernelRegularizer),this.recurrentRegularizer=$t(e.recurrentRegularizer),this.biasRegularizer=$t(e.biasRegularizer),this.kernelConstraint=cn(e.kernelConstraint),this.recurrentConstraint=cn(e.recurrentConstraint),this.biasConstraint=cn(e.biasConstraint),this.dropout=nc([1,no([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=nc([1,no([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=pt(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Y(()=>{if(e=e,e.length!==2)throw new q(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ao({ones:()=>Rs(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ao({ones:()=>Rs(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let r=this.dropoutMask,a=this.recurrentDropoutMask,o,i,l;0<this.dropout&&this.dropout<1&&(e=L(e,r[0]));let u=Zr(e,this.kernel.read());this.useBias&&(u=Or(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=L(s,a[0]));let c=this.recurrentKernel.read(),[h,d]=kn(c,[2*this.units,this.units],c.rank-1),p=Zr(s,h),[f,m,g]=kn(u,3,u.rank-1),[y,x]=kn(p,2,p.rank-1);o=this.recurrentActivation.apply(ce(f,y)),i=this.recurrentActivation.apply(ce(m,x));let A=Zr(L(i,s),d);l=this.activation.apply(ce(g,A));let b=ce(L(o,s),L(ce(1,Nt(o)),l));return[b,b]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:so(this.activation),recurrentActivation:so(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Mt(this.kernelInitializer),recurrentInitializer:Mt(this.recurrentInitializer),biasInitializer:Mt(this.biasInitializer),kernelRegularizer:bt(this.kernelRegularizer),recurrentRegularizer:bt(this.recurrentRegularizer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),kernelConstraint:un(this.kernelConstraint),recurrentConstraint:un(this.recurrentConstraint),biasConstraint:un(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}};bg.className="GRUCell";de.registerClass(bg);var Wb=class extends sa{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new bg(e),super(e)}call(e,t){return Y(()=>{this.cell.dropoutMask!=null&&(le(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(le(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Wb.className="GRU";de.registerClass(Wb);var Ip=class extends Sp{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,gn(this.units,"units"),this.activation=ro(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=ro(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Rt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Rt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Rt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=$t(e.kernelRegularizer),this.recurrentRegularizer=$t(e.recurrentRegularizer),this.biasRegularizer=$t(e.biasRegularizer),this.kernelConstraint=cn(e.kernelConstraint),this.recurrentConstraint=cn(e.recurrentConstraint),this.biasConstraint=cn(e.biasConstraint),this.dropout=nc([1,no([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=nc([1,no([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=pt(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let s;if(this.useBias){if(this.unitForgetBias){let r=this.biasInitializer,a=this.units;s=new(t=class extends or{apply(i,l){let u=r.apply([a]),c=new lg().apply([a]),h=r.apply([a*2]);return b3(b3(u,c),h)}},t.className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Y(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new q(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1],r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ao({ones:()=>Rs(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ao({ones:()=>Rs(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,o=this.recurrentDropoutMask,i,l,u,c;0<this.dropout&&this.dropout<1&&(e=L(e,a[0]));let h=Zr(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=L(s,o[0])),h=ce(h,Zr(s,this.recurrentKernel.read())),this.useBias&&(h=Or(h,this.bias.read()));let[d,p,f,m]=kn(h,4,h.rank-1);i=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=ce(L(l,r),L(i,this.activation.apply(f))),c=this.recurrentActivation.apply(m);let g=L(c,this.activation.apply(u));return[g,g,u]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:so(this.activation),recurrentActivation:so(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Mt(this.kernelInitializer),recurrentInitializer:Mt(this.recurrentInitializer),biasInitializer:Mt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:bt(this.kernelRegularizer),recurrentRegularizer:bt(this.recurrentRegularizer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),kernelConstraint:un(this.kernelConstraint),recurrentConstraint:un(this.recurrentConstraint),biasConstraint:un(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}};Ip.className="LSTMCell";de.registerClass(Ip);var Vb=class extends sa{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Ip(e),super(e)}call(e,t){return Y(()=>{this.cell.dropoutMask!=null&&(le(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(le(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Vb.className="LSTM";de.registerClass(Vb);var vg=class extends Sp{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Y(()=>{e=e;let n=e.slice(1),s=[];for(let o of this.cells.slice().reverse())Array.isArray(o.stateSize)?s.push(n.splice(0,o.stateSize.length)):s.push(n.splice(0,1));s.reverse();let r=[],a;for(let o=0;o<this.cells.length;++o){let i=this.cells[o];n=s[o],o===0?a=[e[0]].concat(n):a=[a[0]].concat(n),a=i.call(a,t),r.push(a.slice(1))}n=[];for(let o of r.slice().reverse())n.push(...o);return[a[0]].concat(n)})}build(e){OA(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,s)=>{Ui(`RNNCell_${s}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=r=>({className:r.getClassName(),config:r.getConfig()}),s={cells:this.cells.map(t)};return Object.assign({},e,s)}static fromConfig(e,t,n={}){let s=[];for(let r of t.cells)s.push(Tr(r,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return PA(e)}setWeights(e){let t=[];for(let n of this.cells){let s=n.weights.length,r=e.splice(s);for(let a=0;a<n.weights.length;++a)t.push([n.weights[a],r[a]])}hb(t)}};vg.className="StackedRNNCells";de.registerClass(vg);function ao(e){let{ones:t,rate:n,training:s=!1,count:r=1,dropoutFunc:a}=e,o=()=>a!=null?a(t(),n):O7(t(),n),i=()=>Ap(o,t,s);return!r||r<=1?mn(i().clone()):Array(r).fill(void 0).map(i).map(u=>mn(u.clone()))}var BU=function(e,t){var n={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(e!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,s=Object.getOwnPropertySymbols(e);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(e,s[r])&&(n[s[r]]=e[s[r]]);return n},S4=class extends sa{constructor(e){if(e.unroll)throw new je("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new je("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Qt({ndim:5})]}call(e,t){return Y(()=>{if(this.cell.dropoutMask!=null&&(le(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(le(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new q("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Y(()=>{let{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)],a=Vt(r);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){Y(()=>{if(!this.stateful)throw new la("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(n[0]==null)throw new q("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Vt(r)):this.states_=[Vt(r)];else if(e==null)le(this.states_),this.keptStates!=null&&(le(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Vt(r)):this.states_[0]=Vt(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new q(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):le(this.states_);for(let o=0;o<this.states_.length;++o){let i=e[o],l=r;if(!v.arraysEqual(i.shape,l))throw new q(`State ${o} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${i.shape}`);this.states_[o]=i}}this.states_=this.states_.map(o=>mn(o.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:o}=this.cell,i=t==="channelsFirst",l=e[i?3:2],u=e[i?4:3],c=Nr(l,s[0],r,a[0],o[0]),h=Nr(u,s[1],r,a[1],o[1]);return[...e.slice(0,2),...i?[n,c,h]:[c,h,n]]}};S4.className="ConvRNN2D";var wg=class extends Ip{constructor(e){let{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:o}=e;super(Object.assign({},e,{units:t})),this.filters=t,gn(this.filters,"filters"),this.kernelSize=ju(n,2,"kernelSize"),this.kernelSize.forEach(i=>gn(i,"kernelSize")),this.strides=ju(s||1,2,"strides"),this.strides.forEach(i=>gn(i,"strides")),this.padding=r||"valid",qs(this.padding),this.dataFormat=a||"channelsLast",Xt(this.dataFormat),this.dilationRate=ju(o||1,2,"dilationRate"),this.dilationRate.forEach(i=>gn(i,"dilationRate"))}build(e){var t;e=pt(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new q(`The channel dimension of the input should be defined. Found ${e[n]}`);let s=e[n],r=4,a=this.kernelSize.concat([s,this.filters*r]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let o=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let i;if(this.unitForgetBias){let l=this.biasInitializer,u=this.filters;i=new(t=class extends or{apply(h,d){let p=l.apply([u]),f=Cs([u]),m=l.apply([u*2]);return rb([p,f,m])}},t.className="CustomInit",t)}else i=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,i,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Y(()=>{if(e.length!==3)throw new q(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,s=e[0],r=e[1],a=e[2],o=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ao({ones:()=>Rs(s),rate:this.dropout,training:n,count:o,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,l=(Z,J,Q)=>!J||!J[Q]?Z:L(J[Q],Z),u=l(s,i,0),c=l(s,i,1),h=l(s,i,2),d=l(s,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ao({ones:()=>Rs(r),rate:this.recurrentDropout,training:n,count:o,dropoutFunc:this.dropoutFunc}));let p=this.recurrentDropoutMask,f=l(r,p,0),m=l(r,p,1),g=l(r,p,2),y=l(r,p,3),x=3,[A,b,w,S]=kn(this.kernel.read(),o,x),[C,_,R,D]=this.useBias?kn(this.bias.read(),o):[null,null,null,null];u=this.inputConv(u,A,C,this.padding),c=this.inputConv(c,b,_,this.padding),h=this.inputConv(h,w,R,this.padding),d=this.inputConv(d,S,D,this.padding);let[E,F,k,M]=kn(this.recurrentKernel.read(),o,x);f=this.recurrentConv(f,E),m=this.recurrentConv(m,F),g=this.recurrentConv(g,k),y=this.recurrentConv(y,M);let z=this.recurrentActivation.apply(ce(u,f)),W=this.recurrentActivation.apply(ce(c,m)),H=ce(L(W,a),L(z,this.activation.apply(ce(h,g)))),j=L(this.recurrentActivation.apply(ce(d,y)),this.activation.apply(H));return[j,j,H]})}getConfig(){let e=super.getConfig(),{units:t}=e,n=BU(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,s)}inputConv(e,t,n,s){let r=ya(e,t,this.strides,s||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?Or(r,n,this.dataFormat):r}recurrentConv(e,t){return ya(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};wg.className="ConvLSTM2DCell";de.registerClass(wg);var Ub=class extends S4{constructor(e){let t=new wg(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}};Ub.className="ConvLSTM2D";de.registerClass(Ub);var kg=class extends rt{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let s=0;s<this.noiseShape.length;++s)n.push(this.noiseShape[s]==null?t[s]:this.noiseShape[s]);return n}call(e,t){return Y(()=>{this.invokeCallHook(e,t);let n=qe(e);if(0<this.rate&&this.rate<1){let s=t.training==null?!1:t.training,r=this.getNoiseShape(n);return Ap(()=>O7(n,this.rate,r,this.seed),()=>n,s)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};kg.className="Dropout";de.registerClass(kg);var Gb=class extends kg{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};Gb.className="SpatialDropout1D";de.registerClass(Gb);var Hb=class extends rt{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,gn(this.units,"units"),this.activation=ro(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=Rt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Rt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=cn(e.kernelConstraint),this.biasConstraint=cn(e.biasConstraint),this.kernelRegularizer=$t(e.kernelRegularizer),this.biasRegularizer=$t(e.biasRegularizer),this.activityRegularizer=$t(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=pt(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=pt(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return Y(()=>{this.invokeCallHook(e,t);let n=qe(e),s=N7(this.activation.getClassName()),r;return s!=null?r=Zr(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=Zr(n,this.kernel.read()),this.bias!=null&&(r=Or(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){let e={units:this.units,activation:so(this.activation),useBias:this.useBias,kernelInitializer:Mt(this.kernelInitializer),biasInitializer:Mt(this.biasInitializer),kernelRegularizer:bt(this.kernelRegularizer),biasRegularizer:bt(this.biasRegularizer),activityRegularizer:bt(this.activityRegularizer),kernelConstraint:un(this.kernelConstraint),biasConstraint:un(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Hb.className="Dense";de.registerClass(Hb);var jb=class extends rt{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=pt(e);for(let t of e.slice(1))if(t==null)throw new q(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Xa(e,1)]}call(e,t){return Y(()=>{this.invokeCallHook(e,t);let n=qe(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let s=[0];for(let r=2;r<n.rank;++r)s.push(r);s.push(1),n=Qe(n,s)}return eV(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};jb.className="Flatten";de.registerClass(jb);var qb=class extends rt{constructor(e){super(e),this.supportsMasking=!0,this.activation=ro(e.activation)}call(e,t){return Y(()=>{this.invokeCallHook(e,t);let n=qe(e);return this.activation.apply(n)})}getConfig(){let e={activation:so(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};qb.className="Activation";de.registerClass(qb);var Xb=class extends rt{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Y(()=>(e=qe(e),JW(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};Xb.className="RepeatVector";de.registerClass(Xb);var Kb=class extends rt{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",s=t.slice(),r=1,a=null;for(let i=0;i<s.length;++i){let l=s[i];if(this.isUnknown(l))if(a===null)a=i;else throw new q("Can only specifiy one unknown dimension.");else r*=l}let o=Xa(e);if(a!==null){if(r===0||o%r!==0)throw new q(n);s[a]=o/r}else if(o!==r)throw new q(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Y(()=>{this.invokeCallHook(e,t);let n=qe(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return U(n,r)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};Kb.className="Reshape";de.registerClass(Kb);var Zb=class extends rt{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=_r(1,e.dims.length+1);if(!v.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Qt({ndim:this.dims.length+1})]}computeOutputShape(e){e=pt(e);let t=e.slice();return this.dims.forEach((n,s)=>{t[s+1]=e[n]}),t}call(e,t){return Qe(qe(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};Zb.className="Permute";de.registerClass(Zb);var Yb=class extends rt{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=qe(e),s=-1;return fh(Qi(n,this.maskValue),s)}call(e,t){return Y(()=>{this.invokeCallHook(e,t);let n=qe(e),s=-1,r=!0,a=fh(Qi(n,this.maskValue),s,r);return L(n,fe(a,n.dtype))})}};Yb.className="Masking";de.registerClass(Yb);var Jb=class extends rt{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Tt(e.inputLength))}this.inputDim=e.inputDim,gn(this.inputDim,"inputDim"),this.outputDim=e.outputDim,gn(this.outputDim,"outputDim"),this.embeddingsInitializer=Rt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=$t(e.embeddingsRegularizer),this.activityRegularizer=$t(e.activityRegularizer),this.embeddingsConstraint=cn(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Y(()=>this.maskZero?(e=qe(e),Qi(e,st(e))):null)}computeOutputShape(e){if(e=pt(e),this.inputLength==null)return[...e,this.outputDim];let t=Tt(this.inputLength);if(t.length!==e.length-1)throw new q(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){let r=t[s],a=e[s+1];if(r!=null&&a!=null&&r!==a)throw new q(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);r==null&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Y(()=>{this.invokeCallHook(e,t);let n=qe(e);n.dtype!=="int32"&&(n=og(n,"int32"));let s=F7(this.embeddings.read(),U(n,[n.size]));return U(s,pt(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Mt(this.embeddingsInitializer),embeddingsRegularizer:bt(this.embeddingsRegularizer),activityRegularizer:bt(this.activityRegularizer),embeddingsConstraint:un(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};Jb.className="Embedding";de.registerClass(Jb);var au=class extends rt{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new je}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){let r=e[e.length-t.length+s],a=t[s];if(r==null||a==null||r<0||a<0)n.push(null);else if(r===1)n.push(a);else if(a===1)n.push(r);else{if(r!==a)throw new q("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[pt(e)]),e=e,e.length<2)throw new q(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let r of e)r!=null&&r[0]!==null&&t.push(r[0]);if(t=qa(t),t.length>1)throw new q(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let r=1;r<e.length;++r){let a=e[r]==null?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let s=e.map(r=>r.length);e.indexOf(null)===-1&&qa(s).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Y(()=>{if(e=e,this.reshapeRequired){let n=[],s=e.map(r=>r.rank);if(s.indexOf(null)===-1){let r=no(s);for(let a of e){let o=a.rank;for(let i=0;i<r-o;++i)a=gp(a,1);n.push(a)}return this.mergeFunction(n)}else{let r=!1;for(let i of e){let l=i.rank;if(l==null){let u=i.shape,c=u[0],h=u.slice(1).concat([c]),d=U(i,[c].concat(Xa(u.slice(1))));d=Qe(d,[1,0]),d=U(d,h),n.push(d),r=!0}else if(l>1){let u=_r(1,l).concat([0]);n.push(Qe(i,u)),r=!0}else n.push(i)}let a=this.mergeFunction(n),o=a.rank;if(r){if(o==null){let i=a.shape,l=i.length,u=i[l-1],c=[u].concat(i.slice(0,i.length-1));a=U(Qe(U(a,[-1,u]),[1,0]),c)}else if(o>1){let i=[o-1].concat(_r(0,o-1));a=Qe(a,i)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let s=1;s<e.length;++s){let r=e[s]==null?null:e[s].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(let s of e)s!=null&&s[0]!==null&&n.push(s[0]);return n=qa(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return Y(()=>{if(t==null)return null;if(!Array.isArray(t))throw new q("`mask` should be an Array");if(!Array.isArray(e))throw new q("`inputs` should be an Array");if(t.length!==e.length)throw new q(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(s=>s==null))return null;t=t.map(s=>s==null?s:Jt(s,0));let n=t[0];for(let s=1;s<t.length-1;++s)n=sr(n,t[s]);return n})}},Qb=class extends au{constructor(e){super(e)}mergeFunction(e){return Y(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ce(t,e[n]);return t})}};Qb.className="Add";de.registerClass(Qb);var e5=class extends au{constructor(e){super(e)}mergeFunction(e){return Y(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=L(t,e[n]);return t})}};e5.className="Multiply";de.registerClass(e5);var t5=class extends au{constructor(e){super(e)}mergeFunction(e){return Y(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ce(t,e[n]);return L(1/e.length,t)})}};t5.className="Average";de.registerClass(t5);var n5=class extends au{constructor(e){super(e)}mergeFunction(e){return Y(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=na(t,e[n]);return t})}};n5.className="Maximum";de.registerClass(n5);var s5=class extends au{constructor(e){super(e)}mergeFunction(e){return Y(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=qc(t,e[n]);return t})}};s5.className="Minimum";de.registerClass(s5);var r5=class extends au{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new q("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let s of e)if(s!=null){t=!1;break}if(t)return;let n=[];for(let s=0;s<e.length;++s){let r=e[s].slice();r.splice(this.axis,1);let a=!1;for(let o of n)if(v.arraysEqual(o,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new q("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Y(()=>rb(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new q("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(let r of t.slice(1)){if(n[s]==null||r[s]==null){n[s]=null;break}n[s]+=r[s]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new q("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new q("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new q(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Y(()=>{let n=!0;if(t.forEach(a=>{if(a!=null){n=!1;return}}),n)return null;let s=[];for(let a=0;a<e.length;++a)t[a]==null?s.push(fe(Rs(e[a]),"bool")):t[a].rank<e[a].rank?s.push(Jt(t[a],-1)):s.push(t[a]);let r=Et(s,this.axis);return k0(r,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};r5.className="Concatenate";de.registerClass(r5);function $d(e,t){for(;e<0;)e+=t;return e}function WU(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new je("batchDot is not implemented for tensors of 4D or higher rank yet");if(v.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),v.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),e.dtype==="complex64"||t.dtype==="complex64")throw new je("batchDot is not implemented for complex64-type Tensors yet.");let s=e.shape.length,r=t.shape.length;n==null&&(n=[s-1,r-2]);let a=n;return Y(()=>{let o;if(s>r){o=s-r;let l=[];for(let u=0;u<o;++u)l.push(1);t=U(t,t.shape.concat(l))}else if(r>s){o=r-s;let l=[];for(let u=0;u<o;++u)l.push(1);e=U(e,e.shape.concat(l))}else o=0;let i;if(e.shape.length===2&&t.shape.length===2)a[0]===a[1]?i=Se(L(e,t),a[0]):i=Se(L(Qe(e,[1,0]),t),a[1]);else{let l=a[0]!==e.shape.length-1,u=a[1]===t.shape.length-1;i=Ye(e,t,l,u)}if(o>0){let l;s>r?l=s+r-3:l=s-1;let u=[];for(let c=l;c<l+o;++c)u.push(c);i=mt(i,u)}return i.shape.length===1&&(i=Jt(i,1)),i})}var a5=class extends au{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){v.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new je("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new q(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(e.length!==2)throw new q(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],s;return Array.isArray(this.axes)?s=this.axes.map((r,a)=>$d(r,e[a].shape.length)):s=[$d(this.axes,t.shape.length),$d(this.axes,n.shape.length)],this.normalize&&(t=Cm(t,s[0]),n=Cm(n,s[1])),WU(t,n,s)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[$d(this.axes,e.length),$d(this.axes,t.length)],n}computeOutputShape(e){v.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new je("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);let r=t.concat(n);return r.length===1&&r.push(1),r}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};a5.className="Dot";de.registerClass(a5);var o5=class extends rt{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Y(()=>{this.invokeCallHook(e,t);let n=qe(e);return Ap(()=>ce(ig(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};o5.className="GaussianNoise";de.registerClass(o5);var i5=class extends rt{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Y(()=>{this.invokeCallHook(e,t);let n=qe(e);return this.rate>0&&this.rate<1?Ap(()=>{let r=Math.sqrt(this.rate/(1-this.rate));return L(n,ig(n.shape,1,r))},()=>n,t.training||!1):n})}};i5.className="GaussianDropout";de.registerClass(i5);var l5=class extends rt{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||qe(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Y(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return Ap(()=>{let r=qe(e),a=1.6732632423543772,o=1.0507009873554805,i=-a*o,l=li(Xc(n),this.rate);l=og(l,"float32");let u=((1-this.rate)*(1+this.rate*i**2))**-.5,c=-u*i*this.rate,h=ce(L(r,l),L(ce(l,-1),i));return ce(L(h,u),c)},()=>qe(e),t.training||!1)}return e})}};l5.className="AlphaDropout";de.registerClass(l5);function Ah(e,t,n,s,r,a=.001){let o;if(e.rank===2)o=ux(e,t,n,s,r,a);else if(e.rank===3)o=cx(e,t,n,s,r,a);else if(e.rank===4)o=dx(e,t,n,s,r,a);else throw new je(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return o}function VU(e,t,n,s,r=.001){return Y(()=>{let a=lp(e,s),o=a.mean,i=a.variance;return[Ah(e,o,i,n,t,r),o,i]})}function UU(e,t,n,s,r=.001){return Y(()=>{let a=lp(e,s),o=a.mean,i=a.variance,l=[];for(let f of _r(0,e.rank))s.indexOf(f)!==-1?l.push(1):l.push(e.shape[f]);let u=U(o,l),c=U(i,l),h=t==null?null:U(t,l),d=n==null?null:U(n,l);return[Ah(e,u,c,d,h,r),o,i]})}function GU(e,t,n,s,r=.001){return v.arraysEqual(s.slice().sort(),_r(0,e.rank-1))?VU(e,t,n,s,r):UU(e,t,n,s,r)}var u5=class extends rt{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Rt(e.betaInitializer||"zeros"),this.gammaInitializer=Rt(e.gammaInitializer||"ones"),this.movingMeanInitializer=Rt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Rt(e.movingVarianceInitializer||"ones"),this.betaConstraint=cn(e.betaConstraint),this.gammaConstraint=cn(e.gammaConstraint),this.betaRegularizer=$t(e.betaRegularizer),this.gammaRegularizer=$t(e.gammaRegularizer)}build(e){e=pt(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new q(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Qt({ndim:e.length,axes:{[t]:n}})];let s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Y(()=>{let n=t.training==null?!1:t.training,s=qe(e),r=s.shape,a=r.length,o=_r(0,a),i=this.axis>=0?this.axis:this.axis+a;o.splice(i,1);let l=nl(1,a);l[i]=r[i];let u=o.slice();u.sort();let c=!v.arraysEqual(u,_r(0,a).slice(0,a-1)),h=()=>{if(c){let y=U(this.movingMean.read(),l),x=U(this.movingVariance.read(),l),A=this.center?U(this.beta.read(),l):null,b=this.scale?U(this.gamma.read(),l):null;return Ah(s,y,x,A,b,this.epsilon)}else return Ah(s,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return h();let[d,p,f]=GU(s,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(y,x,A)=>{Y(()=>{let b=1-A,w=y.read(),S=L(ge(w,x),b);y.write(ge(w,S))})};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,f,this.momentum)})(),d})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Mt(this.betaInitializer),gammaInitializer:Mt(this.gammaInitializer),movingMeanInitializer:Mt(this.movingMeanInitializer),movingVarianceInitializer:Mt(this.movingVarianceInitializer),betaRegularizer:bt(this.betaRegularizer),gammaRegularizer:bt(this.gammaRegularizer),betaConstraint:un(this.betaConstraint),gammaConstraint:un(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};u5.className="BatchNormalization";de.registerClass(u5);var c5=class extends rt{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Rt(e.betaInitializer||"zeros"),this.gammaInitializer=Rt(e.gammaInitializer||"ones"),this.betaRegularizer=$t(e.betaRegularizer),this.gammaRegularizer=$t(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=pt(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(let r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==qa(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(r=>e[r]),s=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,t){let n=qe(e),s=n.shape,r=s.length;return Y(()=>{let{mean:o,variance:i}=lp(n,this.axis,!0),l=nl(1,r);for(let f of this.axis)l[f]=s[f];let u=f=>f!=null&&f.shape.length!==r?U(f,l):f,c=this.scale?u(this.gamma.read()):null,h=this.center?u(this.beta.read()):null,d=[],p=[];for(let f=0;f<r;++f)this.axis.indexOf(f)!==-1?(d.push(s[f]),p.push(1)):(d.push(1),p.push(s[f]));return o=Ws(o,d),i=Ws(i,d),c!=null&&(c=Ws(c,p)),h!=null&&(h=Ws(h,p)),Ah(n,o,i,h,c,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Mt(this.betaInitializer),gammaInitializer:Mt(this.gammaInitializer),betaRegularizer:bt(this.betaRegularizer),gammaRegularizer:bt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};c5.className="LayerNormalization";de.registerClass(c5);function HU(e,t,n){return Y(()=>{if(e.rank!==4)throw new q(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new q("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=Rr()),n!=="channelsLast"&&n!=="channelsFirst")throw new q(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return n==="channelsFirst"?s=[[0,0],[0,0],t[0],t[1]]:s=[[0,0],t[0],t[1],[0,0]],Dr(e,s)})}var d5=class extends rt{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Rr():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new q(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new q(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new q(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Qt({ndim:4})]}computeOutputShape(e){e=pt(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return Y(()=>HU(qe(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};d5.className="ZeroPadding2D";de.registerClass(d5);function Sg(e,t,n,s,r,a){return Y(()=>{Xt(r),_7(a),qs(s),n==null&&(n=[1,1]),s==null&&(s="valid"),r==null&&(r=Rr()),a==null&&(a="max"),e=$b(e,r);let o,i=s==="same"?"same":"valid";return a==="max"?o=op(e,t,n,i):o=Qh(e,t,n,i),r==="channelsFirst"&&(o=Qe(o,[0,3,1,2])),o})}function I4(e,t,n,s,r,a){return Y(()=>{Xt(r),_7(a),qs(s),n==null&&(n=[1,1,1]),s==null&&(s="valid"),r==null&&(r=Rr()),a==null&&(a="max"),e=b4(e,r);let o,i=s==="same"?"same":"valid";return a==="max"?o=Ox(e,t,n,i):o=lx(e,t,n,i),r==="channelsFirst"&&(o=Qe(o,[0,4,1,2,3])),o})}var C4=class extends rt{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new q(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(gn(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new q(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);gn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,qs(this.padding),this.inputSpec=[new Qt({ndim:3})]}computeOutputShape(e){e=pt(e);let t=Nr(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Y(()=>{this.invokeCallHook(e,t),e=gp(qe(e),2);let n=this.poolingFunction(qe(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return mt(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},h5=class extends C4{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Xt(r),qs(s),Sg(e,t,n,s,r,"max")}};h5.className="MaxPooling1D";de.registerClass(h5);var p5=class extends C4{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Xt(r),qs(s),Sg(e,t,n,s,r,"avg")}};p5.className="AveragePooling1D";de.registerClass(p5);var T4=class extends rt{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new q(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];gn(this.poolSize,"poolSize"),gn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Xt(this.dataFormat),qs(this.padding),this.inputSpec=[new Qt({ndim:4})]}computeOutputShape(e){e=pt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Nr(t,this.poolSize[0],this.padding,this.strides[0]),n=Nr(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Y(()=>(this.invokeCallHook(e,t),this.poolingFunction(qe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},f5=class extends T4{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Xt(r),qs(s),Sg(e,t,n,s,r,"max")}};f5.className="MaxPooling2D";de.registerClass(f5);var m5=class extends T4{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Xt(r),qs(s),Sg(e,t,n,s,r,"avg")}};m5.className="AveragePooling2D";de.registerClass(m5);var N4=class extends rt{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new q(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];gn(this.poolSize,"poolSize"),gn(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Xt(this.dataFormat),qs(this.padding),this.inputSpec=[new Qt({ndim:5})]}computeOutputShape(e){e=pt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Nr(t,this.poolSize[0],this.padding,this.strides[0]),n=Nr(n,this.poolSize[1],this.padding,this.strides[1]),s=Nr(s,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return Y(()=>(this.invokeCallHook(e,t),this.poolingFunction(qe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},g5=class extends N4{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Xt(r),qs(s),I4(e,t,n,s,r,"max")}};g5.className="MaxPooling3D";de.registerClass(g5);var y5=class extends N4{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Xt(r),qs(s),I4(e,t,n,s,r,"avg")}};y5.className="AveragePooling3D";de.registerClass(y5);var E4=class extends rt{constructor(e){super(e),this.inputSpec=[new Qt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new je}},A5=class extends E4{constructor(e){super(e||{})}call(e,t){return Y(()=>{let n=qe(e);return Pt(n,1)})}};A5.className="GlobalAveragePooling1D";de.registerClass(A5);var x5=class extends E4{constructor(e){super(e||{})}call(e,t){return Y(()=>{let n=qe(e);return Dn(n,1)})}};x5.className="GlobalMaxPooling1D";de.registerClass(x5);var _4=class extends rt{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Xt(this.dataFormat),this.inputSpec=[new Qt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new je}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},b5=class extends _4{call(e,t){return Y(()=>{let n=qe(e);return this.dataFormat==="channelsLast"?Pt(n,[1,2]):Pt(n,[2,3])})}};b5.className="GlobalAveragePooling2D";de.registerClass(b5);var v5=class extends _4{call(e,t){return Y(()=>{let n=qe(e);return this.dataFormat==="channelsLast"?Dn(n,[1,2]):Dn(n,[2,3])})}};v5.className="GlobalMaxPooling2D";de.registerClass(v5);var R4=class extends rt{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let s=t.layer,r=Tr(s,n);delete t.layer;let a={layer:r};return Object.assign(a,t),new e(a)}},w5=class extends R4{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=pt(e),e.length<3)throw new q(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=pt(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return Y(()=>(e=qe(e),k4((a,o)=>[qe(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};w5.className="TimeDistributed";de.registerClass(w5);function jU(e){su(qW,"BidirectionalMergeMode",e)}var qU="concat",k5=class extends R4{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Tr(n),t.goBackwards=t.goBackwards!==!0;let s={};if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=Tr(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?qU:e.mergeMode,jU(this.mergeMode),e.weights)throw new je("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,s,r;return this.returnState&&(r=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,s=[n]):this.mergeMode==null?s=[n,n.slice()]:s=[n],this.returnState?this.mergeMode==null?s.concat(r).concat(r.slice()):[n].concat(r).concat(r.slice()):ls(s)}apply(e,t){let n=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});let r=w4(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&s==null)return super.apply(e,t);let a=[],o=[];if(n!=null){let l=n.length;if(l%2>0)throw new q("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);let u=n.map(c=>new Qt({shape:c.shape}));this.forwardLayer.stateSpec=u.slice(0,l/2),this.backwardLayer.stateSpec=u.slice(l/2),o.push(...u)}if(s!=null)throw new je("Support for constants in Bidirectional layers is not implemented yet.");let i=a[0]instanceof Sr;for(let l of a)if(l instanceof Sr!==i)throw new q("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){let l=[e].concat(a),u=this.inputSpec.concat(o),c=this.inputSpec;this.inputSpec=u;let h=super.apply(l,t);return this.inputSpec=c,h}else return super.apply(e,t)}call(e,t){return Y(()=>{let n=t.initialState,s,r;if(n==null)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let i=n.slice(0,n.length/2),l=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:i})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let a;this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=Hs(r,1));let o;return this.mergeMode==="concat"?o=rb([s,r]):this.mergeMode==="sum"?o=ce(s,r):this.mergeMode==="ave"?o=L(.5,ce(s,r)):this.mergeMode==="mul"?o=L(s,r):this.mergeMode==null&&(o=[s,r]),this.returnState?this.mergeMode==null?o.concat(a):[o].concat(a):o})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ui(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Ui(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let r=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(r).concat(r):[n].concat(r).concat(r)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=Tr(t.layer);if(delete t.layer,t.numConstants!=null)throw new je("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let s=t;return s.layer=n,new e(s)}};k5.className="Bidirectional";de.registerClass(k5);function XU(e){return new Yc(e)}function KU(e){return new Eb(e)}function ZU(e){return new Cb(e)}function YU(e){return new Tb(e)}function JU(e){return new Nb(e)}function QU(e){return new Rb(e)}function eG(e){return new _b(e)}function tG(e){return new Ag(e)}function nG(e){return new wp(e)}function sG(e){return new Fb(e)}function rG(e){return new kp(e)}function aG(e){return new Ob(e)}function oG(e){return new Pb(e)}function iG(e){return new Mb(e)}function lG(e){return new zb(e)}function uG(e){return new Lb(e)}function cG(e){return new qb(e)}function dG(e){return new Hb(e)}function hG(e){return new kg(e)}function pG(e){return new Gb(e)}function fG(e){return new jb(e)}function mG(e){return new Xb(e)}function gG(e){return new Kb(e)}function yG(e){return new Zb(e)}function AG(e){return new Jb(e)}function xG(e){return new Qb(e)}function bG(e){return new t5(e)}function vG(e){return new r5(e)}function wG(e){return new n5(e)}function kG(e){return new s5(e)}function SG(e){return new e5(e)}function IG(e){return new a5(e)}function CG(e){return new u5(e)}function TG(e){return new c5(e)}function NG(e){return new d5(e)}function S5(e){return new p5(e)}function EG(e){return S5(e)}function _G(e){return S5(e)}function I5(e){return new m5(e)}function RG(e){return I5(e)}function $G(e){return I5(e)}function C5(e){return new y5(e)}function DG(e){return C5(e)}function FG(e){return C5(e)}function OG(e){return new A5(e)}function PG(e){return new b5(e)}function $4(e){return new x5(e)}function D4(e){return new v5(e)}function F4(e){return new h5(e)}function O4(e){return new f5(e)}function MG(e){return new g5(e)}function zG(e){return new Wb(e)}function LG(e){return new bg(e)}function BG(e){return new Vb(e)}function WG(e){return new Ip(e)}function VG(e){return new Bb(e)}function UG(e){return new xg(e)}function GG(e){return new Ub(e)}function HG(e){return new wg(e)}function jG(e){return new sa(e)}function qG(e){return new vg(e)}function XG(e){return new k5(e)}function KG(e){return new w5(e)}var ZG=$4,YG=D4,JG=F4,QG=O4;function eH(e){return new o5(e)}function tH(e){return new i5(e)}function nH(e){return new l5(e)}function sH(e){return new Yb(e)}var P4={};Ue(P4,{MAPE:()=>fH,MSE:()=>yH,binaryAccuracy:()=>rH,binaryCrossentropy:()=>aH,categoricalAccuracy:()=>iH,categoricalCrossentropy:()=>lH,cosineProximity:()=>dH,mape:()=>mH,meanAbsoluteError:()=>hH,meanAbsolutePercentageError:()=>pH,meanSquaredError:()=>gH,mse:()=>AH,precision:()=>uH,recall:()=>cH,sparseCategoricalAccuracy:()=>oH});function rH(e,t){return xb(e,t)}function aH(e,t){return Z7(e,t)}function oH(e,t){return Y7(e,t)}function iH(e,t){return bb(e,t)}function lH(e,t){return vb(e,t)}function uH(e,t){return K7(e,t)}function cH(e,t){return YV(e,t)}function dH(e,t){return Ab(e,t)}function hH(e,t){return gg(e,t)}function pH(e,t){return Jc(e,t)}function fH(e,t){return Jc(e,t)}function mH(e,t){return Jc(e,t)}function gH(e,t){return ru(e,t)}function yH(e,t){return ru(e,t)}function AH(e,t){return ru(e,t)}var M4={};Ue(M4,{modelFromJSON:()=>TU});var z4={};Ue(z4,{l1:()=>bH,l1l2:()=>xH,l2:()=>vH});function xH(e){return new bp(e)}function bH(e){return OU(e)}function vH(e){return PU(e)}var L4=class extends sc{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof fa))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function Nf(e,t){return e<t}function z3(e,t){return e>t}var B4=class extends L4{constructor(e){if(super(),e==null&&(e={}),e.restoreBestWeights)throw new je("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Nf:this.mode==="max"?this.monitorFunc=z3:this.monitor.indexOf("acc")!==-1?this.monitorFunc=z3:this.monitorFunc=Nf,this.monitorFunc===Nf&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Nf?1/0:-1/0}async onEpochEnd(e,t){await Ma(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function wH(e){return new B4(e)}var kH={earlyStopping:wH},SH=K();SH.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var Zs;(function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"})(Zs||(Zs={}));var L3;(function(e){let t;(function(n){n[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(L3||(L3={}));var T5={};function IH(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};T5[e]=n}function W4(e){return T5[e]}function CH(e){delete T5[e]}function I(e,t,n,s,r){let a=t.inputParams[e];if(a&&a.inputIndexStart!==void 0){let i=a.inputIndexStart,l=a.inputIndexEnd===0?void 0:a.inputIndexEnd===void 0?i+1:a.inputIndexEnd;if(a.type==="tensor")return Yn(t.inputNames[a.inputIndexStart],n,s,r);if(a.type==="tensors")return t.inputNames.slice(i,l).map(d=>Yn(d,n,s,r));let u=Yn(t.inputNames.slice(i)[0],n,s,r),c=u.dataSync();return a.type==="number"?c[0]:v.toNestedArray(u.shape,c)}let o=t.attrParams[e];return o&&o.value}function Yn(e,t,n,s){let[r,a]=vs(e);if(s!=null){let i=s.getHashTableHandleByName(r);if(i!=null)return i}let o=n.currentContextIds.find(i=>!!t[Rm(r,i)]);return o!==void 0?t[Rm(r,o)][a]:void 0}function TH(e,t,n){return t[Rm(e,n.currentContextId)]}function jr(e,t){let[n,s,r]=vs(e);return[Rm(n,t&&t.currentContextId),s,r]}function Rm(e,t){return t?`${e}-${t}`:e}function vs(e){let t=e.split(":");if(t.length===1)return[e,0,void 0];let n=t[0],s=t.length===3?t[1]:void 0,r=Number(t[t.length-1]);return[n,r,s]}function Qf(e,t,n){let s=I("pad",e,t,n);if(s==="explicit"){s=I("explicitPaddings",e,t,n);let r=[[0,0],[0,0],[0,0],[0,0]];for(let a=0;a<4;a++)r[a][0]=s[a*2],r[a][1]=s[a*2+1];return r}return s}function ca(e){return e.kept?e:Qn(e)}var V4={};Ue(V4,{json:()=>NH});var NH=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],U4={};Ue(U4,{json:()=>EH});var EH=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],G4={};Ue(G4,{json:()=>_H});var _H=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],H4={};Ue(H4,{json:()=>RH});var RH=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],j4={};Ue(j4,{json:()=>$H});var $H=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],q4={};Ue(q4,{json:()=>DH});var DH=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],X4={};Ue(X4,{json:()=>FH});var FH=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],K4={};Ue(K4,{json:()=>OH});var OH=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Z4={};Ue(Z4,{json:()=>PH});var PH=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],Y4={};Ue(Y4,{json:()=>MH});var MH=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],J4={};Ue(J4,{json:()=>zH});var zH=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Q4={};Ue(Q4,{json:()=>LH});var LH=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],eC={};Ue(eC,{json:()=>BH});var BH=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],tC={};Ue(tC,{json:()=>WH});var WH=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],nC={};Ue(nC,{json:()=>VH});var VH=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],sC={};Ue(sC,{json:()=>UH});var UH=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],rC={};Ue(rC,{json:()=>GH});var GH=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],aC={};Ue(aC,{json:()=>HH});var HH=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],oC={};Ue(oC,{json:()=>jH});var jH=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],B3=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[V4,U4,G4,H4,j4,q4,X4,K4,Z4,Y4,J4,Q4,eC,tC,nC,sC,rC,aC,oC],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,s)=>(n[s.tfOpName]=s,n),{})}transformGraph(e,t={}){let n=e.node,s=[],r=[],a=[],o=n.reduce((f,m)=>(f[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?s.push(f[m.name]):m.op==="Const"?r.push(f[m.name]):(m.input==null||m.input.length===0)&&a.push(f[m.name]),f),{}),i=[],l=[],u={},c={};t!=null&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));let h=Object.keys(o);h.forEach(f=>{let m=o[f];m.inputNames.forEach((g,y)=>{let[x,,A]=jr(g),b=o[x];if(b.outputs!=null){let w=b.outputs.indexOf(A);if(w!==-1){let S=`${x}:${w}`;m.inputNames[y]=S}}m.inputs.push(b),b.children.push(m)})}),Object.keys(c).length===0?h.forEach(f=>{let m=o[f];m.children.length===0&&l.push(m)}):Object.keys(c).forEach(f=>{let[m]=jr(f),g=o[m];g!=null&&(g.signatureKey=c[f],l.push(g))}),Object.keys(u).length>0?Object.keys(u).forEach(f=>{let[m]=jr(f),g=o[m];g&&(g.signatureKey=u[f],i.push(g))}):i=s;let d={};e.library!=null&&e.library.function!=null&&(d=e.library.function.reduce((f,m)=>(f[m.signature.name]=this.mapFunction(m),f),{}));let p={nodes:o,inputs:i,outputs:l,weights:r,placeholders:s,signature:t,functions:d};return a.length>0&&(p.initNodes=a),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=W4(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(s=>s.startsWith("^")?s.slice(1):s),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((s,r)=>(s[r.name]={type:r.type,inputIndexStart:r.start,inputIndexEnd:r.end},s),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((s,r)=>{let a=r.type,o;switch(r.type){case"string":o=VA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=VA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":o=KA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=KA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":o=GA(e.attr,r.tfName,r.defaultValue||0),o===void 0&&!!r.tfDeprecatedName&&(o=GA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":o=XA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=XA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":o=UA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=UA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":o=YA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=YA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":o=qA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=qA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":o=ZA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=ZA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":o=HA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=HA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":o=jA(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=jA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":o=W3(e.attr,r.tfName,r.defaultValue),o===void 0&&!!r.tfDeprecatedName&&(o=W3(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${r.type} for op: ${e.op}`)}return s[r.name]={value:o,type:a},s},{})),n}mapFunction(e){let t=e.nodeDef,n=[],s=[],r={};t!=null&&(r=t.reduce((c,h)=>(c[h.name]=this.mapNode(h),h.op==="Const"&&s.push(c[h.name]),c),{}));let a=[],o=[];e.signature.inputArg.forEach(c=>{let[h]=jr(c.name),d={name:h,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:N5(c.type),type:"dtype"}},children:[]};d.signatureKey=c.name,a.push(d),r[h]=d}),Object.keys(r).forEach(c=>{let h=r[c];h.inputNames.forEach((d,p)=>{let[f,,m]=jr(d),g=r[f];if(g.outputs!=null){let y=g.outputs.indexOf(m);if(y!==-1){let x=`${f}:${y}`;h.inputNames[p]=x}}h.inputs.push(g),g.children.push(h)})});let l=e.ret;e.signature.outputArg.forEach(c=>{let[h,d]=jr(l[c.name]),p=r[h];p!=null&&(p.defaultOutput=d,o.push(p))});let u=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:o,weights:s,placeholders:n,signature:u}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function qH(e){let t=K().global;if(typeof t.atob<"u")return t.atob(e);if(typeof Buffer<"u")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function iC(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):qH(e);return t?n:n.toLowerCase()}function VA(e,t,n,s=!1){let r=e[t];return r!=null?iC(r.s,s):n}function UA(e,t,n){let s=e[t];return s?s.b:n}function GA(e,t,n){let s=e[t]||{},r=s.i!=null?s.i:s.f!=null?s.f:n;return typeof r=="number"?r:parseInt(r,10)}function N5(e){switch(typeof e=="string"&&(e=Zs[e]),e){case Zs.DT_FLOAT:case Zs.DT_HALF:return"float32";case Zs.DT_INT32:case Zs.DT_INT64:case Zs.DT_INT8:case Zs.DT_UINT8:return"int32";case Zs.DT_BOOL:return"bool";case Zs.DT_DOUBLE:return"float32";case Zs.DT_STRING:return"string";default:return null}}function W3(e,t,n){let s=e[t];return s&&s.func?s.func.name:n}function HA(e,t,n){let s=e[t];return s&&s.type?N5(s.type):n}function jA(e,t,n){let s=e[t];return s&&s.list&&s.list.type?s.list.type.map(r=>N5(r)):n}function lC(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function qA(e,t,n){let s=e[t];return s&&s.shape?lC(s.shape):n}function XA(e,t,n){let s=e[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):n}function KA(e,t,n,s=!1){let r=e[t];return r&&r.list&&r.list.s?r.list.s.map(a=>iC(a,s)):n}function ZA(e,t,n){let s=e[t];return s&&s.list&&s.list.shape?s.list.shape.map(r=>lC(r)):n}function YA(e,t,n){let s=e[t];return s&&s.list&&s.list.b?s.list.b:n}var XH=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(s=>this.getInput(s)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((s,r)=>(s[r]=this.getAttr(r),s),{}))}getInput(e){return Yn(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return Yn(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return GA(this.node.rawAttrs,e,t);if(n.s!=null)return VA(this.node.rawAttrs,e,t);if(n.b!=null)return UA(this.node.rawAttrs,e,t);if(n.shape!=null)return qA(this.node.rawAttrs,e,t);if(n.type!=null)return HA(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return XA(this.node.rawAttrs,e,t);if(n.list.s!=null)return KA(this.node.rawAttrs,e,t);if(n.list.shape!=null)return ZA(this.node.rawAttrs,e,t);if(n.list.b!=null)return YA(this.node.rawAttrs,e,t);if(n.list.type!=null)return jA(this.node.rawAttrs,e,t)}return t}},Cn={};Ue(Cn,{OP_SCOPE_SUFFIX:()=>P2,abs:()=>Yt,acos:()=>J2,acosh:()=>Q2,add:()=>ce,addN:()=>ex,all:()=>k0,any:()=>fh,argMax:()=>Jr,argMin:()=>tx,asin:()=>nx,asinh:()=>sx,atan:()=>rx,atan2:()=>ax,atanh:()=>ox,avgPool:()=>Qh,avgPool3d:()=>lx,basicLSTMCell:()=>AI,batchNorm:()=>Bc,batchNorm2d:()=>ux,batchNorm3d:()=>cx,batchNorm4d:()=>dx,batchToSpaceND:()=>ep,bincount:()=>hx,booleanMaskAsync:()=>e7,broadcastArgs:()=>xI,broadcastTo:()=>Vi,buffer:()=>Le,cast:()=>fe,ceil:()=>px,clipByValue:()=>cs,clone:()=>Qn,complex:()=>ga,concat:()=>Et,concat1d:()=>fx,concat2d:()=>tp,concat3d:()=>mx,concat4d:()=>gx,conv1d:()=>S0,conv2d:()=>ya,conv2dTranspose:()=>I0,conv3d:()=>Ax,conv3dTranspose:()=>xx,cos:()=>np,cosh:()=>C0,cosineWindow:()=>X0,cumprod:()=>mh,cumsum:()=>T0,denseBincount:()=>vI,depthToSpace:()=>bx,depthwiseConv2d:()=>Wc,diag:()=>wI,dilation2d:()=>vx,div:()=>Ae,divNoNan:()=>wx,dot:()=>kx,dropout:()=>Kx,einsum:()=>kI,elu:()=>Vc,enclosingPowerOfTwo:()=>Zx,equal:()=>Ns,erf:()=>Sx,euclideanNorm:()=>Tx,exp:()=>Es,expandDims:()=>Jt,expm1:()=>Nx,eye:()=>N0,fft:()=>hp,fill:()=>Gc,floor:()=>Hc,floorDiv:()=>Yh,fused:()=>tc,gather:()=>jc,gatherND:()=>r7,greater:()=>fs,greaterEqual:()=>li,ifft:()=>ec,imag:()=>Zh,image:()=>He,inTopKAsync:()=>a7,irfft:()=>G0,isFinite:()=>Ex,isInf:()=>_x,isNaN:()=>Rx,leakyRelu:()=>sp,less:()=>E0,lessEqual:()=>ui,linalg:()=>Qx,linspace:()=>NI,localResponseNormalization:()=>$x,log:()=>_s,log1p:()=>rp,logSigmoid:()=>Dx,logSoftmax:()=>R0,logSumExp:()=>$0,logicalAnd:()=>sr,logicalNot:()=>ap,logicalOr:()=>D0,logicalXor:()=>Fx,losses:()=>y7,lowerBound:()=>_I,matMul:()=>Ye,max:()=>Dn,maxPool:()=>op,maxPool3d:()=>Ox,maxPoolWithArgmax:()=>RI,maximum:()=>na,mean:()=>Pt,meshgrid:()=>$I,min:()=>ja,minimum:()=>qc,mirrorPad:()=>Px,mod:()=>ip,moments:()=>lp,movingAverage:()=>t7,mul:()=>L,multiRNNCell:()=>DI,multinomial:()=>FI,neg:()=>Nt,norm:()=>Uc,notEqual:()=>Qi,oneHot:()=>Yu,ones:()=>Cs,onesLike:()=>Rs,op:()=>V,outerProduct:()=>OI,pad:()=>Dr,pad1d:()=>PI,pad2d:()=>MI,pad3d:()=>zI,pad4d:()=>LI,pool:()=>Mx,pow:()=>Aa,prelu:()=>cp,print:()=>B2,prod:()=>zx,raggedTensorToTensor:()=>BI,rand:()=>WI,randomGamma:()=>VI,randomNormal:()=>O0,randomStandardNormal:()=>UI,randomUniform:()=>Xc,range:()=>Qu,real:()=>Ju,reciprocal:()=>Wx,relu:()=>Fr,relu6:()=>P0,reshape:()=>U,reverse:()=>Hs,reverse1d:()=>GI,reverse2d:()=>HI,reverse3d:()=>jI,reverse4d:()=>qI,rfft:()=>pp,round:()=>M0,rsqrt:()=>z0,scalar:()=>Ee,scatterND:()=>n7,searchSorted:()=>F0,selu:()=>L0,separableConv2d:()=>B0,setdiff1dAsync:()=>XI,sigmoid:()=>Ts,sign:()=>Vx,signal:()=>g7,sin:()=>W0,sinh:()=>V0,slice:()=>ze,slice1d:()=>dp,slice2d:()=>U0,slice3d:()=>el,slice4d:()=>tl,softmax:()=>Kc,softplus:()=>tu,spaceToBatchND:()=>up,sparse:()=>A7,sparseToDense:()=>s7,spectral:()=>m7,split:()=>kn,sqrt:()=>In,square:()=>gt,squaredDifference:()=>H0,squeeze:()=>mt,stack:()=>Pn,step:()=>nu,stridedSlice:()=>Ux,string:()=>x7,sub:()=>ge,sum:()=>Se,tan:()=>Gx,tanh:()=>Yi,tensor:()=>lt,tensor1d:()=>qt,tensor2d:()=>Kr,tensor3d:()=>H2,tensor4d:()=>KI,tensor5d:()=>ZI,tensor6d:()=>YI,tile:()=>Ws,topk:()=>Hx,transpose:()=>Qe,truncatedNormal:()=>j0,unique:()=>jx,unsortedSegmentSum:()=>q0,unstack:()=>ds,upperBound:()=>JI,variable:()=>qx,where:()=>On,whereAsync:()=>Xx,zeros:()=>Vt,zerosLike:()=>st});var KH=(e,t,n,s=Cn)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(I("a",e,t,n),I("b",e,t,n))];case"AddN":return[s.addN(I("tensors",e,t,n))];case"FloorMod":case"Mod":return[s.mod(I("a",e,t,n),I("b",e,t,n))];case"Mul":return[s.mul(I("a",e,t,n),I("b",e,t,n))];case"RealDiv":case"Div":return[s.div(I("a",e,t,n),I("b",e,t,n))];case"DivNoNan":return[s.divNoNan(I("a",e,t,n),I("b",e,t,n))];case"FloorDiv":return[s.floorDiv(I("a",e,t,n),I("b",e,t,n))];case"Sub":return[s.sub(I("a",e,t,n),I("b",e,t,n))];case"Minimum":return[s.minimum(I("a",e,t,n),I("b",e,t,n))];case"Maximum":return[s.maximum(I("a",e,t,n),I("b",e,t,n))];case"Pow":return[s.pow(I("a",e,t,n),I("b",e,t,n))];case"SquaredDifference":return[s.squaredDifference(I("a",e,t,n),I("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},ZH=(e,t,n,s=Cn)=>{switch(e.op){case"Abs":case"ComplexAbs":return[s.abs(I("x",e,t,n))];case"Acos":return[s.acos(I("x",e,t,n))];case"Acosh":return[s.acosh(I("x",e,t,n))];case"Asin":return[s.asin(I("x",e,t,n))];case"Asinh":return[s.asinh(I("x",e,t,n))];case"Atan":return[s.atan(I("x",e,t,n))];case"Atan2":return[s.atan2(I("x",e,t,n),I("y",e,t,n))];case"Atanh":return[s.atanh(I("x",e,t,n))];case"Ceil":return[s.ceil(I("x",e,t,n))];case"Complex":return[s.complex(I("real",e,t,n),I("imag",e,t,n))];case"Cos":return[s.cos(I("x",e,t,n))];case"Cosh":return[s.cosh(I("x",e,t,n))];case"Elu":return[s.elu(I("x",e,t,n))];case"Erf":return[s.erf(I("x",e,t,n))];case"Exp":return[s.exp(I("x",e,t,n))];case"Expm1":return[s.expm1(I("x",e,t,n))];case"Floor":return[s.floor(I("x",e,t,n))];case"Log":return[s.log(I("x",e,t,n))];case"Log1p":return[s.log1p(I("x",e,t,n))];case"Imag":return[s.imag(I("x",e,t,n))];case"Neg":return[s.neg(I("x",e,t,n))];case"Reciprocal":return[s.reciprocal(I("x",e,t,n))];case"Real":return[s.real(I("x",e,t,n))];case"Relu":return[s.relu(I("x",e,t,n))];case"Round":return[s.round(I("x",e,t,n))];case"Selu":return[s.selu(I("x",e,t,n))];case"Sigmoid":return[s.sigmoid(I("x",e,t,n))];case"Sin":return[s.sin(I("x",e,t,n))];case"Sign":return[s.sign(I("x",e,t,n))];case"Sinh":return[s.sinh(I("x",e,t,n))];case"Softplus":return[s.softplus(I("x",e,t,n))];case"Sqrt":return[s.sqrt(I("x",e,t,n))];case"Square":return[s.square(I("x",e,t,n))];case"Tanh":return[s.tanh(I("x",e,t,n))];case"Tan":return[s.tan(I("x",e,t,n))];case"ClipByValue":return[s.clipByValue(I("x",e,t,n),I("clipValueMin",e,t,n),I("clipValueMax",e,t,n))];case"Relu6":return[s.relu6(I("x",e,t,n))];case"Rsqrt":return[s.rsqrt(Yn(e.inputNames[0],t,n))];case"Prod":return[s.prod(I("x",e,t,n),I("axes",e,t,n))];case"LeakyRelu":return[s.leakyRelu(I("x",e,t,n),I("alpha",e,t,n))];case"Prelu":return[s.prelu(I("x",e,t,n),I("alpha",e,t,n))];case"IsNan":return[s.isNaN(Yn(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Qs(e,t,n=""){if(!(typeof e=="number"||typeof t=="number")){v.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let s=0;s<e.length;s++){let r=e[s],a=t[s];v.assert(r<0||a<0||r===a,()=>n+` Shapes ${e} and ${t} must match`)}}}function V3(e){return!(typeof e=="number"||e.some(t=>t<0))}function Dd(e,t,n){let s=JA(e,n),r=!V3(s);if(r&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&t.forEach(a=>{s=JA(a.shape,s)}),!V3(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function JA(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let s=0;s<e.length;++s){let r=e[s],a=t[s];if(r>=0&&a>=0&&r!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[s]=r>=0?r:a}return n}var YH=class{constructor(e,t,n,s,r,a,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=s,this.identicalElementShapes=r,this.dynamicSize=a,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=Ee(0),mn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Qs(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,mn(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,s)=>this.write(n,t[s]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let s=0;s<this.size();s++)e.push(s)}if(e.length===0)return lt([],[0].concat(this.elementShape));let n=this.readMany(e);return Qs(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Pn(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return lt([],[0].concat(this.elementShape));let t=[];for(let s=0;s<this.size();s++)t.push(s);let n=this.readMany(t);return Qs(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Et(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,ds(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,s=e.map(i=>(n+=i,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let r=n===0?0:t.size/n,a=[];Y(()=>{t=U(t,[1,n,r]);for(let i=0;i<e.length;++i){let l=i===0?0:s[i-1],u=[0,l,0],c=[1,e[i],r];a[i]=U(ze(t,u,c),this.elementShape)}return a});let o=[];for(let i=0;i<e.length;i++)o[i]=i;this.writeMany(o,a)}},ac=class{constructor(e,t,n,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,e?.forEach(r=>{if(n!==r.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${r.dtype}`);Qs(t,r.shape,"TensorList shape mismatch: "),mn(r)}),this.idTensor=Ee(0),this.maxNumElements=s,mn(this.idTensor)}get id(){return this.idTensor.id}copy(){return new ac([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Qs(e,this.elementShape,"TensorList shape mismatch: ");let s=Dd(this.elementShape,this.tensors,e);return Y(()=>{let r=this.tensors.map(a=>U(a,s));return Pn(r,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=Dd(this.elementShape,this.tensors,e),s=this.tensors.pop();return s.kept=!1,Qs(s.shape,e,"TensorList shape mismatch: "),U(s,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Qs(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");mn(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new ac([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Qs(this.tensors[e].shape,t,"TensorList shape mismatch: ");let s=Dd(this.elementShape,this.tensors,t);return U(this.tensors[e],s)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Qs(this.elementShape,t.shape,"TensorList shape mismatch: "),mn(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Qs(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let s=Dd(this.elementShape,this.tensors,n);return e.length===0?lt([],[0].concat(s)):Y(()=>{let r=e.map(a=>U(this.tensors[a],s));return Pn(r,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Qs(this.elementShape,t,"TensorList shape mismatch: ");let n=Dd(this.elementShape,this.tensors,t);return this.size()===0?lt([],[0].concat(n)):Y(()=>{let s=this.tensors.map(r=>U(r,n));return Et(s,0)})}};function JH(e,t,n){let s=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);let r=e.shape.slice(1);Qs(r,t,"TensorList shape mismatch: ");let a=ds(e);return new ac(a,t,s)}function QH(e,t,n,s){return new ac([],e,t,s)}function ej(e,t,n,s){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let r=Math.max(...t);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);let a=new ac([],n,e.dtype,s),o=ds(e,0);return t.forEach((i,l)=>{a.setItem(i,o[l])}),a}function tj(e,t,n){let s=0,r=t.map(c=>(s+=c,s));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${e.shape}`);let a=e.shape.slice(1),o=JA(a,n),i=s===0?0:e.size/s,l=Y(()=>{let c=[];e=U(e,[1,s,i]);for(let h=0;h<t.length;++h){let d=h===0?0:r[h-1],p=[0,d,0],f=[1,t[h],i];c[h]=U(ze(e,p,f),o)}return e.dispose(),c}),u=new ac([],n,e.dtype,t.length);for(let c=0;c<l.length;c++)u.setItem(c,l[c]);return u}var nj=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let s=I("thenBranch",e,t,n),r=I("elseBranch",e,t,n),a=I("cond",e,t,n),o=I("args",e,t,n);return(await a.data())[0]?n.functionMap[s].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let s=I("body",e,t,n),r=I("cond",e,t,n),a=I("args",e,t,n),o=await n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),i=a.map(c=>c.id),l=await o[0].data();o.forEach(c=>{!c.kept&&i.indexOf(c.id)===-1&&c.dispose()});let u=a;for(;l[0];){let c=u;u=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);let h=u.map(p=>p.id);c.forEach(p=>{!p.kept&&i.indexOf(p.id)===-1&&h.indexOf(p.id)===-1&&p.dispose()});let d=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await d[0].data(),d.forEach(p=>{!p.kept&&i.indexOf(p.id)===-1&&h.indexOf(p.id)===-1&&p.dispose()})}return u}case"LoopCond":{let s=I("pred",e,t,n);return[ca(s)]}case"Switch":{let s=I("pred",e,t,n),r=I("data",e,t,n);return r.kept||(r=ca(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{let s=e.inputNames.find(r=>Yn(r,t,n)!==void 0);if(s){let r=Yn(s,t,n);return[ca(r)]}return}case"Enter":{let s=I("frameName",e,t,n),r=I("tensor",e,t,n);return n.enterFrame(s),[ca(r)]}case"Exit":{let s=I("tensor",e,t,n);return n.exitFrame(),[ca(s)]}case"NextIteration":{let s=I("tensor",e,t,n);return n.nextIteration(),[ca(s)]}case"TensorArrayV3":{let s=I("size",e,t,n),r=I("dtype",e,t,n),a=I("elementShape",e,t,n),o=I("dynamicSize",e,t,n),i=I("clearAfterRead",e,t,n),l=I("identicalElementShapes",e,t,n),u=I("name",e,t,n),c=new YH(u,r,s,a,l,o,i);return n.addTensorArray(c),[c.idTensor,Ee(1)]}case"TensorArrayWriteV3":{let s=I("tensorArrayId",e,t,n),r=I("index",e,t,n),a=I("tensor",e,t,n),o=n.getTensorArray(s.id);return o.write(r,a),[o.idTensor]}case"TensorArrayReadV3":{let s=I("tensorArrayId",e,t,n),r=I("index",e,t,n);return[n.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{let s=I("tensorArrayId",e,t,n),r=I("indices",e,t,n),a=I("dtype",e,t,n);return[n.getTensorArray(s.id).gather(r,a)]}case"TensorArrayScatterV3":{let s=I("tensorArrayId",e,t,n),r=I("indices",e,t,n),a=I("tensor",e,t,n),o=n.getTensorArray(s.id);return o.scatter(r,a),[o.idTensor]}case"TensorArrayConcatV3":{let s=I("tensorArrayId",e,t,n),r=n.getTensorArray(s.id),a=I("dtype",e,t,n);return[r.concat(a)]}case"TensorArraySplitV3":{let s=I("tensorArrayId",e,t,n),r=I("tensor",e,t,n),a=I("lengths",e,t,n),o=n.getTensorArray(s.id);return o.split(a,r),[o.idTensor]}case"TensorArraySizeV3":{let s=I("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return[Ee(r.size(),"int32")]}case"TensorArrayCloseV3":{let s=I("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{let s=I("tensorListId",e,t,n),r=I("index",e,t,n),a=I("tensor",e,t,n),o=n.getTensorList(s.id);return o.setItem(r,a),[o.idTensor]}case"TensorListGetItem":{let s=I("tensorListId",e,t,n),r=I("index",e,t,n),a=I("elementShape",e,t,n),o=I("elementDType",e,t,n);return[n.getTensorList(s.id).getItem(r,a,o)]}case"TensorListScatterV2":case"TensorListScatter":{let s=I("indices",e,t,n),r=I("tensor",e,t,n),a=I("elementShape",e,t,n),o=I("numElements",e,t,n),i=ej(r,s,a,o);return n.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let s=I("elementShape",e,t,n),r=I("elementDType",e,t,n),a;e.op==="TensorListReserve"?a="numElements":a="maxNumElements";let o=I(a,e,t,n),i=e.op==="TensorListReserve"?-1:o,l=QH(s,r,o,i);return n.addTensorList(l),[l.idTensor]}case"TensorListGather":{let s=I("tensorListId",e,t,n),r=I("indices",e,t,n),a=I("elementShape",e,t,n),o=I("elementDType",e,t,n);return[n.getTensorList(s.id).gather(r,o,a)]}case"TensorListStack":{let s=I("tensorListId",e,t,n),r=I("elementShape",e,t,n),a=I("elementDType",e,t,n),o=I("numElements",e,t,n);return[n.getTensorList(s.id).stack(r,a,o)]}case"TensorListFromTensor":{let s=I("tensor",e,t,n),r=I("elementShape",e,t,n),a=I("elementDType",e,t,n),o=JH(s,r,a);return n.addTensorList(o),[o.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let s=I("tensorListId",e,t,n),r=n.getTensorList(s.id),a=I("dtype",e,t,n),o=I("elementShape",e,t,n);return[r.concat(a,o)]}case"TensorListPushBack":{let s=I("tensorListId",e,t,n),r=I("tensor",e,t,n),a=n.getTensorList(s.id);return a.pushBack(r),[a.idTensor]}case"TensorListPopBack":{let s=I("tensorListId",e,t,n),r=I("elementShape",e,t,n),a=I("elementDType",e,t,n);return[n.getTensorList(s.id).popBack(r,a)]}case"TensorListSplit":{let s=I("tensor",e,t,n),r=I("elementShape",e,t,n),a=I("lengths",e,t,n),o=tj(s,a,r);return n.addTensorList(o),[o.idTensor]}case"TensorListLength":{let s=I("tensorListId",e,t,n),r=n.getTensorList(s.id);return[Ee(r.size(),"int32")]}case"TensorListResize":{let s=I("tensorListId",e,t,n),r=I("size",e,t,n),o=n.getTensorList(s.id).resize(r);return n.addTensorList(o),[o.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function U3(e,t,n){let[s,r]=I("fusedOps",e,t,n),a=s==="biasadd",o=!a,i=r==="prelu",l=s==="fusedbatchnorm",u=I("numArgs",e,t,n);if(a){if(i&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&a&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let c=I("strides",e,t,n),h=Qf(e,t,n),d=I("dataFormat",e,t,n).toUpperCase(),p=I("dilations",e,t,n),[f,m]=I("args",e,t,n);o&&(m=f,f=void 0);let g=I("leakyreluAlpha",e,t,n);return{stride:c,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:g}}var sj=(e,t,n,s=Cn)=>{switch(e.op){case"Conv1D":{let r=I("stride",e,t,n),a=I("pad",e,t,n),o=I("dataFormat",e,t,n).toUpperCase(),i=I("dilation",e,t,n);return[s.conv1d(I("x",e,t,n),I("filter",e,t,n),r,a,o,i)]}case"Conv2D":{let r=I("strides",e,t,n),a=Qf(e,t,n),o=I("dataFormat",e,t,n).toUpperCase(),i=I("dilations",e,t,n);return[s.conv2d(I("x",e,t,n),I("filter",e,t,n),[r[1],r[2]],a,o,[i[1],i[2]])]}case"_FusedConv2D":{let{stride:r,pad:a,dataFormat:o,dilations:i,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=U3(e,t,n);return[s.fused.conv2d({x:I("x",e,t,n),filter:I("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:o,dilations:[i[1],i[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{let{stride:r,pad:a,dataFormat:o,dilations:i,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=U3(e,t,n);return[s.fused.depthwiseConv2d({x:I("x",e,t,n),filter:I("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:o,dilations:[i[1],i[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let r=I("outputShape",e,t,n),a=I("strides",e,t,n),o=Qf(e,t,n);return[s.conv2dTranspose(I("x",e,t,n),I("filter",e,t,n),r,[a[1],a[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let r=I("strides",e,t,n),a=Qf(e,t,n),o=I("dilations",e,t,n),i=I("dataFormat",e,t,n).toUpperCase();return[s.depthwiseConv2d(I("input",e,t,n),I("filter",e,t,n),[r[1],r[2]],a,i,[o[1],o[2]])]}case"Conv3D":{let r=I("strides",e,t,n),a=I("pad",e,t,n),o=I("dataFormat",e,t,n).toUpperCase(),i=I("dilations",e,t,n);return[s.conv3d(I("x",e,t,n),I("filter",e,t,n),[r[1],r[2],r[3]],a,o,[i[1],i[2],i[3]])]}case"AvgPool":{let r=I("strides",e,t,n),a=I("pad",e,t,n),o=I("kernelSize",e,t,n);return[s.avgPool(I("x",e,t,n),[o[1],o[2]],[r[1],r[2]],a)]}case"MaxPool":{let r=I("strides",e,t,n),a=I("pad",e,t,n),o=I("kernelSize",e,t,n);return[s.maxPool(I("x",e,t,n),[o[1],o[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{let r=I("strides",e,t,n),a=I("pad",e,t,n),o=I("kernelSize",e,t,n),i=I("includeBatchInIndex",e,t,n),{result:l,indexes:u}=s.maxPoolWithArgmax(I("x",e,t,n),[o[1],o[2]],[r[1],r[2]],a,i);return[l,u]}case"AvgPool3D":{let r=I("strides",e,t,n),a=I("pad",e,t,n),o=I("kernelSize",e,t,n);return[s.avgPool3d(I("x",e,t,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{let r=I("strides",e,t,n),a=I("pad",e,t,n),o=I("kernelSize",e,t,n);return[s.maxPool3d(I("x",e,t,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{let r=I("strides",e,t,n),a=I("pad",e,t,n),o=I("dilations",e,t,n),i=r[1],l=r[2],u=o[1],c=o[2];return[s.dilation2d(I("x",e,t,n),I("filter",e,t,n),[i,l],a,[u,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},rj=(e,t,n,s=Cn)=>{switch(e.op){case"Fill":{let r=I("shape",e,t,n),a=I("dtype",e,t,n),o=I("value",e,t,n);return[s.fill(r,o,a)]}case"LinSpace":{let r=I("start",e,t,n),a=I("stop",e,t,n),o=I("num",e,t,n);return[s.linspace(r,a,o)]}case"Multinomial":{let r=I("logits",e,t,n),a=I("numSamples",e,t,n),o=I("seed",e,t,n);return[s.multinomial(r,a,o)]}case"OneHot":{let r=I("indices",e,t,n),a=I("depth",e,t,n),o=I("onValue",e,t,n),i=I("offValue",e,t,n),l=I("dtype",e,t,n);return[s.oneHot(r,a,o,i,l)]}case"Ones":return[s.ones(I("shape",e,t,n),I("dtype",e,t,n))];case"OnesLike":return[s.onesLike(I("x",e,t,n))];case"RandomStandardNormal":return[s.randomStandardNormal(I("shape",e,t,n),I("dtype",e,t,n),I("seed",e,t,n))];case"RandomUniform":return[s.randomUniform(I("shape",e,t,n),I("minval",e,t,n),I("maxval",e,t,n),I("dtype",e,t,n))];case"Range":{let r=I("start",e,t,n),a=I("stop",e,t,n),o=I("step",e,t,n);return[s.range(r,a,o,I("dtype",e,t,n))]}case"TruncatedNormal":{let r=I("shape",e,t,n),a=I("mean",e,t,n),o=I("stdDev",e,t,n),i=I("seed",e,t,n);return[s.truncatedNormal(r,a,o,I("dtype",e,t,n),i)]}case"Zeros":return[s.zeros(I("shape",e,t,n),I("dtype",e,t,n))];case"ZerosLike":return[s.zerosLike(I("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Dy(e,t,n){let s=I("boxes",e,t,n),r=I("scores",e,t,n),a=I("maxOutputSize",e,t,n),o=I("iouThreshold",e,t,n),i=I("scoreThreshold",e,t,n),l=I("softNmsSigma",e,t,n);return{boxes:s,scores:r,maxOutputSize:a,iouThreshold:o,scoreThreshold:i,softNmsSigma:l}}var aj=async(e,t,n,s,r=Cn)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:a,scores:o,maxOutputSize:i,iouThreshold:l,scoreThreshold:u,softNmsSigma:c}=Dy(e,t,n),h=await r.image.nonMaxSuppressionWithScoreAsync(a,o,i,l,u,c);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:a,scores:o,maxOutputSize:i,iouThreshold:l,scoreThreshold:u}=Dy(e,t,n),c=I("padToMaxOutputSize",e,t,n),h=await r.image.nonMaxSuppressionPaddedAsync(a,o,i,l,u,c);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:a,scores:o,maxOutputSize:i,iouThreshold:l,scoreThreshold:u}=Dy(e,t,n);return[await r.image.nonMaxSuppressionAsync(a,o,i,l,u)]}case"Where":{let a=r.cast(I("condition",e,t,n),"bool"),o=[await r.whereAsync(a)];return a.dispose(),o}case"ListDiff":return r.setdiff1dAsync(I("x",e,t,n),I("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},oj=(e,t,n,s=Cn)=>{switch(e.op){case"LowerBound":{let r=I("sortedSequence",e,t,n),a=I("values",e,t,n);return[s.lowerBound(r,a)]}case"TopKV2":{let r=I("x",e,t,n),a=I("k",e,t,n),o=I("sorted",e,t,n),i=s.topk(r,a,o);return[i.values,i.indices]}case"UpperBound":{let r=I("sortedSequence",e,t,n),a=I("values",e,t,n);return[s.upperBound(r,a)]}case"Unique":{let r=I("x",e,t,n),a=s.unique(r);return[a.values,a.indices]}case"UniqueV2":{let r=I("x",e,t,n),a=I("axis",e,t,n),o=s.unique(r,a);return[o.values,o.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},ij=(e,t,n,s=Cn)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let r=I("default",e,t,n);return[Yn(e.name,t,n)||r];case"Placeholder":return[Yn(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let c=I("x",e,t,n);return[ca(c)]}case"IdentityN":return I("x",e,t,n).map(c=>ca(c));case"Snapshot":let a=I("x",e,t,n);return[ca(a)];case"Shape":return[s.tensor1d(I("x",e,t,n).shape,"int32")];case"ShapeN":return I("x",e,t,n).map(c=>s.tensor1d(c.shape));case"Size":return[s.scalar(I("x",e,t,n).size,"int32")];case"Rank":return[s.scalar(I("x",e,t,n).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":let o=I("x",e,t,n),i=I("data",e,t,n),l=I("message",e,t,n),u=I("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let c=0;c<i.length;c++)console.log(Array.prototype.slice.call(i[c].dataSync()).slice(0,u));return[o];default:throw TypeError(`Node type ${e.op} is not implemented`)}},lj=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Ee(0),this.tensorMap=new Map,mn(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ee(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(s=>s.dispose()),this.tensorMap.clear(),Y(()=>{let s=ds(t),r=n.length,a=s.length;v.assert(r===a,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`);for(let o=0;o<r;o++){let i=n[o],l=s[o];mn(l),this.tensorMap.set(i,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return Y(()=>{let s=[];for(let r=0;r<n.length;r++){let a=n[r],o=this.findWithDefault(a,t);s.push(o)}return Pn(s)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},uj=async(e,t,n,s)=>{switch(e.op){case"HashTable":case"HashTableV2":{let r=I("keyDType",e,t,n),a=I("valueDType",e,t,n),o=new lj(r,a);return s.addHashTable(e.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{let r=I("tableHandle",e,t,n,s),a=I("keys",e,t,n),o=I("values",e,t,n);return[await s.getHashTableById(r.id).import(a,o)]}case"LookupTableFind":case"LookupTableFindV2":{let r=I("tableHandle",e,t,n,s),a=I("keys",e,t,n),o=I("defaultValue",e,t,n);return[await s.getHashTableById(r.id).find(a,o)]}case"LookupTableSize":case"LookupTableSizeV2":{let r=I("tableHandle",e,t,n,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},cj=(e,t,n,s=Cn)=>{switch(e.op){case"ResizeBilinear":{let r=I("images",e,t,n),a=I("size",e,t,n),o=I("alignCorners",e,t,n),i=I("halfPixelCenters",e,t,n);return[s.image.resizeBilinear(r,[a[0],a[1]],o,i)]}case"ResizeNearestNeighbor":{let r=I("images",e,t,n),a=I("size",e,t,n),o=I("alignCorners",e,t,n),i=I("halfPixelCenters",e,t,n);return[s.image.resizeNearestNeighbor(r,[a[0],a[1]],o,i)]}case"CropAndResize":{let r=I("image",e,t,n),a=I("boxes",e,t,n),o=I("boxInd",e,t,n),i=I("cropSize",e,t,n),l=I("method",e,t,n),u=I("extrapolationValue",e,t,n);return[s.image.cropAndResize(r,a,o,i,l,u)]}case"ImageProjectiveTransformV3":{let r=I("images",e,t,n),a=I("transforms",e,t,n),o=I("outputShape",e,t,n),i=I("fillValue",e,t,n),l=I("interpolation",e,t,n),u=I("fillMode",e,t,n);return[s.image.transform(r,a,l.toLowerCase(),u.toLowerCase(),i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},dj=(e,t,n,s=Cn)=>{switch(e.op){case"Equal":return[s.equal(I("a",e,t,n),I("b",e,t,n))];case"NotEqual":return[s.notEqual(I("a",e,t,n),I("b",e,t,n))];case"Greater":return[s.greater(I("a",e,t,n),I("b",e,t,n))];case"GreaterEqual":return[s.greaterEqual(I("a",e,t,n),I("b",e,t,n))];case"Less":return[s.less(I("a",e,t,n),I("b",e,t,n))];case"LessEqual":return[s.lessEqual(I("a",e,t,n),I("b",e,t,n))];case"LogicalAnd":return[s.logicalAnd(I("a",e,t,n),I("b",e,t,n))];case"LogicalNot":return[s.logicalNot(I("a",e,t,n))];case"LogicalOr":return[s.logicalOr(I("a",e,t,n),I("b",e,t,n))];case"Select":case"SelectV2":return[s.where(I("condition",e,t,n),I("a",e,t,n),I("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},hj=(e,t,n,s=Cn)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(I("a",e,t,n),I("b",e,t,n),I("transposeA",e,t,n),I("transposeB",e,t,n))];case"Einsum":return[s.einsum(I("equation",e,t,n),...I("tensors",e,t,n))];case"Transpose":return[s.transpose(I("x",e,t,n),I("perm",e,t,n))];case"_FusedMatMul":let[r,a]=I("fusedOps",e,t,n),o=r==="biasadd",i=a==="prelu",l=I("numArgs",e,t,n),u=I("leakyreluAlpha",e,t,n);if(o){if(i&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[c,h]=I("args",e,t,n);return[s.fused.matMul({a:I("a",e,t,n),b:I("b",e,t,n),transposeA:I("transposeA",e,t,n),transposeB:I("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:h,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},pj=(e,t,n,s=Cn)=>{switch(e.op){case"EuclideanNorm":return[s.euclideanNorm(I("x",e,t,n),I("axis",e,t,n),I("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(I("x",e,t,n),I("mean",e,t,n),I("variance",e,t,n),I("offset",e,t,n),I("scale",e,t,n),I("epsilon",e,t,n))];case"FusedBatchNormV3":return[s.batchNorm(I("x",e,t,n),I("mean",e,t,n),I("variance",e,t,n),I("offset",e,t,n),I("scale",e,t,n),I("epsilon",e,t,n))];case"LRN":return[s.localResponseNormalization(I("x",e,t,n),I("radius",e,t,n),I("bias",e,t,n),I("alpha",e,t,n),I("beta",e,t,n))];case"Softmax":return[s.softmax(I("x",e,t,n))];case"LogSoftmax":return[s.logSoftmax(I("x",e,t,n))];case"SparseToDense":return[s.sparseToDense(I("sparseIndices",e,t,n),I("outputShape",e,t,n),I("sparseValues",e,t,n),I("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},fj=(e,t,n,s=Cn)=>{switch(e.op){case"Max":{let i=I("axis",e,t,n),l=I("keepDims",e,t,n);return[s.max(I("x",e,t,n),i,l)]}case"Mean":{let i=I("axis",e,t,n),l=I("keepDims",e,t,n);return[s.mean(I("x",e,t,n),i,l)]}case"Min":{let i=I("axis",e,t,n),l=I("keepDims",e,t,n);return[s.min(I("x",e,t,n),i,l)]}case"Sum":{let i=I("axis",e,t,n),l=I("keepDims",e,t,n);return[s.sum(I("x",e,t,n),i,l)]}case"All":{let i=I("axis",e,t,n),l=I("keepDims",e,t,n);return[s.all(I("x",e,t,n),i,l)]}case"Any":{let i=I("axis",e,t,n),l=I("keepDims",e,t,n);return[s.any(I("x",e,t,n),i,l)]}case"ArgMax":{let i=I("axis",e,t,n);return[s.argMax(I("x",e,t,n),i)]}case"ArgMin":{let i=I("axis",e,t,n);return[s.argMin(I("x",e,t,n),i)]}case"Prod":{let i=I("axis",e,t,n),l=I("keepDims",e,t,n);return[s.prod(I("x",e,t,n),i,l)]}case"Cumprod":{let i=I("axis",e,t,n),l=I("exclusive",e,t,n),u=I("reverse",e,t,n);return[s.cumprod(I("x",e,t,n),i,l,u)]}case"Cumsum":{let i=I("axis",e,t,n),l=I("exclusive",e,t,n),u=I("reverse",e,t,n);return[s.cumsum(I("x",e,t,n),i,l,u)]}case"Bincount":let r=I("x",e,t,n),a=I("weights",e,t,n),o=I("size",e,t,n);return[s.bincount(r,a,o)];case"DenseBincount":{let i=I("x",e,t,n),l=I("weights",e,t,n),u=I("size",e,t,n),c=I("binaryOutput",e,t,n);return[s.denseBincount(i,l,u,c)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},mj=(e,t,n,s=Cn)=>{switch(e.op){case"ConcatV2":case"Concat":{let r=I("n",e,t,n),a=I("axis",e,t,n),o=I("tensors",e,t,n);return o=o.slice(0,r),[s.concat(o,a)]}case"Gather":{let r=I("x",e,t,n),a=I("indices",e,t,n);return[s.gather(r,s.cast(a,"int32"),0)]}case"GatherV2":{let r=I("axis",e,t,n),a=I("batchDims",e,t,n),o=I("x",e,t,n),i=I("indices",e,t,n);return[s.gather(o,s.cast(i,"int32"),r,a)]}case"Reverse":{let r=I("dims",e,t,n),a=[];for(let i=0;i<r.length;i++)r[i]&&a.push(i);let o=I("x",e,t,n);return[s.reverse(o,a)]}case"ReverseV2":{let r=I("axis",e,t,n),a=I("x",e,t,n);return[s.reverse(a,r)]}case"Slice":{let r=I("begin",e,t,n),a=I("size",e,t,n);return[s.slice(I("x",e,t,n),r,a)]}case"StridedSlice":{let r=I("begin",e,t,n),a=I("end",e,t,n),o=I("strides",e,t,n),i=I("beginMask",e,t,n),l=I("endMask",e,t,n),u=I("ellipsisMask",e,t,n),c=I("newAxisMask",e,t,n),h=I("shrinkAxisMask",e,t,n),d=I("x",e,t,n);return[s.stridedSlice(d,r,a,o,i,l,u,c,h)]}case"Pack":return Y(()=>{let r=I("axis",e,t,n),a=I("tensors",e,t,n),o=a[0].shape,i=s.squeeze(a[0]).shape,l=a.map(u=>{let c=v.arraysEqual(u.shape,o);if(!c&&!v.arraysEqual(s.squeeze(u).shape,i))throw new Error("the input tensors shape does not match");return c?u:s.reshape(u,o)});return[s.stack(l,r)]});case"Unpack":{let r=I("axis",e,t,n),a=I("tensor",e,t,n);return s.unstack(a,r)}case"Tile":{let r=I("reps",e,t,n);return[s.tile(I("x",e,t,n),r)]}case"Split":case"SplitV":{let r=I("axis",e,t,n),a=I("numOrSizeSplits",e,t,n),o=I("x",e,t,n);return s.split(o,a,r)}case"ScatterNd":{let r=I("indices",e,t,n),a=I("values",e,t,n),o=I("shape",e,t,n);return[s.scatterND(r,a,o)]}case"GatherNd":{let r=I("x",e,t,n),a=I("indices",e,t,n);return[s.gatherND(r,a)]}case"SparseToDense":{let r=I("sparseIndices",e,t,n),a=I("outputShape",e,t,n),o=I("sparseValues",e,t,n),i=I("defaultValue",e,t,n);return[s.sparseToDense(r,o,a,o.dtype===i.dtype?i:s.cast(i,o.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},gj=(e,t,n,s=Cn)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:r,outputValues:a,emptyRowIndicator:o,reverseIndexMap:i}=s.sparse.sparseFillEmptyRows(I("indices",e,t,n),I("values",e,t,n),I("denseShape",e,t,n),I("defaultValue",e,t,n));return[r,a,o,i]}case"SparseReshape":{let{outputIndices:r,outputShape:a}=s.sparse.sparseReshape(I("inputIndices",e,t,n),I("inputShape",e,t,n),I("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(I("data",e,t,n),I("indices",e,t,n),I("segmentIds",e,t,n))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(I("data",e,t,n),I("indices",e,t,n),I("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},yj=(e,t,n,s=Cn)=>{switch(e.op){case"FFT":return[s.fft(I("x",e,t,n))];case"IFFT":return[s.ifft(I("x",e,t,n))];case"RFFT":return[s.rfft(I("x",e,t,n))];case"IRFFT":return[s.irfft(I("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Aj=(e,t,n,s=Cn)=>{switch(e.op){case"StringNGrams":{let{nGrams:r,nGramsSplits:a}=s.string.stringNGrams(I("data",e,t,n),I("dataSplits",e,t,n),I("separator",e,t,n),I("nGramWidths",e,t,n),I("leftPad",e,t,n),I("rightPad",e,t,n),I("padWidth",e,t,n),I("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{let{indices:r,values:a,shape:o}=s.string.stringSplit(I("input",e,t,n),I("delimiter",e,t,n),I("skipEmpty",e,t,n));return[r,a,o]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(I("input",e,t,n),I("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},xj=(e,t,n,s=Cn)=>{switch(e.op){case"Cast":return[s.cast(I("x",e,t,n),I("dtype",e,t,n))];case"ExpandDims":{let r=I("axis",e,t,n);return[s.expandDims(I("x",e,t,n),r)]}case"Squeeze":{let r=I("axis",e,t,n);return[s.squeeze(I("x",e,t,n),r)]}case"Reshape":return[s.reshape(I("x",e,t,n),I("shape",e,t,n))];case"MirrorPad":return[s.mirrorPad(I("x",e,t,n),I("padding",e,t,n),I("mode",e,t,n))];case"PadV2":case"Pad":return[s.pad(I("x",e,t,n),I("padding",e,t,n),I("constantValue",e,t,n))];case"SpaceToBatchND":{let r=I("blockShape",e,t,n),a=I("paddings",e,t,n);return[s.spaceToBatchND(I("x",e,t,n),r,a)]}case"BatchToSpaceND":{let r=I("blockShape",e,t,n),a=I("crops",e,t,n);return[s.batchToSpaceND(I("x",e,t,n),r,a)]}case"DepthToSpace":{let r=I("blockSize",e,t,n),a=I("dataFormat",e,t,n).toUpperCase();return[s.depthToSpace(I("x",e,t,n),r,a)]}case"BroadcastTo":return[s.broadcastTo(I("x",e,t,n),I("shape",e,t,n))];case"BroadcastArgs":return[s.broadcastArgs(I("s0",e,t,n),I("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function G3(e,t,n,s,r=Y){let a=((o,i,l)=>{switch(o.category){case"arithmetic":return r(()=>KH(o,i,l));case"basic_math":return r(()=>ZH(o,i,l));case"control":return nj(o,i,l);case"convolution":return r(()=>sj(o,i,l));case"creation":return r(()=>rj(o,i,l));case"dynamic":return aj(o,i,l);case"evaluation":return r(()=>oj(o,i,l));case"image":return r(()=>cj(o,i,l));case"graph":return r(()=>ij(o,i,l));case"logical":return r(()=>dj(o,i,l));case"matrices":return r(()=>hj(o,i,l));case"normalization":return r(()=>pj(o,i,l));case"reduction":return r(()=>fj(o,i,l));case"slice_join":return r(()=>mj(o,i,l));case"sparse":return r(()=>gj(o,i,l));case"spectral":return r(()=>yj(o,i,l));case"string":return r(()=>Aj(o,i,l));case"transformation":return r(()=>xj(o,i,l));case"hash_table":return uj(o,i,l,s);case"custom":let u=W4(o.op);if(u&&u.customExecutor)return u.customExecutor(new XH(o,i,l));throw TypeError(`Custom op ${o.op} is not registered.`);default:throw TypeError(`Unknown op '${o.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return v.isPromise(a)?a.then(o=>[].concat(o)):[].concat(a)}var H3=class{constructor(e={},t={},n={},s={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function j3(e,t,n,s){let r=new Set,a=[],o=null,i=null,l=new Set,u=Object.keys(e).map(d=>vs(d)[0]),c=[];s!=null&&(c=s.map(d=>vs(d.name)[0]));let h=[...t];for(;h.length>0;){let d=h.pop();if((uC(d)||Sj(d)||Ij(d))&&o==null&&(o=d,i=o.children.map(p=>p.name).filter(p=>r.has(p))),r.add(d.name),n[d.name]==null&&u.indexOf(d.name)===-1&&c.indexOf(d.name)===-1){if(d.inputs.length===0){a.push(d.name);continue}d.inputs.forEach(p=>{l.has(p.name)||(l.add(p.name),h.push(p))})}}return{inputs:e,outputs:t,usedNodes:r,missingInputs:a,dynamicNode:o,syncInputs:i}}function bj(e,t,n){let{usedNodes:s,inputs:r}=n,a=[],o=Object.keys(r).map(c=>vs(c)[0]).map(c=>e.nodes[c]),i=e.initNodes;o.forEach(c=>{s.has(c.name)&&a.push(c)}),e.weights.forEach(c=>{s.has(c.name)&&a.push(c)}),i?.forEach(c=>{s.has(c.name)&&a.push(c)});let l=new Set,u=[];for(;a.length>0;){let c=a.pop();l.add(c.name),t[c.name]||u.push(c),c.children.forEach(h=>{!l.has(h.name)&&s.has(h.name)&&h.inputs.every(d=>l.has(d.name))&&a.push(h)})}return u}var vj=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],wj=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],kj=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function uC(e){return vj.indexOf(e.op)>=0}function Sj(e){return wj.indexOf(e.op)>=0}function Ij(e){return kj.indexOf(e.op)>=0}var QA=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new QA(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(s=>s.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(r=>r.name).sort(),s=t.map(r=>r.name).sort();return n.join(this.SEPERATOR)+"--"+s.join(this.SEPERATOR)}compile(e,t){let n=j3(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:r,syncInputs:a}=n;if(r!=null)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){let o=t.map(l=>l.name),i=Object.keys(e);throw new Error(`Cannot compute the outputs [${o}] from the provided inputs [${i}]. Missing the following inputs: [${s}]`)}return bj(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let s=n.map(c=>this.graph.nodes[vs(c)[0]]),r=t.map(c=>vs(c)[0]),a=r.map(c=>this.graph.nodes[c]);this.resetIntermediateTensors(),a.length===0&&(a=this._outputs);let o=this.getCompilationKey(s,a),i=this.compiledMap.get(o);i==null&&(i=this.compile(e,a),this.compiledMap.set(o,i));let l={},u={};return Y(()=>{let c=new H3(this.weightMap,l,u,this.functionExecutorMap),h=Object.assign({},this.weightMap);Object.keys(e).forEach(f=>{let[m,g]=vs(f),y=[];y[g]=e[f],h[m]=y});let d=this.getFrozenTensorIds(h),p={};for(let f=0;f<i.length;f++){let m=i[f];if(!h[m.name]){let g=G3(m,h,c,this._resourceManager);if(v.isPromise(g))throw new Error(`The execution of the op '${m.op}' returned a promise. Please use model.executeAsync() instead.`);h[m.name]=g,this.checkTensorForDisposal(m.name,m,h,c,d,r,p)}}return this.parent==null&&c.dispose(d),t.map(f=>Yn(f,h,c))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(s=>s.id)));return new Set(t)}checkTensorForDisposal(e,t,n,s,r,a,o){t.category==="control"||a.indexOf(e)!==-1||(n[e].forEach(i=>{i!=null&&(o[i.id]=(o[i.id]||0)+t.children.length)}),t.inputs.forEach(i=>{if(i.category!=="control"){let l=TH(i.name,n,s);l?.forEach(u=>{if(u&&!u.kept&&!r.has(u.id)){let c=o[u.id];if(c===1){if(!this.keepTensorForDebug)u.dispose();else{let[h,d]=jr(t.name,s);this.intermediateTensors[h]?this.intermediateTensors[h][d]=u:(this.intermediateTensors[h]=[],this.intermediateTensors[h][d]=u)}delete o[u.id]}else c!=null&&o[u.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach(e=>{this.tensorsMap[e].forEach(n=>{n&&!n.kept&&!n.isDisposed&&!this.keepIds.has(n.id)&&n.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach(t=>t.dispose()),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,s={},r={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=K().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(u){console.warn(u.message)}this.resetIntermediateTensors();let a=new H3(this.weightMap,s,r,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,a,t,n);let o=t.map(u=>Yn(u,this.tensorsMap,a)),i=o.map(u=>u.id),l=Object.keys(e).map(u=>e[u].id);return this.keepIds=new Set([...i,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&a.dispose(this.keepIds),o}async executeFunctionAsync(e,t,n){let s=e.reduce((r,a,o)=>(r[this.inputs[o].name]=a,r),{});return this._executeAsync(s,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,s){let r=Object.keys(e),a=r.map(x=>this.graph.nodes[vs(x)[0]]),o=n.map(x=>vs(x)[0]),i=o.map(x=>this.graph.nodes[x]);i.length===0&&(i=this._outputs);let{usedNodes:l,missingInputs:u,dynamicNode:c,syncInputs:h}=j3(e,i,this.weightMap,this._initNodes),d=[...a,...this.graph.weights,...this._initNodes||[]].map(x=>({node:x,contexts:t.currentContext})),p=Object.assign({},this.weightMap);Object.keys(e).forEach(x=>{let[A,b]=vs(x),w=[];w[b]=e[x],p[A]=w});let f={},m=this.getFrozenTensorIds(p),g={};for(;d.length>0;){let x=this.processStack(a,d,t,p,g,m,o,f,l);await Promise.all(x)}c==null&&!s&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let y=i.filter(x=>!uC(x)&&!Yn(x.name,p,t)).map(x=>x.name);if(y.length>0){let x="";throw c!=null&&(x=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${r}]. Consider providing the following inputs: [${u}]. ${x}`)}return p}processStack(e,t,n,s,r,a,o,i,l){let u=[];for(;t.length>0;){let c=t.pop();n.currentContext=c.contexts;let h="";if(c.node.op==="Enter"&&I("isConstant",c.node,s,n)&&([h]=jr(c.node.name,n)),s[c.node.name]==null){let d=G3(c.node,s,n,this._resourceManager);h||([h]=jr(c.node.name,n));let p=n.currentContext;v.isPromise(d)?u.push(d.then(f=>(s[h]=f,n.currentContext=p,this.checkTensorForDisposal(h,c.node,s,n,a,o,i),this.processChildNodes(c.node,t,n,s,r,l),f))):(s[h]=d,this.checkTensorForDisposal(h,c.node,s,n,a,o,i),this.processChildNodes(c.node,t,n,s,r,l))}else this.processChildNodes(c.node,t,n,s,r,l)}return u}processChildNodes(e,t,n,s,r,a){e.children.forEach(o=>{let[i]=jr(o.name,n);r[i]||!a.has(o.name)||(o.op==="Merge"?o.inputNames.some(l=>!!Yn(l,s,n))&&(r[i]=!0,t.push({contexts:n.currentContext,node:o})):o.inputNames.every(l=>!!Yn(l,s,n))&&(r[i]=!0,t.push({contexts:n.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[s]=vs(t),r=this.graph.nodes[s];if(r.attrParams.shape&&r.attrParams.shape.value){let a=r.attrParams.shape.value,o=a.length===n.shape.length&&n.shape.every((i,l)=>a[l]===-1||a[l]===i);v.assert(o,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&v.assert(n.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let s=this._signature.inputs[n];t[s.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[s]=vs(n);return this.graph.nodes[s]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=vs(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}},Cj=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},Tj="?tfjs-format=file",Nj="model.json",Ig=class{constructor(e,t={},n=Bs){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,t==null&&(this.loadOptions={}),this.resourceManager=new Cj}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return v.isPromise(e)?e.then(t=>this.loadSync(t)):this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let r=this.artifacts.userDefinedMetadata;r.signature!=null&&(n=r.signature),r.structuredOutputKeys!=null&&(this.structuredOutputKeys=r.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let s=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new QA(B3.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let r=B3.Instance.transformGraph(e.modelInitializer);this.initializer=new QA(r),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=this.io.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){let n=this.execute(e,this.outputNodes);if(this.structuredOutputKeys){let s=n instanceof et?[n]:n,r={};return s.forEach((a,o)=>r[this.structuredOutputKeys[o]]=a),r}return n}normalizeInputs(e){if(!(e instanceof et)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,s)=>(t[n]=e[s],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function cC(e,t={},n=Bs){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof e=="string"&&(e=_j(e));let s=new Ig(e,t,n);return await s.load(),s}function Ej(e){if(e==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide a url or an IOHandler that loads the model");if(!e.load)throw new Error(`modelUrl IO Handler ${e} has no load function`);let t=new Ig(e);return t.load(),t}function _j(e){return e.endsWith("/")||(e=e+"/"),`${e}${Nj}${Tj}`}var Rj="3.20.0",dC={};Ue(dC,{CSVDataset:()=>bC,Dataset:()=>Qc,FileDataSource:()=>TC,TextLineDataset:()=>xC,URLDataSource:()=>NC,array:()=>eq,csv:()=>dq,func:()=>hq,generator:()=>pq,microphone:()=>mq,version_data:()=>gq,webcam:()=>fq,zip:()=>tq});var $j=uo(Xm()),Dj=uo(Xm());function Fj(e,t){return $m(e,t)}function $m(e,t,n=new Map,s=new Set){if(e==null)return null;if(typeof Blob=="function"&&e instanceof Blob)return e.slice();if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse)if(oc(e)){let a=Array.isArray(e)?[]:{};s.add(e);for(let o in e){let i=e[o],l=$m(i,t,n,s);a[o]=l}return s.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return n.set(e,r.value),r.value}function Oj(e,t=pC){return hC(e,t)}function hC(e,t,n=new Set){let s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse)if(oc(s)){let a=Array.isArray(s)?[]:{};n.add(s);for(let o in s){let i=e.map(u=>u[o]),l=hC(i,t,n);a[o]=l}return n.delete(s),a}else throw new Error(`Can't recurse into non-iterable type: ${s}`);else return r.value}function pC(e){return e===null?null:oc(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function fC(e,t){let n=new Map;$m(e,t,n);for(let r of Array.from(n.keys())){let a=n.get(r);if(v.isPromise(a)){let o=await a;n.set(r,o)}}return $m(e,t,n)}function oc(e){let t=!1;if(K().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=uS();t=e instanceof n}return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof et)&&!(e instanceof Promise)&&!t)}function Pj(e){return e==null||Mj(e)||Array.isArray(e)||typeof e=="object"&&e instanceof et||v.isTypedArray(e)}function Mj(e){return e===null||typeof e!="object"&&typeof e!="function"}function zj(e){return Fj(e,Lj)}function Lj(e){return e instanceof et?{value:e.clone(),recurse:!1}:oc(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var mC=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},E5=class extends mC{constructor(){super(E5.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let s=0;s<n;s++)t[s]=this.get(this.wrap(this.begin+s));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};E5.INITIAL_CAPACITY=32;function gC(e){return new Vj(e)}function _5(e){return new Uj(e)}function Bj(e,t){return new yC(e,t)}function Wj(e,t=Va.FAIL){return new Jj(e,t)}var yn=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Zj(this,e)}filter(e){return new Xj(this,e)}map(e){return new Kj(this,e)}mapAsync(e){return new q3(this,e)}serialMapAsync(e){return new q3(this,e).serial()}flatmap(e){return new Yj(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new qj(this,e,t)}columnMajorBatch(e,t=!0,n=pC){return this.rowMajorBatch(e,t).map(r=>Oj(r,n))}concatenate(e,t){return new yC(gC([this,e]),t)}take(e){return e<0||e==null?this:new jj(this,e)}skip(e){return e<0||e==null?this:new Hj(this,e)}prefetch(e){return new AC(this,e)}shuffle(e,t){return new Qj(this,e,t)}serial(){return new Gj(this)}},Vj=class extends yn{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:zj(e),done:!1}}},Uj=class extends yn{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},Gj=class extends yn{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},Hj=class extends yn{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;le(e.value)}return this.upstream.next()}},jj=class extends yn{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},qj=class extends yn{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},Xj=class extends yn{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;le(e.value)}}},Kj=class extends yn{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Cr.getTensorsInContainer(e.value),n=this.transform(e.value),s=Cr.getTensorsInContainer(n);for(let r of t)Cr.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}},Zj=class extends yn{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},q3=class extends yn{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Cr.getTensorsInContainer(e.value),n=await this.transform(e.value),s=Cr.getTensorsInContainer(n);for(let r of t)Cr.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}},R5=class extends yn{constructor(){super(),this.outputQueue=new E5,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},Yj=class extends R5{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Cr.getTensorsInContainer(e.value),n=this.transform(e.value),s=Cr.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let r of t)Cr.isTensorInList(r,s)||r.dispose();return!0}},yC=class extends yn{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},Va;(function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"})(Va||(Va={}));var Jj=class extends yn{constructor(e,t=Va.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function s(a){return a instanceof yn?{value:a.next().then(i=>(t++,i.done&&n++,i.value)),recurse:!1}:{value:null,recurse:!0}}let r=await fC(this.iterators,s);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case Va.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case Va.SHORTEST:return{value:null,done:!0};case Va.LONGEST:default:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},AC=class extends yn{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new mC(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},Qj=class extends AC{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Dj.alea(n||v.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}},Qc=class{constructor(){this.size=null}batch(e,t=!0){let n=this;v.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let s;return this.size===1/0||this.size==null?s=this.size:t?s=Math.ceil(this.size/e):s=Math.floor(this.size/e),bs(async()=>(await n.iterator()).columnMajorBatch(e,t,nq),s)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,bs(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,bs(async()=>(await t.iterator()).filter(s=>Y(()=>e(s))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return bs(async()=>(await t.iterator()).map(n=>Y(()=>e(n))),this.size)}mapAsync(e){let t=this;return bs(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return bs(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,bs(async()=>{let s=_5(async()=>({value:await t.iterator(),done:!1}));return Bj(s.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,bs(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let s=this,r=$j.alea(t||v.now().toString());return bs(async()=>{let a=r.int32();return n&&(a+=r.int32()),(await s.iterator()).shuffle(e,a.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,bs(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};Qc.MAX_BUFFER_SIZE=1e4;function bs(e,t=null){return new class extends Qc{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function eq(e){return bs(async()=>gC(e),e.length)}function tq(e){if(!oc(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=t==null?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=t==null?e[n].size:Math.min(t,e[n].size);return bs(async()=>{let n=await fC(e,s=>{if(s instanceof Qc)return{value:s.iterator(),recurse:!1};if(oc(s))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return Wj(n,Va.SHORTEST)},t)}function nq(e){if(e===null)return null;let t=e[0];return Pj(t)?{value:sq(e),recurse:!1}:{value:null,recurse:!0}}function sq(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof et?Pn(e):lt(e)}var xC=class extends Qc{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(s=>(s.endsWith("\r")&&(s=s.slice(0,-1)),s))}},Ef='"',Fd=Symbol("out"),X3=Symbol("field"),_f=Symbol("quote"),Fy=Symbol("quoteafterquote"),K3=Symbol("quoteinquote"),bC=class extends Qc{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new xC(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(v.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&v.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((s,r)=>(s[r]=s[r]+1||1,s),{}),n=Object.keys(t).filter(s=>t[s]>1);if(v.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let s of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(s)===-1)throw new Error('The key "'+s+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},s={};for(let r=0;r<this.fullColumnNames.length;r++){let a=this.fullColumnNames[r],o=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!o)){let i=t[r],l=null;if(i==="")if(o&&o.default!==void 0)l=o.default;else{if(o&&(o.required||o.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);l=void 0}else{let u=Number(i);if(isNaN(u))o&&o.dtype==="bool"?l=this.getBoolean(i):l=i;else if(!o||!o.dtype)l=u;else switch(o.dtype){case"float32":l=u;break;case"int32":l=Math.floor(u);break;case"bool":l=this.getBoolean(i);break;default:l=u}}o&&o.isLabel?s[a]=l:n[a]=l}}return Object.keys(s).length===0?n:{xs:n,ys:s}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],s=0,r=e.length,a=Fd;for(let o=0;o<r;o++)switch(a){case Fd:switch(e.charAt(o)){case Ef:s=o+1,a=_f;break;case this.delimiter:if(s=o+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),a=Fd;break;default:a=X3,s=o;break}break;case X3:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(s,o)),a=Fd,s=o+1;break;default:}break;case _f:switch(e.charAt(o)){case Ef:a=Fy;break;default:}break;case Fy:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(s,o-1)),a=Fd,s=o+1;break;case Ef:a=_f;break;default:a=K3;break}break;case K3:switch(e.charAt(o)){case Ef:a=_f;break;default:}break;default:}if(a===Fy?n.push(e.substring(s,r-1)):n.push(e.substring(s)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},vC=class extends yn{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!K().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let t=new vC(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let s=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(s,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let s=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(s,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(s=>{let r=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&s({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(r),s({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((s,r)=>n.set(s,r*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(v.sizeFromShape(t));return n.set(e,n.length-e.length),lt(n,t)}},wC=class extends yn{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=qt([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,s=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,r=(1-n)/2,a=(1-s)/2,o=r+n,i=s+a;this.cropBox=Kr([a,r,i,o],[1,4])}else this.cropBox=Kr([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!K().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new wC(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&v.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Ar.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return Y(()=>{let t=Jt(fe(e,"float32"),0),n;n=He.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let s=n.shape;return U(n,s.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},kC=class{},SC=class extends yn{split(e){return new rq(this,e)}},rq=class extends SC{constructor(e,t){super(),this.upstream=e,this.impl=new aq(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},aq=class extends R5{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},oq=class extends yn{decodeUTF8(){return new iq(this)}},iq=class extends SC{constructor(e){super(),this.upstream=e,this.impl=new lq(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},lq=class extends R5{constructor(e){if(super(),this.upstream=e,K().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=uS();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return K().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}},IC=class extends oq{constructor(e,t={}){super(),this.file=e,this.options=t,v.assert(e instanceof Uint8Array||(K().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,n)=>{let s=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,s)));else{let r=new FileReader;r.onload=o=>{let i=r.result;if(i instanceof ArrayBuffer&&(i=new Uint8Array(i)),!(i instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(i)},r.onabort=o=>n(new Error("Aborted")),r.onerror=o=>n(new Error(o.type));let a=this.file.slice(this.offset,s);r.readAsArrayBuffer(a)}this.offset=s}),done:!1}}};async function uq(e,t={},n){let s,r;typeof e=="string"?s=e:(s=e.url,r=cq(e));let a=await(n||v.fetch)(s,r);if(a.ok){let o=new Uint8Array(await a.arrayBuffer());return new IC(o,t)}else throw new Error(a.statusText)}var cq=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function CC(e){return typeof e=="string"&&e.slice(0,7)==="file://"}var TC=class extends kC{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(CC(this.input)&&K().get("IS_NODE")){let e=N2();this.input=e.readFileSync(this.input.slice(7))}return new IC(this.input,this.options)}},NC=class extends kC{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return CC(this.url)?new TC(this.url,this.fileOptions).iterator():uq(this.url,this.fileOptions)}};function dq(e,t={}){return new bC(new NC(e),t)}function hq(e){let t=_5(e);return bs(async()=>t)}function pq(e){return bs(async()=>{let t=await e();return _5(()=>t.next())})}async function fq(e,t){return wC.create(e,t)}async function mq(e){return vC.create(e)}var gq="3.20.0";function Ie(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&v.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var yq=ar.whereImpl,$5=class extends pc{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Th(this,bn())}nextDataId(){return $5.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,K().get("IS_NODE")&&T.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&v.isString(n[0])){let r=n.map(a=>v.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,s,r){this.data.set(e,{values:t,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let s=this.readSync(n.real.dataId),r=this.readSync(n.imag.dataId);return T.mergeRealAndImagArrays(s,r)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(s=>v.decodeString(s));return Le(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Le(e.shape,e.dtype,t)}makeOutput(e,t,n){return bn().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=v.now();return e(),{kernelMs:v.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Ie([e],"where");let t=this.readSync(e.dataId);return yq(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};$5.nextDataId=0;var D5={};Ue(D5,{addImpl:()=>RC,bincountImpl:()=>O5,bincountReduceImpl:()=>$C,castImpl:()=>_C,ceilImpl:()=>DC,concatImpl:()=>P5,equalImpl:()=>FC,expImpl:()=>PC,expm1Impl:()=>zC,floorImpl:()=>LC,gatherNdImpl:()=>BC,gatherV2Impl:()=>WC,greaterEqualImpl:()=>UC,greaterImpl:()=>VC,lessEqualImpl:()=>HC,lessImpl:()=>GC,linSpaceImpl:()=>jC,logImpl:()=>qC,maxImpl:()=>XC,maximumImpl:()=>KC,minimumImpl:()=>ZC,multiplyImpl:()=>M5,negImpl:()=>YC,notEqualImpl:()=>JC,prodImpl:()=>QC,raggedTensorToTensorImpl:()=>e6,rangeImpl:()=>L5,rsqrtImpl:()=>t6,scatterImpl:()=>zu,sigmoidImpl:()=>aX,simpleAbsImpl:()=>EC,sliceImpl:()=>Fm,sparseFillEmptyRowsImpl:()=>s6,sparseReshapeImpl:()=>r6,sparseSegmentReductionImpl:()=>B5,sqrtImpl:()=>lX,squaredDifferenceImpl:()=>a6,stridedSliceImpl:()=>o6,stringNGramsImpl:()=>W5,stringSplitImpl:()=>V5,stringToHashBucketFastImpl:()=>U5,subImpl:()=>i6,tileImpl:()=>l6,topKImpl:()=>c6,transposeImpl:()=>z5,uniqueImpl:()=>d6});function EC(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}var Aq=e=>{let{x:t}=e.inputs,n=e.backend;Ie(t,"abs");let s=new Float32Array(v.sizeFromShape(t.shape)),r=n.data.get(t.dataId).values;return s=EC(r),n.makeOutput(s,t.shape,t.dtype)},xq={kernelName:dl,backendName:"cpu",kernelFunc:Aq};function nn(e){return(t,n,s,r,a)=>{let o=T.assertAndGetBroadcastShape(t,n),i=o.length,l=v.computeStrides(o),u=v.sizeFromShape(o),c=v.getTypedArrayFromDType(a,u),h=t.length,d=n.length,p=v.computeStrides(t),f=v.computeStrides(n),m=T.getBroadcastDims(t,o),g=T.getBroadcastDims(n,o);if(m.length+g.length===0)for(let y=0;y<c.length;++y)c[y]=e(s[y%s.length],r[y%r.length]);else for(let y=0;y<c.length;++y){let x=v.indexToLoc(y,i,l),A=x.slice(-h);m.forEach(C=>A[C]=0);let b=v.locToIndex(A,h,p),w=x.slice(-d);g.forEach(C=>w[C]=0);let S=v.locToIndex(w,d,f);c[y]=e(s[b],r[S])}return[c,o]}}function ks(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,i=n.makeTensorInfo(s.shape,"complex64"),l=n.data.get(i.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",o)},i}var bq={kernelName:Eh,backendName:"cpu",kernelFunc:ks};function Dm(e,t,n="float32"){if(n==="complex64"){let r=Dm(e,t,"float32"),a=Dm(e,t,"float32");return ks({inputs:{real:r,imag:a},backend:e})}let s=v.makeZerosTypedArray(v.sizeFromShape(t),n);return e.makeTensorInfo(t,n,s)}function ea(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}var vq={kernelName:Ro,backendName:"cpu",kernelFunc:ea};function sl(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}var wq={kernelName:Mh,backendName:"cpu",kernelFunc:sl};function _C(e,t,n,s){if(s==="int32"){let r=Int32Array.from(e);return[t,"int32",r]}if(s==="bool"){let r=v.toTypedArray([0],n),[a,o]=nn((i,l)=>i!==l?1:0)(t,[],e,r,"bool");return[o,"bool",a]}throw new Error(`Error in Cast: failed to cast ${n} to ${s}`)}function oo(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return ea({inputs:{x:r},backend:n});let c=Dm(n,r.shape,r.dtype),h=oo({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),d=ks({inputs:{real:h,imag:c},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),d}if(r.dtype==="complex64"){let c=sl({inputs:{input:r},backend:n}),h=oo({inputs:{x:c},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(c),h}if(!v.hasEncodingLoss(r.dtype,a)){let c=ea({inputs:{x:r},backend:n});return{dataId:c.dataId,shape:c.shape,dtype:a}}let o=n.data.get(r.dataId).values,[i,l,u]=_C(o,r.shape,r.dtype,a);return n.makeTensorInfo(i,l,u)}var kq={kernelName:go,backendName:"cpu",kernelFunc:oo};function An(e,t,n,s){return n==null?({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;Ie([o,i],e);let u=l.data.get(o.dataId).values,c=l.data.get(i.dataId).values,h=o.dtype==="string"?T.fromUint8ToStringArray(u):u,d=o.dtype==="string"?T.fromUint8ToStringArray(c):c,p=s||o.dtype,[f,m]=t(o.shape,i.shape,h,d,p);return l.makeTensorInfo(m,p,f)}:({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;if(o.dtype==="complex64"||i.dtype==="complex64"){let u=oo({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),h=c.complexTensorInfos.real,d=c.complexTensorInfos.imag,p=l.data.get(h.dataId).values,f=l.data.get(d.dataId).values,m=oo({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),y=g.complexTensorInfos.real,x=g.complexTensorInfos.imag,A=l.data.get(y.dataId).values,b=l.data.get(x.dataId).values,[w,S,C]=n(o.shape,i.shape,p,f,A,b),_=l.makeTensorInfo(C,"float32",w),R=l.makeTensorInfo(C,"float32",S),D=ks({inputs:{real:_,imag:R},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(_),l.disposeIntermediateTensorInfo(R),D}else{let u=l.data.get(o.dataId).values,c=l.data.get(i.dataId).values,h=s||o.dtype,[d,p]=t(o.shape,i.shape,u,c,h);return l.makeTensorInfo(p,h,d)}}}function F5(e){return(t,n,s,r,a,o)=>{let i=T.assertAndGetBroadcastShape(t,n),l=v.sizeFromShape(i),u=i.length,c=v.computeStrides(i),h=v.getTypedArrayFromDType("float32",l),d=v.getTypedArrayFromDType("float32",l),p=T.getBroadcastDims(t,i),f=T.getBroadcastDims(n,i),m=T.mergeRealAndImagArrays(s,r),g=T.mergeRealAndImagArrays(a,o),y=t.length,x=v.computeStrides(t),A=n.length,b=v.computeStrides(n);if(p.length+f.length===0)for(let w=0;w<h.length;w++){let S=w%m.length,C=w%g.length,_=e(m[S*2],m[S*2+1],g[C*2],g[C*2+1]);h[w]=_.real,d[w]=_.imag}else for(let w=0;w<h.length;w++){let S=v.indexToLoc(w,u,c),C=S.slice(-y);p.forEach(F=>C[F]=0);let _=v.locToIndex(C,y,x),R=S.slice(-A);f.forEach(F=>R[F]=0);let D=v.locToIndex(R,A,b),E=e(m[_*2],m[_*2+1],g[D*2],g[D*2+1]);h[w]=E.real,d[w]=E.imag}return[h,d,i]}}var RC=nn((e,t)=>e+t),Sq=F5((e,t,n,s)=>({real:e+n,imag:t+s})),ic=An(va,RC,Sq),Iq={kernelName:va,backendName:"cpu",kernelFunc:ic};function O5(e,t,n,s,r){let a=v.sizeFromShape(s),o=v.makeZerosTypedArray(r,n);for(let i=0;i<e.length;i++){let l=e[i];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(a>0?o[l]+=t[i]:o[l]+=1)}return o}function $C(e,t,n,s=!1){let r=e.shape[0],a=e.shape[1],o=Le([r,n],t.dtype);for(let i=0;i<r;i++)for(let l=0;l<a;l++){let u=e.get(i,l);if(u<0)throw new Error("Input x must be non-negative!");u>=n||(s?o.set(1,i,u):t.size>0?o.set(o.get(i,u)+t.get(i,l),i,u):o.set(o.get(i,u)+1,i,u))}return o}function ci(e){return(t,n,s)=>{let r=v.getTypedArrayFromDType(n,t.length);for(let a=0;a<t.length;++a)r[a]=e(t[a],s);return r}}function ft(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:o}=s;if(Ie(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=a,l=i.data.get(o.dataId).values,u=v.sizeFromShape(o.shape),c=n||o.dtype,h=v.getArrayFromDType(c,u);for(let d=0;d<u;++d)h[d]=t(l[d],r);return i.makeTensorInfo(o.shape,c,h)}}function ed(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:o}=s;if(Ie(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=a,l=i.data.get(o.dataId).values,u=n||o.dtype,c=t(l,u,r);return i.makeTensorInfo(o.shape,u,c)}}var DC=ci(e=>Math.ceil(e)),Cq=ed(yo,DC),Tq={kernelName:yo,backendName:"cpu",kernelFunc:Cq};function P5(e,t,n,s){let r=v.getArrayFromDType(n,v.sizeFromShape(t));if(s&&n!=="string"){let a=0;e.forEach(o=>{let i=v.sizeFromShape(o.shape);r.set(o.vals,a),a+=i})}else{let a=0;e.forEach(o=>{let i=n==="string"?T.fromUint8ToStringArray(o.vals):o.vals,l=0;for(let u=0;u<o.shape[0];++u){let c=u*t[1]+a;for(let h=0;h<o.shape[1];++h)r[c+h]=i[l++]}a+=o.shape[1]})}return r}var FC=nn((e,t)=>e===t?1:0),OC=An(Al,FC,null,"bool"),Nq={kernelName:Al,backendName:"cpu",kernelFunc:OC},PC=ci(e=>Math.exp(e)),MC=ed(Co,PC,"float32"),Eq={kernelName:Co,backendName:"cpu",kernelFunc:MC},zC=ci(e=>Math.expm1(e)),_q=ed(bl,zC),Rq={kernelName:bl,backendName:"cpu",kernelFunc:_q},LC=ci(e=>Math.floor(e)),$q=ed(To,LC),Dq={kernelName:To,backendName:"cpu",kernelFunc:$q};function BC(e,t,n,s,r,a,o,i,l){let u=Le([s,a],n);for(let c=0;c<s;c++){let h=[],d=0;for(let p=0;p<r;p++){let f=e[c*r+p];d+=f*o[p],h.push(f)}if(d<0||d>=l/a)throw new Error(`Invalid indices: ${h} does not index into ${i}`);for(let p=0;p<a;p++)u.values[c*a+p]=t.get(...t.indexToLoc(d*a+p))}return u}function WC(e,t,n){let s=Le(n,e.dtype);for(let r=0;r<s.size;++r){let o=s.indexToLoc(r).slice(),i=o[0],l=o[2],u=t.locToIndex([i,l]);o[2]=t.values[u];let c=e.locToIndex(o);0<=c&&c<e.values.length&&(s.values[r]=e.values[c])}return s}var VC=nn((e,t)=>e>t?1:0),Fq=An(Sl,VC,null,"bool"),Oq={kernelName:Sl,backendName:"cpu",kernelFunc:Fq},UC=nn((e,t)=>e>=t?1:0),Pq=An(_o,UC,null,"bool"),Mq={kernelName:_o,backendName:"cpu",kernelFunc:Pq},GC=nn((e,t)=>e<t?1:0),zq=An(Cl,GC,null,"bool"),Lq={kernelName:Cl,backendName:"cpu",kernelFunc:zq},HC=nn((e,t)=>e<=t?1:0),Bq=An(Tl,HC,null,"bool"),Wq={kernelName:Tl,backendName:"cpu",kernelFunc:Bq};function jC(e,t,n){let s=(t-e)/(n-1),r=v.makeZerosTypedArray(n,"float32");r[0]=e;for(let a=1;a<r.length;a++)r[a]=r[a-1]+s;return r}var qC=ci(e=>Math.log(e)),Vq=ed(Do,qC),Uq={kernelName:Do,backendName:"cpu",kernelFunc:Vq};function XC(e,t,n,s){let r=v.getTypedArrayFromDType(s,v.sizeFromShape(n));for(let a=0;a<r.length;++a){let o=a*t,i=e[o];for(let l=0;l<t;++l){let u=e[o+l];(Number.isNaN(u)||u>i)&&(i=u)}r[a]=i}return r}var KC=nn((e,t)=>Math.max(e,t)),Gq=An(Oo,KC),Hq={kernelName:Oo,backendName:"cpu",kernelFunc:Gq},ZC=nn((e,t)=>Math.min(e,t)),jq=An(Lo,ZC),qq={kernelName:Lo,backendName:"cpu",kernelFunc:jq},M5=nn((e,t)=>e*t),Xq=F5((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n})),Cg=An(Wo,M5,Xq),Kq={kernelName:Wo,backendName:"cpu",kernelFunc:Cg};function YC(e,t,n){let s=v.createScalarValue(-1,n);return M5([],t,s,e,n)}function Zq(e){let{inputs:t,backend:n}=e,{x:s}=t;Ie(s,"neg");let r=n.data.get(s.dataId).values,[a,o]=YC(r,s.shape,s.dtype);return n.makeTensorInfo(o,s.dtype,a)}var Yq={kernelName:_l,backendName:"cpu",kernelFunc:Zq},JC=nn((e,t)=>e!==t?1:0),Jq=An(Rl,JC,null,"bool"),Qq={kernelName:Rl,backendName:"cpu",kernelFunc:Jq};function z5(e,t,n,s,r){let a=t.length,o=v.sizeFromShape(t),i=v.computeStrides(t),l=v.computeStrides(r),u=v.getTypedArrayFromDType(n,v.sizeFromShape(r));for(let c=0;c<o;++c){let h=v.indexToLoc(c,a,i),d=new Array(h.length);for(let f=0;f<d.length;f++)d[f]=h[s[f]];let p=v.locToIndex(d,a,l);u[p]=e[c]}return u}function ps(e){let{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:a}=n;Ie(r,"transpose");let o=r.shape.length,i=new Array(o);for(let h=0;h<i.length;h++)i[h]=r.shape[a[h]];let l=s.data.get(r.dataId).values,u=z5(l,r.shape,r.dtype,a,i);return{dataId:s.write(u,i,r.dtype),shape:i,dtype:r.dtype}}var eX={kernelName:Xr,backendName:"cpu",kernelFunc:ps};function QC(e,t,n,s){let[r,a]=T.computeOutAndReduceShapes(e,s),o=Fn(t,"int32"),i=v.makeZerosTypedArray(v.sizeFromShape(r),o),l=v.sizeFromShape(a);for(let u=0;u<i.length;++u){let c=u*l,h=1;for(let d=0;d<l;++d)h*=n[c+d];i[u]=h}return{outVals:i,outShape:r,outDtype:o}}function tX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Ie(r,"prod");let i=r.shape.length,l=v.parseAxisParam(a,r.shape),u=T.getAxesPermutation(l,i),c=l,h=r,d=[];u!=null&&(h=ps({inputs:{x:r},backend:n,attrs:{perm:u}}),d.push(h),c=T.getInnerMostAxes(c.length,i));let p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=QC(h.shape,h.dtype,p,c),y=m;return o&&(y=T.expandShapeToKeepDim(m,l)),d.forEach(x=>n.disposeIntermediateTensorInfo(x)),n.makeTensorInfo(y,g,f)}var nX={kernelName:Ho,backendName:"cpu",kernelFunc:tX},Ks=T.RowPartitionType,e2=class{constructor(e,t,n,s,r,a,o,i,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=s,this.valuesDType=r,this.defaultValue=a,this.defaultValueShape=o,this.rowPartitionValues=i,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=T.getRowPartitionTypesHelper(u),this.raggedRank=T.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Ks.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Ks.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){let t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Ks.VALUE_ROWIDS:return e2.getMaxWidthValueRowID(t);case Ks.ROW_SPLITS:return e2.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${Ks[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){let t=e.length;if(t===0||t===1)return 0;let n=0;for(let s=0;s<t-1;++s){let r=e[s+1]-e[s];r>n&&(n=r)}return n}static getMaxWidthValueRowID(e){let t=e.length;if(t===0)return 0;let n=0,s=e[0],r=0;for(let a=1;a<t;++a){let o=e[a];o!==s&&(s=o,r=Math.max(a-n,r),n=a)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t,n=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Y3(e,n)}calculateOutputSize(e){let t=this.valuesShape,n=this.defaultValueShape;T.validateDefaultValueShape(n,t);let s=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=T.combineRaggedTensorToTensorShapes(this.raggedRank,s,t);a[0]<0&&(a[0]=e);for(let o=1;o<=this.raggedRank;++o)a[o]<0&&(a[o]=this.getMaxWidth(o));return a}calculateFirstParentOutputIndex(e,t,n){let s=Math.min(e,n),r=[],a=0;for(let o=0;o<s;++o,a+=t)r.push(a);for(let o=s;o<e;++o)r.push(-1);return v.assert(r.length===e,()=>"Final length of result must be equal to firstDimension."),r}calculateOutputIndexRowSplit(e,t,n,s){let r=e.length,a=[];for(let o=0;o<r-1;++o){let i=e[o+1]-e[o],l=Math.min(s,i),u=t[o];u===-1&&(l=0);for(let c=0;c<l;++c)a.push(u),u+=n;for(let c=0;c<i-l;++c)a.push(-1)}if(r>0&&a.length!==e[r-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,n,s){let r=e.length,a=[];if(r===0)return[];let o=0,i=e[0];if(i>=t.length)throw new Error(`Got currentValueRowId=${i}, which is not less than ${t.length}`);let l=t[i];a.push(l);for(let u=1;u<r;++u){let c=e[u];if(c===i)l>=0&&(++o,o<s?l+=n:l=-1);else{if(o=0,i=c,c>=t.length)throw new Error(`Got nextValueRowId=${c} which is not less than ${t.length}`);l=t[c]}a.push(l)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,n,s){let r=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case Ks.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,s);case Ks.ROW_SPLITS:if(r.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(r,t,n,s);default:throw new Error(`Unsupported partition type: ${Ks[a]}`)}}getFirstDimensionSize(){let e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");let t=this.rowPartitionTypes[0];switch(t){case Ks.FIRST_DIM_SIZE:return e[0];case Ks.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Ks.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Ks[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let t=this.getFirstDimensionSize(),n=this.calculateOutputSize(t),s=new Array(this.raggedRank+1);s[s.length-1]=1;for(let i=s.length-2;i>=0;--i)s[i]=s[i+1]*n[i+1];let r=Y3(n,!1),a=v.getArrayFromDType(this.valuesDType,v.sizeFromShape(r));if(s[0]*n[0]>0){let i=this.calculateFirstParentOutputIndex(t,s[0],n[0]);for(let l=1;l<=this.raggedRank;++l)i=this.calculateOutputIndex(l-1,i,s[l],n[l]);this.setOutput(this.raggedRank,i,a,r)}return[r,a]}setOutput(e,t,n,s){if(n.length===0)return;let r=this.values,a=n,o=s.slice();o=o.slice(e+1);let i=v.sizeFromShape(o),l=t.length,u=this.defaultValue;if(u.length!==i&&u.length!==1){let p=this.defaultValueShape;Y(()=>{let f=U(u,p);u=Vi(f,o).dataSync()})}let c=0,h=0,d=0;for(let p=0;p<=l;++p){let f=p<l?t[p]:-1;if(f===d){++d;continue}if(h<d){let m=r.subarray(c*i),g=a.subarray(h*i),y=(d-h)*i;Z3(g,m,y)}if(p>=l){let m=n.length;f=Math.floor(m/i)}if(f>d)if(this.defaultValue.length===1)a.subarray(d*i,f*i).fill(this.defaultValue[0]),d=f;else for(;f>d;){let m=a.slice(d*i);Z3(m,u,i),++d}f<0?(c=p+1,h=d):(c=p,h=d,d=h+1)}}};function Z3(e,t,n){for(let s=0;s<n;s++)e[s]=t[s]}function Y3(e,t){let n=[];for(let s of e){if(s<0){if(!t)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}n.push(s)}return n}function e6(e,t,n,s,r,a,o,i,l,u){return new e2(e,t,n,s,r,a,o,i,l,u).compute()}function L5(e,t,n,s){let r=e===t,a=e<t&&n<0,o=t<e&&n>1;if(r||a||o)return v.makeZerosTypedArray(0,s);let i=Math.abs(Math.ceil((t-e)/n)),l=v.makeZerosTypedArray(i,s);t<e&&n===1&&(n=-1),l[0]=e;for(let u=1;u<l.length;u++)l[u]=l[u-1]+n;return l}var t6=ci(e=>1/Math.sqrt(e)),sX=ed(Zo,t6),rX={kernelName:Zo,backendName:"cpu",kernelFunc:sX};function zu(e,t,n,s,r,a,o,i,l,u){let c=[s/r,r],h=e.values,d=t.values;if(s===0)return Le(n,t.dtype);let p=Le(c,t.dtype);typeof l=="string"||typeof l=="number"?p.values.fill(l):typeof l=="boolean"&&p.values.fill(+l);for(let f=0;f<a;f++){let m=[],g=0;for(let y=0;y<o;y++){let x=h[f*o+y];m.push(x),g+=x*i[y]}if(g<0||g>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${n}`);for(let y=0;y<r;y++)u?p.values[g*r+y]+=d[f*r+y]:p.values[g*r+y]=t.rank===0?d[0]:d[f*r+y]}return p}var aX=ci(e=>1/(1+Math.exp(-e))),n6=ft(Jo,e=>1/(1+Math.exp(-e))),oX={kernelName:Jo,backendName:"cpu",kernelFunc:n6};function Fm(e,t,n,s,r){let a=zt.isSliceContinous(s,t,n),o=v.sizeFromShape(n),i=v.computeStrides(s);if(a){let h=zt.computeFlatOffset(t,i);return r==="string"?e.slice(h,h+o):e.subarray(h,h+o)}let l=r==="string"?T.fromUint8ToStringArray(e):e,u=Le(s,r,l),c=Le(n,r);for(let h=0;h<c.size;++h){let d=c.indexToLoc(h),p=d.map((f,m)=>f+t[m]);c.set(u.get(...p),...d)}return r==="string"?T.fromStringArrayToUint8(c.values):c.values}function rl(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s;Ie(r,"slice");let[i,l]=zt.parseSliceParams(r,a,o);zt.assertParamsValid(r,i,l);let u=n.data.get(r.dataId).values,c=Fm(u,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,c)}var iX={kernelName:Ul,backendName:"cpu",kernelFunc:rl};function s6(e,t,n,s,r,a,o){let i=t[0],l=a[0],u=new Array(l),c=new Array(i),h=t[1];if(l===0){if(i!==0)throw new Error(T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(i));let g=v.getArrayFromDType(n,0),y=v.getArrayFromDType(r,0);return[g,[0,h],y,u,c]}let d=!0,p=0,f=new Array(l).fill(0);for(let g=0;g<i;++g){let y=e[g*h];if(y<0)throw new Error(T.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,y));if(y>=l)throw new Error(T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,y,l));++f[y],d=d&&y>=p,p=y}let m=!0;for(let g=0;g<l;++g){let y=f[g]===0;u[g]=y,m=m&&!y,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){let g=e,y=s;for(let x=0;x<i;++x)c[x]=x;return[g,[i,h],y,u,c]}else{let g=f[l-1],y=v.getArrayFromDType(n,g*h),x=v.getArrayFromDType(r,g),A=new Array(l).fill(0);for(let b=0;b<i;++b){let w=e[b*h],S=A[w],C=(w===0?0:f[w-1])+S;A[w]++;for(let _=0;_<h;++_)y[C*h+_]=e[b*h+_];x[C]=s[b],c[b]=C}for(let b=0;b<l;++b)if(A[b]===0){let S=b===0?0:f[b-1];y[S*h+0]=b;for(let C=1;C<h;++C)y[S*h+C]=0;x[S]=o}return[y,[g,h],x,u,c]}}function r6(e,t,n,s,r){let a=v.sizeFromShape(s),o=t[0],i=r.length,l=[],u=1,c=-1;for(let g=0;g<i;++g){let y=r[g];if(y===-1){if(c!==-1)throw new Error(T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(c,g));c=g,l.push(1)}else{if(y<0)throw new Error(T.getSparseReshapeNegativeOutputDimErrorMessage(g,y));u*=y,l.push(y)}}if(c!==-1){if(u<=0)throw new Error(T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let g=Math.trunc(a/u);if(u*g!==a)throw new Error(T.getSparseReshapeInputOutputMultipleErrorMessage(s,l));l[c]=g}if(v.sizeFromShape(l)!==a)throw new Error(T.getSparseReshapeInputOutputMismatchErrorMessage(s,l));let d=s.length,p=[];if(d>0){p[d-1]=1;for(let g=d-2;g>=0;--g)p[g]=p[g+1]*s[g+1]}let f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*l[g+1]}let m=v.getArrayFromDType(n,o*i);for(let g=0;g<o;++g){let y=0;for(let x=0;x<d;++x)y+=e[g*d+x]*p[x];for(let x=0;x<i;++x)m[g*i+x]=Math.trunc(y/f[x]),y%=f[x]}return[m,[o,i],l]}function B5(e,t,n,s,r,a=!1,o=0){let i=s.length,l=[t[0],e.length/t[0]],u=l[1],h=i>0?r[i-1]+1:0;if(h<0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=t.slice();d[0]=h;let p=d.reduce((A,b)=>A*b,1),f=v.getArrayFromDType(n,p);if(i===0)return h>0&&f.fill(o),[f,d];if(h<=0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,y=0,x=r[m];for(;;){let A=0;if(g<i){if(A=r[g],x===A){++g;continue}if(x>=A)throw new Error(T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(x<0||x>=h)throw new Error(T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x,h));x>y&&f.fill(o,y*u,x*u);for(let b=m;b<g;++b){let w=s[b];if(w<0||w>=l[0])throw new Error(T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(b,s[b],l[0]));for(let S=0;S<u;S++)f[x*u+S]+=e[w*u+S]}if(a)for(let b=0;b<u;b++)f[x*u+b]/=g-m;if(m=g,++g,y=x+1,x=A,g>i)break}return y<h&&f.fill(o,y*u,h*u),[f,d]}var lX=ci(e=>Math.sqrt(e)),uX=ft(Qo,e=>Math.sqrt(e)),cX={kernelName:Qo,backendName:"cpu",kernelFunc:uX},a6=nn((e,t)=>{let n=e-t;return n*n}),dX=An(ni,a6),hX={kernelName:ni,backendName:"cpu",kernelFunc:dX};function o6(e,t,n,s){let r=Le(e,t.dtype);for(let a=0;a<r.size;a++){let o=r.indexToLoc(a),i=new Array(o.length);for(let l=0;l<i.length;l++)i[l]=o[l]*n[l]+s[l];r.set(t.get(...i),...o)}return r}var pX=class{constructor(e,t,n,s,r,a){this.separator=v.encodeString(e),this.nGramWidths=t,this.leftPad=v.encodeString(n),this.rightPad=v.encodeString(s),this.padWidth=r,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,a){for(let o=0;o<r;++o){let i=this.getPadWidth(a),l=Math.max(0,i-o),u=Math.max(0,i-(r-(o+1))),c=a-(l+u),h=t+(l>0?0:o-i),d=0;d+=l*this.leftPad.length;for(let y=0;y<c;++y)d+=e[h+y].length;d+=u*this.rightPad.length,d+=(l+u+c-1)*this.separator.length,n[s+o]=new Uint8Array(d);let f=n[s+o],m=0,g=y=>y.forEach(x=>f[m++]=x);for(let y=0;y<l;++y)g(this.leftPad),g(this.separator);for(let y=0;y<c-1;++y)g(e[h+y]),g(this.separator);if(c>0){g(e[h+c-1]);for(let y=0;y<u;++y)g(this.separator),g(this.rightPad)}else{for(let y=0;y<u-1;++y)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){let n=e.length,s=t.length;if(s>0){let i=t[0];if(i!==0)throw new Error(`First split value must be 0, got ${i}`);for(let l=1;l<s;++l){let u=t[l]>=i;if(u=u&&t[l]<=n,!u)throw new Error(`Invalid split value ${t[l]}, must be in [${i}, ${n}]`);i=t[l]}if(i!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${i}`)}let r=s-1,a=v.getArrayFromDType("int32",s);if(n===0||s===0){let i=new Array(n);for(let l=0;l<=r;++l)a[l]=0;return[i,a]}a[0]=0;for(let i=1;i<=r;++i){let l=t[i]-t[i-1],u=0;this.nGramWidths.forEach(c=>{u+=this.getNumNGrams(l,c)}),this.preserveShort&&l>0&&u===0&&(u=1),a[i]=a[i-1]+u}let o=new Array(a[r]);for(let i=0;i<r;++i){let l=t[i],u=a[i];if(this.nGramWidths.forEach(c=>{let h=t[i+1]-t[i],d=this.getNumNGrams(h,c);this.createNGrams(e,l,o,u,d,c),u+=d}),this.preserveShort&&u===a[i]){let c=t[i+1]-t[i];if(c===0)continue;let h=c+2*this.padWidth,d=1;this.createNGrams(e,l,o,u,d,h)}}return[o,a]}};function W5(e,t,n,s,r,a,o,i){return new pX(n,s,r,a,o,i).compute(e,t)}function fX(e,t,n,s){if(!e.length)return;if(t.length===0){for(let a=0;a<e.length;++a)s.push(e.subarray(a,a+1));return}if(t.length===1){let a=t[0],o=e.indexOf(a);for(;o!==-1;){let i=e.subarray(0,o);(!n||i.length!==0)&&s.push(i),e=e.subarray(o+1),o=e.indexOf(a)}(!n||e.length!==0)&&s.push(e);return}let r=0;for(let a=0;a<e.length+1;a++)if(a===e.length||t.indexOf(e[a])!==-1){let o=e.subarray(r,a);(!n||o.length!==0)&&s.push(o),r=a+1}}function V5(e,t,n){let s=e.length,r=[],a=0,o=0,i=new Array(s);for(let d=0;d<s;++d){let p=r.length;fX(e[d],t,n,r);let f=r.length-p;i[d]=f,a+=f,o=Math.max(o,f)}let l=v.getArrayFromDType("int32",a*2),u=new Array(a),c=[s,o],h=0;for(let d=0;d<s;++d)for(let p=0;p<i[d];++p)l[h*2]=d,l[h*2+1]=p,u[h]=r[h],++h;return[l,u,c]}function U5(e,t){let n=v.getArrayFromDType("int32",e.length);for(let s=0;s<e.length;++s)n[s]=v.fingerPrint64(e[s]).modulo(t).getLowBitsUnsigned();return n}var i6=nn((e,t)=>e-t),mX=F5((e,t,n,s)=>({real:e-n,imag:t-s})),G5=An(si,i6,mX),gX={kernelName:si,backendName:"cpu",kernelFunc:G5};function l6(e,t){let n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let s=Le(n,e.dtype);for(let r=0;r<s.values.length;++r){let a=s.indexToLoc(r),o=new Array(e.rank);for(let l=0;l<o.length;l++)o[l]=a[l]%e.shape[l];let i=e.locToIndex(o);s.values[r]=e.values[i]}return s}var Bd=(e,t)=>{let n=t.value-e.value;return n===0?e.index-t.index:n};function u6(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){let i=s-n+1,l=t-n+1,u=Math.log(i),c=.5*Math.exp(2*u/3),h=.5*Math.sqrt(u*c*(i-c)/i)*Math.sign(l-i/2),d=Math.max(n,Math.floor(t-l*c/i+h)),p=Math.min(s,Math.floor(t+(i-l)*c/i+h));u6(e,t,d,p)}let r=e[t],a=n,o=s;for(v.swap(e,n,t),Bd(e[s],r)>0&&v.swap(e,n,s);a<o;){for(v.swap(e,a,o),a++,o--;Bd(e[a],r)<0;)a=a+1;for(;Bd(e[o],r)>0;)o=o-1}Bd(e[n],r)===0?v.swap(e,n,o):(o=o+1,v.swap(e,o,s)),o<=t&&(n=o+1),t<=o&&(s=o-1)}}function c6(e,t,n,s,r){let a=t[t.length-1],[o,i]=[e.length/a,a],l=v.getTypedArrayFromDType(n,o*s),u=v.getTypedArrayFromDType("int32",o*s);for(let h=0;h<o;h++){let d=h*i,p=e.subarray(d,d+i),f=new Array(p.length);p.forEach((x,A)=>f[A]={value:x,index:A}),s<f.length&&(u6(f,s),f=f.slice(0,s)),r&&f.sort(Bd);let m=h*s,g=l.subarray(m,m+s),y=u.subarray(m,m+s);for(let x=0;x<s;x++)g[x]=f[x].value,y[x]=f[x].index}let c=t.slice();return c[c.length-1]=s,[Le(c,n,l),Le(c,"int32",u)]}function d6(e,t,n,s){let r=v.parseAxisParam(t,n)[0],a=[1,n[0],1];for(let f=0;f<r;f++)a[0]*=n[f];a[1]=n[r];for(let f=r+1;f<n.length;f++)a[2]*=n[f];let o={},i=new Int32Array(n[r]),l=new ln(a,s,e),u=[],c=a[0]===1&&a[2]===1;for(let f=0;f<n[r];f++){let m;if(c)m=e[f].toString();else{let g=[];for(let y=0;y<a[0];y++)for(let x=0;x<a[2];x++)g.push(l.get(y,f,x));m=g.join(",")}if(o[m]!==void 0)i[f]=o[m];else{let g=Object.keys(o).length;o[m]=g,i[f]=g,u.push(f)}}let h=a.slice();h[1]=Object.keys(o).length;let d=new ln(h,s);u.forEach((f,m)=>{for(let g=0;g<a[0];g++)for(let y=0;y<a[2];y++)d.set(l.get(g,f,y),g,m,y)});let p=n.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:i}}Lc("cpu",()=>new $5,1);var h6=ft(Io,e=>e>=0?e:Math.exp(e)-1),yX={kernelName:Io,backendName:"cpu",kernelFunc:h6};function p6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s;Ie([r],"leakyRelu");let o=v.sizeFromShape(r.shape),i=n.data.get(r.dataId).values,l=v.getTypedArrayFromDType("float32",o);for(let u=0;u<i.length;u++)l[u]=i[u]<0?a*i[u]:i[u];return n.makeTensorInfo(r.shape,"float32",l)}var AX={kernelName:$o,backendName:"cpu",kernelFunc:p6},xX=nn((e,t)=>e<0?t*e:e);function f6(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t;Ie([s,r],"prelu");let a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,[i,l]=xX(s.shape,r.shape,a,o,"float32");return n.makeTensorInfo(l,"float32",i)}var bX={kernelName:Go,backendName:"cpu",kernelFunc:f6},m6=ft(jo,e=>Math.max(0,e)),vX={kernelName:jo,backendName:"cpu",kernelFunc:m6},g6=ft(Ko,e=>Math.min(Math.max(0,e),6)),wX={kernelName:Ko,backendName:"cpu",kernelFunc:g6};function Om(e,t,n,s,r){if(n==="linear")return ea({inputs:{x:t},backend:e});if(n==="relu")return m6({inputs:{x:t},backend:e});if(n==="elu")return h6({inputs:{x:t},backend:e});if(n==="relu6")return g6({inputs:{x:t},backend:e});if(n==="prelu")return f6({inputs:{x:t,alpha:s},backend:e});if(n==="leakyrelu")return p6({inputs:{x:t},backend:e,attrs:{alpha:r}});if(n==="sigmoid")return n6({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function It(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,o=v.sizeFromShape(r.shape),i=v.inferFromImplicitShape(a,o),l=v.sizeFromShape(i);v.assert(o===l,()=>`The new shape (${i}) has ${l} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),n.incRef(r.dataId);let u=n.data.get(r.dataId);if(u.complexTensorInfos!=null){let c=u.complexTensorInfos.real,h=u.complexTensorInfos.imag;c.shape=i,h.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}var kX={kernelName:zl,backendName:"cpu",kernelFunc:It};function y6(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;Ie([r,a],"matMul");let l=r.shape.length,u=a.shape.length,c=o?r.shape[l-2]:r.shape[l-1],h=i?a.shape[u-1]:a.shape[u-2],d=o?r.shape[l-1]:r.shape[l-2],p=i?a.shape[u-2]:a.shape[u-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=v.sizeFromShape(f),y=v.sizeFromShape(m),A=eu.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([d,p]);v.assert(c===h,()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);let b=o?[g,c,d]:[g,d,c],w=i?[y,p,h]:[y,h,p],S=It({inputs:{x:r},backend:n,attrs:{shape:b}}),C=It({inputs:{x:a},backend:n,attrs:{shape:w}}),_=o?S.shape[1]:S.shape[2],R=o?S.shape[2]:S.shape[1],D=i?C.shape[1]:C.shape[2],E=Math.max(g,y),F=n.data.get(S.dataId).values,k=n.data.get(C.dataId).values,M=v.computeStrides(S.shape),z=v.computeStrides(C.shape),[W,H,j]=o?[M[0],1,M[1]]:[M[0],M[1],1],[Z,J,Q]=i?[1,z[1],z[0]]:[z[1],1,z[0]],ae=R*D,ne=Le([E,R,D],S.dtype),ie=ne.values,ue=n.blockSize;for(let te=0;te<E;te++)for(let oe=0;oe<R;oe+=ue)for(let Ne=0;Ne<D;Ne+=ue)for(let _e=0;_e<_;_e+=ue){let Be=Math.min(oe+ue,R),Oe=Math.min(Ne+ue,D),nt=Math.min(_e+ue,_);for(let dt=oe;dt<Be;dt++)for(let ot=Ne;ot<Oe;ot++){let ht=0;for(let Fe=_e;Fe<nt;Fe++){let vt=Math.min(te,g-1)*W,xt=Math.min(te,y-1)*Q,zn=F[vt+dt*H+Fe*j],Kt=k[Fe*Z+ot*J+xt];ht+=zn*Kt}ie[te*ae+(dt*D+ot)]+=ht}}return n.disposeIntermediateTensorInfo(S),n.disposeIntermediateTensorInfo(C),n.makeTensorInfo(A,ne.dtype,ne.values)}var SX={kernelName:mo,backendName:"cpu",kernelFunc:y6};function IX(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s,d,p,f,m=[];d=y6({inputs:{a:r,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),o&&(p=ic({inputs:{a:d,b:o},backend:n}),m.push(d),d=p),c&&(f=Om(n,d,c,i,h),m.push(d),d=f);for(let y of m)n.disposeIntermediateTensorInfo(y);return d}var CX={kernelName:Ja,backendName:"cpu",kernelFunc:IX},TX=ft(mc,e=>Math.acos(e)),NX={kernelName:mc,backendName:"cpu",kernelFunc:TX},EX=ft(gc,e=>Math.acosh(e)),_X={kernelName:gc,backendName:"cpu",kernelFunc:EX};function RX(e){let{inputs:t,backend:n}=e,s=t;Ie(t,"addN");let r=s.map(i=>n.data.get(i.dataId).values),a=Le(s[0].shape,s[0].dtype),o=a.values;for(let i=0;i<s.length;i++){let l=r[i];for(let u=0;u<o.length;u++)o[u]+=l[u]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}var $X={kernelName:ho,backendName:"cpu",kernelFunc:RX};function DX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Ie(r,"all");let i=v.parseAxisParam(a,r.shape),l=i,u=T.getAxesPermutation(l,r.shape.length),c=r;u!=null&&(c=ps({inputs:{x:r},backend:n,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,r.shape.length)),T.assertAxesAreInnerMostDims("all",l,c.shape.length);let[h,d]=T.computeOutAndReduceShapes(c.shape,l),p=v.sizeFromShape(d),f=v.makeZerosTypedArray(v.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){let x=y*p,A=m[x];for(let b=0;b<p;++b){let w=m[x+b];A=A&&w}f[y]=A}u!=null&&n.disposeIntermediateTensorInfo(c);let g=n.makeTensorInfo(h,c.dtype,f);if(o){let y=T.expandShapeToKeepDim(h,i),x=It({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),x}return g}var FX={kernelName:yc,backendName:"cpu",kernelFunc:DX};function OX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Ie(r,"any");let i=v.parseAxisParam(a,r.shape),l=i,u=T.getAxesPermutation(l,r.shape.length),c=r;u!=null&&(c=ps({inputs:{x:r},backend:n,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,r.shape.length)),T.assertAxesAreInnerMostDims("any",l,c.shape.length);let[h,d]=T.computeOutAndReduceShapes(c.shape,l),p=v.sizeFromShape(d),f=v.makeZerosTypedArray(v.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){let x=y*p,A=m[x];for(let b=0;b<p;++b){let w=m[x+b];A=A||w}f[y]=A}u!=null&&n.disposeIntermediateTensorInfo(c);let g=n.makeTensorInfo(h,c.dtype,f);if(o){let y=T.expandShapeToKeepDim(h,i),x=It({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),x}return g}var PX={kernelName:Ac,backendName:"cpu",kernelFunc:OX};function MX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;Ie(r,"argMax");let o=v.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),l=r,u=[];i!=null&&(l=ps({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(l),o=T.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],T.assertAxesAreInnerMostDims("argMax",o,l.shape.length);let[c,h]=T.computeOutAndReduceShapes(l.shape,o),d=v.sizeFromShape(c),p=v.makeZerosTypedArray(d,"int32"),f=v.sizeFromShape(h),m=n.data.get(l.dataId).values;for(let g=0;g<p.length;++g){let y=g*f,x=m[y],A=0;for(let b=0;b<f;++b){let w=m[y+b];w>x&&(x=w,A=b)}p[g]=A}return u.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(c,"int32",p)}var zX={kernelName:po,backendName:"cpu",kernelFunc:MX};function LX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;Ie(r,"argMin");let o=v.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),l=r,u=[];i!=null&&(l=ps({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(l),o=T.getInnerMostAxes(o.length,l.shape.length)),o=[o[0]],T.assertAxesAreInnerMostDims("argMin",o,l.shape.length);let[c,h]=T.computeOutAndReduceShapes(l.shape,o),d=v.sizeFromShape(c),p=v.makeZerosTypedArray(d,"int32"),f=v.sizeFromShape(h),m=n.data.get(l.dataId).values;for(let g=0;g<p.length;++g){let y=g*f,x=m[y],A=0;for(let b=0;b<f;++b){let w=m[y+b];w<x&&(x=w,A=b)}p[g]=A}return u.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(c,"int32",p)}var BX={kernelName:xc,backendName:"cpu",kernelFunc:LX},WX=ft(bc,e=>Math.asin(e)),VX={kernelName:bc,backendName:"cpu",kernelFunc:WX},UX=ft(vc,e=>Math.asinh(e)),GX={kernelName:vc,backendName:"cpu",kernelFunc:UX},HX=ft(wc,e=>Math.atan(e)),jX={kernelName:wc,backendName:"cpu",kernelFunc:HX},qX=nn((e,t)=>Math.atan2(e,t)),XX=An(hl,qX),KX={kernelName:hl,backendName:"cpu",kernelFunc:XX},ZX=ft(kc,e=>Math.atanh(e)),YX={kernelName:kc,backendName:"cpu",kernelFunc:ZX};function H5(e,t,n,s,r,a){let o=r.strideHeight,i=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Le(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],A=r.outShape[3];for(let b=0;b<r.batchSize;++b){let w=b*y,S=b*s[0];for(let C=0;C<r.inChannels;++C)for(let _=0;_<r.outHeight;++_){let R=_*o-d,D=Math.max(0,R),E=Math.min(r.inHeight,c+R),F=w+_*x;for(let k=0;k<r.outWidth;++k){let M=k*i-p,z=Math.max(0,M),W=Math.min(r.inWidth,h+M),H=f,j=0,Z=0;for(let Q=D;Q<E;Q+=l){let ae=S+Q*s[1];for(let ne=z;ne<W;ne+=u){let ie=ae+ne*s[2],ue=e[ie+C];a==="max"&&ue>H?H=ue:a==="avg"&&(j+=ue,Z++)}if(isNaN(H))break}let J=F+k*A+C;g[J]=a==="avg"?j/Z:H}}}return m}function A6(e,t,n,s,r=!1,a=!1){let o=Le(s.outShape,"int32"),i=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=Le(t,n,e);for(let g=0;g<s.batchSize;++g)for(let y=0;y<s.inChannels;++y)for(let x=0;x<s.outHeight;++x){let A=x*i-p,b=A;for(;b<0;)b+=u;let w=Math.min(s.inHeight,h+A);for(let S=0;S<s.outWidth;++S){let C=S*l-f,_=C;for(;_<0;)_+=c;let R=Math.min(s.inWidth,d+C),D=Number.NEGATIVE_INFINITY,E=-1;for(let F=b;F<w;F+=u){let k=F-A;for(let M=_;M<R;M+=c){let z=M-C,W=m.get(g,F,M,y);W>D&&(D=W,r?E=a?((g*s.inHeight+F)*s.inWidth+M)*s.inChannels+y:(F*s.inWidth+M)*s.inChannels+y:E=k*d+z)}}o.set(E,g,x,S,y)}}return o}function x6(e,t,n,s,r,a){let o=r.strideDepth,i=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,x=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,A=Le(r.outShape,n),b=A.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],S=r.outShape[2]*r.outShape[3]*r.outShape[4],C=r.outShape[3]*r.outShape[4],_=r.outShape[4];for(let R=0;R<r.batchSize;++R){let D=R*w,E=R*s[0];for(let F=0;F<r.inChannels;++F)for(let k=0;k<r.outDepth;++k){let M=k*o-m,z=M;for(;z<0;)z+=u;let W=Math.min(r.inDepth,d+M),H=D+k*S;for(let j=0;j<r.outHeight;++j){let Z=j*i-g,J=Z;for(;J<0;)J+=c;let Q=Math.min(r.inHeight,p+Z),ae=H+j*C;for(let ne=0;ne<r.outWidth;++ne){let ie=ne*l-y,ue=ie;for(;ue<0;)ue+=h;let te=Math.min(r.inWidth,f+ie),oe=ae+ne*_,Ne=x,_e=0,Be=0;for(let nt=z;nt<W;nt+=u){let dt=E+nt*s[1];for(let ot=J;ot<Q;ot+=c){let ht=dt+ot*s[2];for(let Fe=ue;Fe<te;Fe+=h){let vt=ht+Fe*s[3],xt=e[vt+F];if(a==="max"&&xt>Ne?Ne=xt:a==="avg"&&(_e+=xt,Be++),isNaN(Ne))break}if(isNaN(Ne))break}if(isNaN(Ne))break}let Oe=oe+F;b[Oe]=a==="avg"?_e/Be:Ne}}}}return A}function JX(e,t){let n=Le(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let x=y*s-d,A=x;for(;A<0;)A+=o;let b=Math.min(t.inDepth,u+x);for(let w=0;w<t.outHeight;++w){let S=w*r-p,C=S;for(;C<0;)C+=i;let _=Math.min(t.inHeight,c+S);for(let R=0;R<t.outWidth;++R){let D=R*a-f,E=D;for(;E<0;)E+=l;let F=Math.min(t.inWidth,h+D),k=Number.NEGATIVE_INFINITY,M=-1;for(let z=A;z<b;z+=o){let W=z-x;for(let H=C;H<_;H+=i){let j=H-S;for(let Z=E;Z<F;Z+=l){let J=Z-D,Q=e.get(m,z,H,Z,g);Q>=k&&(k=Q,M=W*c*h+j*c+J)}}}n.set(M,m,y,w,R,g)}}}return n}function QX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Ie(r,"avgPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,u=1;v.assert(T.eitherStridesOrDilationsAreOne(o,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);let c=T.computePool2DInfo(r.shape,a,o,u,i,l),h;if(c.filterWidth===1&&c.filterHeight===1&&v.arraysEqual(c.inShape,c.outShape))h=ea({inputs:{x:r},backend:n});else{let d=n.data.get(r.dataId).values,p=v.computeStrides(r.shape),f=H5(d,r.shape,r.dtype,p,c,"avg");h=n.makeTensorInfo(c.outShape,r.dtype,f.values)}return h}var eK={kernelName:fo,backendName:"cpu",kernelFunc:QX};function tK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:u}=s;Ie(r,"avgPool3d");let c=T.computePool3DInfo(r.shape,a,o,1,i,l,u),h=n.data.get(r.dataId).values,d=x6(h,r.shape,r.dtype,v.computeStrides(r.shape),c,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}var nK={kernelName:Nh,backendName:"cpu",kernelFunc:tK};function sK(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:u}=s;Ie([r,a],"avgPool3DGrad");let c=T.computePool3DInfo(a.shape,o,i,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,x=c.dilationHeight,A=c.dilationWidth,b=c.effectiveFilterDepth,w=c.effectiveFilterHeight,S=c.effectiveFilterWidth,C=b-1-c.padInfo.front,_=S-1-c.padInfo.left,R=w-1-c.padInfo.top,D=Le(a.shape,"float32"),E=1/(f*m*g),F=n.bufferSync(r);for(let k=0;k<c.batchSize;++k)for(let M=0;M<c.inChannels;++M)for(let z=0;z<c.inDepth;++z)for(let W=0;W<c.inHeight;++W)for(let H=0;H<c.inWidth;++H){let j=z-C,Z=W-R,J=H-_,Q=0;for(let ae=0;ae<b;ae+=y){let ne=(j+ae)/h;if(!(ne<0||ne>=c.outDepth||Math.floor(ne)!==ne))for(let ie=0;ie<w;ie+=x){let ue=(Z+ie)/d;if(!(ue<0||ue>=c.outHeight||Math.floor(ue)!==ue))for(let te=0;te<S;te+=A){let oe=(J+te)/p;if(oe<0||oe>=c.outWidth||Math.floor(oe)!==oe)continue;Q+=F.get(k,ne,ue,oe,M)}}}D.set(Q*E,k,z,W,H,M)}return n.makeTensorInfo(D.shape,D.dtype,D.values)}var rK={kernelName:Jm,backendName:"cpu",kernelFunc:sK};function aK(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a;Ie([r,a],"avgPoolGrad");let{filterSize:i,strides:l,pad:u}=s,c=T.computePool2DInfo(o.shape,i,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,x=c.effectiveFilterWidth,A=x-1-c.padInfo.left,b=y-1-c.padInfo.top,w=Le(o.shape,"float32"),S=1/(p*f),C=n.data.get(r.dataId).values,_=Le(r.shape,"float32",C);for(let R=0;R<c.batchSize;++R)for(let D=0;D<c.inChannels;++D)for(let E=0;E<c.inHeight;++E)for(let F=0;F<c.inWidth;++F){let k=E-b,M=F-A,z=0;for(let W=0;W<y;W+=m){let H=(k+W)/h;if(!(H<0||H>=c.outHeight||Math.floor(H)!==H))for(let j=0;j<x;j+=g){let Z=(M+j)/d;if(Z<0||Z>=c.outWidth||Math.floor(Z)!==Z)continue;z+=_.get(R,H,Z,D)}}w.set(z*S,R,E,F,D)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}var oK={kernelName:Ym,backendName:"cpu",kernelFunc:aK};function iK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,scale:a,offset:o,mean:i,variance:l}=t;v.assert(i.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),v.assert(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),v.assert(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Ie([r,i,l,a,o],"batchNorm");let{varianceEpsilon:u}=s;u==null&&(u=.001);let c=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,d=n.data.get(l.dataId).values,p=a?n.data.get(a.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=p.length,x=d.length,A=h.length,b=0,w=0,S=0,C=0;for(let _=0;_<c.length;++_)m[_]=f[b++]+(c[_]-h[w++])*p[S++]/Math.sqrt(d[C++]+u),b>=g&&(b=0),w>=A&&(w=0),S>=y&&(S=0),C>=x&&(C=0);return n.makeTensorInfo(r.shape,r.dtype,m)}var lK={kernelName:Eo,backendName:"cpu",kernelFunc:iK};function uK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;Ie([r],"batchToSpaceND");let i=a.reduce((y,x)=>y*x),l=T.getReshaped(r.shape,a,i),u=T.getPermuted(l.length,a.length),c=T.getReshapedPermuted(r.shape,a,i),h=T.getSliceBeginCoords(o,a.length),d=T.getSliceSize(c,o,a.length),p=It({inputs:{x:r},backend:n,attrs:{shape:l}}),f=ps({inputs:{x:p},backend:n,attrs:{perm:u}}),m=It({inputs:{x:f},backend:n,attrs:{shape:c}}),g=rl({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var cK={kernelName:pl,backendName:"cpu",kernelFunc:uK};function dK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o}=s,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=O5(i,l,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,u)}var hK={kernelName:Qm,backendName:"cpu",kernelFunc:dK};function pK(e){let{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,i=T.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var fK={kernelName:e0,backendName:"cpu",kernelFunc:pK},mK=ft(wa,(e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),gK={kernelName:wa,backendName:"cpu",kernelFunc:mK},yK=e=>{let{x:t}=e.inputs,n=e.backend,s=new Float32Array(v.sizeFromShape(t.shape)),r=n.data.get(t.dataId),a=r.complexTensorInfos.real,o=r.complexTensorInfos.imag,i=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values;for(let u=0;u<i.length;u++){let c=i[u],h=l[u];s[u]=Math.hypot(c,h)}return n.makeOutput(s,t.shape,"float32")},AK={kernelName:_h,backendName:"cpu",kernelFunc:yK};function lc(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}var xK={kernelName:Fh,backendName:"cpu",kernelFunc:lc};function uc(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=v.parseAxisParam(r,t[0].shape)[0],o=T.computeOutShape(t.map(m=>m.shape),a);if(v.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(m=>v.sizeFromShape(m.shape)>0);if(i.length===1)return ea({inputs:{x:i[0]},backend:n});let l=i.map(m=>m.shape);if(T.assertParamsConsistent(l,a),i[0].dtype==="complex64"){let m=i.map(b=>sl({inputs:{input:b},backend:n})),g=i.map(b=>lc({inputs:{input:b},backend:n})),y=uc({inputs:m,backend:n,attrs:{axis:a}}),x=uc({inputs:g,backend:n,attrs:{axis:a}}),A=ks({inputs:{real:y,imag:x},backend:n});return m.forEach(b=>n.disposeIntermediateTensorInfo(b)),g.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(x),A}let u=i.map(m=>{let g=v.sizeFromShape(m.shape.slice(a));return It({inputs:{x:m},backend:n,attrs:{shape:[-1,g]}})}),c=u.map(m=>({vals:n.data.get(m.dataId).values,shape:m.shape}));o=T.computeOutShape(u.map(m=>m.shape),1);let h=u[0].shape[0]===1,d=P5(c,o,t[0].dtype,h),p=T.computeOutShape(i.map(m=>m.shape),a),f=n.makeTensorInfo(p,t[0].dtype,d);return u.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var bK={kernelName:fl,backendName:"cpu",kernelFunc:uc};function b6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=s;Ie([r,a],"conv2d");let h=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(r.shape,a.shape,o,u,i,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,x=d.padInfo.top,A=d.dataFormat==="channelsLast",b=new ln(d.outShape,r.dtype),w=v.computeStrides(r.shape),S=v.computeStrides(a.shape),C=w[0],_=A?w[1]:w[2],R=A?w[2]:1,D=A?1:w[1],E=b.strides[0],F=A?b.strides[1]:b.strides[2],k=A?b.strides[2]:1,M=A?1:b.strides[1],z=n.data.get(r.dataId).values,W=n.data.get(a.dataId).values,H=b.values;for(let j=0;j<d.batchSize;++j){let Z=j*C,J=j*E;for(let Q=0;Q<d.outHeight;++Q){let ae=J+Q*F,ne=Q*d.strideHeight-x;for(let ie=0;ie<p;++ie){let ue=ne+ie*m;if(ue<0||ue>=d.inHeight)continue;let te=ie*S[0],oe=Z+ue*_;for(let Ne=0;Ne<d.outWidth;++Ne){let _e=ae+Ne*k,Be=Ne*d.strideWidth-y;for(let Oe=0;Oe<f;++Oe){let nt=Be+Oe*g;if(nt<0||nt>=d.inWidth)continue;let dt=te+Oe*S[1],ot=oe+nt*R,ht=dt;for(let Fe=0;Fe<d.inChannels;++Fe){let vt=z[ot+Fe*D];for(let xt=0;xt<d.outChannels;++xt)H[_e+xt*M]+=vt*W[ht+xt];ht+=d.outChannels}}}}}}return n.makeTensorInfo(b.shape,b.dtype,H)}var vK={kernelName:Ao,backendName:"cpu",kernelFunc:b6};function wK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;Ie([r,a],"conv2dBackpropFilter");let h=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(r.shape,c,o,1,i,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,y=d.dataFormat==="channelsLast",x=new ln(d.filterShape,"float32"),A=d.padInfo.left,b=d.padInfo.top,w=n.data.get(r.dataId).values,S=n.data.get(a.dataId).values,C=new ln(r.shape,r.dtype,w),_=new ln(a.shape,a.dtype,S);for(let R=0;R<m;++R){let D=Math.max(0,Math.ceil((b-R)/p)),E=Math.min(d.outHeight,(d.inHeight+b-R)/p);for(let F=0;F<g;++F){let k=Math.max(0,Math.ceil((A-F)/f)),M=Math.min(d.outWidth,(d.inWidth+A-F)/f);for(let z=0;z<d.inChannels;++z)for(let W=0;W<d.outChannels;++W){let H=0;for(let j=0;j<d.batchSize;++j)for(let Z=D;Z<E;++Z){let J=R+Z*p-b;for(let Q=k;Q<M;++Q){let ae=F+Q*f-A;y?H+=C.get(j,J,ae,z)*_.get(j,Z,Q,W):H+=C.get(j,z,J,ae)*_.get(j,W,Z,Q)}}x.set(H,R,F,z,W)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}var kK={kernelName:t0,backendName:"cpu",kernelFunc:wK};function SK(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=s;Ie([r,a],"conv2dBackpropInput");let h=v.computeStrides(a.shape),d=v.computeStrides(r.shape),p=T.convertConv2DDataFormat(u),f=T.computeConv2DInfo(o,a.shape,i,1,l,c,!1,p),m=new ln(f.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,x=n.data.get(a.dataId).values,[A,b,w]=h,{batchSize:S,filterHeight:C,filterWidth:_,inChannels:R,inHeight:D,inWidth:E,outChannels:F,outHeight:k,outWidth:M,strideHeight:z,strideWidth:W}=f;p=f.dataFormat;let H=C-1-f.padInfo.top,j=_-1-f.padInfo.left,Z=p==="channelsLast",J=m.strides[0],Q=Z?m.strides[1]:m.strides[2],ae=Z?m.strides[2]:1,ne=Z?1:m.strides[1],ie=d[0],ue=Z?d[1]:d[2],te=Z?d[2]:1,oe=Z?1:d[1];for(let Ne=0;Ne<S;++Ne)for(let _e=0;_e<R;++_e)for(let Be=0;Be<D;++Be){let Oe=Be-H,nt=Math.max(0,Math.ceil(Oe/z)),dt=Math.min(k,(C+Oe)/z);for(let ot=0;ot<E;++ot){let ht=ot-j,Fe=Math.max(0,Math.ceil(ht/W)),vt=Math.min(M,(_+ht)/W),xt=0;for(let Kt=nt;Kt<dt;++Kt){let gs=Kt*z-Oe;for(let rn=Fe;rn<vt;++rn){let Ln=rn*W-ht,ys=ie*Ne+ue*Kt+te*rn,As=A*(C-1-gs)+b*(_-1-Ln)+w*_e;for(let En=0;En<F;++En){let Ds=y[ys+oe*En],Bn=x[As+En];xt+=Ds*Bn}}}let zn=J*Ne+Q*Be+ae*ot+ne*_e;g[zn]=xt}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var IK={kernelName:xo,backendName:"cpu",kernelFunc:SK};function CK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s;Ie([r,a],"conv3d");let u=T.computeConv3DInfo(r.shape,a.shape,o,l,i),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,x=g.left,A=g.top,b=new ln(u.outShape,r.dtype),w=n.data.get(r.dataId).values,S=n.data.get(a.dataId).values,C=b.values,_=v.computeStrides(r.shape),R=v.computeStrides(a.shape);for(let D=0;D<u.batchSize;++D){let E=D*_[0],F=D*b.strides[0];for(let k=0;k<u.outDepth;++k){let M=F+k*b.strides[1],z=k*u.strideDepth-y;for(let W=0;W<c;++W){let H=z+W*p;if(H<0||H>=u.inDepth)continue;let j=W*R[0],Z=E+H*_[1];for(let J=0;J<u.outHeight;++J){let Q=M+J*b.strides[2],ae=J*u.strideHeight-A;for(let ne=0;ne<h;++ne){let ie=ae+ne*f;if(ie<0||ie>=u.inHeight)continue;let ue=j+ne*R[1],te=Z+ie*_[2];for(let oe=0;oe<u.outWidth;++oe){let Ne=Q+oe*u.outChannels,_e=oe*u.strideWidth-x;for(let Be=0;Be<d;++Be){let Oe=_e+Be*m;if(Oe<0||Oe>=u.inWidth)continue;let nt=ue+Be*R[2],dt=te+Oe*u.inChannels,ot=nt;for(let ht=0;ht<u.inChannels;++ht){let Fe=w[dt+ht];for(let vt=0;vt<u.outChannels;++vt)C[Ne+vt]+=Fe*S[ot+vt];ot+=u.outChannels}}}}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var TK={kernelName:Rh,backendName:"cpu",kernelFunc:CK};function NK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,filterShape:l}=s;Ie([r,a],"conv3dBackpropFilterV2");let u=v.computeStrides(r.shape),c=v.computeStrides(a.shape),h=T.computeConv3DInfo(r.shape,l,o,1,i),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,x=new ln(h.filterShape,"float32"),A=x.values,[b,w,S,C]=x.strides,_=n.data.get(a.dataId).values,[R,D,E,F]=c,k=n.data.get(r.dataId).values,[M,z,W,H]=u,j=h.padInfo.front,Z=h.padInfo.left,J=h.padInfo.top;for(let Q=0;Q<m;++Q){let ae=Math.max(0,Math.ceil((j-Q)/d)),ne=Math.min(h.outDepth,(h.inDepth+j-Q)/d),ie=Q*b;for(let ue=0;ue<g;++ue){let te=Math.max(0,Math.ceil((J-ue)/p)),oe=Math.min(h.outHeight,(h.inHeight+J-ue)/p),Ne=ue*w+ie;for(let _e=0;_e<y;++_e){let Be=Math.max(0,Math.ceil((Z-_e)/f)),Oe=Math.min(h.outWidth,(h.inWidth+Z-_e)/f),nt=_e*S+Ne;for(let dt=0;dt<h.inChannels;++dt){let ot=dt*C+nt;for(let ht=0;ht<h.outChannels;++ht){let Fe=0;for(let vt=0;vt<h.batchSize;++vt){let xt=vt*M,zn=vt*R;for(let Kt=ae;Kt<ne;++Kt){let rn=(Q+Kt*d-j)*z+xt,Ln=Kt*D+zn;for(let ys=te;ys<oe;++ys){let En=(ue+ys*p-J)*W+rn,Ds=ys*E+Ln;for(let Bn=Be;Bn<Oe;++Bn){let aa=(_e+Bn*f-Z)*H+En,pu=Bn*F+Ds;Fe+=k[aa+dt]*_[pu+ht]}}}}A[ot+ht]=Fe}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}var EK={kernelName:n0,backendName:"cpu",kernelFunc:NK};function _K(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:o,strides:i,inputShape:l}=s;Ie([r],"conv3dBackpropInputV2");let u=v.computeStrides(r.shape),c=v.computeStrides(a.shape),h=T.computeConv3DInfo(l,a.shape,i,1,o),d=new ln(h.inShape,"float32"),p=d.values,[f,m,g,y]=d.strides,x=n.data.get(r.dataId).values,[A,b,w,S]=u,C=n.data.get(a.dataId).values,[_,R,D,E]=c,{batchSize:F,filterDepth:k,filterHeight:M,filterWidth:z,inChannels:W,inDepth:H,inHeight:j,inWidth:Z,outChannels:J,outDepth:Q,outHeight:ae,outWidth:ne,strideDepth:ie,strideHeight:ue,strideWidth:te}=h,oe=k-1-h.padInfo.front,Ne=M-1-h.padInfo.top,_e=z-1-h.padInfo.left;for(let Be=0;Be<F;++Be)for(let Oe=0;Oe<W;++Oe)for(let nt=0;nt<H;++nt){let dt=nt-oe,ot=Math.max(0,Math.ceil(dt/ie)),ht=Math.min(Q,(k+dt)/ie);for(let Fe=0;Fe<j;++Fe){let vt=Fe-Ne,xt=Math.max(0,Math.ceil(vt/ue)),zn=Math.min(ae,(M+vt)/ue);for(let Kt=0;Kt<Z;++Kt){let gs=Kt-_e,rn=Math.max(0,Math.ceil(gs/te)),Ln=Math.min(ne,(z+gs)/te),ys=0;for(let As=ot;As<ht;++As){let En=As*ie-dt;for(let Ds=xt;Ds<zn;++Ds){let Bn=Ds*ue-vt;for(let ra=rn;ra<Ln;++ra){let aa=ra*te-gs,pu=A*Be+b*As+w*Ds+S*ra,_a=_*(k-1-En)+R*(M-1-Bn)+D*(z-1-aa)+E*Oe;for(let oa=0;oa<J;++oa){let yd=x[pu+oa],fu=C[_a+oa];ys+=yd*fu}}}}p[f*Be+m*nt+g*Fe+y*Kt+Oe]=ys}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}var RK={kernelName:s0,backendName:"cpu",kernelFunc:_K},$K=ft(bo,e=>Math.cos(e)),DK={kernelName:bo,backendName:"cpu",kernelFunc:$K},FK=ft(vo,e=>Math.cosh(e)),OK={kernelName:vo,backendName:"cpu",kernelFunc:FK};function PK(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:u}=s,[c,h,d,p]=r.shape,f=a.shape[0],[m,g]=i,y=Le([f,m,g,p],"float32"),x=n.data.get(a.dataId).values,A=n.data.get(o.dataId).values,b=n.data.get(r.dataId).values,w=v.computeStrides(r.shape),S=v.computeStrides(y.shape);for(let C=0;C<f;C++){let _=C*4,R=x[_],D=x[_+1],E=x[_+2],F=x[_+3],k=A[C];if(k>=c)continue;let M=m>1?(E-R)*(h-1)/(m-1):0,z=g>1?(F-D)*(d-1)/(g-1):0;for(let W=0;W<m;W++){let H=m>1?R*(h-1)+W*M:.5*(R+E)*(h-1);if(H<0||H>h-1){for(let j=0;j<g;j++)for(let Z=0;Z<p;Z++){let J=Z+j*S[2]+W*S[1]+C*S[0];y.values[J]=u}continue}if(l==="bilinear"){let j=Math.floor(H),Z=Math.ceil(H),J=H-j;for(let Q=0;Q<g;Q++){let ae=g>1?D*(d-1)+Q*z:.5*(D+F)*(d-1);if(ae<0||ae>d-1){for(let te=0;te<p;te++){let oe=te+Q*S[2]+W*S[1]+C*S[0];y.values[oe]=u}continue}let ne=Math.floor(ae),ie=Math.ceil(ae),ue=ae-ne;for(let te=0;te<p;te++){let oe=te+ne*w[2]+j*w[1]+k*w[0],Ne=b[oe];oe=te+ie*w[2]+j*w[1]+k*w[0];let _e=b[oe];oe=te+ne*w[2]+Z*w[1]+k*w[0];let Be=b[oe];oe=te+ie*w[2]+Z*w[1]+k*w[0];let Oe=b[oe],nt=Ne+(_e-Ne)*ue,dt=Be+(Oe-Be)*ue;oe=te+Q*S[2]+W*S[1]+C*S[0],y.values[oe]=nt+(dt-nt)*J}}}else for(let j=0;j<g;++j){let Z=g>1?D*(d-1)+j*z:.5*(D+F)*(d-1);if(Z<0||Z>d-1){for(let ae=0;ae<p;ae++){let ne=ae+j*S[2]+W*S[1]+C*S[0];y.values[ne]=u}continue}let J=Math.round(Z),Q=Math.round(H);for(let ae=0;ae<p;ae++){let ne=ae+J*w[2]+Q*w[1]+k*w[0],ie=ae+j*S[2]+W*S[1]+C*S[0];y.values[ie]=b[ne]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var MK={kernelName:gl,backendName:"cpu",kernelFunc:PK};function zK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;Ie(r,"cumprod");let l=T.getAxesPermutation([a],r.shape.length),u=r;l!=null&&(u=ps({inputs:{x:r},backend:n,attrs:{perm:l}}));let c=T.getInnerMostAxes(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);let h=Fn(u.dtype,"int32"),d=v.makeOnesTypedArray(v.sizeFromShape(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=i?(y,x)=>y+f-x-1:(y,x)=>y+x;for(let y=0;y<p.length;y+=f)for(let x=0;x<f;x++){let A=m(y,x);if(x===0)d[A]=o?1:p[A];else{let b=m(y,x-1);d[A]=o?p[b]*d[b]:p[A]*d[b]}}let g=n.makeTensorInfo(u.shape,h,d);if(l!=null){let y=T.getUndoAxesPermutation(l),x=ps({inputs:{x:g},backend:n,attrs:{perm:y}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),x}return g}var LK={kernelName:ml,backendName:"cpu",kernelFunc:zK};function BK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;Ie(r,"cumsum");let l=T.getAxesPermutation([a],r.shape.length),u=r;l!=null&&(u=ps({inputs:{x:r},backend:n,attrs:{perm:l}}));let c=T.getInnerMostAxes(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);let h=Fn(u.dtype,"int32"),d=v.makeZerosTypedArray(v.sizeFromShape(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=i?(y,x)=>y+f-x-1:(y,x)=>y+x;for(let y=0;y<p.length;y+=f)for(let x=0;x<f;x++){let A=m(y,x);if(x===0)d[A]=o?0:p[A];else{let b=m(y,x-1);d[A]=o?p[b]+d[b]:p[A]+d[b]}}let g=n.makeTensorInfo(u.shape,h,d);if(l!=null){let y=T.getUndoAxesPermutation(l),x=ps({inputs:{x:g},backend:n,attrs:{perm:y}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),x}return g}var WK={kernelName:wo,backendName:"cpu",kernelFunc:BK};function VK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o,binaryOutput:i}=s;if(r.shape.length===1){let l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=O5(l,u,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,c)}else if(r.shape.length===2){let l=n.bufferSync(r),u=n.bufferSync(a),c=$C(l,u,o,i);return n.makeTensorInfo(c.shape,a.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var UK={kernelName:r0,backendName:"cpu",kernelFunc:VK};function GK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s;v.assert(o==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`);let i=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],h=l*a,d=u*a,p=c/(a*a),f=n.data.get(r.dataId).values,m=new Float32Array(i*h*d*p),g=0;for(let y=0;y<i;++y)for(let x=0;x<h;++x){let A=Math.floor(x/a),b=x%a;for(let w=0;w<d;++w){let S=Math.floor(w/a),C=w%a,_=(b*a+C)*p;for(let R=0;R<p;++R){let E=R+_+c*(S+u*(A+l*y));m[g++]=f[E]}}}return n.makeTensorInfo([i,h,d,p],r.dtype,m)}var HK={kernelName:yl,backendName:"cpu",kernelFunc:GK};function v6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:u}=s;Ie([r,a],"depthwiseConv2DNative");let c=v.computeStrides(r.shape),h=v.computeStrides(a.shape),d=l;d==null&&(d=[1,1]),v.assert(T.eitherStridesOrDilationsAreOne(o,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`);let p=T.computeConv2DInfo(r.shape,a.shape,o,d,i,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:x}=p,A=x.left,b=x.top,w=p.outChannels/p.inChannels,S=new ln(p.outShape,r.dtype),C=n.data.get(r.dataId).values,_=n.data.get(a.dataId).values,R=S.values;for(let D=0;D<p.batchSize;++D){let E=D*c[0],F=D*S.strides[0];for(let k=0;k<p.outHeight;++k){let M=F+k*S.strides[1],z=k*p.strideHeight-b;for(let W=0;W<f;++W){let H=z+W*g;if(H<0||H>=p.inHeight)continue;let j=W*h[0],Z=E+H*c[1];for(let J=0;J<p.outWidth;++J){let Q=M+J*S.strides[2],ae=J*p.strideWidth-A;for(let ne=0;ne<m;++ne){let ie=ae+ne*y;if(ie<0||ie>=p.inWidth)continue;let ue=j+ne*h[1],te=Z+ie*p.inChannels,oe=Q,Ne=ue;for(let _e=0;_e<p.inChannels;++_e){let Be=C[te+_e];for(let Oe=0;Oe<w;++Oe)R[oe+Oe]+=Be*_[Ne+Oe];oe+=w,Ne+=w}}}}}}return n.makeTensorInfo(S.shape,S.dtype,S.values)}var jK={kernelName:ko,backendName:"cpu",kernelFunc:v6};function qK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=s;Ie([r,a],"depthwiseConv2dNativeBackpropFilter");let h=T.computeConv2DInfo(r.shape,c,o,i,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new ln(h.filterShape,"float32"),y=h.padInfo.left,x=h.padInfo.top,A=h.outChannels/h.inChannels,b=n.data.get(r.dataId).values,w=new ln(r.shape,r.dtype,b),S=n.data.get(a.dataId).values,C=new ln(a.shape,a.dtype,S);for(let _=0;_<f;++_){let R=Math.max(0,Math.ceil((x-_)/d)),D=Math.min(h.outHeight,(h.inHeight+x-_)/d);for(let E=0;E<m;++E){let F=Math.max(0,Math.ceil((y-E)/p)),k=Math.min(h.outWidth,(h.inWidth+y-E)/p);for(let M=0;M<h.outChannels;++M){let z=Math.trunc(M/A),W=M%A,H=0;for(let j=0;j<h.batchSize;++j)for(let Z=R;Z<D;++Z){let J=_+Z*d-x;for(let Q=F;Q<k;++Q){let ae=E+Q*p-y;H+=w.get(j,J,ae,z)*C.get(j,Z,Q,M)}}g.set(H,_,E,z,W)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var XK={kernelName:a0,backendName:"cpu",kernelFunc:qK};function KK(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=s;Ie([r,a],"depthwiseConv2DNativeBackpropInput");let h=v.computeStrides(r.shape),d=v.computeStrides(a.shape),p=T.computeConv2DInfo(c,a.shape,o,i,l,u,!0),f=new ln(p.inShape,"float32"),m=f.values,[g,y,x]=f.strides,A=n.data.get(r.dataId).values,[b,w,S]=h,C=n.data.get(a.dataId).values,[_,R,D]=d,{batchSize:E,filterHeight:F,filterWidth:k,inChannels:M,inHeight:z,inWidth:W,outChannels:H,outHeight:j,outWidth:Z,strideHeight:J,strideWidth:Q}=p,ae=F-1-p.padInfo.top,ne=k-1-p.padInfo.left,ie=H/M;for(let ue=0;ue<E;++ue)for(let te=0;te<M;++te)for(let oe=0;oe<z;++oe){let Ne=oe-ae,_e=Math.max(0,Math.ceil(Ne/J)),Be=Math.min(j,(F+Ne)/J);for(let Oe=0;Oe<W;++Oe){let nt=Oe-ne,dt=Math.max(0,Math.ceil(nt/Q)),ot=Math.min(Z,(k+nt)/Q),ht=0;for(let Fe=_e;Fe<Be;++Fe){let vt=Fe*J-Ne;for(let xt=dt;xt<ot;++xt){let zn=xt*Q-nt,Kt=b*ue+w*Fe+S*xt,gs=_*(F-1-vt)+R*(k-1-zn)+D*te;for(let rn=0;rn<ie;++rn){let Ln=te*ie+rn,ys=A[Kt+Ln],As=C[gs+rn];ht+=ys*As}}}m[g*ue+y*oe+x*Oe+te]=ht}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var ZK={kernelName:o0,backendName:"cpu",kernelFunc:KK};function YK(e){let{inputs:t,backend:n}=e,{x:s}=t,r=v.sizeFromShape(s.shape),a=n.data.get(s.dataId).values,o=Le([r,r],s.dtype),i=o.values;for(let u=0;u<a.length;u++)i[u*r+u]=a[u];let l=[...s.shape,...s.shape];return n.makeTensorInfo(l,o.dtype,o.values)}var JK={kernelName:i0,backendName:"cpu",kernelFunc:YK},QK={kernelName:$h,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r}=e,{strides:a,pad:o,dilations:i}=n,l=t,u=l.data.get(s.dataId).values,c=s.shape.length,h=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:x,padInfo:A,strideHeight:b,strideWidth:w,filterHeight:S,filterWidth:C,dilationHeight:_,dilationWidth:R,outShape:D}=T.computeDilation2DInfo(s.shape,r.shape,a,o,"NHWC",i),E=v.sizeFromShape(D),F=D.length,k=v.getArrayFromDType(s.dtype,E);for(let z=0;z<p;++z)for(let W=0;W<y;++W){let H=W*b-A.top;for(let j=0;j<x;++j){let Z=j*w-A.left;for(let J=0;J<g;++J){let Q=Number.MIN_SAFE_INTEGER;for(let ne=0;ne<S;++ne){let ie=H+ne*_;if(ie>=0&&ie<f)for(let ue=0;ue<C;++ue){let te=Z+ue*R;if(te>=0&&te<m){let oe=v.locToIndex([z,ie,te,J],c,v.computeStrides(s.shape)),Ne=v.locToIndex([ne,ue,J],d,v.computeStrides(r.shape)),_e=u[oe]+h[Ne];_e>Q&&(Q=_e)}}}let ae=v.locToIndex([z,W,j,J],F,v.computeStrides(D));k[ae]=Q}}}return{dataId:l.write(v.toTypedArray(k,s.dtype),D,s.dtype),shape:D,dtype:s.dtype}}},eZ={kernelName:mm,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r,dy:a}=e,{strides:o,pad:i,dilations:l}=n,u=t,c=v.toNestedArray(s.shape,u.data.get(s.dataId).values),h=v.toNestedArray(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:x,strideHeight:A,strideWidth:b,filterHeight:w,filterWidth:S,dilationHeight:C,dilationWidth:_,outShape:R}=T.computeDilation2DInfo(s.shape,r.shape,o,i,"NHWC",l);v.assert(a.rank===R.length,()=>`Error in ${mm}, dy must have the same rank as output ${R.length}, but got ${a.rank}`);let D=v.toNestedArray(R,u.data.get(a.dataId).values),E=v.makeZerosNestedTypedArray(r.shape,r.dtype);for(let k=0;k<d;++k)for(let M=0;M<g;++M){let z=M*A-x.top;for(let W=0;W<y;++W){let H=W*b-x.left;for(let j=0;j<m;++j){let Z=Number.MIN_SAFE_INTEGER,J=0,Q=0;for(let ae=0;ae<w;++ae){let ne=z+ae*C;if(ne>=0&&ne<p)for(let ie=0;ie<S;++ie){let ue=H+ie*_;if(ue>=0&&ue<f){let te=c[k][ne][ue][j]+h[ae][ie][j];te>Z&&(Z=te,J=ae,Q=ie)}}}E[J][Q][j]+=D[k][M][W][j]}}}return{dataId:u.write(v.toTypedArray(E,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},tZ={kernelName:fm,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r,dy:a}=e,{strides:o,pad:i,dilations:l}=n,u=t,c=v.toNestedArray(s.shape,u.data.get(s.dataId).values),h=v.toNestedArray(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:x,strideHeight:A,strideWidth:b,filterHeight:w,filterWidth:S,dilationHeight:C,dilationWidth:_,outShape:R}=T.computeDilation2DInfo(s.shape,r.shape,o,i,"NHWC",l);v.assert(a.rank===R.length,()=>`Error in ${fm}, dy must have the same rank as output ${R.length}, but got ${a.rank}`);let D=v.toNestedArray(R,u.data.get(a.dataId).values),E=v.makeZerosNestedTypedArray(s.shape,s.dtype);for(let k=0;k<d;++k)for(let M=0;M<g;++M){let z=M*A-x.top;for(let W=0;W<y;++W){let H=W*b-x.left;for(let j=0;j<m;++j){let Z=Number.MIN_SAFE_INTEGER,J=z<0?0:z,Q=H<0?0:H;for(let ae=0;ae<w;++ae){let ne=z+ae*C;if(ne>=0&&ne<p)for(let ie=0;ie<S;++ie){let ue=H+ie*_;if(ue>=0&&ue<f){let te=c[k][ne][ue][j]+h[ae][ie][j];te>Z&&(Z=te,J=ne,Q=ue)}}}E[k][J][Q][j]+=D[k][M][W][j]}}}return{dataId:u.write(v.toTypedArray(E,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};function Cp(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Ie(r,"sum");let i;r.dtype==="bool"?i=oo({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):i=ea({inputs:{x:r},backend:n});let l=i.shape.length,u=v.parseAxisParam(a,i.shape),c=T.getAxesPermutation(u,l),h=u,d=i;c!=null&&(d=ps({inputs:{x:i},backend:n,attrs:{perm:c}}),h=T.getInnerMostAxes(h.length,l)),T.assertAxesAreInnerMostDims("sum",h,d.shape.length);let[p,f]=T.computeOutAndReduceShapes(d.shape,h),m=T.upcastType(d.dtype,"int32"),g=Dm(n,p,m),y=v.sizeFromShape(f),x=n.data.get(g.dataId).values,A=n.data.get(d.dataId).values;for(let b=0;b<x.length;++b){let w=b*y,S=0;for(let C=0;C<y;++C)S+=A[w+C];x[b]=S}if(o){let b=T.expandShapeToKeepDim(g.shape,u),w=g;g=It({inputs:{x:g},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(w)}return n.disposeIntermediateTensorInfo(i),c!=null&&n.disposeIntermediateTensorInfo(d),g}var nZ={kernelName:ei,backendName:"cpu",kernelFunc:Cp};function sZ(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=T.decodeEinsumEquation(r,a.length);T.checkEinsumDimSizes(o.length,l,a);let{path:u,steps:c}=T.getEinsumComputePath(i,l),h=c.length,d=null,p=o.length,f=[];for(let m=0;m<h;++m){for(let g of c[m]){let{permutationIndices:y,expandDims:x}=T.getEinsumPermutation(p,l[g]),A;T.isIdentityPermutation(y)?A=a[g]:(A=ps({inputs:{x:a[g]},backend:n,attrs:{perm:y}}),f.push(A));let b=A.shape.slice();for(let w=0;w<x.length;++w)b.splice(x[w],0,1);v.arraysEqual(A.shape,b)||(A=It({inputs:{x:A},backend:n,attrs:{shape:b}}),f.push(A)),d===null?d=A:(d=Cg({inputs:{a:A,b:d},backend:n}),f.push(d))}m<h-1&&(u[m]>=0&&(d=Cp({inputs:{x:d},backend:n,attrs:{axis:u[m]-(o.length-p),keepDims:!1}}),f.push(d)),p--)}for(let m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}var rZ={kernelName:Dh,backendName:"cpu",kernelFunc:sZ};function aZ(e){let{inputs:t,backend:n}=e,{dy:s,y:r}=t;Ie([s,r],"eluGrad");let a=new Float32Array(v.sizeFromShape(r.shape)),o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values;for(let l=0;l<o.length;++l){let u=o[l];u>=1?a[l]=i[l]:a[l]=i[l]*(u+1)}return n.makeTensorInfo(r.shape,"float32",a)}var oZ={kernelName:l0,backendName:"cpu",kernelFunc:aZ},iZ=T.ERF_P,lZ=T.ERF_A1,uZ=T.ERF_A2,cZ=T.ERF_A3,dZ=T.ERF_A4,hZ=T.ERF_A5,pZ=ft(Sc,e=>{let t=Math.sign(e),n=Math.abs(e),s=1/(1+iZ*n);return t*(1-((((hZ*s+dZ)*s+cZ)*s+uZ)*s+lZ)*s*Math.exp(-n*n))}),fZ={kernelName:Sc,backendName:"cpu",kernelFunc:pZ};function Pm(e){let{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:a}=s,o=r.shape.length,i=r.shape.slice(),l=a;return a<0&&(v.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+a+1),i.splice(l,0,1),It({inputs:{x:r},backend:n,attrs:{shape:i}})}var mZ={kernelName:xl,backendName:"cpu",kernelFunc:Pm},gZ=nn((e,t)=>e/t),j5=An(So,gZ),t2={kernelName:So,backendName:"cpu",kernelFunc:j5};function w6(e,t,n){let s=e.shape,r=s[0],a=s[1],o=n.data.get(e.dataId),i=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,u=[r,a],c=v.sizeFromShape(u),h=v.getTypedArrayFromDType("float32",c),d=v.getTypedArrayFromDType("float32",c);for(let g=0;g<r;g++){let y=rl({inputs:{x:i},backend:n,attrs:{begin:[g,0],size:[1,a]}}),x=rl({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,a]}}),A=ks({inputs:{real:y,imag:x},backend:n}),{real:b,imag:w}=yZ(A,t,n),S=T.mergeRealAndImagArrays(b,w);for(let C=0;C<a;C++){let _=T.getComplexWithIndex(S,C);h[g*a+C]=_.real,d[g*a+C]=_.imag}n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(A)}let p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),m=ks({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function yZ(e,t,n){let s=v.sizeFromShape(e.shape),r=n.data.get(e.dataId),a=n.data.get(r.complexTensorInfos.real.dataId).values,o=n.data.get(r.complexTensorInfos.imag.dataId).values;if(AZ(s)){let i=n2(a,o,s,t,n),l=[e.shape[0],e.shape[1]];if(t){let u=n.makeTensorInfo(l,"float32",i.real),c=n.makeTensorInfo(l,"float32",i.imag),h=n.makeTensorInfo([],"float32",v.createScalarValue(s,"float32")),d=ea({inputs:{x:h},backend:n}),p=t2.kernelFunc({inputs:{a:u,b:h},backend:n}),f=t2.kernelFunc({inputs:{a:c,b:d},backend:n}),m=n.data.get(p.dataId).values,g=n.data.get(f.dataId).values;return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return i}else{let i=T.mergeRealAndImagArrays(a,o),l=xZ(i,s,t);return T.splitRealAndImagArrays(l)}}function AZ(e){return(e&e-1)===0}function n2(e,t,n,s,r){if(n===1)return{real:e,imag:t};let a=T.mergeRealAndImagArrays(e,t),o=n/2,i=T.complexWithEvenIndex(a),l=i.real,u=i.imag,c=[l.length],h=r.makeTensorInfo(c,"float32",l),d=r.makeTensorInfo(c,"float32",u),p=ks({inputs:{real:h,imag:d},backend:r}),f=T.complexWithOddIndex(a),m=f.real,g=f.imag,y=[m.length],x=r.makeTensorInfo(y,"float32",m),A=r.makeTensorInfo(y,"float32",g),b=ks({inputs:{real:x,imag:A},backend:r}),w=n2(l,u,o,s,r),S=w.real,C=w.imag,_=[S.length],R=r.makeTensorInfo(_,"float32",S),D=r.makeTensorInfo(_,"float32",C),E=ks({inputs:{real:R,imag:D},backend:r}),F=n2(m,g,o,s,r),k=F.real,M=F.imag,z=[k.length],W=r.makeTensorInfo(z,"float32",k),H=r.makeTensorInfo(z,"float32",M),j=ks({inputs:{real:W,imag:H},backend:r}),Z=T.exponents(n,s),J=[Z.real.length],Q=r.makeTensorInfo(J,"float32",Z.real),ae=r.makeTensorInfo(J,"float32",Z.imag),ne=ks({inputs:{real:Q,imag:ae},backend:r}),ie=Cg({inputs:{a:ne,b:j},backend:r}),ue=ic({inputs:{a:E,b:ie},backend:r}),te=G5({inputs:{a:E,b:ie},backend:r}),oe=sl({inputs:{input:ue},backend:r}),Ne=sl({inputs:{input:te},backend:r}),_e=lc({inputs:{input:ue},backend:r}),Be=lc({inputs:{input:te},backend:r}),Oe=uc({inputs:[oe,Ne],backend:r,attrs:{axis:0}}),nt=uc({inputs:[_e,Be],backend:r,attrs:{axis:0}}),dt=r.data.get(Oe.dataId).values,ot=r.data.get(nt.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(A),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(Q),r.disposeIntermediateTensorInfo(ae),r.disposeIntermediateTensorInfo(ne),r.disposeIntermediateTensorInfo(ie),r.disposeIntermediateTensorInfo(ue),r.disposeIntermediateTensorInfo(te),r.disposeIntermediateTensorInfo(oe),r.disposeIntermediateTensorInfo(_e),r.disposeIntermediateTensorInfo(Ne),r.disposeIntermediateTensorInfo(Be),r.disposeIntermediateTensorInfo(Oe),r.disposeIntermediateTensorInfo(nt),{real:dt,imag:ot}}function xZ(e,t,n){let s=new Float32Array(t*2);for(let r=0;r<t;r++){let a=0,o=0;for(let i=0;i<t;i++){let l=T.exponent(r*i,t,n),u=T.getComplexWithIndex(e,i);a+=u.real*l.real-u.imag*l.imag,o+=u.real*l.imag+u.imag*l.real}n&&(a/=t,o/=t),T.assignToTypedArray(s,a,o,r)}return s}function bZ(e){let{inputs:t,backend:n}=e,{input:s}=t,r=v.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],o=r/a,i=It({inputs:{x:s},backend:n,attrs:{shape:[o,a]}}),l=w6(i,!1,n),u=It({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}var vZ={kernelName:u0,backendName:"cpu",kernelFunc:bZ};function q5(e){let{backend:t,attrs:n}=e,{shape:s,value:r,dtype:a}=n,o=a||v.inferDtype(r),i=v.getArrayFromDType(o,v.sizeFromShape(s));return kZ(i,r,o),t.makeTensorInfo(s,o,i)}var wZ={kernelName:Ic,backendName:"cpu",kernelFunc:q5};function kZ(e,t,n){e.fill(t)}var SZ={kernelName:vl,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,r=n,a=v.getTypedArrayFromDType(s.dtype,v.sizeFromShape(s.shape)),[o,i,l,u]=s.shape,c=r.data.get(s.dataId).values;for(let d=0;d<o;d++){let p=d*l*i*u;for(let f=0;f<i;f++){let m=f*(l*u);for(let g=0;g<l;g++){let y=g*u;for(let x=0;x<u;x++){let A=Math.round(l-g-1),b=p+m+y+x,w=c[b];if(A>=0&&A<l){let S=A*u,C=p+m+S+x;w=c[C]}a[b]=w}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},IZ=nn((e,t)=>Math.floor(e/t)),CZ=An(No,IZ,null,"int32"),TZ={kernelName:No,backendName:"cpu",kernelFunc:CZ};function NZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=b6({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(o){let g=m;if(c==="NCHW"&&o.shape.length===1&&o.shape[0]!==1){let y=It({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=ic({inputs:{a:m,b:y},backend:n}),n.disposeIntermediateTensorInfo(y)}else m=ic({inputs:{a:m,b:o},backend:n});n.disposeIntermediateTensorInfo(g)}if(p){let g=m;if(c==="NCHW"&&p==="prelu"&&i.shape.length===1&&i.shape[0]!==1){let y=It({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=Om(n,m,p,y,f),n.disposeIntermediateTensorInfo(y)}else m=Om(n,m,p,i,f);n.disposeIntermediateTensorInfo(g)}return m}var EZ={kernelName:Qa,backendName:"cpu",kernelFunc:NZ};function _Z(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=v6({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(o){let g=m;m=ic({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(g)}if(p){let g=m;m=Om(n,m,p,i,f),n.disposeIntermediateTensorInfo(g)}return m}var RZ={kernelName:eo,backendName:"cpu",kernelFunc:_Z};function $Z(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=v.sizeFromShape(s.shape),o=r.shape,i=o[o.length-1],[l,u,c,h]=T.prepareAndValidate(s,r);if(u===0)return n.makeTensorInfo(l,s.dtype,[]);let d=n.data.get(r.dataId).values,p=n.bufferSync(s),f=BC(d,p,s.dtype,u,i,c,h,s.shape,a);return n.makeTensorInfo(l,s.dtype,f.values)}var DZ={kernelName:kl,backendName:"cpu",kernelFunc:$Z};function FZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s;Ie([r,a],"gatherV2");let l=v.parseAxisParam(o,r.shape)[0],u=n.data.get(a.dataId).values,c=r.shape[l];for(let b=0;b<u.length;++b){let w=u[b];v.assert(w<=c-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${c-1}]`)}let h=i;i==null&&(h=0);let d=v.sizeFromShape(a.shape),p=T.segment_util.collectGatherOpShapeInfo(r,a,l,h),f=It({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=It({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],y=n.bufferSync(m),x=n.bufferSync(f),A=WC(x,y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,A.dtype,A.values)}var OZ={kernelName:wl,backendName:"cpu",kernelFunc:FZ};function PZ(e){let{inputs:t,backend:n}=e,{input:s}=t,r=v.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],o=r/a,i=It({inputs:{x:s},backend:n,attrs:{shape:[o,a]}}),l=w6(i,!0,n),u=It({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}var MZ={kernelName:c0,backendName:"cpu",kernelFunc:PZ},zZ=ft(Cc,e=>Number.isFinite(e)?1:0,"bool"),LZ={kernelName:Cc,backendName:"cpu",kernelFunc:zZ},BZ=ft(Tc,e=>Math.abs(e)===1/0?1:0,"bool"),WZ={kernelName:Tc,backendName:"cpu",kernelFunc:BZ},VZ=ft(Il,e=>Number.isNaN(e)?1:0,"bool"),UZ={kernelName:Il,backendName:"cpu",kernelFunc:VZ};function GZ(e){let{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,o=jC(s,r,a);return t.makeTensorInfo([o.length],"float32",o)}var HZ={kernelName:d0,backendName:"cpu",kernelFunc:GZ},jZ=ft(Nc,e=>Math.log1p(e)),qZ={kernelName:Nc,backendName:"cpu",kernelFunc:jZ},XZ=nn((e,t)=>e&&t),KZ=An(Nl,XZ,null,"bool"),ZZ={kernelName:Nl,backendName:"cpu",kernelFunc:KZ},YZ=ft(El,e=>e?0:1,"bool"),JZ={kernelName:El,backendName:"cpu",kernelFunc:YZ},QZ=nn((e,t)=>e||t),eY=An(Ec,QZ,null,"bool"),tY={kernelName:Ec,backendName:"cpu",kernelFunc:eY};function nY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:o,alpha:i,beta:l}=s;Ie(r,"LRN");let u=r.shape[3],c=u-1,h=n.data.get(r.dataId).values,d=v.sizeFromShape(r.shape),p=new Float32Array(d);function f(m){let g=m%u,y=m-g+Math.max(0,g-a),x=m-g+Math.min(g+a,c),A=0;for(;y<=x;y++){let b=h[y];A+=b*b}return A}for(let m=0;m<d;m++){let g=f(m),y=h[m]*Math.pow(o+i*g,-l);p[m]=y}return n.makeTensorInfo(r.shape,r.dtype,p)}var sY={kernelName:Oh,backendName:"cpu",kernelFunc:nY};function rY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:o}=t,{depthRadius:i,bias:l,alpha:u,beta:c}=s;Ie(o,"LRNGrad");let h=v.sizeFromShape(o.shape),d=o.shape[3],p=n.data.get(o.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(h),y=h;for(let x=0;x<y;x++){let A=x%d,b=x-A+Math.max(0,A-i),w=x-A+Math.min(d,A+i+1),S=0;for(let C=b;C<w;C++)S+=Math.pow(f[C],2);S=u*S+l;for(let C=b;C<w;C++){let _=-2*u*c*f[C]*m[x]/S;x===C&&(_+=Math.pow(S,-c)),_*=p[x],g[C]+=_}}return n.makeTensorInfo(o.shape,r.dtype,g)}var aY={kernelName:h0,backendName:"cpu",kernelFunc:rY};function k6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s,i=n,l=r.shape,u=l.length,c=v.parseAxisParam(a,l),h=c,d=T.getAxesPermutation(h,u),p=i.data.get(r.dataId).values;if(d!=null){let b=new Array(u);for(let w=0;w<b.length;w++)b[w]=l[d[w]];p=z5(p,l,r.dtype,d,b),h=T.getInnerMostAxes(h.length,u),l=b}Ie(r,"max"),T.assertAxesAreInnerMostDims("max",h,u);let[f,m]=T.computeOutAndReduceShapes(l,h),g=v.sizeFromShape(m),y=XC(p,g,f,r.dtype),x=i.write(y,f,r.dtype),A=f;return o&&(A=T.expandShapeToKeepDim(f,c)),{dataId:x,shape:A,dtype:r.dtype}}var oY={kernelName:Fo,backendName:"cpu",kernelFunc:k6};function iY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Ie(r,"maxPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,u=1;v.assert(T.eitherStridesOrDilationsAreOne(o,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);let c=T.computePool2DInfo(r.shape,a,o,u,i,l),h;if(c.filterWidth===1&&c.filterHeight===1&&v.arraysEqual(c.inShape,c.outShape))h=ea({inputs:{x:r},backend:n});else{let d=n.data.get(r.dataId).values,p=v.computeStrides(r.shape),f=H5(d,r.shape,r.dtype,p,c,"max");h=n.makeTensorInfo(c.outShape,r.dtype,f.values)}return h}var lY={kernelName:Po,backendName:"cpu",kernelFunc:iY};function uY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:u}=s;Ie(r,"maxPool3d");let c=T.computePool3DInfo(r.shape,a,o,1,i,l,u),h=n.data.get(r.dataId).values,d=x6(h,r.shape,r.dtype,v.computeStrides(r.shape),c,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}var cY={kernelName:Ph,backendName:"cpu",kernelFunc:uY};function dY(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:u}=s;Ie([r,a],"maxPool3DGrad");let c=T.computePool3DInfo(a.shape,o,i,1,l,u),h=n.bufferSync(a),d=JX(h,c),p=c.strideDepth,f=c.strideHeight,m=c.strideWidth,g=c.dilationDepth,y=c.dilationHeight,x=c.dilationWidth,A=c.effectiveFilterDepth,b=c.effectiveFilterHeight,w=c.effectiveFilterWidth,S=A-1-c.padInfo.front,C=w-1-c.padInfo.left,_=b-1-c.padInfo.top,R=Le(a.shape,"float32"),D=n.bufferSync(r);for(let E=0;E<c.batchSize;++E)for(let F=0;F<c.inChannels;++F)for(let k=0;k<c.inDepth;++k)for(let M=0;M<c.inHeight;++M)for(let z=0;z<c.inWidth;++z){let W=k-S,H=M-_,j=z-C,Z=0;for(let J=0;J<A;J+=g){let Q=(W+J)/p;if(!(Q<0||Q>=c.outDepth||Math.floor(Q)!==Q))for(let ae=0;ae<b;ae+=y){let ne=(H+ae)/f;if(!(ne<0||ne>=c.outHeight||Math.floor(ne)!==ne))for(let ie=0;ie<w;ie+=x){let ue=(j+ie)/m;if(ue<0||ue>=c.outWidth||Math.floor(ue)!==ue)continue;let te=A*b*w-1-d.get(E,Q,ne,ue,F),oe=J*b*w+ae*w+ie,Ne=te===oe?1:0;if(Ne===0)continue;Z+=D.get(E,Q,ne,ue,F)*Ne}}}R.set(Z,E,k,M,z,F)}return n.makeTensorInfo(R.shape,R.dtype,R.values)}var hY={kernelName:f0,backendName:"cpu",kernelFunc:dY};function pY(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:o}=t,i=a;Ie([a,o],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=T.computePool2DInfo(i.shape,l,u,1,c,h),p=n.data.get(i.dataId).values,f=Le(d.outShape,i.dtype,A6(p,i.shape,i.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,x=d.dilationWidth,A=d.effectiveFilterHeight,b=d.effectiveFilterWidth,w=b-1-d.padInfo.left,S=A-1-d.padInfo.top,C=Le(i.shape,"float32"),_=n.data.get(r.dataId).values,R=Le(r.shape,"float32",_);for(let D=0;D<d.batchSize;++D)for(let E=0;E<d.inChannels;++E)for(let F=0;F<d.inHeight;++F)for(let k=0;k<d.inWidth;++k){let M=F-S,z=k-w,W=0;for(let H=0;H<A;H+=y){let j=(M+H)/m;if(!(j<0||j>=d.outHeight||Math.floor(j)!==j))for(let Z=0;Z<b;Z+=x){let J=(z+Z)/g;if(J<0||J>=d.outWidth||Math.floor(J)!==J)continue;let Q=A*b-1-f.get(D,j,J,E),ae=H*b+Z,ne=Q===ae?1:0;if(ne===0)continue;W+=R.get(D,j,J,E)*ne}}C.set(W,D,F,k,E)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}var fY={kernelName:p0,backendName:"cpu",kernelFunc:pY};function mY(e,t,n,s,r){let a=v.computeStrides(t),o=H5(e,t,n,a,r,"max"),i=A6(e,t,n,r,!0,s);return[o.values,i.values]}var gY={kernelName:m0,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{filterSize:r,strides:a,pad:o,includeBatchInIndex:i}=t,l=n;Ie(s,"MaxPoolWithArgmax");let u=l.data.get(s.dataId).values,c=T.computePool2DInfo(s.shape,r,a,[1,1],o),[h,d]=mY(u,s.shape,s.dtype,i,c),p=l.write(h,c.outShape,s.dtype),f=l.write(d,c.outShape,s.dtype);return[{dataId:p,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};function yY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=v.parseAxisParam(a,r.shape),u=T.computeOutAndReduceShapes(r.shape,i)[1],c=v.sizeFromShape(u),h=[],d=n.makeTensorInfo([],"float32",new Float32Array([c]));h.push(d);let p=oo({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});h.push(p);let f=j5({inputs:{a:p,b:d},backend:n});h.push(f);let m=Cp({inputs:{x:f},backend:n,attrs:{axis:a,keepDims:o}});return h.forEach(g=>n.disposeIntermediateTensorInfo(g)),m}var AY={kernelName:Mo,backendName:"cpu",kernelFunc:yY};function xY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;Ie(r,"min");let i=v.parseAxisParam(a,r.shape),l=i,u=T.getAxesPermutation(l,r.shape.length),c=r;u!=null&&(c=ps({inputs:{x:r},backend:n,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,r.shape.length)),T.assertAxesAreInnerMostDims("min",l,c.shape.length);let[h,d]=T.computeOutAndReduceShapes(c.shape,l),p=v.sizeFromShape(d),f=v.makeZerosTypedArray(v.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){let x=y*p,A=m[x];for(let b=0;b<p;++b){let w=m[x+b];(Number.isNaN(w)||w<A)&&(A=w)}f[y]=A}u!=null&&n.disposeIntermediateTensorInfo(c);let g=n.makeTensorInfo(h,c.dtype,f);if(o){let y=T.expandShapeToKeepDim(h,i),x=It({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),x}return g}var bY={kernelName:zo,backendName:"cpu",kernelFunc:xY};function vY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,mode:o}=s;Ie(r,"mirrorPad");let i=a.map((A,b)=>A[0]+r.shape[b]+A[1]),l=a.map(A=>A[0]),u=a.map((A,b)=>A[0]+r.shape[b]),c=o==="reflect"?0:1,h=n.data.get(r.dataId).values,d=r.shape.length,p=v.computeStrides(r.shape),f=v.sizeFromShape(i),m=i.length,g=v.computeStrides(i),y=v.getTypedArrayFromDType(r.dtype,f);for(let A=0;A<f;A++){let b=v.indexToLoc(A,m,g);for(let S=0;S<m;S++)b[S]<l[S]?b[S]=l[S]*2-b[S]-c:b[S]>=u[S]&&(b[S]=(u[S]-1)*2-b[S]+c);b=b.map((S,C)=>S-l[C]);let w=v.locToIndex(b,d,p);y[A]=h[w]}return{dataId:n.write(y,i,r.dtype),shape:i,dtype:r.dtype}}var wY={kernelName:Bo,backendName:"cpu",kernelFunc:vY},kY=nn((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),SY=An(_c,kY),IY={kernelName:_c,backendName:"cpu",kernelFunc:SY},CY=uo(Xm());function S6(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=r.shape.length,i=a;if(i===-1&&(i=o-1),i!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${i}`);let l=v.parseAxisParam([i],r.shape),u=k6({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=T.expandShapeToKeepDim(u.shape,l),h=It({inputs:{x:u},backend:n,attrs:{shape:c}}),d=G5({inputs:{a:r,b:h},backend:n}),p=MC({inputs:{x:d},backend:n}),f=Cp({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),m=It({inputs:{x:f},backend:n,attrs:{shape:c}}),g=j5({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var TY={kernelName:ti,backendName:"cpu",kernelFunc:S6};function NY(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:o,normalized:i}=s;Ie(r,"multinomial");let l=i?r:S6({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,a],p=v.makeZerosTypedArray(v.sizeFromShape(d),"int32");for(let f=0;f<u;++f){let m=f*c,g=new Float32Array(c-1);g[0]=h[m];for(let A=1;A<g.length;++A)g[A]=g[A-1]+h[m+A];let y=CY.alea(o.toString()),x=f*a;for(let A=0;A<a;++A){let b=y();p[x+A]=g.length;for(let w=0;w<g.length;w++)if(b<g[w]){p[x+A]=w;break}}}return i||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}var EY={kernelName:g0,backendName:"cpu",kernelFunc:NY},_Y=ar.nonMaxSuppressionV3Impl;function RY(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s;Ie(r,"NonMaxSuppression");let u=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=_Y(u,c,o,i,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}var $Y={kernelName:$l,backendName:"cpu",kernelFunc:RY},DY=ar.nonMaxSuppressionV4Impl;function FY(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=s;Ie(r,"NonMaxSuppressionPadded");let c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:p}=DY(c,h,o,i,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}var OY={kernelName:Rc,backendName:"cpu",kernelFunc:FY},PY=ar.nonMaxSuppressionV5Impl;function MY(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=s;Ie(r,"NonMaxSuppressionWithScore");let c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,d=o,p=i,f=l,m=u,{selectedIndices:g,selectedScores:y}=PY(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var zY={kernelName:Dl,backendName:"cpu",kernelFunc:MY};function LY(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{dtype:a,depth:o,onValue:i,offValue:l}=s;Ie(r,"oneHot");let u=v.sizeFromShape(r.shape),c=new Float32Array(u*o);c.fill(l);let h=n.data.get(r.dataId).values;for(let d=0;d<u;++d)h[d]>=0&&h[d]<o&&(c[d*o+h[d]]=i);return n.makeTensorInfo([...r.shape,o],a,c)}var BY={kernelName:Ol,backendName:"cpu",kernelFunc:LY};function Mm(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){let r=sl({inputs:{input:s},backend:n}),a=Mm({inputs:{x:r},backend:n}),o=lc({inputs:{input:s},backend:n}),i=Mm({inputs:{x:o},backend:n}),l=ks({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return q5({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}var WY={kernelName:Jl,backendName:"cpu",kernelFunc:Mm};function I6(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){let r=sl({inputs:{input:s},backend:n}),a=I6({inputs:{x:r},backend:n}),o=lc({inputs:{input:s},backend:n}),i=Mm({inputs:{x:o},backend:n}),l=ks({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return q5({backend:n,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}var VY={kernelName:Fl,backendName:"cpu",kernelFunc:I6};function C6(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Pm({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(c=>{v.assertShapesMatch(a,c.shape,"All tensors passed to stack must have matching shapes"),v.assert(o===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(c=>{let h=Pm({inputs:{input:c},backend:n,attrs:{dim:r}});return i.push(h),h}),u=uc({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(c=>n.disposeIntermediateTensorInfo(c)),u}var UY={kernelName:Pl,backendName:"cpu",kernelFunc:C6};function GY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;Ie(r,"pad");let i=a.map((x,A)=>x[0]+r.shape[A]+x[1]),l=a.map(x=>x[0]),u=n.data.get(r.dataId).values,c=v.sizeFromShape(r.shape),h=r.shape.length,d=v.computeStrides(r.shape),p=v.sizeFromShape(i),f=i.length,m=v.computeStrides(i),g=v.getTypedArrayFromDType(r.dtype,p);o!==0&&g.fill(o);for(let x=0;x<c;x++){let b=v.indexToLoc(x,h,d).map((S,C)=>S+l[C]),w=v.locToIndex(b,f,m);g[w]=u[x]}return{dataId:n.write(g,i,r.dtype),shape:i,dtype:r.dtype}}var T6={kernelName:Vo,backendName:"cpu",kernelFunc:GY},HY=nn((e,t)=>Math.pow(e,t)),jY=An(Uo,HY),qY={kernelName:Uo,backendName:"cpu",kernelFunc:jY};function XY(e){let{inputs:t,backend:n,attrs:s}=e,{shape:r,values:a,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:l}=s,u=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,h=n.data.get(o.dataId).values,d=i.map(g=>n.data.get(g.dataId).values),p=i.map(g=>g.shape),[f,m]=e6(u,r.shape,c,a.shape,a.dtype,h,o.shape,d,p,l);return n.makeTensorInfo(f,a.dtype,m)}var KY={kernelName:y0,backendName:"cpu",kernelFunc:XY};function ZY(e){let{backend:t,attrs:n}=e,{start:s,stop:r,dtype:a,step:o}=n,i=L5(s,r,o,a);return t.makeTensorInfo([i.length],a,i)}var YY={kernelName:$c,backendName:"cpu",kernelFunc:ZY},JY=ft(Ml,e=>1/e),QY={kernelName:Ml,backendName:"cpu",kernelFunc:JY};function eJ(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s;Ie(r,"resizeBilinear");let l=v.computeStrides(r.shape),[u,c]=i,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(v.sizeFromShape([h,u,c,f])),y=[a&&u>1?d-1:d,a&&c>1?p-1:p],x=[a&&u>1?u-1:u,a&&c>1?c-1:c],A=0,b=y[0]/x[0],w=y[1]/x[1];for(let S=0;S<h;S++)for(let C=0;C<u;C++){let _;o?_=b*(C+.5)-.5:_=b*C;let R=Math.max(0,Math.floor(_)),D=_-R,E=Math.min(d-1,Math.ceil(_)),F=S*l[0]+R*l[1],k=S*l[0]+E*l[1];for(let M=0;M<c;M++){let z;o?z=w*(M+.5)-.5:z=w*M;let W=Math.max(0,Math.floor(z)),H=z-W,j=Math.min(p-1,Math.ceil(z)),Z=F+W*l[2],J=k+W*l[2],Q=F+j*l[2],ae=k+j*l[2];for(let ne=0;ne<f;ne++){let ie=m[Z+ne],ue=m[J+ne],te=m[Q+ne],oe=m[ae+ne],Ne=ie+(te-ie)*H,_e=ue+(oe-ue)*H,Be=Ne+(_e-Ne)*D;g[A++]=Be}}}return n.makeTensorInfo([h,u,c,f],"float32",g)}var tJ={kernelName:Xo,backendName:"cpu",kernelFunc:eJ};function nJ(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s;Ie([a,r],"resizeBilinearGrad");let i=v.computeStrides(r.shape),[l,u,c,h]=r.shape,[,d,p]=a.shape,f=new Float32Array(l*u*c*h),m=[o&&d>1?u-1:u,o&&p>1?c-1:c],g=[o&&d>1?d-1:d,o&&p>1?p-1:p],y=m[0]/g[0],x=m[1]/g[1],A=n.data.get(a.dataId).values,b=0;for(let w=0;w<l;w++){let S=w*i[0];for(let C=0;C<d;C++){let _=C*y,R=Math.floor(_),D=Math.min(Math.ceil(_),u-1),E=S+R*i[1],F=S+D*i[1],k=_-R,M=1-k;for(let z=0;z<p;z++){let W=z*x,H=Math.floor(W),j=Math.min(Math.ceil(W),c-1),Z=W-H,J=1-Z,Q=E+H*i[2],ae=E+j*i[2],ne=F+H*i[2],ie=F+j*i[2],ue=M*J,te=M*Z,oe=k*J,Ne=k*Z;for(let _e=0;_e<h;_e++){let Be=A[b++];f[Q+_e]+=Be*ue,f[ae+_e]+=Be*te,f[ne+_e]+=Be*oe,f[ie+_e]+=Be*Ne}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}var sJ={kernelName:x0,backendName:"cpu",kernelFunc:nJ};function rJ(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s;Ie(r,"resizeNearestNeighbor");let l=v.computeStrides(r.shape),[u,c]=i,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(h*u*c*f),y=[a&&u>1?d-1:d,a&&c>1?p-1:p],x=[a&&u>1?u-1:u,a&&c>1?c-1:c],A=y[0]/x[0],b=y[1]/x[1],w=0;for(let S=0;S<h;S++){let C=S*l[0];for(let _=0;_<u;_++){let R=o?A*(_+.5):A*_,D=Math.min(d-1,a?Math.round(R):Math.floor(R));o&&(D=Math.max(0,D));let E=C+D*l[1];for(let F=0;F<c;F++){let k=o?b*(F+.5):b*F,M=Math.min(p-1,a?Math.round(k):Math.floor(k));o&&(M=Math.max(0,M));let z=E+M*l[2];for(let W=0;W<f;W++){let H=m[z+W];g[w++]=H}}}}return n.makeTensorInfo([h,u,c,f],r.dtype,g)}var aJ={kernelName:qo,backendName:"cpu",kernelFunc:rJ};function oJ(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s;Ie([a,r],"resizeNearestNeighborGrad");let i=v.computeStrides(r.shape),l=v.computeStrides(a.shape),[u,c,h,d]=r.shape,[,p,f]=a.shape,m=new Float32Array(u*c*h*d),g=n.data.get(a.dataId).values,y=[o&&p>1?c-1:c,o&&f>1?h-1:h],x=[o&&p>1?p-1:p,o&&f>1?f-1:f],A=y[0]/x[0],b=y[1]/x[1],w=1/A,S=1/b,C=Math.ceil(w)*2+2,_=Math.ceil(S)*2+2;for(let R=0;R<u;R++){let D=R*i[0];for(let E=0;E<c;E++){let F=D+E*i[1],k=Math.floor(E*w),M=Math.floor(k-C/2);for(let z=0;z<h;z++){let W=F+z*i[2],H=Math.floor(z*S),j=Math.floor(H-_/2);for(let Z=0;Z<d;Z++){let J=0;for(let Q=0;Q<C;Q++){let ae=Q+M;if(ae<0||ae>=p)continue;let ne=D+ae*l[1],ie=ae*A,ue=Math.min(c-1,o?Math.round(ie):Math.floor(ie));if(E===ue)for(let te=0;te<_;te++){let oe=te+j;if(oe<0||oe>=f)continue;let Ne=ne+oe*l[2],_e=oe*b,Be=Math.min(h-1,o?Math.round(_e):Math.floor(_e));z===Be&&(J+=g[Ne+Z])}}m[W+Z]=J}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}var iJ={kernelName:A0,backendName:"cpu",kernelFunc:oJ};function lJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s;Ie(r,"reverse");let o=r.shape.length,i=v.parseAxisParam(a,r.shape);if(o===0)return ea({inputs:{x:r},backend:n});let l=new ln(r.shape,r.dtype),u=n.bufferSync(r);for(let c=0;c<l.size;c++){let h=l.indexToLoc(c),d=h.slice();i.forEach(p=>d[p]=r.shape[p]-1-d[p]),l.set(u.get(...d),...h)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}var uJ={kernelName:Ll,backendName:"cpu",kernelFunc:lJ},cJ={kernelName:Ql,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,l=v.getTypedArrayFromDType(s.dtype,v.sizeFromShape(s.shape)),[u,c,h,d]=s.shape,[p,f]=T.getImageCenter(o,c,h),m=255,g=Math.sin(r),y=Math.cos(r),x=i.data.get(s.dataId).values;for(let b=0;b<u;b++){let w=b*h*c*d;for(let S=0;S<c;S++){let C=S*(h*d);for(let _=0;_<h;_++){let R=_*d;for(let D=0;D<d;D++){let E=[u,S,_,D],F=E[2],k=E[1],M=(F-p)*y-(k-f)*g,z=(F-p)*g+(k-f)*y;M=Math.round(M+p),z=Math.round(z+f);let W=a;if(typeof a!="number"&&(D===3?W=m:W=a[D]),M>=0&&M<h&&z>=0&&z<c){let j=z*(h*d),Z=M*d,J=w+j+Z+D;W=x[J]}let H=w+C+R+D;l[H]=W}}}}return{dataId:i.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},dJ=ft(Bl,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),hJ={kernelName:Bl,backendName:"cpu",kernelFunc:dJ};function pJ(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=T.calculateShapes(a,r,o),d=!0,p=n.bufferSync(r),f=n.bufferSync(a),m=zu(p,f,o,h,u,l,i,c,0,d);return n.makeTensorInfo(o,m.dtype,m.values)}var fJ={kernelName:Wl,backendName:"cpu",kernelFunc:pJ};function mJ(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<t?n=r+1:s=r;return s}function gJ(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<=t?n=r+1:s=r;return s}function yJ(e,t,n,s,r,a){let o=v.getArrayFromDType("int32",n*r);for(let i=0;i<n;++i){let l=e.slice(i*s,(i+1)*s),u=i*r;for(let c=0;c<r;++c)o[u+c]=a==="left"?mJ(l,t[c+u]):gJ(l,t[c+u])}return o}function AJ(e){let{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:a}=t,{side:o}=s,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=yJ(i,l,r.shape[0],r.shape[1],a.shape[1],o);return n.makeTensorInfo(a.shape,"int32",u)}var xJ={kernelName:b0,backendName:"cpu",kernelFunc:AJ};function bJ(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t;Ie([s,r,a],"select");let o=s.shape.length,i=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=Fn(r.dtype,a.dtype),h=v.makeZerosTypedArray(v.sizeFromShape(r.shape),c),d=0,p=o===0||o>1||r.shape.length===1?1:v.sizeFromShape(r.shape.slice(1));for(let f=0;f<i.length;f++)for(let m=0;m<p;m++)i[f]===1?h[d++]=l[f]:h[d++]=u[f];return n.makeTensorInfo(r.shape,c,h)}var vJ={kernelName:Vl,backendName:"cpu",kernelFunc:bJ},wJ=T.SELU_SCALEALPHA,kJ=T.SELU_SCALE,SJ=ft(Dc,e=>e>=0?kJ*e:wJ*(Math.exp(e)-1)),IJ={kernelName:Dc,backendName:"cpu",kernelFunc:SJ},CJ=ft(Fc,e=>e<0?-1:e>0?1:0),TJ={kernelName:Fc,backendName:"cpu",kernelFunc:CJ},NJ=ft(Yo,e=>Math.sin(e)),EJ={kernelName:Yo,backendName:"cpu",kernelFunc:NJ},_J=ft(Gl,e=>Math.sinh(e)),RJ={kernelName:Gl,backendName:"cpu",kernelFunc:_J},$J=11920928955078125e-23,J3=Math.log($J)+2,DJ=ft(Oc,e=>{let t=e>-J3,n=e<J3,s=Math.exp(e),r;return n?r=s:t?r=e:r=Math.log(1+s),r}),FJ={kernelName:Oc,backendName:"cpu",kernelFunc:DJ};function OJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;Ie([r],"spaceToBatchND");let i=v.sizeFromShape(a),l=[[0,0]];l.push(...o);for(let S=1+a.length;S<r.shape.length;++S)l.push([0,0]);let u=T6.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=T.getReshaped(u.shape,a,i,!1),h=T.getPermuted(c.length,a.length,!1),d=T.getReshapedPermuted(u.shape,a,i,!1),m=It({inputs:{x:u},backend:n,attrs:{shape:c}}),x=ps({inputs:{x:m},backend:n,attrs:{perm:h}}),w=It({inputs:{x},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),w}var PJ={kernelName:Hl,backendName:"cpu",kernelFunc:OJ};function MJ(e){let{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:o}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);let i=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(o.dataId).values[0],[h,d,p,f,m]=s6(i,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var zJ={kernelName:zh,backendName:"cpu",kernelFunc:MJ};function LJ(e){let{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=Array.from(n.data.get(r.dataId).values),i=n.data.get(s.dataId).values,l=Array.from(n.data.get(a.dataId).values),[u,c,h]=r6(i,s.shape,s.dtype,o,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}var BJ={kernelName:Pc,backendName:"cpu",kernelFunc:LJ};function WJ(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");let o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[u,c]=B5(o,s.shape,s.dtype,i,l,!0);return n.makeTensorInfo(c,s.dtype,u)}var VJ={kernelName:Lh,backendName:"cpu",kernelFunc:WJ};function UJ(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");let o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[u,c]=B5(o,s.shape,s.dtype,i,l);return n.makeTensorInfo(c,s.dtype,u)}var GJ={kernelName:Bh,backendName:"cpu",kernelFunc:UJ};function HJ(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=T.calculateShapes(a,r,i),p=!1,f=n.bufferSync(r),m;switch(a.dtype){case"bool":{let g=n.bufferSync(a),y=Boolean(n.data.get(o.dataId).values[0]);m=zu(f,g,i,d,c,u,l,h,y,p);break}case"float32":{let g=n.bufferSync(a),y=n.data.get(o.dataId).values[0];m=zu(f,g,i,d,c,u,l,h,y,p);break}case"int32":{let g=n.bufferSync(a),y=n.data.get(o.dataId).values[0];m=zu(f,g,i,d,c,u,l,h,y,p);break}case"string":{let g=n.bufferSync(a),y=v.decodeString(n.data.get(o.dataId).values[0]);m=zu(f,g,i,d,c,u,l,h,y,p);break}default:throw new Error(`Unsupported type ${a.dtype}`)}return n.makeTensorInfo(i,m.dtype,m.values)}var jJ={kernelName:Wh,backendName:"cpu",kernelFunc:HJ};function qJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=v.parseAxisParam(o,r.shape)[0],l=T.prepareSplitSize(r,a,i),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map(h=>{let d=[...c];d[i]=h;let p=rl({inputs:{x:r},backend:n,attrs:{begin:u,size:d}});return u[i]+=h,p})}var XJ={kernelName:jl,backendName:"cpu",kernelFunc:qJ},KJ={kernelName:Mc,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,s=t;Ie(n,"square");let r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let i=0;i<r.length;++i){let l=r[i];a[i]=l*l}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},ZJ=ft(ai,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),YJ={kernelName:ai,backendName:"cpu",kernelFunc:ZJ};function JJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s;Ie(r,"stridedSlice");let{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=zt.sliceInfo(r.shape,a,o,i,l,u,c,h,d),w;if(m)w=It({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let S=zt.computeOutShape(x,A,b),C=rl({inputs:{x:r},backend:n,attrs:{begin:x,size:S}});w=It({inputs:{x:C},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(C)}else{let S=n.bufferSync(r),C=o6(p,S,b,x);w=n.makeTensorInfo(f,C.dtype,C.values)}return w}var QJ={kernelName:ql,backendName:"cpu",kernelFunc:JJ};function eQ(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=W5(d,p,r,a,o,i,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}var tQ={kernelName:zc,backendName:"cpu",kernelFunc:eQ};function nQ(e){let{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:o}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);let i=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values[0],[u,c,h]=V5(i,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}var sQ={kernelName:Vh,backendName:"cpu",kernelFunc:nQ};function rQ(e){let{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let o=n.data.get(a.dataId).values,i=U5(o,r);return n.makeTensorInfo(a.shape,"int32",i)}var aQ={kernelName:Uh,backendName:"cpu",kernelFunc:rQ},oQ=ft(Xl,e=>Math.tan(e)),iQ={kernelName:Xl,backendName:"cpu",kernelFunc:oQ},lQ=ft(ri,e=>Math.tanh(e)),uQ={kernelName:ri,backendName:"cpu",kernelFunc:lQ};function cQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;Ie(r,"tile");let o=l6(n.bufferSync(r),a);return n.makeTensorInfo(o.shape,o.dtype,o.values)}var dQ={kernelName:ka,backendName:"cpu",kernelFunc:cQ};function hQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s;Ie(r,"topk");let i=n.data.get(r.dataId).values,[l,u]=c6(i,r.shape,r.dtype,a,o);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}var pQ={kernelName:Kl,backendName:"cpu",kernelFunc:hQ};function fQ(e){let{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:u}=n,[c,h,d,p]=r.shape,[f,m]=u??[h,d],g=[c,f,m,p],y=v.computeStrides(r.shape),x=y[0],A=y[1],b=y[2],w=v.computeStrides(g),S=w[0],C=w[1],_=w[2],R=v.getTypedArrayFromDType(r.dtype,v.sizeFromShape(g));R.fill(l);let D=s.data.get(r.dataId).values,E=s.data.get(a.dataId).values;for(let k=0;k<c;++k){let M=a.shape[0]===1?E:E.subarray(k*8,k*8+8);for(let z=0;z<f;++z)for(let W=0;W<m;++W)for(let H=0;H<p;++H){let j,Z=M[6]*W+M[7]*z+1;if(Z===0)continue;let J=(M[0]*W+M[1]*z+M[2])/Z,Q=(M[3]*W+M[4]*z+M[5])/Z,ae=Q3(J,d,i),ne=Q3(Q,h,i);switch(o){case"nearest":j=bQ(D,h,d,x,A,b,k,ne,ae,H,l);break;case"bilinear":j=vQ(D,h,d,x,A,b,k,ne,ae,H,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}let ie=k*S+z*C+W*_+H;R[ie]=j}return s.makeTensorInfo(g,r.dtype,R)}return{dataId:s.write(R,g,r.dtype),shape:r.shape,dtype:r.dtype}}var mQ={kernelName:Zl,backendName:"cpu",kernelFunc:fQ};function Q3(e,t,n){switch(n){case"reflect":return gQ(e,t);case"wrap":return yQ(e,t);case"nearest":return xQ(e,t);case"constant":default:return AQ(e,t)}}function gQ(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let s=2*t;n<s&&(n=s*Math.trunc(-n/s)+n),n=n<-t?n+s:-n-1}else if(n>t-1)if(t<=1)n=0;else{let s=2*t;n-=s*Math.trunc(n/s),n>=t&&(n=s-n-1)}return v.clamp(0,n,t-1)}function yQ(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let s=t-1;n+=t*(Math.trunc(-n/s)+1)}else if(n>t-1)if(t<=1)n=0;else{let s=t-1;n-=t*Math.trunc(n/s)}return v.clamp(0,n,t-1)}function AQ(e,t){return e}function xQ(e,t){return v.clamp(0,e,t-1)}function Wd(e,t,n,s,r,a,o,i,l,u,c){let h=o*s+i*r+l*a+u;return 0<=i&&i<t&&0<=l&&l<n?e[h]:c}function bQ(e,t,n,s,r,a,o,i,l,u,c){let h=Math.round(i),d=Math.round(l);return Wd(e,t,n,s,r,a,o,h,d,u,c)}function vQ(e,t,n,s,r,a,o,i,l,u,c){let h=Math.floor(i),d=Math.floor(l),p=h+1,f=d+1,m=(f-l)*Wd(e,t,n,s,r,a,o,h,d,u,c)+(l-d)*Wd(e,t,n,s,r,a,o,h,f,u,c),g=(f-l)*Wd(e,t,n,s,r,a,o,p,d,u,c)+(l-d)*Wd(e,t,n,s,r,a,o,p,f,u,c);return(p-i)*m+(i-h)*g}function wQ(e){let{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;Ie(a,"unique");let o=s.data.get(a.dataId).values,{outputValues:i,outputShape:l,indices:u}=d6(o,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,i),s.makeTensorInfo([u.length],"int32",u)]}var kQ={kernelName:v0,backendName:"cpu",kernelFunc:wQ};function SQ(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r.shape.length,i=r.shape[a],l=new Array(o-1),u=0;for(let p=0;p<o;p++)p!==a&&(l[u++]=r.shape[p]);let c=new Array(o).fill(0),h=r.shape.slice();h[a]=1;let d=new Array(i);for(let p=0;p<d.length;p++){c[a]=p;let f=rl({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});d[p]=It({inputs:{x:f},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(f)}return d}var IQ={kernelName:Yl,backendName:"cpu",kernelFunc:SQ};function CQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:o}=s;Ie(r,"unsortedSegmentSum");let i=r.shape.length,l=a.shape.length,u=[],c=[],h=i-l,d=a;for(let f=0;f<h;++f){let m=Pm({inputs:{input:d},backend:n,attrs:{dim:f+1}});d=m,c.push(m)}for(let f=0;f<o;++f){let m=v.createScalarValue(f,"int32"),g=n.makeTensorInfo([],"int32",m),y=OC({inputs:{a:g,b:d},backend:n}),x=oo({inputs:{x:y},backend:n,attrs:{dtype:"float32"}}),A=Cg({inputs:{a:x,b:r},backend:n}),b=Cp({inputs:{x:A},backend:n,attrs:{axis:0,keepDims:!1}});u.push(b),c.push(g),c.push(y),c.push(x),c.push(A),c.push(b)}let p=C6({inputs:u,backend:n,attrs:{axis:0}});return c.forEach(f=>n.disposeIntermediateTensorInfo(f)),p}var TQ={kernelName:Gh,backendName:"cpu",kernelFunc:CQ},NQ=[CX,xq,NX,_X,Iq,$X,FX,PX,zX,BX,VX,GX,jX,KX,YX,eK,nK,rK,oK,SX,lK,cK,hK,fK,kq,Tq,gK,bq,AK,bK,vK,kK,IK,TK,EK,RK,DK,OK,MK,LK,WK,UK,HK,jK,XK,ZK,JK,QK,eZ,tZ,rZ,yX,oZ,Nq,fZ,Eq,mZ,Rq,vZ,wZ,SZ,Dq,TZ,EZ,RZ,DZ,OZ,Oq,Mq,vq,MZ,xK,LZ,WZ,UZ,AX,Lq,Wq,HZ,Uq,qZ,ZZ,JZ,tY,sY,aY,oY,Hq,lY,cY,hY,fY,gY,AY,bY,qq,wY,IY,EY,Kq,Yq,$Y,OY,zY,Qq,BY,VY,UY,T6,qY,bX,nX,KY,YY,wq,t2,QY,vX,wX,kX,tJ,sJ,aJ,iJ,uJ,cJ,hJ,rX,fJ,xJ,vJ,IJ,oX,TJ,EJ,RJ,iX,TY,FJ,PJ,zJ,BJ,VJ,GJ,jJ,XJ,cX,KJ,hX,YJ,QJ,tQ,sQ,aQ,gX,nZ,iQ,uQ,dQ,pQ,mQ,eX,kQ,IQ,TQ,WY];for(let e of NQ)Ir(e);var N6={};Ue(N6,{assertNotComplex:()=>nd,bindCanvasToFramebuffer:()=>LQ,bindColorTextureToFramebuffer:()=>tm,bindTextureToProgramUniformSampler:()=>U6,bindTextureUnit:()=>B6,bindVertexBufferToProgramAttribute:()=>s2,callAndCheck:()=>we,canBeRepresented:()=>E6,createFragmentShader:()=>$6,createFramebuffer:()=>L6,createProgram:()=>D6,createStaticIndexBuffer:()=>P6,createStaticVertexBuffer:()=>O6,createTexture:()=>M6,createVertexShader:()=>R6,getBatchDim:()=>al,getExtensionOrThrow:()=>Vd,getFramebufferErrorMessage:()=>G6,getMaxTexturesInShader:()=>X6,getNumChannels:()=>MQ,getProgramUniformLocation:()=>V6,getProgramUniformLocationOrThrow:()=>W6,getRowsCols:()=>ol,getShapeAs3D:()=>nm,getTextureShapeFromLogicalShape:()=>j6,getWebGLDisjointQueryTimerVersion:()=>K6,getWebGLErrorMessage:()=>_6,getWebGLMaxTextureSize:()=>q6,hasExtension:()=>Us,isCapableOfRenderingToFloatTexture:()=>Z6,isDownloadFloatTextureEnabled:()=>Y6,isReshapeFree:()=>bh,isWebGLFenceEnabled:()=>J6,isWebGLVersionEnabled:()=>a2,linkProgram:()=>F6,logShaderSourceAndInfoLog:()=>Z5,resetMaxTextureSize:()=>BQ,resetMaxTexturesInShader:()=>WQ,unbindColorTextureFromFramebuffer:()=>r2,unbindTextureUnit:()=>zQ,validateFramebuffer:()=>Ud,validateProgram:()=>em,validateTextureSize:()=>z6});var Oi={},Rf={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function X5(e,t){Oi[e]=t}function $r(e,t){if(!(e in Oi)||t!=null){let s=_Q(e,t);if(s!==null)Oi[e]=s;else return console.log("Could not get context for WebGL version",e),null}let n=Oi[e];return n==null||n.isContextLost()?(delete Oi[e],$r(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),Oi[e])}function EQ(e){if(typeof OffscreenCanvas<"u"&&e===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function _Q(e,t){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=t??EQ(e);return n.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete Oi[e]},!1),K().getBool("SOFTWARE_WEBGL_ENABLED")&&(Rf.failIfMajorPerformanceCaveat=!1),e===1?n.getContext("webgl",Rf)||n.getContext("experimental-webgl",Rf):n.getContext("webgl2",Rf)}var xh;(function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"})(xh||(xh={}));var Vs;(function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"})(Vs||(Vs={}));var wn;(function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(wn||(wn={}));function Tp(e,t){return[t,e]}function RQ(e,t){return e*t}function $f(e){let t=v.sizeFromShape(e),n=Math.ceil(t/4);return v.sizeToSquarishShape(n)}function td(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function $Q(e,t){let[n,s]=td(e,t);return n*s*4}function K5(e,t){let n=e,s,r,a,o,i,l,u,c,h,d;return K().getNumber("WEBGL_VERSION")===2?(s=n.R32F,r=n.R16F,a=n.RGBA16F,o=n.RGBA32F,i=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(s=e.RGBA,r=e.RGBA,a=e.RGBA,o=n.RGBA,i=e.RGBA,u=4,c=4,h=t!=null?t.HALF_FLOAT_OES:null,d=e.FLOAT,l=e.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function we(e,t){let n=t();return K().getBool("DEBUG")&&DQ(e),n}function DQ(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+_6(e,t))}var FQ=596e-10,OQ=65504;function E6(e){return!!(K().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||FQ<Math.abs(e)&&Math.abs(e)<OQ)}function _6(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Vd(e,t){return Ca(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function R6(e,t){let n=Ca(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(we(e,()=>e.shaderSource(n,t)),we(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function $6(e,t){let n=Ca(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(we(e,()=>e.shaderSource(n,t)),we(e,()=>e.compileShader(n)),K().get("ENGINE_COMPILE_ONLY"))return n;if(e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw Z5(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var PQ=/ERROR: [0-9]+:([0-9]+):/g;function Z5(e,t){let n=PQ.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let s=+n[1],r=e.split(`
`),a=r.length.toString().length+2,o=r.map((h,d)=>v.rightPad((d+1).toString(),a)+h),i=0;for(let h=0;h<o.length;h++)i=Math.max(o[h].length,i);let l=o.slice(0,s-1),u=o.slice(s-1,s),c=o.slice(s);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${v.rightPad(u[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function D6(e){return Ca(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function F6(e,t){if(we(e,()=>e.linkProgram(t)),!K().get("ENGINE_COMPILE_ONLY")&&e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function em(e,t){if(we(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function O6(e,t){let n=Ca(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return we(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),we(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function P6(e,t){let n=Ca(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return we(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),we(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function MQ(){return K().getNumber("WEBGL_VERSION")===2?1:4}function M6(e){return Ca(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function z6(e,t){let n=K().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let s=`[${e}x${t}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(e>n||t>n){let s=`[${e}x${t}]`,r=`[${n}x${n}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function L6(e){return Ca(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function s2(e,t,n,s,r,a,o){let i=e.getAttribLocation(t,n);return i===-1?!1:(we(e,()=>e.bindBuffer(e.ARRAY_BUFFER,s)),we(e,()=>e.vertexAttribPointer(i,r,e.FLOAT,!1,a,o)),we(e,()=>e.enableVertexAttribArray(i)),!0)}function B6(e,t,n){H6(e,n),we(e,()=>e.activeTexture(e.TEXTURE0+n)),we(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function zQ(e,t){H6(e,t),we(e,()=>e.activeTexture(e.TEXTURE0+t)),we(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function W6(e,t,n){return Ca(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function V6(e,t,n){return e.getUniformLocation(t,n)}function U6(e,t,n,s){we(e,()=>B6(e,t,s)),we(e,()=>e.uniform1i(n,s))}function LQ(e){we(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),we(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),we(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function tm(e,t,n){we(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),we(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function r2(e,t){we(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),we(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function Ud(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+G6(e,t))}function G6(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Ca(e,t,n){let s=we(e,()=>t());if(s==null)throw new Error(n);return s}function H6(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n){let r=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${r}.`)}}function al(e,t=2){return v.sizeFromShape(e.slice(0,e.length-t))}function ol(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function nm(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[al(e),...ol(e)]),t}function j6(e,t=!1){let n=K().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n=n*2,e=e.map((r,a)=>a>=e.length-2?v.nearestLargerEven(e[a]):e[a]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=v.squeezeShape(e).newShape);let s=v.sizeFromShape(e);if(e.length<=1&&s<=n)return[1,s];if(e.length===2&&e[0]<=n&&e[1]<=n)return e;if(e.length===3&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(e.length===3&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(e.length===4&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(e.length===4&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){let r=al(e),a=2,o=2;return e.length&&([a,o]=ol(e)),s=r*(a/2)*(o/2),v.sizeToSquarishShape(s).map(i=>i*2)}return v.sizeToSquarishShape(s)}function Df(e){return e%2===0}function bh(e,t){if(e=e.slice(-2),t=t.slice(-2),v.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let n=e.slice(-1)[0],s=t.slice(-1)[0];if(n===s||Df(n)&&Df(s)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&Df(e[0])&&Df(t[0])}var sm,rm;function q6(e){if(sm==null){let t=$r(e);sm=t.getParameter(t.MAX_TEXTURE_SIZE)}return sm}function BQ(){sm=null}function WQ(){rm=null}function X6(e){if(rm==null){let t=$r(e);rm=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,rm)}function K6(e){if(e===0)return 0;let t,n=$r(e);return Us(n,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:Us(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function Us(e,t){return e.getExtension(t)!=null}function a2(e){try{if($r(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function Z6(e){if(e===0)return!1;let t=$r(e);if(e===1){if(!Us(t,"OES_texture_float"))return!1}else if(!Us(t,"EXT_color_buffer_float"))return!1;return o2(t)}function Y6(e){if(e===0)return!1;let t=$r(e);if(e===1){if(!Us(t,"OES_texture_float")||!Us(t,"WEBGL_color_buffer_float"))return!1}else{if(Us(t,"EXT_color_buffer_float"))return o2(t);let s="EXT_color_buffer_half_float";if(Us(t,s)){let r=t.getExtension(s);return VQ(t,r)}return!1}return o2(t)}function o2(e){let t=K5(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let s=1,r=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,s,r,0,t.textureFormatFloat,t.textureTypeFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),o}function VQ(e,t){let n=K5(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s);let r=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(o),i}function J6(e){return e!==2?!1:$r(e).fenceSync!=null}function nd(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&v.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var $e=K();$e.registerFlag("HAS_WEBGL",()=>$e.getNumber("WEBGL_VERSION")>0);$e.registerFlag("WEBGL_VERSION",()=>a2(2)?2:a2(1)?1:0);$e.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);$e.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>$e.get("WEBGL_VERSION")===2);$e.registerFlag("WEBGL_CPU_FORWARD",()=>!0);$e.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);$e.registerFlag("WEBGL_PACK",()=>$e.getBool("HAS_WEBGL"));$e.registerFlag("WEBGL_PACK_NORMALIZATION",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_CLIP",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_PACK_REDUCE",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_LAZILY_UNPACK",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_CONV_IM2COL",()=>$e.getBool("WEBGL_PACK"));$e.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>q6($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>X6($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=$e.getNumber("WEBGL_VERSION");return e===0?0:K6(e)});$e.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>$e.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Xh.isMobile());$e.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>Z6($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>$e.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:$e.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));$e.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>Y6($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_FENCE_API_ENABLED",()=>J6($e.getNumber("WEBGL_VERSION")));$e.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>$e.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);$e.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});$e.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Xh.isMobile()?1:-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});$e.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);$e.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);$e.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);$e.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);$e.registerFlag("WEBGL_EXP_CONV",()=>!1);$e.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>$e.getBool("IS_TEST"));function ss(){let e,t,n,s,r,a,o,i,l,u;return K().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",n="out",s="in",r="texture",a="outputColor",o="out vec4 outputColor;",i=`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",s="varying",r="texture2D",a="gl_FragColor",o="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:a,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:l,defineRound:u}}function ou(e,t,n="index"){let s=v.computeStrides(t);return s.map((r,a)=>{let o=`int ${e[a]} = ${n} / ${r}`,i=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r}`:`index -= ${e[a]} * ${r}`;return`${o}; ${i};`}).join("")}function Tg(e,t,n="index"){let s=v.computeStrides(t);return s.map((r,a)=>{let o=`int ${e[a]} = ${n} / outShapeStrides[${a}]`,i=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`;return`${o}; ${i};`}).join("")}function UQ(e,t){let n=e.length,s=e.map(a=>`${t}[${a}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}function GQ(e,t,n="index"){let s=e.map((a,o)=>o),r=UQ(s,t);return r.map((a,o)=>{let i=`int ${e[o]} = ${n} / ${r[o]}`,l=o===r.length-1?`int ${e[o+1]} = ${n} - ${e[o]} * ${r[o]}`:`index -= ${e[o]} * ${r[o]}`;return`${i}; ${l};`}).join("")}function Y5(e){let t=v.computeStrides(e).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function J5(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var Q6=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:e8}=T;function HQ(e,t,n){let s=[];if(e.forEach(p=>{let f=v.sizeFromShape(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?s.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${p.name};`),s.push(`uniform int offset${p.name};`)),n.enableShapeUniforms){let{uniformShape:m}=Q5(n.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${p.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${p.name}Shape;`);break;default:break}s.push(`uniform ivec2 ${p.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break;default:break}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(p=>{s.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});let r=s.join(`
`),a=e.map(p=>jQ(p,t,n.packedInputs,n.enableShapeUniforms)).join(`
`),o=t.texShape,i=ss(),l=KQ(i),u,c,h=JQ(i);return t.isPacked?(u=qQ(t.logicalShape,o,n.enableShapeUniforms),c=YQ(i)):(u=XQ(t.logicalShape,o,n.enableShapeUniforms),c=ZQ(i)),n.packedInputs&&(h+=nee),[h,l,c,r,u,a,n.userCode].join(`
`)}function sd(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return fee(e,t);case 1:return gee(e,t);case 2:return Aee(e,t);case 3:return bee(e,t);case 4:return wee(e,t);case 5:return kee(e);case 6:return See(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function t8(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return pee(e);case 1:return mee(e,t);case 2:return yee(e,t);case 3:return xee(e,t);default:return vee(e,t)}}function jQ(e,t,n=!1,s){let r="";n?r+=t8(e,s):r+=sd(e,s);let a=e.shapeInfo.logicalShape,o=t.logicalShape;return a.length<=o.length&&(n?r+=Iee(e,t):r+=Cee(e,t)),r}function qQ(e,t,n){switch(e.length){case 0:return n8();case 1:return see(e,t,n);case 2:return dee(e,t,n);case 3:return aee(e,t,n);default:return iee(e,t,n)}}function XQ(e,t,n){switch(e.length){case 0:return n8();case 1:return ree(e,t,n);case 2:return hee(e,t,n);case 3:return oee(e,t,n);case 4:return lee(e,t,n);case 5:return uee(e,t);case 6:return cee(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function KQ(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function ZQ(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function YQ(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function JQ(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${QQ}
    ${eee}
    ${tee}
  `}var QQ=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,eee=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,tee=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,nee=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function n8(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function see(e,t,n){let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return s[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function ree(e,t,n){return t[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function aee(e,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function oee(e,t,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Tg(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let s=ou(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function iee(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2),o=a,i="",l="b, r, c";for(let u=2;u<e.length-1;u++)o*=e[e.length-u-1],i=`
      int b${u} = index / ${o};
      index -= b${u} * ${o};
    `+i,l=`b${u}, `+l;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${i}

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${e.length}(${l});
    }
  `}function lee(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Tg(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let s=ou(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function uee(e,t){let n=ou(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function cee(e,t){let n=ou(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function dee(e,t,n){let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(v.arraysEqual(e,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;let r=Math.ceil(e[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function hee(e,t,n){return v.arraysEqual(e,t)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function iu(e){return`offset${e}`}function pee(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),s=ss();return`
    vec4 ${n}() {
      return ${s.texture2D}(${t}, halfCR);
    }
  `}function fee(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;let[r,a]=e.shapeInfo.texShape;if(r===1&&a===1)return`
      float ${s}() {
        return sampleTexture(${n}, halfCR);
      }
    `;let o=iu(n);if(t)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${o});
      return sampleTexture(${n}, uv);
    }
  `;let[i,l]=e.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${i}, ${l}, ${o});
      return sampleTexture(${n}, uv);
    }
  `}function mee(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=ss();if(t)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${a.texture2D}(${n}, uv);
    }
  `;let o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${a.texture2D}(${n}, uv);
    }
  `}function gee(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${rd(e)}
      }
    `;let r=e.shapeInfo.texShape,a=r[0],o=r[1];if(o===1&&a===1)return`
      float ${s}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;let i=iu(n);return o===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);
        return sampleTexture(${n}, uv);
      }
    `:a===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${i});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${a}, ${o}, index + ${i});
      return sampleTexture(${n}, uv);
    }
  `}function yee(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,o=a[0],i=a[1],l=ss();if(a!=null&&v.arraysEqual(n,a))return t?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${o}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(t)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;let u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=Math.ceil(n[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function Aee(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape;if(a!=null&&v.arraysEqual(n,a)){if(t)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;let d=a[0],p=a[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `}let{newShape:o,keptDims:i}=v.squeezeShape(n),l=o;if(l.length<n.length){let d=ad(e,l),p=["row","col"];return`
      ${sd(d,t)}
      float ${r}(int row, int col) {
        return ${r}(${od(p,i)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${rd(e)}
      }
    `;let u=a[0],c=a[1],h=iu(s);return c===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${s}, uv);
    }
  `:u===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:t?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${h};
    vec2 uv = uvFromFlat(${u}, ${c}, index);
    return sampleTexture(${s}, uv);
  }
`}function xee(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(n[0]===1){let d=n.slice(1),p=[1,2],f=ad(e,d),m=["b","row","col"];return`
        ${t8(f,t)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${od(m,p)});
        }
      `}let i=ss();if(t)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `;let l=o[0],u=o[1],c=Math.ceil(n[2]/2),h=c*Math.ceil(n[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${h}, ${c}, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `}function bee(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[1]*n[2],o=n[2],{newShape:i,keptDims:l}=v.squeezeShape(n),u=i;if(u.length<n.length){let m=ad(e,u),g=["row","col","depth"];return`
        ${sd(m,t)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${od(g,l)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${a}, ${o}, 1)));
        ${rd(e)}
      }
    `;let c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===a&&p==null)return t?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(d===o&&p==null)return t?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `;let f=iu(s);return t?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * ${a} + col * ${o} + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${a} + col * ${o} + depth + ${f};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${s}, uv);
      }
  `}function vee(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=ss();if(t)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);
    }
  `;let a=e.shapeInfo.logicalShape,o=a.length,i=e.shapeInfo.texShape,l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],u=l[0],c=l[1],h=Math.ceil(a[o-1]/2),d=h*Math.ceil(a[o-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<o-1;m++)p=`int b${m}, `+p,d*=a[o-m-1],f=`b${m} * ${d} + `+f;return`
    vec4 ${s}(${p}) {
      int index = ${f};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});
      return ${r.texture2D}(${n}, uv);
    }
  `}function wee(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[3],o=n[2]*a,i=n[1]*o,{newShape:l,keptDims:u}=v.squeezeShape(n);if(l.length<n.length){let x=ad(e,l),A=["row","col","depth","depth2"];return`
      ${sd(x,t)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${od(A,u)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${o}, ${a}, 1)));
        ${rd(e)}
      }
    `;let c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(p===i&&c==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(p===a&&c==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;let y=iu(s);return t?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${y});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} +
          depth * ${a} + depth2;
      vec2 uv = uvFromFlat(${d}, ${p}, index + ${y});
      return sampleTexture(${s}, uv);
    }
  `}function kee(e){let t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],a=t[3]*r,o=t[2]*a,i=t[1]*o,{newShape:l,keptDims:u}=v.squeezeShape(t);if(l.length<t.length){let m=ad(e,l),g=["row","col","depth","depth2","depth3"];return`
      ${sd(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${od(g,u)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${o}, ${a}, ${r})) +
          depth3;
        ${rd(e)}
      }
    `;let c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===i&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${a}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(p===r&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;let f=iu(n);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} + depth * ${a} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${p}, index);
      return sampleTexture(${n}, uv);
    }
  `}function See(e){let t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:a}=v.squeezeShape(t);if(r.length<t.length){let g=ad(e,r),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${sd(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${od(y,a)});
      }
    `}let o=t[5],i=t[4]*o,l=t[3]*i,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${u}, ${l}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${rd(e)}
      }
    `;let h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${i}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===o&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;let m=iu(n);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${u} + depth * ${l} +
          depth2 * ${i} + depth3 * ${o} + depth4 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function rd(e){let t=e.name,n=v.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function Iee(e,t){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=e8(e.shapeInfo.logicalShape,t.logicalShape),l=yt(o),u=o-a,c,h=["x","y","z","w","u","v"];a===0?c="":o<2&&i.length>=1?c="coords = 0;":c=i.map(x=>`coords.${h[x+u]} = 0;`).join(`
`);let d="";o<2&&a>0?d="coords":d=e.shapeInfo.logicalShape.map((x,A)=>`coords.${h[A+u]}`).join(", ");let p="return outputValue;",m=v.sizeFromShape(e.shapeInfo.logicalShape)===1,y=v.sizeFromShape(t.logicalShape)===1;if(a===1&&!m&&!y)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!y)o===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(i.length){let x=a-2,A=a-1;i.indexOf(x)>-1&&i.indexOf(A)>-1?p="return vec4(outputValue.x);":i.indexOf(x)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(A)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${l} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${s}(${d});
      ${p}
    }
  `}function Cee(e,t){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=t.texShape,o=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===l&&e.shapeInfo.flatOffset==null&&v.arraysEqual(o,a))return`
      float ${r}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let u=yt(l),c=e8(e.shapeInfo.logicalShape,t.logicalShape),h=l-i,d,p=["x","y","z","w","u","v"];i===0?d="":l<2&&c.length>=1?d="coords = 0;":d=c.map(m=>`coords.${p[m+h]} = 0;`).join(`
`);let f="";return l<2&&i>0?f="coords":f=e.shapeInfo.logicalShape.map((m,g)=>`coords.${p[g+h]}`).join(", "),`
    float ${r}() {
      ${u} coords = getOutputCoords();
      ${d}
      return get${s}(${f});
    }
  `}function yt(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Q5(e,t,n){let{newShape:s,keptDims:r}=v.squeezeShape(t),a=t.length,o=e&&a===3&&t[0]===1,i=o?t.slice(1):s,l=!e&&a>1&&!v.arraysEqual(t,n)&&s.length<a||o;return{useSqueezeShape:l,uniformShape:l?i:t,keptDims:r}}function ad(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function od(e,t){return t.map(n=>e[n]).join(", ")}function Tee(e,t,n,s){let r=n.map((c,h)=>{let d={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(d.flatOffset=c.texData.slice.flatOffset),{name:t.variableNames[h],shapeInfo:d}}),a=r.map(c=>c.shapeInfo),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},i=HQ(r,o,t),l=$6(e.gl,i),u=e.createProgram(l);return K().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:i,webGLProgram:u,inShapeInfos:a,outShapeInfo:o,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:i,webGLProgram:u,inShapeInfos:a,outShapeInfo:o},s8(e,t,u))}function s8(e,t,n){let s={},r={},a={},o=[],i,l,u,c=null,h=null;h=e.getUniformLocation(n,"NAN",!1),K().getNumber("WEBGL_VERSION")===1&&(c=e.getUniformLocation(n,"INFINITY",!1));let d=!1;for(let p=0;p<t.variableNames.length;p++){let f=t.variableNames[p];s[f]=e.getUniformLocation(n,f,d),s[`offset${f}`]=e.getUniformLocation(n,`offset${f}`,d),t.enableShapeUniforms&&(r[`${f}Shape`]=e.getUniformLocation(n,`${f}Shape`,d),a[`${f}TexShape`]=e.getUniformLocation(n,`${f}TexShape`,d))}return t.enableShapeUniforms&&(i=e.getUniformLocation(n,"outShape",d),u=e.getUniformLocation(n,"outShapeStrides",d),l=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach((p,f)=>{o[f]=e.getUniformLocation(n,p.name,d)}),{uniformLocations:s,customUniformLocations:o,infLoc:c,nanLoc:h,inShapesLocations:r,inTexShapesLocations:a,outShapeLocation:i,outShapeStridesLocation:u,outTexShapeLocation:l}}function ew(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((n,s)=>{let r=n.logicalShape,a=t[s],o=a.shape;if(!v.arraysEqual(r,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${o} must match`);if(n.isUniform&&a.isUniform)return;let i=n.texShape,l=a.isUniform?null:a.texData.texShape;if(!v.arraysEqual(i,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${l} must match`)})}function Nee(e,t,n,s,r){t.program.enableShapeUniforms||(ew(t.inShapeInfos,n),ew([t.outShapeInfo],[s]));let a=s.texData.texture,o=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,o[0],o[1]):e.setOutputMatrixTexture(a.texture,o[0],o[1]),e.setProgram(t.webGLProgram),K().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((l,u)=>{let c=t.program.variableNames[u],h=t.uniformLocations[c],d=t.uniformLocations[`offset${c}`],p=t.inShapesLocations[`${c}Shape`],f=t.inTexShapesLocations[`${c}TexShape`];if(p){let{uniformShape:m}=Q5(t.program.packedInputs,l.shape,l.texData.texShape);switch(m.length){case 1:e.gl.uniform1iv(p,new Int32Array(m));break;case 2:e.gl.uniform2iv(p,new Int32Array(m));break;case 3:e.gl.uniform3iv(p,new Int32Array(m));break;case 4:e.gl.uniform4iv(p,new Int32Array(m));break;default:break}}if(f&&e.gl.uniform2i(f,l.texData.texShape[0],l.texData.texShape[1]),h!=null){if(l.isUniform){if(v.sizeFromShape(l.shape)<2)e.gl.uniform1f(h,l.uniformValues[0]);else{let m=l.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),e.gl.uniform1fv(h,m)}return}l.texData.slice!=null&&d!=null&&e.gl.uniform1i(d,l.texData.slice.flatOffset),e.setInputMatrixTexture(l.texData.texture.texture,h,u)}});let i=t.outShapeLocation;if(i)switch(s.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(s.shape));break;default:break}if(t.outShapeStridesLocation){let l=v.computeStrides(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break;default:break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach((l,u)=>{let c=t.customUniformLocations[u],h=r[u];if(l.type==="float")e.gl.uniform1fv(c,h);else if(l.type==="vec2")e.gl.uniform2fv(c,h);else if(l.type==="vec3")e.gl.uniform3fv(c,h);else if(l.type==="vec4")e.gl.uniform4fv(c,h);else if(l.type==="int")e.gl.uniform1iv(c,h);else if(l.type==="ivec2")e.gl.uniform2iv(c,h);else if(l.type==="ivec3")e.gl.uniform3iv(c,h);else if(l.type==="ivec4")e.gl.uniform4iv(c,h);else throw Error(`uniform type ${l.type} is not supported yet.`)}),e.executeProgram()}function Eee(e,t,n){let s="";t.concat(n).forEach(o=>{let i=o.texData!=null&&o.texData.slice!=null&&o.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!o.isUniform){let l=o.texData.texShape,{useSqueezeShape:u,uniformShape:c,keptDims:h}=Q5(e.packedInputs,o.shape,l),d="",p="",f="";if(c.length===1&&e.packedInputs){let w=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${w[0]>1}_${w[1]>1}`}else if(c.length===2&&!e.packedInputs)p=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!e.packedInputs){let w=v.computeStrides(c);f=`${w[0]===l[1]}_${w[w.length-1]===l[1]}`}let m=o.shape.length,g=c.length===2&&v.arraysEqual(o.shape,l),y=v.sizeFromShape(o.shape)===1,x=T.getBroadcastDims(o.shape,n.shape),A=!e.packedInputs&&m===n.shape.length&&v.arraysEqual(l,n.texData.texShape),b=e.packedInputs||c.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${m}_${A}_${u?h:""}_${c.length}_${y}_${x}_${g}_${d}_${p}_${f}_${b}_${i}`}else{let l=o.isUniform?"uniform":o.texData.texShape;s+=`${o.shape}_${l}_${i}`}});let r=e.userCode,a=e.constructor.name;return a+="_"+s+"_"+r+`${K().getNumber("WEBGL_VERSION")}`,a}function rs(e){return K().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var _ee=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=xh.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=ss();this.outputShape=e,this.enableShapeUniforms=rs(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Tg(["r","c","d"],e):ou(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},Ree=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=xh.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=ss();this.outputShape=e,this.enableShapeUniforms=rs(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Tg(["r","c","d"],e):ou(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},$ee=class{constructor(e){this.variableNames=["A"],this.outTexUsage=Vs.DOWNLOAD;let t=ss();this.outputShape=e,this.userCode=`
      ${Q6}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},Dee=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Vs.DOWNLOAD;let t=ss();this.outputShape=e,this.userCode=`
      ${Q6}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},Fee=class{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=ss();this.outputShape=e,this.enableShapeUniforms=rs(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?J5():Y5(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${s}, 0., 0., 0.);
      }
    `}},Oee=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=ss();this.outputShape=e,this.enableShapeUniforms=rs(this.outputShape.length);let s="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let o=0;o<=1;o++){let i=a*2+o;s+=`
          localCoords = coords;
          if(localCoords[2] + ${o} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${o};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${i}] = values[0];
            } else if (offset == 1) {
              result[${i}] = values[1];
            } else if (offset == 2) {
              result[${i}] = values[2];
            } else {
              result[${i}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?J5():Y5(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${s}

          ${n.output} = ${r};
        }
    `}},r8={};Ue(r8,{bindVertexProgramAttributeStreams:()=>p8,createBufferFromOutputTexture:()=>g8,createFloat16MatrixTexture:()=>u8,createFloat16PackedMatrixTexture:()=>h8,createFloat32MatrixTexture:()=>l8,createIndexBuffer:()=>i8,createPackedMatrixTexture:()=>d8,createUnsignedBytesMatrixTexture:()=>c8,createVertexBuffer:()=>o8,createVertexShader:()=>a8,downloadByteEncodedFloatMatrixFromOutputTexture:()=>A8,downloadFloat32MatrixFromBuffer:()=>y8,downloadMatrixFromPackedOutputTexture:()=>b8,downloadPackedMatrixFromBuffer:()=>x8,getInternalFormatForFloat16MatrixTexture:()=>tv,getInternalFormatForFloat16PackedMatrixTexture:()=>rv,getInternalFormatForFloat32MatrixTexture:()=>ev,getInternalFormatForPackedMatrixTexture:()=>sv,getInternalFormatForUnsignedBytesMatrixTexture:()=>nv,uploadDenseMatrixToTexture:()=>f8,uploadPixelDataToTexture:()=>m8});function a8(e){let t=ss(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return R6(e,n)}function o8(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return O6(e,t)}function i8(e){let t=new Uint16Array([0,1,2,2,1,3]);return P6(e,t)}function Np(e,t,n,s,r,a){z6(t,n);let o=M6(e),i=e.TEXTURE_2D;return we(e,()=>e.bindTexture(i,o)),we(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),we(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),we(e,()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST)),we(e,()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST)),K().getNumber("WEBGL_VERSION")===1?we(e,()=>e.texImage2D(i,0,s,t,n,0,r,a,null)):we(e,()=>e.texStorage2D(i,1,s,t,n)),we(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:o,texShape:[n,t]}}function ev(e){return e.internalFormatFloat}function l8(e,t,n,s){let[r,a]=Tp(t,n);return Np(e,r,a,ev(s),s.textureFormatFloat,e.FLOAT)}function tv(e){return e.internalFormatHalfFloat}function u8(e,t,n,s){let[r,a]=Tp(t,n);return Np(e,r,a,tv(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function nv(e){return e.downloadTextureFormat}function c8(e,t,n,s){let[r,a]=Tp(t,n);return Np(e,r,a,nv(s),e.RGBA,e.UNSIGNED_BYTE)}function sv(e){return e.internalFormatPackedFloat}function d8(e,t,n,s){let[r,a]=td(t,n);return Np(e,r,a,sv(s),e.RGBA,e.FLOAT)}function rv(e){return e.internalFormatPackedHalfFloat}function h8(e,t,n,s){let[r,a]=td(t,n);return Np(e,r,a,rv(s),e.RGBA,s.textureTypeHalfFloat)}function p8(e,t,n){return we(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),s2(e,t,"clipSpacePos",n,3,20,0)&&s2(e,t,"uv",n,2,20,12)}function f8(e,t,n,s,r,a){we(e,()=>e.bindTexture(e.TEXTURE_2D,t));let o,i,l;r instanceof Uint8Array?(o=new Uint8Array(n*s*4),i=e.UNSIGNED_BYTE,l=e.RGBA):(o=new Float32Array(n*s*4),i=e.FLOAT,l=a.internalFormatPackedFloat),o.set(r),K().getNumber("WEBGL_VERSION")===2?we(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,i,o)):we(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,s,0,e.RGBA,i,o)),we(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function m8(e,t,n){we(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?K().getNumber("WEBGL_VERSION")===2?we(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):we(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):K().getNumber("WEBGL_VERSION")===2?we(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):we(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),we(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function g8(e,t,n,s){let r=e.createBuffer();we(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r));let i=4*4*t*n;return we(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ)),we(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),we(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),r}function y8(e,t,n){let s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function A8(e,t,n,s){let[r,a]=Tp(t,n),o=4,i=new Uint8Array(RQ(t*n,o));return we(e,()=>e.readPixels(0,0,r,a,s.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function x8(e,t,n,s,r,a,o,i){let l=e,u=new Float32Array($Q(a,o));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function b8(e,t,n){let s=new Float32Array(t*n*4);return we(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s)),s}var nh=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=K().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,X5(t,e)):this.gl=$r(t);let n="WEBGL_color_buffer_float",s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),K().getNumber("WEBGL_VERSION")===1){let r="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=Vd(this.gl,r),Us(this.gl,a))this.textureHalfFloatExtension=Vd(this.gl,a);else if(K().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Us(this.gl,s))this.colorBufferHalfFloatExtension=Vd(this.gl,s);else if(K().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Us(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(Us(this.gl,s))this.colorBufferHalfFloatExtension=this.gl.getExtension(s);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=o8(this.gl),this.indexBuffer=i8(this.gl),this.framebuffer=L6(this.gl),this.textureConfig=K5(this.gl,this.textureHalfFloatExtension)}get debug(){return K().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;we(e,()=>e.finish()),we(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),we(e,()=>e.deleteFramebuffer(this.framebuffer)),we(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),we(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),we(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),l8(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),u8(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),c8(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),m8(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),f8(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),h8(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),d8(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(r2(this.gl,this.framebuffer),this.outputTexture=null),we(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>A8(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,s,r,a){return x8(this.gl,e,t,n,s,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return y8(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let s=g8(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(K().getBool("WEBGL_FENCE_API_ENABLED")){let s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let a=s.clientWaitSync(r,0,0);return a===s.ALREADY_SIGNALED||a===s.CONDITION_SATISFIED},t=r}else K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>b8(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=a8(t));let n=D6(t);return we(t,()=>t.attachShader(n,this.vertexShader)),we(t,()=>t.attachShader(n,e)),F6(t,n),this.debug&&em(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=p8(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&we(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&em(this.gl,this.program),we(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?W6(this.gl,e,t):V6(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),we(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),U6(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[s,r]=td(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&em(this.gl,this.program),Ud(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),we(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),we(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Vd(this.gl,K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,s=this.getQueryTimerExtensionWebGL2(),r=n.createQuery();return n.beginQuery(s.TIME_ELAPSED_EXT,r),r}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await v.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,s=this.getQueryTimerExtensionWebGL2(),r=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),s=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=Pee(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&v.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),tm(this.gl,e,this.framebuffer),this.debug&&Ud(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(tm(this.gl,this.outputTexture,this.framebuffer),this.debug&&Ud(this.gl)):r2(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let s=this.gl;tm(s,e,this.framebuffer),this.debug&&Ud(s),this.outputTexture=e,we(s,()=>s.viewport(0,0,t,n)),we(s,()=>s.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),we(this.gl,()=>this.gl.scissor(e,t,n,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function Pee(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:Mee,bincountImpl:v8,bincountReduceImpl:zee,castImpl:Lee,ceilImpl:Bee,concatImpl:Wee,equalImpl:Vee,expImpl:Uee,expm1Impl:Gee,floorImpl:Hee,gatherNdImpl:jee,gatherV2Impl:qee,greaterImpl:Xee,greaterEqualImpl:Kee,lessImpl:Zee,lessEqualImpl:Yee,linSpaceImpl:Jee,logImpl:Qee,maxImpl:ete,maximumImpl:tte,minimumImpl:nte,multiplyImpl:ste,negImpl:rte,notEqualImpl:ate,prodImpl:ote,raggedTensorToTensorImpl:ite,rangeImpl:lte,rsqrtImpl:ute,scatterImpl:cte,sigmoidImpl:dte,simpleAbsImpl:w8,sliceImpl:hte,sparseFillEmptyRowsImpl:pte,sparseReshapeImpl:fte,sparseSegmentReductionImpl:k8,sqrtImpl:mte,stridedSliceImpl:gte,stringNGramsImpl:yte,stringSplitImpl:Ate,stringToHashBucketFastImpl:xte,subImpl:bte,tileImpl:vte,topKImpl:wte,transposeImpl:av,uniqueImpl:kte}=D5;function S8(e,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${e}.${n}`)}function Jn(e,t){return t===1?[e]:S8(e,t)}function Ste(e,t){if(e===1)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}var Ite=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=rs(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=Jn("rc",this.rank),n=yt(this.rank),s=this.getOutOfBoundsCondition(t),r=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let s=0;s<=1;s++){let r=`${n===0?"r":"rp1"}, ${s===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)r=`${e[e.length-1-a]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${s};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}},I8=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=rs(this.outputShape.length);let n="";for(let s=0;s<4;s++){let r="thisRC = rc;";s%2===1&&(r+="thisRC.z += 1;"),s>1&&(r+="thisRC.y += 1;"),n+=`
        ${r}
        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${s}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${s>0?"}":""}
      `}this.userCode=`
      ${Cte(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?J5():Y5(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function Cte(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?GQ(["r","c","d"],"inputShape"):ou(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var Tte=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let s=nw(t,n),r=sw(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);let a=tw(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let i=this.freeTextures[r].shift();return this.usedTextures[r].push(i),i}let o;return s===wn.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===wn.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===wn.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===wn.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===wn.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(o),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),o}releaseTexture(e,t,n,s){if(this.freeTextures==null)return;let r=nw(n,s),a=sw(t,r,s);a in this.freeTextures||(this.freeTextures[a]=[]);let o=tw(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),i=K().get("WEBGL_DELETE_TEXTURE_THRESHOLD");i!==-1&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;let l=this.usedTextures[a],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function Nte(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function tw(e,t,n,s,r){let a=Ete(t,s),o;if(r){let[l,u]=td(e[0],e[1]);o=l*u}else{let[l,u]=Tp(e[0],e[1]);o=l*u}let i=Nte(n,a);return o*i}function Ete(e,t){switch(e){case wn.PACKED_2X2_FLOAT32:return sv(t);case wn.PACKED_2X2_FLOAT16:return rv(t);case wn.UNPACKED_FLOAT32:return ev(t);case wn.UNPACKED_FLOAT16:return tv(t);case wn.PACKED_4X1_UNSIGNED_BYTE:return nv(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function _te(e){return K().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?wn.PACKED_2X2_FLOAT32:wn.UNPACKED_FLOAT32:e?wn.PACKED_2X2_FLOAT16:wn.UNPACKED_FLOAT16}function nw(e,t){if(e===Vs.UPLOAD)return wn.PACKED_2X2_FLOAT32;if(e===Vs.RENDER||e==null)return _te(t);if(e===Vs.DOWNLOAD||e===Vs.PIXELS)return wn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function sw(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var ha=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=rs(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},ir="if (isnan(x)) return x;",Rte="return x;",rw="return abs(x);",$te="return (x >= 0.0) ? x : (exp(x) - 1.0);",Dte=ir+`
  return (x < 0.0) ? 0.0 : x;
`,Fte=ir+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Eu="return x;",Ote="return 1.0 / (1.0 + exp(-1.0 * x));",Pte="return x;",Mte=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,zte=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Lte=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Bte="return 1.0 / (1.0 + exp(-1.0 * x));",Li=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=rs(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},Wte=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=rs(this.outputShape.length);let t=e.length,n=Jn("rc",t),s=yt(t),r=Ste(t,n),a=n.slice(-2),o=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${s} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${o}));
      }
    `}},Vte=ar.whereImpl,Ute=1e-7,Gte=1e-4,Ff={};function Hte(e){return e in Ff||(Ff[e]={}),Ff[e]}var jte=K().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),qte=600;function Xte(){return K().global.screen==null?1024:K().global.screen.height*K().global.screen.width*window.devicePixelRatio*qte/1024/1024}var Ep=class extends pc{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!K().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof nh)t=e;else{let n=$r(K().getNumber("WEBGL_VERSION"),e);t=new nh(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let n=$r(K().getNumber("WEBGL_VERSION"));t=new nh(n),this.binaryCache=Hte(K().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Tte(this.gpgpu),this.numMBBeforeWarning=Xte(),this.texData=new Th(this,bn())}nextDataId(){return Ep.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((K().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||K().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:Vs.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,s,r){if(K().getBool("DEBUG")&&this.checkNumericalProblems(t),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:Vs.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:a,shape:o,isPacked:i}=t;if(a!=null){let h;i?h=new Li(o,Eu):h=new ha(o,Eu);let d=this.runWebGLProgram(h,[{dataId:e,shape:o,dtype:s}],s),p=this.readSync(d.dataId);return this.disposeIntermediateTensorInfo(d),p}if(n!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return n;let l=this.activeTimers!=null,u;l&&(u=v.now());let c;if(s==="complex64"){let h=this.readSync(r.real.dataId),d=this.readSync(r.imag.dataId);c=T.mergeRealAndImagArrays(h,d)}else c=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=v.now()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){let p=this.pendingRead.get(e);return new Promise(f=>p.push(f))}let t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:a,complexTensorInfos:o,isPacked:i}=t;if(r!=null){let p;i?p=new Li(s,Eu):p=new ha(s,Eu);let f=this.runWebGLProgram(p,[{dataId:e,shape:s,dtype:a}],a),m=this.read(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(n!=null)return this.convertAndCacheOnCPU(e);if(K().getBool("DEBUG")&&!K().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&K().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,u;if(a!=="complex64"&&K().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);let p=this.texData.get(u.dataId);l=this.gpgpu.createBufferFromTexture(p.texture.texture,...$f(s))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let c;if(a==="complex64"){let p=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),f=p[0],m=p[1];c=T.mergeRealAndImagArrays(f,m)}else if(l==null)c=this.getValuesFromTexture(e);else{let p=v.sizeFromShape(s);c=this.gpgpu.downloadFloat32MatrixFromBuffer(l,p)}if(u!=null&&this.disposeIntermediateTensorInfo(u),l!=null){let p=this.gpgpu.gl;we(p,()=>p.deleteBuffer(l))}let h=this.convertAndCacheOnCPU(e,c),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach(p=>p(h)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&bn().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){let n=this.texData.get(e),{values:s,shape:r,slice:a,dtype:o,isPacked:i,texture:l}=n;if(o==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let d;i?d=new Li(r,Eu):d=new ha(r,Eu);let p=this.runWebGLProgram(d,[{dataId:e,shape:r,dtype:o}],o),f=this.readToGPU(p,t);return this.disposeIntermediateTensorInfo(p),f}if(l==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=this.decode(e,t.customTexShape),c=bn().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(s=>v.decodeString(s));return Le(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Le(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!E6(n))throw K().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=v.sizeFromShape(t);if(K().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let h=this.decode(e),d=this.texData.get(h.dataId),p=this.gpgpu.downloadMatrixFromPackedTexture(d.texture.texture,...$f(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(h),p}let a=K().getBool("WEBGL_PACK")&&s===!0,o=a?nm(t):t,i=a?new Dee(o):new $ee(o),l=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=v.flatten(this.activeTimers.map(i=>i.query)).filter(i=>i!=null),a=v.flatten(this.activeTimers.map(i=>i.name)).filter(i=>i!=null);this.activeTimers=t,s&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let i=await Promise.all(r);o.kernelMs=v.sum(i),o.getExtraProfileInfo=()=>i.map((l,u)=>({name:a[u],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:v.now(),endMs:null}}endTimer(e){return K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=v.now(),e)}async getQueryTime(e){if(K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:s,usage:r,isPacked:a,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,l=this.dataRefCount.get(i);l>1?this.dataRefCount.set(i,l-1):(this.dataRefCount.delete(i),t!=null&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,a)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=jte){return K().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&v.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){T.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return Vte(e.shape,t)}packedUnaryOp(e,t,n){let s=new Li(e.shape,t),r=this.compileAndRun(s,[e],n);return bn().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let s=w8(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(K().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,rw,e.dtype);let t=new ha(e.shape,rw),n=this.compileAndRun(t,[e]);return bn().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&v.isString(n[0])){let r=n.map(a=>v.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){return bn().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){let t=new Wte(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new Ite(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[al(e.shape),...ol(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[al(t),...ol(t)],a=new I8(r,n),o=!0,i=[n],l=this.runWebGLProgram(a,[s],e.dtype,i,o);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:s,shape:r,dtype:a}=n;if(t!=null){let h=v.sizeFromShape(r),d=t[0]*t[1]*4;v.assert(h<=d,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let o=nm(r),i;s?i=new Ree(o):i=new _ee(o);let l=!0,u=[t??$f(o)],c=this.runWebGLProgram(i,[{shape:o,dtype:a,dataId:e}],a,u,l,t);return{dtype:a,shape:r,dataId:c.dataId}}runWebGLProgram(e,t,n,s,r=!1,a){let o=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(o.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===xh.DENSE){let g=a??$f(e.outputShape);i.texShape=g.map(y=>y*2)}if(e.outTexUsage!=null&&(i.usage=e.outTexUsage),v.sizeFromShape(o.shape)===0)return i.values=v.getTypedArrayFromDType(o.dtype,0),o;let l=[],u=t.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let y=this.texData.get(g.dataId);if(y.texture==null){if(!e.packedInputs&&v.sizeFromShape(g.shape)<=K().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:y.values};e.packedInputs&&(y.isPacked=!0,y.shape=g.shape)}if(this.uploadToGPU(g.dataId),!!y.isPacked!=!!e.packedInputs)g=y.isPacked?this.unpackTensor(g):this.packTensor(g),l.push(g),y=this.texData.get(g.dataId);else if(y.isPacked&&!bh(y.shape,g.shape)){let x=g,A=g.shape;g.shape=y.shape,g=this.packedReshape(g,A),l.push(g),y=this.texData.get(g.dataId),x.shape=A}return{shape:g.shape,texData:y,isUniform:!1}});this.uploadToGPU(o.dataId);let c={shape:o.shape,texData:i,isUniform:!1},h=Eee(e,u,c),d=this.getAndSaveBinary(h,()=>Tee(this.gpgpu,e,u,c)),p=this.activeTimers!=null,f;p&&(f=this.startTimer()),K().get("ENGINE_COMPILE_ONLY")||Nee(this.gpgpu,d,u,c,s),l.forEach(g=>this.disposeIntermediateTensorInfo(g)),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));let m=K().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let g=v.now();g-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!K().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&r===!1){let g=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),g}return o}compileAndRun(e,t,n,s,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,s,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(K().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=Y(()=>{if(!K().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=K().getBool("DEBUG");K().set("DEBUG",!1);let t=this.abs(Ee(1e-8)).dataSync()[0];if(K().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?Ute:Gte}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:a,usage:o,isPacked:i}=t;if(a!=null)return;let l=this.activeTimers!=null,u;l&&(u=v.now());let c=t.texShape;if(c==null&&(c=j6(n,i),t.texShape=c),r!=null){let h=nm(n),d,p=c[1],f=c[0],m=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(i||!m)&&([p,f]=td(c[0],c[1])),i?d=new Oee(h,m):d=new Fee(h,m);let g=m?[f,p]:c,y=this.makeTensorInfo(g,s),x=this.texData.get(y.dataId);m?x.usage=Vs.PIXELS:x.usage=Vs.UPLOAD,x.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),p,f,r);let A=[[f,p]],b=!0,w=this.runWebGLProgram(d,[y],s,A,b),S=this.texData.get(w.dataId);t.texShape=S.texShape,t.isPacked=S.isPacked,t.usage=S.usage,K().get("ENGINE_COMPILE_ONLY")?this.disposeData(w.dataId):(t.texture=S.texture,t.values=null,this.texData.delete(w.dataId)),this.disposeIntermediateTensorInfo(y),l&&(this.uploadWaitMs+=v.now()-u)}else{let h=this.acquireTexture(c,o,s,i);t.texture=h}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:s}=n;return this.releaseGPUData(e),t!=null&&(n.values=Kte(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*v.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise(s=>{try{this.checkCompletion_(t),s(!0)}catch(r){throw r}});e.push(n)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await eb(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(Z5(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,e]of Object.entries(this.binaryCache)){let{uniformLocations:t,customUniformLocations:n,infLoc:s,nanLoc:r,inShapesLocations:a,inTexShapesLocations:o,outShapeLocation:i,outShapeStridesLocation:l,outTexShapeLocation:u}=s8(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=s,e.nanLoc=r,e.inShapesLocations=a,e.inTexShapesLocations=o,e.outShapeLocation=i,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}};Ep.nextDataId=0;function Kte(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let n=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let s=0;s<n.length;++s)n[s]=Math.round(e[s]);return n}else throw new Error(`Unknown dtype ${t}`)}var Zte="3.20.0";function C8(){K().set("WEBGL_FORCE_F16_TEXTURES",!0)}Xh.isBrowser()&&Lc("webgl",()=>new Ep,2);var Yte={forceHalfFloat:C8},T8=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,cc=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=rs(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},Ng=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`,_p=class{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=T.assertAndGetBroadcastShape(t,n);let r=this.outputShape.length;this.enableShapeUniforms=rs(r);let a="";if(s)if(r===0||v.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${yt(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let i=Jn("coords",r);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${i[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${i[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${i[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${i[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function $s(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}var Jte={kernelName:Ro,backendName:"webgl",kernelFunc:$s};function di(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),o=n.texData.get(a.dataId),i=$s({inputs:{x:s},backend:n}),l=$s({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:l},a}var Qte={kernelName:Eh,backendName:"webgl",kernelFunc:di},N8="return (a < 0.) ? b * a : a;",E8=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function ene(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,o=n.makeTensorInfo([],"float32",v.createScalarValue(a,"float32")),i=K().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _p(E8,r.shape,o.shape):new cc(N8,r.shape,o.shape),l=n.runWebGLProgram(i,[r,o],"float32");return n.disposeIntermediateTensorInfo(o),l}var tne={kernelName:$o,backendName:"webgl",kernelFunc:ene},_8="return (a < 0.) ? b * a : a;",R8=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function nne(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=K().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _p(R8,s.shape,r.shape):new cc(_8,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],"float32")}var sne={kernelName:Go,backendName:"webgl",kernelFunc:nne},id="if (isnan(x)) return x;",rne=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,ane=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function at({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:a})=>{let{x:o}=r,i=a,l=s||o.dtype;if(i.shouldExecuteOnCPU([o])&&n!=null){let h=i.texData.get(o.dataId),d=n(h.values,l);return i.makeTensorInfo(o.shape,l,d)}let u=K().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,c;return u?c=new Li(o.shape,t):c=new ha(o.shape,e),i.runWebGLProgram(c,[o],l)}}function Tn({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:o,backend:i})=>{let{a:l,b:u}=o,c=i;if(s&&l.dtype==="complex64"){let f=c.texData.get(l.dataId),m=c.texData.get(u.dataId),[g,y]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(A=>{let[b,w]=A,S={dataId:b.dataId,dtype:b.dtype,shape:l.shape},C={dataId:w.dataId,dtype:w.dtype,shape:u.shape},_=new cc(e,l.shape,u.shape);return c.runWebGLProgram(_,[S,C],Fn(b.dtype,w.dtype))}),x=di({inputs:{real:g,imag:y},backend:c});return c.disposeIntermediateTensorInfo(g),c.disposeIntermediateTensorInfo(y),x}let h=a||Fn(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||c.shouldExecuteOnCPU([l,u]))&&r!=null){let f=c.texData.get(l.dataId).values,m=c.texData.get(u.dataId).values,g=l.dtype==="string"?T.fromUint8ToStringArray(f):f,y=l.dtype==="string"?T.fromUint8ToStringArray(m):m,[x,A]=r(l.shape,u.shape,g,y,h),b=c.makeTensorInfo(A,h),w=c.texData.get(b.dataId);return w.values=x,b}let d=K().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,p;return d?p=new _p(t,l.shape,u.shape,n):p=new cc(e,l.shape,u.shape),c.runWebGLProgram(p,[l,u],h)}}function vh(e,t=!1){if(e==="linear")return t?Pte:Rte;if(e==="relu")return t?zte:Dte;if(e==="elu")return t?Mte:$te;if(e==="relu6")return t?Lte:Fte;if(e==="prelu")return t?R8:_8;if(e==="leakyrelu")return t?E8:N8;if(e==="sigmoid")return t?Bte:Ote;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var $8=class{constructor(e,t,n,s=!1,r=!1,a=!1,o=null,i=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=rs(this.outputShape.length);let u=s?e[1]:e[2],c=Math.ceil(u/2),h=s?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",p=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";o&&(i?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:l?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:m=`vec4 activation(vec4 x) {
          ${o}
        }`,g="result = activation(result);");let y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let x="rc.x",A="rc.x";e[0]<t[0]?x=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(A=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${c}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${c}; i++) {
          int batchA = ${x};
          int batchB = ${A};
          vec4 a = getMatrixA(batchA, ${h});
          vec4 b = getMatrixB(batchB, ${d});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${p[0]} * ${f[0]});
          result += (${p[1]} * ${f[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${g}

        setOutput(result);
      }
    `}},aw={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},ow=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},iw="return a * b;";function ov(e){let{inputs:t,backend:n}=e,{a:s,b:r}=t,a=T.upcastType(s.dtype,r.dtype);if(s.dtype==="complex64"){let i=n.texData.get(s.dataId),l=n.texData.get(r.dataId),u=new ow(aw.REAL,s.shape,r.shape),c=new ow(aw.IMAG,s.shape,r.shape),h=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:s.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],d=n.runWebGLProgram(u,h,"float32"),p=n.runWebGLProgram(c,h,"float32"),f=di({inputs:{real:d,imag:p},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}if(n.shouldExecuteOnCPU([s,r])){let i=n.texData.get(s.dataId),l=n.texData.get(r.dataId),[u,c]=ste(s.shape,r.shape,i.values,l.values,a),h=n.makeTensorInfo(c,a),d=n.texData.get(h.dataId);return d.values=u,h}let o;return K().getBool("WEBGL_PACK_BINARY_OPERATIONS")?o=new _p(iw,s.shape,r.shape):o=new cc(iw,s.shape,r.shape),n.runWebGLProgram(o,[s,r],a)}var one={kernelName:Wo,backendName:"webgl",kernelFunc:ov};function ine(e,t,n){let s=[al(e.shape),...ol(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[al(t),...ol(t)],o=new I8(a,s),i=!0,l=[s],u=n.runWebGLProgram(o,[r],e.dtype,l,i);return{dataId:u.dataId,shape:t,dtype:u.dtype}}function be(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,o=n,i=v.sizeFromShape(r.shape),l=v.inferFromImplicitShape(a,i),u=v.sizeFromShape(l);v.assert(i===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let c=o.texData.get(r.dataId);return c.isPacked&&!bh(r.shape,l)&&!(c.texture!==null&&bh(c.shape,l))?ine(r,l,o):(o.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype})}var lne={kernelName:zl,backendName:"webgl",kernelFunc:be},lw=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let o=Math.floor(n/4)*4,i=n%4,l="sumValue += dot(values, ones);";if(t!=null){let c=1/t;l=`sumValue += dot(values * ${v.isInt(c)?c.toPrecision(2):c}, ones);`}let u="";r%n>0&&(u=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${o}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${o};
        if (${i===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${i===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${i===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}},une=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let o="0.0",i="";t==="prod"?o="1.0":t==="min"?(o="1.0 / 1e-20",i="min"):t==="max"&&(o="-1.0 / 1e-20",i="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");let u=Math.floor(n/4)*4,c=n%4,h=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${i}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${i}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,d="vec4";t==="all"?(o="1.0",h=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,d="bvec4"):t==="any"&&(o="0.0",h=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,d="bvec4");let p="";r%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${o};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${o});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${h}
        }

        int inIdx = inOffset + ${u};
        if (${c===1}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${c===2}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${c===3}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${h}
        }
        setOutput(${l});
      }
    `}};function cne(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let n=t.length?t[t.length-1].outSize:e[1],s=T.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}function lu(e,t,n,s){let r=cne(e.shape),a=e;for(let o=0;o<r.length;o++){let{inSize:i,windowSize:l,outSize:u}=r[o],c,h;n==="mean"?c=o===0?new lw({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:u},i):new lw({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:u}):c=new une({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:u},n),h=a,a=s.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(h)}return a}var dne=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let s=yt(this.rank),r=hne(t);this.userCode=`
    void main() {
      ${s} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}};function hne(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let r=0;r<e.length;r++)s[e[r]]=n[r];return s.join()}var pne=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let s=yt(this.rank),r=S8("rc",this.rank),a=new Array(this.rank);for(let u=0;u<t.length;u++)a[t[u]]=r[u];let o=`vec2(${a.slice(-2).join()})`,i=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${o})`;this.userCode=`
    void main() {
      ${s} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${i}) {
        result[1] = ${l};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${i}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function Eg(e,t,n){let s=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new pne(e.shape,t):new dne(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function fne(e,t,n,s){let r=t,a=e.shape.length,o=v.parseAxisParam(r,e.shape),i=o,l=T.getAxesPermutation(i,a),u=l!=null,c=e;u&&(c=Eg(e,l,s),i=T.getInnerMostAxes(i.length,a)),T.assertAxesAreInnerMostDims("sum",i,a);let[h,d]=T.computeOutAndReduceShapes(c.shape,i),p=h;n&&(p=T.expandShapeToKeepDim(h,o));let f=v.sizeFromShape(d),g=v.sizeFromShape(e.shape)/f,y=be({inputs:{x:c},attrs:{shape:[g,f]},backend:s}),x=qh(e.dtype),A=lu(y,x,"sum",s),b=be({inputs:{x:A},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(A),u&&s.disposeIntermediateTensorInfo(c),b}function _g(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return fne(r,a,o,n)}var mne={kernelName:ei,backendName:"webgl",kernelFunc:_g};function es(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,o=n,i=r.shape.length,l=new Array(i);for(let c=0;c<l.length;c++)l[c]=r.shape[a[c]];let u;if(o.shouldExecuteOnCPU([r])){let h=o.texData.get(r.dataId).values,d=av(h,r.shape,r.dtype,a,l);u=o.makeTensorInfo(l,r.dtype);let p=o.texData.get(u.dataId);p.values=d}else u=Eg(r,a,o);return u}var gne={kernelName:Xr,backendName:"webgl",kernelFunc:es},D8=1e3;function zm({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:l=null}){let u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],d=s?t.shape[c-1]:t.shape[c-2],p=n?e.shape[u-1]:e.shape[u-2],f=s?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=v.sizeFromShape(m),x=v.sizeFromShape(g),b=eu.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);v.assert(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);let w=n?[y,h,p]:[y,p,h],S=s?[x,f,d]:[x,d,f],C=be({inputs:{x:e},backend:r,attrs:{shape:w}}),_=be({inputs:{x:t},backend:r,attrs:{shape:S}}),R=[C,_],D=Math.max(y,x),E=n?C.shape[1]:C.shape[2],F=a!=null,k=o!=null,M=l==="leakyrelu",z=l!=null?vh(l,!0):null,W=F||k||M||z!=null,H;if((p===1||f===1)&&E>D8&&W===!1){let Z=C,J=_;n&&(Z=es({inputs:{x:C},backend:r,attrs:{perm:[0,2,1]}}),R.push(Z)),s&&(J=es({inputs:{x:_},backend:r,attrs:{perm:[0,2,1]}}),R.push(J));let Q=f!==1,ae=f===1,ne=Z;Q&&(ne=be({inputs:{x:Z},backend:r,attrs:{shape:[D,E,1]}}),R.push(ne));let ie=f===1?2:1,ue=J;ae&&(ue=be({inputs:{x:J},backend:r,attrs:{shape:[D,1,E]}}),R.push(ue));let te=ov({inputs:{a:ne,b:ue},backend:r});H=_g({inputs:{x:te},backend:r,attrs:{axis:ie,keepDims:!0}}),R.push(te)}else{let Z=Fn(e.dtype,t.dtype),J=new $8(w,S,[D,p,f],n,s,F,z,k,M),Q=[C,_];if(a!=null&&Q.push(a),k&&Q.push(o),M){let ae=r.makeTensorInfo([],"float32",v.createScalarValue(i,"float32"));Q.push(ae),R.push(ae)}H=r.runWebGLProgram(J,Q,Z)}let j=be({inputs:{x:H},backend:r,attrs:{shape:b}});R.push(H);for(let Z of R)r.disposeIntermediateTensorInfo(Z);return j}function yne(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return zm({a:r,b:a,transposeA:l,transposeB:u,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:h,activation:c})}var Ane={kernelName:Ja,backendName:"webgl",kernelFunc:yne},uw="return abs(x);";function xne(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){let a=n.texData.get(s.dataId),o=w8(a.values);return n.makeTensorInfo(s.shape,s.dtype,o)}let r;return K().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Li(s.shape,uw):r=new ha(s.shape,uw),n.runWebGLProgram(r,[s],s.dtype)}var bne={kernelName:dl,backendName:"webgl",kernelFunc:xne},vne=ir+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,wne=at({opSnippet:vne}),kne={kernelName:mc,backendName:"webgl",kernelFunc:wne},Sne=ir+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,Ine=at({opSnippet:Sne}),Cne={kernelName:gc,backendName:"webgl",kernelFunc:Ine},cw="return a + b;",Tne=Tn({opSnippet:cw,packedOpSnippet:cw,supportsComplex:!0,cpuKernelImpl:Mee}),Nne={kernelName:va,backendName:"webgl",kernelFunc:Tne},Ene=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);let n=[];this.variableNames.forEach(r=>{n.push(`float v${r} = get${r}AtOutCoords();`)});let s=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${s};
        setOutput(result);
      }
    `}},_ne=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);let n=[];this.variableNames.forEach(r=>{n.push(`vec4 v${r} = get${r}AtOutCoords();`)});let s=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${s};
        setOutput(result);
      }
    `}};function am(e){let{inputs:t,backend:n}=e,s=t;if(s.length===1)return $s({inputs:{x:s[0]},backend:n});if(s.length>K().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(s.length/2),u=am({inputs:s.slice(0,l),backend:n}),c=am({inputs:s.slice(l),backend:n});return am({inputs:[u,c],backend:n})}let r=s.map(l=>l.dtype).reduce((l,u)=>Fn(l,u)),a=s.map(l=>l.shape),i=K().getBool("WEBGL_PACK")?new _ne(s[0].shape,a):new Ene(s[0].shape,a);return n.runWebGLProgram(i,s,r)}var Rne={kernelName:ho,backendName:"webgl",kernelFunc:am};function $ne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=v.parseAxisParam(a,r.shape),u=l,c=T.getAxesPermutation(u,i),h=r;c!=null&&(h=es({inputs:{x:r},backend:n,attrs:{perm:c}}),u=T.getInnerMostAxes(u.length,i)),T.assertAxesAreInnerMostDims("all",u,i);let[d,p]=T.computeOutAndReduceShapes(h.shape,u),f=v.sizeFromShape(p),m=be({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),g=lu(m,m.dtype,"all",n),y;if(o){let x=T.expandShapeToKeepDim(d,l);y=be({inputs:{x:g},backend:n,attrs:{shape:x}})}else y=be({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(h),y}var Dne={kernelName:yc,backendName:"webgl",kernelFunc:$ne};function Fne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=v.parseAxisParam(a,r.shape),u=l,c=T.getAxesPermutation(u,i),h=r;c!=null&&(h=es({inputs:{x:r},backend:n,attrs:{perm:c}}),u=T.getInnerMostAxes(u.length,i)),T.assertAxesAreInnerMostDims("any",u,i);let[d,p]=T.computeOutAndReduceShapes(h.shape,u),f=v.sizeFromShape(p),m=be({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),g=lu(m,m.dtype,"any",n),y;if(o){let x=T.expandShapeToKeepDim(d,l);y=be({inputs:{x:g},backend:n,attrs:{shape:x}})}else y=be({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(h),y}var One={kernelName:Ac,backendName:"webgl",kernelFunc:Fne},Pne=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:s,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];let o=t==="max"?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${s}; i++) {
          int inIdx = ${i};
          float candidate = getA(batch, inIdx);
          if (candidate ${o} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},Mne=class{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,v.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");let o=this.outputShape,i=o.length,l=yt(i),u=Jn("coords",i),c,h;if(a===1){h=i+1;let C=yt(h);c=`
        ${C} sourceLocR = ${C}(${u.join()}, 0);
        ++${u[i-1]};
        ${C} sourceLocG = ${C}(${u.join()}, 0);
        ++${u[i-2]};
        ${C} sourceLocA = ${C}(${u.join()}, 0);
        --${u[i-1]};
        ${C} sourceLocB = ${C}(${u.join()}, 0);
        --${u[i-2]};`}else h=i,c=`
        ${l} sourceLocR = coords;
        ++${u[i-1]};
        ${l} sourceLocG = coords;
        ++${u[i-2]};
        ${l} sourceLocA = coords;
        --${u[i-1]};
        ${l} sourceLocB = coords;
        --${u[i-2]};`;let d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map(C=>"int "+C),m=Jn("sourceLocR",h-1).concat("inIdx.r"),g=Jn("sourceLocG",h-1).concat("inIdx.g"),y=Jn("sourceLocB",h-1).concat("inIdx.b"),x=Jn("sourceLocA",h-1).concat("inIdx.a"),A=n==="max"?"greaterThan":"lessThan",b=s?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${x.join()})));`,w=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,S=s?"":`
      float getBestIndicesAChannel(${f.join()}) {
        return getChannel(getBestIndicesA(${d.join()}),
                                          vec2(${d.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${f.join()}) {
        return getChannel(getA(${d.join()}),
                               vec2(${d.slice(-2).join()}));
      }
      ${S}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${u[i-1]} < ${o[i-1]-1};
        bool hasNextRow = ${u[i-2]} < ${o[i-2]-1};
        ${c}
        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},
          sourceLocB${p}, sourceLocA${p}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${w};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${b}
          vec4 candidate = ${w};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${A}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function F8(e,t,n,s=null){let r=t.shape[0],a=t.shape[1];s!=null&&(r=s.shape[0],a=s.shape[1]);let o=T.computeOptimalWindowSize(a),i={windowSize:o,inSize:a,batchSize:r,outSize:Math.ceil(a/o)},l=new Pne(i,n,s==null),u=[t];s!=null&&u.push(s);let c=e.runWebGLProgram(l,u,"int32");if(c.shape[1]===1)return c;let h=F8(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function O8(e,t,n,s=null){let r=s!=null?s.shape:t.shape,a=r[r.length-1],o=T.computeOptimalWindowSize(a),i=new Mne(r,o,n,s==null),l=s==null?[t]:[t,s],u=e.runWebGLProgram(i,l,"int32");if(u.shape.length===t.shape.length){let c=O8(e,t,n,u);return e.disposeIntermediateTensorInfo(u),c}return u}function P8(e,t,n,s){let r=[n];if(T.assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!K().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let a=[],o=e.texData.get(t.dataId),i=o!==null&&o.isPacked,l=t;i&&(l=e.unpackTensor(t),a.push(l));let[u,c]=T.computeOutAndReduceShapes(l.shape,r),h=v.sizeFromShape(c),d=be({inputs:{x:l},backend:e,attrs:{shape:[-1,h]}});a.push(d);let p=F8(e,d,s);a.push(p);let f=be({inputs:{x:p},backend:e,attrs:{shape:u}});return a.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}return O8(e,t,s)}function zne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=v.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),l=r,u=[];i!=null&&(l=es({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(l),o=T.getInnerMostAxes(o.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);let c=P8(n,l,o[0],"max");return u.forEach(h=>n.disposeIntermediateTensorInfo(h)),c}var Lne={kernelName:po,backendName:"webgl",kernelFunc:zne};function Bne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=v.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),l=r,u=[];i!=null&&(l=es({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(l),o=T.getInnerMostAxes(o.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);let c=P8(n,l,o[0],"min");return u.forEach(h=>n.disposeIntermediateTensorInfo(h)),c}var Wne={kernelName:xc,backendName:"webgl",kernelFunc:Bne},Vne=ir+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Une=at({opSnippet:Vne}),Gne={kernelName:bc,backendName:"webgl",kernelFunc:Une},Hne=ir+"return log(x + sqrt(x * x + 1.0));",jne=at({opSnippet:Hne}),qne={kernelName:vc,backendName:"webgl",kernelFunc:jne},Xne=ir+`
  return atan(x);
`,Kne=at({opSnippet:Xne}),Zne={kernelName:wc,backendName:"webgl",kernelFunc:Kne},Yne=rne+`
  return atan(a, b);
`,Jne=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+ane+`
  return result;
`,Qne=Tn({opSnippet:Yne,packedOpSnippet:Jne}),ese={kernelName:hl,backendName:"webgl",kernelFunc:Qne},tse=ir+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,nse=at({opSnippet:tse}),sse={kernelName:kc,backendName:"webgl",kernelFunc:nse},wh=class{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,o=e.strideHeight,i=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;let f=t==="avg",m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),n){let C=">=";this.userCode=`
        const ivec2 strides = ivec2(${o}, ${i});
        const ivec2 pads = ivec2(${d}, ${p});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${c};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${C} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${s?r?m:g:`wR * ${h} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let x="max",A=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(A="avgValue / count");let b=Math.floor(a/4)*4,w=a%4,S=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${i});
      const ivec2 pads = ivec2(${d}, ${p});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${c};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${b}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${S}
          }

          int xC = xCCorner + ${b};
          if (${w===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${S}
          } else if (${w===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${S}
          } else if (${w===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${S}
          }
        }
        setOutput(${A});
      }
    `}},iv=class{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,o=e.strideDepth,i=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let x=t==="avg",A="0.0";if(x||(A="-1.0 / 1e-20"),n){let R=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${o}, ${i}, ${l});
        const ivec3 pads = ivec3(${m}, ${g}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${d};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${p};
                wR += ${c}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${h}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${R} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b="max",w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(w="avgValue / count");let S=Math.floor(a/4)*4,C=a%4,_=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${o}, ${i}, ${l});
      const ivec3 pads = ivec3(${m}, ${g}, ${y});
      const float initializationValue = ${A};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${A});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p};
            wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${S}; wC += 4) {
              int xC = xCCorner + wC * ${h};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                getValue(batch, xD, xR, xC + 3 * ${h}, ch)
              );

              ${_}
            }

            int xC = xCCorner + ${S};
            if (${C===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${_}
            } else if (${C===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                initializationValue,
                initializationValue
              );

              ${_}
            } else if (${C===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                initializationValue
              );

              ${_}
            }
          }
          setOutput(${w});
        }
      }
    `}};function rse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;nd(r,"avgPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,u=1;v.assert(T.eitherStridesOrDilationsAreOne(o,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);let c=T.computePool2DInfo(r.shape,a,o,u,i,l);if(c.filterWidth===1&&c.filterHeight===1&&v.arraysEqual(c.inShape,c.outShape))return $s({inputs:{x:r},backend:n});let h=new wh(c,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}var ase={kernelName:fo,backendName:"webgl",kernelFunc:rse};function ose(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:u}=s,c=[1,1,1],h=T.computePool3DInfo(r.shape,a,o,c,i,l,u),d=new iv(h,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}var ise={kernelName:Nh,backendName:"webgl",kernelFunc:ose},lse=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=i-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${c});
      const float avgMultiplier = float(${h});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${o}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},use=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*s);this.userCode=`
      const ivec3 pads = ivec3(${p}, ${f}, ${m});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${c};
            wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${h};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function cse(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a,{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=s,h=[1,1,1],d=T.computePool3DInfo(o.shape,i,l,h,u,c),p=new use(d);return n.runWebGLProgram(p,[r],o.dtype)}var dse={kernelName:Jm,backendName:"webgl",kernelFunc:cse};function hse(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a;nd([r,a],"avgPoolGrad");let{filterSize:i,strides:l,pad:u}=s,c=T.computePool2DInfo(o.shape,i,l,1,u),h=new lse(c);return n.runWebGLProgram(h,[r],o.dtype)}var pse={kernelName:Ym,backendName:"webgl",kernelFunc:hse};function fse(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;return zm({a:r,b:a,transposeA:o,transposeB:i,backend:n})}var mse={kernelName:mo,backendName:"webgl",kernelFunc:fse},gse=class{constructor(e,t,n,s,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,n);let o="0.0";s!=null&&(T.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${o};
        float scale = ${i};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},yse=class{constructor(e,t,n,s,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";s!=null&&(T.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${o};
        vec4 scale = ${i};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}},Ase=({inputs:e,backend:t,attrs:n})=>{let{x:s,mean:r,variance:a,offset:o,scale:i}=e;v.assert(r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),v.assert(o==null||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),v.assert(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;l==null&&(l=.001);let u=[s,r,a],c=null;o!=null&&(c=o.shape,u.push(o));let h=null;i!=null&&(h=i.shape,u.push(i));let d=K().getBool("WEBGL_PACK_NORMALIZATION")?new yse(s.shape,r.shape,a.shape,c,h,l):new gse(s.shape,r.shape,a.shape,c,h,l);return t.runWebGLProgram(d,u,u[0].dtype)},xse={kernelName:Eo,backendName:"webgl",kernelFunc:Ase},bse=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=yt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=vse(this.rank),s,r=e.map((a,o)=>`sourceLoc.${i2[o]} = start[${o}] + coords.${i2[o]};`);s=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${s}
        setOutput(getSource(${n}));
      }
    `}},i2=["x","y","z","w","u","v"];function vse(e){if(e===1)return"sourceLoc";if(e<=6)return i2.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var wse=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=yt(this.rank),n=Jn("coords",this.rank),s=Jn("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,o=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${s[this.rank-1]};
        result.y = ${a};
        --${s[this.rank-1]};
      }
    `,i=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${s[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${s[this.rank-1]};
          result.w = ${a};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((u,c)=>`start[${c}]`).join()});`:e.map((u,c)=>`${s[c]} = ${n[c]} + start[${c}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${o}
        ${i}
        setOutput(result);
      }
    `}};function kse(e,t,n,s){let r=s.texData.get(e.dataId),a=s.makeTensorInfo(n,e.dtype),o=s.texData.get(a.dataId);Object.assign(o,r),o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=zt.computeFlatOffset(t,v.computeStrides(e.shape));r.slice&&(i+=r.slice.flatOffset),o.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||e.dataId};let l=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,l+1),a}function ld(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s,[i,l]=zt.parseSliceParams(r,a,o);if(zt.assertParamsValid(r,i,l),v.sizeFromShape(l)===0)return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||r.dtype==="string"){let h=n.texData.get(r.dataId),d=hte(h.values,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,d)}let{isPacked:u}=n.texData.get(r.dataId),c=zt.isSliceContinous(r.shape,i,l);if(u||!c){let h=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new wse(l):new bse(l),d=[i];return n.runWebGLProgram(h,[r],r.dtype,d)}return n.uploadToGPU(r.dataId),kse(r,i,l,n)}var Sse={kernelName:Ul,backendName:"webgl",kernelFunc:ld},Ise=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;v.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let i=a.reduce((x,A)=>x*A),l=T.getReshaped(r.shape,a,i),u=T.getPermuted(l.length,a.length),c=T.getReshapedPermuted(r.shape,a,i),h=T.getSliceBeginCoords(o,a.length),d=T.getSliceSize(c,o,a.length),p=[],f=be({inputs:{x:r},backend:n,attrs:{shape:l}}),m=es({inputs:{x:f},backend:n,attrs:{perm:u}}),g=be({inputs:{x:m},backend:n,attrs:{shape:c}}),y=ld({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach(x=>n.disposeIntermediateTensorInfo(x)),y},Cse={kernelName:pl,backendName:"webgl",kernelFunc:Ise};function Tse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o}=s,i=n.readSync(r.dataId),l=n.readSync(a.dataId),u=v8(i,l,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,u)}var Nse={kernelName:Qm,backendName:"webgl",kernelFunc:Tse};function Ese(e){let{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.readSync(s.dataId),o=n.readSync(r.dataId),i=T.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var _se={kernelName:e0,backendName:"webgl",kernelFunc:Ese},Rse="return float(a != b);",M8=Tn({opSnippet:Rse,cpuKernelImpl:ate,dtype:"bool"}),$se={kernelName:Rl,backendName:"webgl",kernelFunc:M8};function Rp(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return $s({inputs:{x:r.complexTensorInfos.real},backend:n})}var Dse={kernelName:Mh,backendName:"webgl",kernelFunc:Rp},Fse="return float(int(x));";function Ose(e,t){let n=new ha(e.shape,Fse),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function l2(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return $s({inputs:{x:r},backend:n});let o=Vt(r.shape),i=l2({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=di({inputs:{real:i,imag:o},backend:n});return o.dispose(),n.disposeIntermediateTensorInfo(i),l}if(r.dtype==="complex64"){let o=Rp({inputs:{input:r},backend:n}),i=l2({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(o),i}if(!v.hasEncodingLoss(r.dtype,a)){let o=$s({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(n.shouldExecuteOnCPU([r])){let o=n.texData.get(r.dataId).values,[i,l,u]=Lee(o,r.shape,r.dtype,a);return n.makeTensorInfo(i,l,u)}if(a==="int32")return Ose(r,n);if(a==="bool"){let o=n.makeTensorInfo([],"bool",v.getTypedArrayFromDType("bool",1)),l=M8({inputs:{a:r,b:o},backend:n});return n.disposeIntermediateTensorInfo(o),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var Pse={kernelName:go,backendName:"webgl",kernelFunc:l2},dw="return ceil(x);",Mse=at({opSnippet:dw,packedOpSnippet:dw,cpuKernelImpl:Bee}),zse={kernelName:yo,backendName:"webgl",kernelFunc:Mse},Lse=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},Bse=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function Wse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i;K().getBool("WEBGL_PACK_CLIP")?i=new Bse(r.shape):i=new Lse(r.shape);let l=[[a],[o]];return n.runWebGLProgram(i,[r],r.dtype,l)}var Vse={kernelName:wa,backendName:"webgl",kernelFunc:Wse},Use=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function hw(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function Gse(e){let{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),a=new Use(s.shape),o=[hw(s,r.complexTensorInfos.real),hw(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,o,o[0].dtype)}var Hse={kernelName:_h,backendName:"webgl",kernelFunc:Gse},jse=class{constructor(e){this.outputShape=[],this.outputShape=T.computeOutShape(e,1),this.variableNames=e.map((a,o)=>`T${o}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){let o=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${o}));`)}let s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}},qse=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=T.computeOutShape(e,t);let n=this.outputShape,s=n.length,r=yt(s),a=Jn("coords",s),o=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map((f,m)=>`T${m}`);let i=new Array(e.length-1);i[0]=e[0][t];for(let f=1;f<i.length;f++)i[f]=i[f-1]+e[f][t];let l=o[t],u=o.slice(-2),c=o.join(),h=`if (${l} < ${i[0]}) {
        return getChannel(
            getT0(${c}), vec2(${u.join()}));
        }`;for(let f=1;f<i.length;f++){let m=i[f-1];h+=`
        if (${l} < ${i[f]}  && ${l} >= ${i[f-1]}) {
          return getChannel(
            getT${f}(${Of(o,l,m)}),
            vec2(${Of(u,l,m)}));
        }`}let d=i.length,p=i[i.length-1];h+=`
        return getChannel(
          getT${d}(${Of(o,l,p)}),
          vec2(${Of(u,l,p)}));`,this.userCode=`
      float getValue(${o.map(f=>"int "+f)}) {
        ${h}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[s-1]} = ${a[s-1]} + 1;
        if (${a[s-1]} < ${n[s-1]}) {
          result.g = getValue(${a});
        }

        ${a[s-2]} = ${a[s-2]} + 1;
        if (${a[s-2]} < ${n[s-2]}) {
          result.a = getValue(${a});
        }

        ${a[s-1]} = ${a[s-1]} - 1;
        if (${a[s-2]} < ${n[s-2]} &&
            ${a[s-1]} < ${n[s-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function Of(e,t,n){let s=e.indexOf(t);return e.map((a,o)=>o===s?`${a} - ${n}`:a).join()}function Rg(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return $s({inputs:{x:r.complexTensorInfos.imag},backend:n})}var Xse={kernelName:Fh,backendName:"webgl",kernelFunc:Rg};function Gd(e,t,n){let s=e[0].dtype;if(s==="complex64"){let h=e.map(g=>Rp({inputs:{input:g},backend:n})),d=e.map(g=>Rg({inputs:{input:g},backend:n})),p=Gd(h,t,n),f=Gd(d,t,n),m=di({inputs:{real:p,imag:f},backend:n});return h.forEach(g=>n.disposeIntermediateTensorInfo(g)),d.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){let h=e.map(x=>{let A=v.sizeFromShape(x.shape.slice(t));return be({inputs:{x},backend:n,attrs:{shape:[-1,A]}})}),d=h.map(x=>({vals:n.readSync(x.dataId),shape:x.shape})),p=T.computeOutShape(h.map(x=>x.shape),1),f=h[0].shape[0]===1,m=Wee(d,p,s,f),g=T.computeOutShape(e.map(x=>x.shape),t),y=n.makeTensorInfo(g,s,m);return h.forEach(x=>n.disposeIntermediateTensorInfo(x)),y}let a=K().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(e.length>a){let h=[];for(let p=0;p<e.length;p+=a){let f=e.slice(p,p+a);h.push(Gd(f,t,n))}let d=Gd(h,t,n);for(let p of h)n.disposeIntermediateTensorInfo(p);return d}if(K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let h=new qse(e.map(d=>d.shape),t);return n.runWebGLProgram(h,e,s)}let{tensors2D:o,outShape:i}=Kse(e,t,n),l=new jse(o.map(h=>h.shape)),u=n.runWebGLProgram(l,o,s);o.forEach(h=>n.disposeIntermediateTensorInfo(h));let c=be({inputs:{x:u},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(u),c}function Kse(e,t,n){let s=T.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>be({inputs:{x:a},attrs:{shape:[-1,v.sizeFromShape(a.shape.slice(t))]},backend:n})),outShape:s}}function z8(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=v.parseAxisParam(r,t[0].shape)[0],o=T.computeOutShape(t.map(u=>u.shape),a);if(v.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(u=>v.sizeFromShape(u.shape)>0);if(i.length===1)return $s({inputs:{x:i[0]},backend:n});let l=i.map(u=>u.shape);return T.assertParamsConsistent(l,a),Gd(i,a,n)}var Zse={kernelName:fl,backendName:"webgl",kernelFunc:z8},L8=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let a=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=Math.floor(e.inChannels/4)*4,f=e.inChannels%4,m=e.dataFormat==="channelsLast",g=m?1:2,y=m?2:3,x=m?3:1,A="",b="";n&&(s?A=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?A=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:A=`
          float activation(float x) {
            ${n}
          }
        `,b="result = activation(result);");let w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${A}

      const ivec2 strides = ivec2(${i}, ${l});
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${x}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${h}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${d}; wC++) {
            int xC = xCCorner + wC * ${c};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${p}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${f===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${p}) *
                    getW(wR, wC, ${p}, d2);
              } else {
                dotProd +=
                    getX(batch, ${p}, xR, xC) *
                    getW(wR, wC, ${p}, d2);
              }

            } else if (${f===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${f===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2),
                getW(wR, wC, ${p} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1),
                  getX(batch, xR, xC, ${p} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC),
                  getX(batch, ${p} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${w}
        ${b}
        setOutput(result);
      }
    `}},Yse=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=Math.floor(e.inChannels/4)*4,f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${a}, ${o});
      const ivec3 pads = ivec3(${t}, ${n}, ${s});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${c}; wF++) {
          int xF = xFCorner + wF * ${i};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${p}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${f===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${p}) *
                  getW(wF, wR, wC, ${p}, d2);
              } else if (${f===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${f===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1),
                  getX(batch, xF, xR, xC, ${p} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2),
                  getW(wF, wR, wC, ${p} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},B8=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=rs(this.outputShape.length);let a=e.padInfo.left,o=e.strideWidth,i=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,c=u,h=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let m=0;m<u;m++)h+=`
           vec4 xTexelC${m*2};
           int xTexelC${m*2}Ready;
           vec4 xTexelC${m*2+1};
           int xTexelC${m*2+1}Ready;
           vec4 xC${m};`;h+=`
     for (int r = 0; r < ${l}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let m=0;m<u;m++)h+=`
           xTexelC${m*2} = vec4(0.0);
           xTexelC${m*2}Ready = 0;
           xTexelC${m*2+1} = vec4(0.0);
           xTexelC${m*2+1}Ready = 0;
           xC${m} = vec4(0.0);`;h+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let m=0;m<(c+1)/2;m++){let g=m*2;if(h+=`
           xC = xCCorner + ${g*i};
           `,o===1){if(g<u&&(a%2===1?(h+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }
               `,i===1&&g>0?h+=`
                 xC${g} = vec4(xTexelC${g-2}.zw, xTexelC${g}.xy);
                 `:h+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${g} = vec4(previous.zw, xTexelC${g}.xy);
                   } else {
                     xC${g} = vec4(0.0, 0.0, xTexelC${g}.xy);
                   }
                   `):h+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xC${g} = xTexelC${g};
                 `,g+1<u)){let y=a%2===0?v.nearestLargerEven(i):i;i%2===0&&a%2===1||i%2!==0&&a%2!==1?(h+=`
                   xCOffset = xC + imod(pads[1], 2) + ${y};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                     xTexelC${g+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${g+1}.zw = vec2(0.0);
                     }
                     xTexelC${g+1}Ready = 1;
                   }
                   `,i>1?h+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${g+1} = vec4(previous.zw, xTexelC${g+1}.xy);
                     } else {
                      xC${g+1} = vec4(0.0, 0.0, xTexelC${g+1}.xy);
                     }
                     `:h+=`
                     xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.xy);
                     `):y===1?h+=`
                     xC${g+1} = xTexelC${g};
                     `:h+=`
                     xCOffset = xC + ${y};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                       xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${g+1}.zw = vec2(0.0);
                       }
                       xTexelC${g+1}Ready = 1;
                     }

                     xC${g+1} = xTexelC${g+1};
                     `}}else g<u&&(a%2===1?(h+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.0);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
               `,g+1<u&&(h+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${g+1} = vec4(xTexelC${g+1}.xy, final.xy);
                 `)):(h+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(
                   xTexelC${g}.xy, xTexelC${g+1}.xy);
               `,g+1<u&&(h+=`
                   xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
                 `)));g<u&&(h+=`
             wTexel = getW(r, ${g}, d1, d2);
             dotProd += xC${g}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${g}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,g+1<u&&(h+=`
               wTexel = getW(r, ${g+1}, d1, d2);
               dotProd += xC${g+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${g+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}h+=`
     }
   `,h+=`
     }
   `,h+=`
     }
   `;let d="",p="";n&&(s?d=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${n}
         }`:r?d=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${n}
         }`:d=`vec4 activation(vec4 x) {
           ${n}
         }`,p="result = activation(result);");let f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${d}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${h}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${f}
         ${p}
         setOutput(result);
       }
     `}},Jse=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=rs(this.outputShape.length);let{dataFormat:n}=t,s=ss(),r=n==="channelsLast",a=r?1:2,o=r?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,l="";for(let u=0;u<=1;u++)for(let c=0;c<=1;c++)l+=`
          blockIndex = rc.z + ${c};
          pos = rc.y + ${u};

          ${i}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${o}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${u*2+c}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${u*2+c}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${s.output} = result;
      }
    `}};function Lm(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&n===1&&e[0]>1?[e[0],1]:null}function W8({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let l=e.shape,u=s.texData.get(e.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,p=n.dataFormat==="channelsLast",f=!1,m=!1,g,y=[];if(a!=null){let b=Lm(a.shape,p);b!=null&&(a=be({inputs:{x:a},backend:s,attrs:{shape:b}}),y.push(a))}if(r!=null){let b=Lm(r.shape,p);b!=null&&(r=be({inputs:{x:r},backend:s,attrs:{shape:b}}),y.push(r))}if(!((h===1||d===1)&&c>D8)&&u.isPacked&&p&&u.texture!=null&&l[2]%2!==0&&v.arraysEqual(u.shape.slice(-3),l.slice(-3))){let b=l[0]*l[1]*(l[2]+1),w={dataId:e.dataId,shape:[1,b,n.inChannels],dtype:e.dtype},S=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,v.assert(bh(u.shape,w.shape),()=>`packed reshape ${u.shape} to ${w.shape} isn't free`);let C=be({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(C);let _=zm({a:w,b:C,backend:s,transposeA:f,transposeB:m,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),R=s.texData.get(_.dataId);v.assert(R.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=S,R.shape=n.outShape,g=$s({inputs:{x:_},backend:s}),g.shape=n.outShape,y.push(_)}else{let b=n.outHeight*n.outWidth,w=be({inputs:{x:e},backend:s,attrs:{shape:p?[n.batchSize,b,n.inChannels]:[n.batchSize,n.inChannels,b]}}),S=be({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),C=zm({a:p?w:S,b:p?S:w,transposeA:!p,transposeB:m,backend:s,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o});g=be({inputs:{x:C},backend:s,attrs:{shape:n.outShape}}),y.push(w),y.push(S),y.push(C)}for(let b of y)s.disposeIntermediateTensorInfo(b);return g}function V8({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f=p==="channelsLast",m=l*u*c,g=d*h,y=[n.batchSize,m,g],x=!0,A=!1,b=[];if(a!=null){let j=Lm(a.shape,f);j!=null&&(a=be({inputs:{x:a},backend:s,attrs:{shape:j}}),b.push(a))}if(r!=null){let j=Lm(r.shape,f);j!=null&&(r=be({inputs:{x:r},backend:s,attrs:{shape:j}}),b.push(r))}let w=be({inputs:{x:t},backend:s,attrs:{shape:[1,m,v.sizeFromShape(t.shape)/m]}});b.push(w);let S=new Jse(y,n),C=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],_=s.runWebGLProgram(S,[e],"float32",C),R=be({inputs:{x:_},backend:s,attrs:{shape:y}});b.push(_),b.push(R);let D=r!=null,E=a!=null,F=i==="leakyrelu",k=i?vh(i,!0):null,M=new $8(f?R.shape:w.shape,f?w.shape:R.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],x,A,D,k,E,F),z=f?[R,w]:[w,R];if(r&&z.push(r),E&&z.push(a),F){let j=s.makeTensorInfo([],"float32",v.createScalarValue(o,"float32"));z.push(j),b.push(j)}let W=s.runWebGLProgram(M,z,"float32"),H=be({inputs:{x:W},backend:s,attrs:{shape:n.outShape}});b.push(W);for(let j of b)s.disposeIntermediateTensorInfo(j);return H}function Qse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(r.shape,a.shape,o,u,i,c,!1,h),p;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))p=W8({x:r,filter:a,convInfo:d,backend:n});else if(d.strideWidth<=2&&h==="channelsLast"&&K().getBool("WEBGL_EXP_CONV")){let m=new B8(d),g=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(m,[r,a],"float32",g)}else if(K().getBool("WEBGL_CONV_IM2COL"))p=V8({x:r,filter:a,convInfo:d,backend:n});else{let m=new L8(d);p=n.runWebGLProgram(m,[r,a],"float32")}let f=be({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}var ere={kernelName:Ao,backendName:"webgl",kernelFunc:Qse},tre=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},nre=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dataFormat==="channelsLast",o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${c}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},sre=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,o=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${s} - ${o};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},rre=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=s-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${i}, ${l}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${s}; wC++) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${s} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function are(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(r.shape,c,o,1,i,u,!1,h),p=new tre(d);return n.runWebGLProgram(p,[r,a],"float32")}var ore={kernelName:t0,backendName:"webgl",kernelFunc:are};function ire(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=T.convertConv2DDataFormat(u),d=T.computeConv2DInfo(o,a.shape,i,1,l,c,!1,h),p=new nre(d);return n.runWebGLProgram(p,[r,a],"float32")}var lre={kernelName:xo,backendName:"webgl",kernelFunc:ire};function ure(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s,u=T.computeConv3DInfo(r.shape,a.shape,o,l,i),c=new Yse(u);return n.runWebGLProgram(c,[r,a],"float32")}var cre={kernelName:Rh,backendName:"webgl",kernelFunc:ure};function dre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:i,filterShape:l}=s,u=T.computeConv3DInfo(r.shape,l,o,1,i),c=new sre(u);return n.runWebGLProgram(c,[r,a],"float32")}var hre={kernelName:n0,backendName:"webgl",kernelFunc:dre};function pre(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:o,strides:i,inputShape:l}=s,u=T.computeConv3DInfo(l,a.shape,i,1,o),c=new rre(u);return n.runWebGLProgram(c,[r,a],"float32")}var fre={kernelName:s0,backendName:"webgl",kernelFunc:pre},mre=id+`
  return cos(x);
`,gre=at({opSnippet:mre}),yre={kernelName:bo,backendName:"webgl",kernelFunc:gre},Are=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,xre=at({opSnippet:Are}),bre={kernelName:vo,backendName:"webgl",kernelFunc:xre},vre=class{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[a,o,i,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];let d=s==="bilinear"?1:0,[p,f]=[`${o-1}.0`,`${i-1}.0`],[m,g,y]=c>1?[`${(o-1)/(c-1)}`,"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[x,A,b]=h>1?[`${(i-1)/(h-1)}`,"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${x});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${A};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${p} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${b};
        if( in_x < 0.0 || in_x > ${f} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${d} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},wre=e=>{let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:u}=s,c=new vre(r.shape,a.shape,i,l,u);return n.runWebGLProgram(c,[r,a,o],"float32")},kre={kernelName:gl,backendName:"webgl",kernelFunc:wre},kh;(function(e){e.Prod="*",e.Sum="+"})(kh||(kh={}));var pw=class{constructor(e,t,n,s){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let r=this.outputShape.length,a=this.op===kh.Prod?"1.0":"0.0",o=n?a:`getX(${fw(r,"coords",this.op)})`,i=this.outputShape[this.outputShape.length-1],l="",u="";n?(l=s?`end != ${i-1}`:"end != 0",u=s?"end + 1":"end - 1"):(l=s?`end + pow2 < ${i}`:"end >= pow2",u=s?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${yt(r)} coords = getOutputCoords();
        int end = ${mw(r,"coords",this.op)};
        float val = ${o};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${u};
          ${mw(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${fw(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function fw(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function mw(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function U8(e,t,n,s,r,a){let o=t.shape.length,i=T.getAxesPermutation([s],o),l=t;i!=null&&(l=es({inputs:{x:t},backend:n,attrs:{perm:i}}));let u=T.getInnerMostAxes(1,o)[0];if(u!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);let c=l.shape[u],h=$s({inputs:{x:l},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){let p=new pw(e,l.shape,!1,a),f=[[d]],m=h;h=n.runWebGLProgram(p,[h],h.dtype,f),n.disposeIntermediateTensorInfo(m)}if(r){let d=new pw(e,l.shape,r,a),p=h;h=n.runWebGLProgram(d,[h],h.dtype),n.disposeIntermediateTensorInfo(p)}if(i!=null){let d=T.getUndoAxesPermutation(i),p=es({inputs:{x:h},backend:n,attrs:{perm:d}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),p}return h}function Sre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;return U8(kh.Prod,r,n,a,o,i)}var Ire={kernelName:ml,backendName:"webgl",kernelFunc:Sre};function Cre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;return U8(kh.Sum,r,n,a,o,i)}var Tre={kernelName:wo,backendName:"webgl",kernelFunc:Cre};function Nre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:o,binaryOutput:i}=s;if(r.shape.length===1){let l=n.readSync(r.dataId),u=n.readSync(a.dataId),c=v8(l,u,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,c)}else if(r.shape.length===2){let l=n.bufferSync(r),u=n.bufferSync(a),c=zee(l,u,o,i);return n.makeTensorInfo(c.shape,a.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var Ere={kernelName:r0,backendName:"webgl",kernelFunc:Nre},_re=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Rre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s,i=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],u=o==="NHWC"?r.shape[2]:r.shape[3],c=o==="NHWC"?r.shape[3]:r.shape[1],h=l*a,d=u*a,p=c/(a*a),f=o==="NHWC"?[i,h,d,p]:[i,p,h,d],m=new _re(f,a,o);return n.runWebGLProgram(m,[r],r.dtype)}var $re={kernelName:yl,backendName:"webgl",kernelFunc:Rre},G8=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=rs(this.outputShape.length);let a=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels,l="",u="";n&&(s?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:l=`
          float activation(float x) {
            ${n}
          }
        `,u="result = activation(result);");let c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${o}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${c}
        ${u}
        setOutput(result);
      }
    `}},H8=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=rs(this.outputShape.length);let a=e.outChannels/e.inChannels,o=e.padInfo.left,i=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c,d=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<c;g++)d+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;d+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let g=0;g<c;g++)d+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;d+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(h+1)/2;g++){let y=g*2;if(d+=`
          xC = xCCorner + ${y*l};
          `,i===1){if(y<c&&(o%2===1?(d+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,l===1&&y>0?d+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:d+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):d+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<c)){let x=o%2===0?v.nearestLargerEven(l):l;l%2===0&&o%2===1||l%2!==0&&o%2!==1?(d+=`
                  xCOffset = xC + imod(pads[1], 2) + ${x};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,l>1?d+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                    } else {
                     xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                    }
                    `:d+=`
                    xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                    `):x===1?d+=`
                    xC${y+1} = xTexelC${y};
                    `:d+=`
                    xCOffset = xC + ${x};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<c&&(o%2===1?(d+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<c&&(d+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(d+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<c&&(d+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<c&&(d+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<c&&(d+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}d+=`
    }
  `,d+=`
      }
    `;let p="",f="";n&&(s?p=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?p=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:p=`vec4 activation(vec4 x) {
          ${n}
        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${p}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${d}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${f}
        setOutput(result);
      }
    `}};function Dre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l,dimRoundingMode:u}=s,c=l;c==null&&(c=[1,1]),v.assert(T.eitherStridesOrDilationsAreOne(o,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);let h=T.computeConv2DInfo(r.shape,a.shape,o,c,i,u,!0),d;K().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new H8(h):d=new G8(h);let p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[r,a],"float32",p)}var Fre={kernelName:ko,backendName:"webgl",kernelFunc:Dre},Ore=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Pre=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${i}; dm++) {
              int d2 = d1 * ${i} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Mre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=s,h=T.computeConv2DInfo(r.shape,c,o,i,l,u,!0),d=new Ore(h);return n.runWebGLProgram(d,[r,a],"float32")}var zre={kernelName:a0,backendName:"webgl",kernelFunc:Mre};function Lre(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:o,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=s,h=T.computeConv2DInfo(c,a.shape,o,i,l,u,!0),d=new Pre(h);return n.runWebGLProgram(d,[r,a],"float32")}var Bre={kernelName:o0,backendName:"webgl",kernelFunc:Lre},Wre=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function Vre(e){let{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],a=v.sizeFromShape(s.shape),o=be({inputs:{x:s},backend:n,attrs:{shape:[a]}}),i=new Wre(a),l=n.runWebGLProgram(i,[o],o.dtype),u=be({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}var Ure={kernelName:i0,backendName:"webgl",kernelFunc:Vre},Gre=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:o,filterWidth:i,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=s;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${a});
      const ivec2 pads = ivec2(${c}, ${h});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${o}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${i}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function Hre(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dilations:l}=s,u=T.computeDilation2DInfo(r.shape,a.shape,o,i,"NHWC",l),c,h=new Gre(u);c=n.runWebGLProgram(h,[r,a],"float32");let d=be({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}var jre={kernelName:$h,backendName:"webgl",kernelFunc:Hre};function qre(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=T.decodeEinsumEquation(r,a.length);T.checkEinsumDimSizes(o.length,l,a);let{path:u,steps:c}=T.getEinsumComputePath(i,l),h=c.length,d=null,p=o.length,f=[];for(let m=0;m<h;++m){for(let g of c[m]){let{permutationIndices:y,expandDims:x}=T.getEinsumPermutation(p,l[g]),A;T.isIdentityPermutation(y)?A=a[g]:(A=es({inputs:{x:a[g]},backend:n,attrs:{perm:y}}),f.push(A));let b=A.shape.slice();for(let w=0;w<x.length;++w)b.splice(x[w],0,1);v.arraysEqual(A.shape,b)||(A=be({inputs:{x:A},backend:n,attrs:{shape:b}}),f.push(A)),d===null?d=A:(d=ov({inputs:{a:A,b:d},backend:n}),f.push(d))}m<h-1&&(u[m]>=0&&(d=_g({inputs:{x:d},backend:n,attrs:{axis:u[m]-(o.length-p),keepDims:!1}}),f.push(d)),p--)}for(let m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}var Xre={kernelName:Dh,backendName:"webgl",kernelFunc:qre},Kre="return (x >= 0.0) ? x : (exp(x) - 1.0);",Zre=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Yre=at({opSnippet:Kre,packedOpSnippet:Zre}),Jre={kernelName:Io,backendName:"webgl",kernelFunc:Yre},Qre="return (b >= 1.0) ? a : a * (b + 1.0);",eae=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,tae=e=>{let{inputs:t,backend:n}=e,{dy:s,y:r}=t,a=K().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _p(eae,s.shape,r.shape):new cc(Qre,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)},nae={kernelName:l0,backendName:"webgl",kernelFunc:tae},sae=`
  return vec4(equal(a, b));
`,rae="return float(a == b);",aae=Tn({opSnippet:rae,packedOpSnippet:sae,dtype:"bool",cpuKernelImpl:Vee}),oae={kernelName:Al,backendName:"webgl",kernelFunc:aae},iae=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${T.ERF_P};
  float a1 = ${T.ERF_A1};
  float a2 = ${T.ERF_A2};
  float a3 = ${T.ERF_A3};
  float a4 = ${T.ERF_A4};
  float a5 = ${T.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,lae=at({opSnippet:iae}),uae={kernelName:Sc,backendName:"webgl",kernelFunc:lae},cae=id+`
  return exp(x);
`,dae=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,j8=at({opSnippet:cae,packedOpSnippet:dae,cpuKernelImpl:Uee,dtype:"float32"}),hae={kernelName:Co,backendName:"webgl",kernelFunc:j8};function u2(e){let{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice(),l=r;return r<0&&(v.assert(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),i.splice(l,0,1),be({inputs:{x:a},backend:s,attrs:{shape:i}})}var pae={kernelName:xl,backendName:"webgl",kernelFunc:u2},gw="return exp(x) - 1.0;",fae=at({opSnippet:gw,packedOpSnippet:gw,cpuKernelImpl:Gee}),mae={kernelName:bl,backendName:"webgl",kernelFunc:fae},yw=class{constructor(e,t,n){this.variableNames=["real","imag"];let s=t[1];this.outputShape=t;let r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0",o;if(e==="real")o="return real * expR - imag * expI;";else if(e==="imag")o="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${o}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${s});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${s}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function q8(e,t,n){let s=n.texData.get(e.dataId),r=v.sizeFromShape(e.shape),a=e.shape[e.shape.length-1],o=r/a,i=be({inputs:{x:e},backend:n,attrs:{shape:[o,a]}}),l=i.shape,u=new yw("real",l,t),c=new yw("imag",l,t),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],d=n.runWebGLProgram(u,h,"float32"),p=n.runWebGLProgram(c,h,"float32"),f=di({inputs:{real:d,imag:p},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p);let m=be({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}function gae(e){let{inputs:t,backend:n}=e,{input:s}=t;return q8(s,!1,n)}var yae={kernelName:u0,backendName:"webgl",kernelFunc:gae},Aae=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function $p(e){let{backend:t,attrs:n}=e,{shape:s,value:r}=n,{dtype:a}=n;if(a=a||v.inferDtype(r),a==="string"){let o=v.getArrayFromDType(a,v.sizeFromShape(s));return o.fill(r),t.makeTensorInfo(s,a,o)}else{let o=new Aae(s,r),i=[[r]];return t.runWebGLProgram(o,[],a,i)}}var xae={kernelName:Ic,backendName:"webgl",kernelFunc:$p},bae=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},vae={kernelName:vl,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,s=t,r=new bae(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},Aw="return floor(x);",wae=at({opSnippet:Aw,packedOpSnippet:Aw,cpuKernelImpl:Hee}),kae={kernelName:To,backendName:"webgl",kernelFunc:wae},Sae=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,Iae=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,Cae=Tn({opSnippet:Sae,packedOpSnippet:Iae,dtype:"int32"}),Tae={kernelName:No,backendName:"webgl",kernelFunc:Cae},Nae=class{constructor(e){this.variableNames=["A"];let t=ss(),[n,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},Eae=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=ss(),[n,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${s}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},_ae={kernelName:lh,backendName:"webgl",kernelFunc:Rae},_u,Oy=K().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Rae(e){let{inputs:t,backend:n,attrs:s}=e,{pixels:r}=t,{numChannels:a}=s,o=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[l,u]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],h=[u,l,a];if(i||o){let m=K().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(_u==null||m!==Oy)&&(Oy=m,_u=document.createElement("canvas").getContext("2d",{willReadFrequently:Oy})),_u.canvas.width=l,_u.canvas.height=u,_u.drawImage(r,0,0,l,u),r=_u.canvas}let d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=Vs.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);let p=K().getBool("WEBGL_PACK")?new Eae(h):new Nae(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}function $ae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=T.convertConv2DDataFormat(c),g=T.computeConv2DInfo(r.shape,a.shape,l,h,u,d,!1,m),y,x=[],A=o!=null,b=i!=null,w=p==="leakyrelu",S=()=>{let _=[r,a],R=(D,E)=>{if(E==="NCHW"&&D.shape.length===1&&D.shape[0]!==1){let F=be({inputs:{x:D},backend:n,attrs:{shape:[D.shape[0],1,1]}});return x.push(F),F}return D};if(A&&_.push(R(o,c)),b&&_.push(R(i,c)),w){let D=n.makeTensorInfo([],"float32",v.createScalarValue(f,"float32"));_.push(D),x.push(D)}return _};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=W8({x:r,filter:a,convInfo:g,backend:n,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else if(g.strideWidth<=2&&m==="channelsLast"&&K().getBool("WEBGL_EXP_CONV")){let _=p?vh(p,!0):null,R=new B8(g,A,_,b,w),D=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],E=S();y=n.runWebGLProgram(R,E,"float32",D)}else if(K().getBool("WEBGL_CONV_IM2COL"))y=V8({x:r,filter:a,convInfo:g,backend:n,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else{let _=p?vh(p,!1):null,R=new L8(g,A,_,b,w),D=S();y=n.runWebGLProgram(R,D,"float32")}let C=be({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return x.push(y),x.forEach(_=>n.disposeIntermediateTensorInfo(_)),C}var Dae={kernelName:Qa,backendName:"webgl",kernelFunc:$ae};function Fae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=[],m=c;m==null&&(m=[1,1]),v.assert(T.eitherStridesOrDilationsAreOne(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);let g=T.computeConv2DInfo(r.shape,a.shape,l,m,u,h,!0),y=K().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,x=d?vh(d,y):null,A=[r,a],b=o!=null,w=i!=null,S=d==="leakyrelu";if(b&&A.push(o),w&&A.push(i),S){let D=n.makeTensorInfo([],"float32",v.createScalarValue(p,"float32"));A.push(D),f.push(D)}let C;y?C=new H8(g,b,x,w,S):C=new G8(g,b,x,w,S);let _=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],R=n.runWebGLProgram(C,A,"float32",_);return f.forEach(D=>n.disposeIntermediateTensorInfo(D)),R}var Oae={kernelName:eo,backendName:"webgl",kernelFunc:Fae},Pae=class{constructor(e,t,n,s){this.sliceDim=e,this.strides=t,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=n;let r=yt(t.length),a=yt(n.length),o=this.sliceDim>1?"strides[j]":"strides",i=yt(s.length),l=s.length>1?"paramsShape[j]":"paramsShape";this.userCode=`
        ${r} strides = ${r}(${this.strides});
        ${i} paramsShape = ${i}(${this.paramsShape});
         void main() {
          ${a} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            out_of_bounds = out_of_bounds || index < 0;
            out_of_bounds = out_of_bounds || index >= ${l};
            flattenIndex += index * ${o};
          }
          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function Mae(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,o=a[a.length-1],i=v.sizeFromShape(s.shape),[l,u,c,h]=T.prepareAndValidate(s,r),d=be({inputs:{x:r},backend:n,attrs:{shape:[u,o]}}),p=be({inputs:{x:s},backend:n,attrs:{shape:[v.sizeFromShape(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){let y=n.readSync(r.dataId),x=n.bufferSync(s),A=jee(y,x,s.dtype,u,o,c,h,s.shape,i);return n.makeTensorInfo(l,s.dtype,A.values)}let f=new Pae(o,h,[u,c],s.shape),m=n.runWebGLProgram(f,[p,d],p.dtype),g=be({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}var zae={kernelName:kl,backendName:"webgl",kernelFunc:Mae},Lae=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=yt(this.rank),s=Bae(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${s}));
      }
    `}};function Bae(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e.length;r++)r===2?s.push("index"):s.push(`${n[r]}`);return s.join()}function X8(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s,l=v.parseAxisParam(o,r.shape)[0];if(K().get("DEBUG")){let x=n.readSync(a.dataId),A=r.shape[l];for(let b=0;b<x.length;++b){let w=x[b];v.assert(w<=A-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${A-1}]`)}}let u=T.segment_util.collectGatherOpShapeInfo(r,a,l,i),c=v.sizeFromShape(a.shape),h=[],d=be({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=be({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);let f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,a])||r.dtype==="string"){let x=n.bufferSync(p),A=n.bufferSync(d),b=qee(A,x,f);return h.forEach(w=>n.disposeIntermediateTensorInfo(w)),n.makeTensorInfo(u.outputShape,b.dtype,b.values)}let m=new Lae(d.shape,f),g=n.runWebGLProgram(m,[d,p],d.dtype);h.push(g);let y=be({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach(x=>n.disposeIntermediateTensorInfo(x)),y}var Wae={kernelName:wl,backendName:"webgl",kernelFunc:X8},Vae="return float(a > b);",Uae=`
  return vec4(greaterThan(a, b));
`,Gae=Tn({opSnippet:Vae,packedOpSnippet:Uae,cpuKernelImpl:Xee,dtype:"bool"}),Hae={kernelName:Sl,backendName:"webgl",kernelFunc:Gae},jae="return float(a >= b);",qae=`
  return vec4(greaterThanEqual(a, b));
`,Xae=Tn({opSnippet:jae,packedOpSnippet:qae,dtype:"bool",cpuKernelImpl:Kee}),Kae={kernelName:_o,backendName:"webgl",kernelFunc:Xae};function Zae(e){let{inputs:t,backend:n}=e,{input:s}=t;return q8(s,!0,n)}var Yae={kernelName:c0,backendName:"webgl",kernelFunc:Zae},Jae="return float(!isnan(x) && !isinf(x));",Qae=at({opSnippet:Jae,dtype:"bool"}),eoe={kernelName:Cc,backendName:"webgl",kernelFunc:Qae},toe="return float(isinf(x));",noe=at({opSnippet:toe,dtype:"bool"}),soe={kernelName:Tc,backendName:"webgl",kernelFunc:noe},roe="return float(isnan(x));",aoe=at({opSnippet:roe,dtype:"bool"}),ooe={kernelName:Il,backendName:"webgl",kernelFunc:aoe},ioe="return float(a < b);",loe=`
  return vec4(lessThan(a, b));
`,uoe=Tn({opSnippet:ioe,packedOpSnippet:loe,cpuKernelImpl:Zee,dtype:"bool"}),coe={kernelName:Cl,backendName:"webgl",kernelFunc:uoe},doe="return float(a <= b);",hoe=`
  return vec4(lessThanEqual(a, b));
`,poe=Tn({opSnippet:doe,packedOpSnippet:hoe,cpuKernelImpl:Yee,dtype:"bool"}),foe={kernelName:Tl,backendName:"webgl",kernelFunc:poe};function moe(e){let{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,o=Jee(s,r,a);return t.makeTensorInfo([o.length],"float32",o)}var goe={kernelName:d0,backendName:"webgl",kernelFunc:moe},yoe=id+`
  return x < 0.0 ? 0./0. : log(x);
`,Aoe=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,xoe=at({opSnippet:yoe,packedOpSnippet:Aoe,cpuKernelImpl:Qee}),boe={kernelName:Do,backendName:"webgl",kernelFunc:xoe},voe=id+`
  return log(1.0 + x);
`,woe=at({opSnippet:voe}),koe={kernelName:Nc,backendName:"webgl",kernelFunc:woe},Soe="return float(a >= 1.0 && b >= 1.0);",Ioe=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Coe=Tn({opSnippet:Soe,packedOpSnippet:Ioe,dtype:"bool"}),Toe={kernelName:Nl,backendName:"webgl",kernelFunc:Coe},Noe="return float(!(x >= 1.0));",Eoe=at({opSnippet:Noe}),_oe={kernelName:El,backendName:"webgl",kernelFunc:Eoe},Roe="return float(a >= 1.0 || b >= 1.0);",$oe=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Doe=Tn({opSnippet:Roe,packedOpSnippet:$oe,dtype:"bool"}),Foe={kernelName:Ec,backendName:"webgl",kernelFunc:Doe},Ooe=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];let a=t,o=e[3]-1;this.outputShape=e;let i,l=`float(${n}) + float(${s}) * sum`;r===.5?i=`inversesqrt(${l})`:r===1?i=`1.0/(${l})`:i=`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${o}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${i};
        setOutput(val);
      }
    `}},Poe=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let a=t,o=e[3]-1;this.outputShape=e;let i,l=`float(${n}) + float(${s}) * sum`;r===.5?i=`inversesqrt(${l})`:r===1?i=`1.0/(${l})`:i=`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${i};
        setOutput(result);
      }
    `}},Moe=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:o,alpha:i,beta:l}=s,u=K().getBool("WEBGL_PACK_NORMALIZATION")?new Poe(r.shape,a,o,i,l):new Ooe(r.shape,a,o,i,l);return n.runWebGLProgram(u,[r],r.dtype)},zoe={kernelName:Oh,backendName:"webgl",kernelFunc:Moe},Loe=class{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${s}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${s})
                * float(${r})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},Boe=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:o}=t,{depthRadius:i,bias:l,alpha:u,beta:c}=s,h=new Loe(r.shape,i,l,u,c);return n.runWebGLProgram(h,[r,a,o],r.dtype)},Woe={kernelName:h0,backendName:"webgl",kernelFunc:Boe};function Voe(e,t,n,s){let r=v.sizeFromShape(t),o=v.sizeFromShape(e.shape)/r,i=be({inputs:{x:e},attrs:{shape:[o,r]},backend:s}),l=lu(i,e.dtype,"max",s),u=be({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),u}function K8(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s,i=r.shape.length,l=v.parseAxisParam(a,r.shape),u=l,c=T.getAxesPermutation(u,i),h=c!=null,d=n.shouldExecuteOnCPU([r]),p=r;if(h){if(d){let A=n.texData.get(p.dataId).values,b=new Array(i);for(let C=0;C<b.length;C++)b[C]=r.shape[c[C]];let w=av(A,r.shape,r.dtype,c,b);p=n.makeTensorInfo(b,r.dtype);let S=n.texData.get(p.dataId);S.values=w}else p=Eg(r,c,n);u=T.getInnerMostAxes(u.length,i)}T.assertAxesAreInnerMostDims("max",u,i);let[f,m]=T.computeOutAndReduceShapes(p.shape,u),g=f;o&&(g=T.expandShapeToKeepDim(f,l));let y;if(d){let A=n.texData.get(p.dataId).values,b=ete(A,v.sizeFromShape(m),g,r.dtype);y=n.makeTensorInfo(g,r.dtype);let w=n.texData.get(y.dataId);w.values=b}else y=Voe(p,m,g,n);return h&&n.disposeIntermediateTensorInfo(p),y}var Uoe={kernelName:Fo,backendName:"webgl",kernelFunc:K8},Goe=T8+`
  return max(a, b);
`,Hoe=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Ng+`
  return result;
`,joe=Tn({opSnippet:Goe,packedOpSnippet:Hoe,cpuKernelImpl:tte}),qoe={kernelName:Oo,backendName:"webgl",kernelFunc:joe};function Xoe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;nd(r,"maxPool");let{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,u=1;v.assert(T.eitherStridesOrDilationsAreOne(o,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);let c=T.computePool2DInfo(r.shape,a,o,u,i,l);if(c.filterWidth===1&&c.filterHeight===1&&v.arraysEqual(c.inShape,c.outShape))return $s({inputs:{x:r},backend:n});let h=new wh(c,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}var Koe={kernelName:Po,backendName:"webgl",kernelFunc:Xoe};function Zoe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dataFormat:l,dimRoundingMode:u}=s,c=[1,1,1],h=T.computePool3DInfo(r.shape,a,o,c,i,u,l),d=new iv(h,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}var Yoe={kernelName:Ph,backendName:"webgl",kernelFunc:Zoe},Joe=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,o=r-1-e.padInfo.top,i=a-1-e.padInfo.left,l=r*a-1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},Qoe=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=i-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,p=i*l*u-1;this.userCode=`
      const ivec3 pads = ivec3(${c}, ${h}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${i};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${o}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${p} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function eie(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a,{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=s,h=[1,1,1],d=T.computePool3DInfo(o.shape,i,l,h,u,c),p=new iv(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new Qoe(d),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}var tie={kernelName:f0,backendName:"webgl",kernelFunc:eie};function nie(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:o}=t,i=a;nd([a,o],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=T.computePool2DInfo(i.shape,l,u,1,c,h),p=!0,f=new wh(d,"max",p),m=n.runWebGLProgram(f,[i],i.dtype),g=new Joe(d),y=n.runWebGLProgram(g,[r,m],i.dtype);return n.disposeIntermediateTensorInfo(m),y}var sie={kernelName:p0,backendName:"webgl",kernelFunc:nie};function rie(e,t,n,s){let r=new wh(n,"max",!1),a=s.runWebGLProgram(r,[e],"float32");r=new wh(n,"max",!0,!0,t);let o=s.runWebGLProgram(r,[e],"float32");return[a,o]}var aie={kernelName:m0,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{filterSize:r,strides:a,pad:o,includeBatchInIndex:i}=t,l=n;v.assert(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);let u=[1,1];v.assert(T.eitherStridesOrDilationsAreOne(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let c=T.computePool2DInfo(s.shape,r,a,u,o),[h,d]=rie(s,i,c,l);return[h,d]}};function oie(e,t,n,s){let r=v.sizeFromShape(t),o=v.sizeFromShape(e.shape)/r,i=be({inputs:{x:e},attrs:{shape:[o,r]},backend:s}),l=lu(i,"float32","mean",s),u=be({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),u}var iie={kernelName:Mo,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{keepDims:r,axis:a}=t,o=n,i=s.shape.length,l=v.parseAxisParam(a,s.shape),u=l,c=T.getAxesPermutation(u,i),h=c!=null,d=o.shouldExecuteOnCPU([s]),p=[],f=s;if(h){if(d){let b=o.texData.get(f.dataId).values,w=new Array(i);for(let _=0;_<w.length;_++)w[_]=s.shape[c[_]];let S=av(b,s.shape,s.dtype,c,w);f=o.makeTensorInfo(w,s.dtype);let C=o.texData.get(f.dataId);C.values=S}else f=Eg(s,c,o);p.push(f),u=T.getInnerMostAxes(u.length,i)}T.assertAxesAreInnerMostDims("sum",u,i);let[m,g]=T.computeOutAndReduceShapes(f.shape,u),y=m;r&&(y=T.expandShapeToKeepDim(m,l));let x=oie(f,g,y,o);for(let A of p)o.disposeIntermediateTensorInfo(A);return x}};function lie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=v.parseAxisParam(a,r.shape),u=l,c=T.getAxesPermutation(u,i),h=r;c!=null&&(h=es({inputs:{x:r},backend:n,attrs:{perm:c}}),u=T.getInnerMostAxes(u.length,r.shape.length)),T.assertAxesAreInnerMostDims("min",u,i);let[d,p]=T.computeOutAndReduceShapes(h.shape,u),f=v.sizeFromShape(p),m=be({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),g=lu(m,m.dtype,"min",n),y;if(o){let x=T.expandShapeToKeepDim(d,l);y=be({inputs:{x:g},backend:n,attrs:{shape:x}})}else y=be({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(h),y}var uie={kernelName:zo,backendName:"webgl",kernelFunc:lie},cie=T8+`
  return min(a, b);
`,die=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Ng+`
  return result;
`,hie=Tn({opSnippet:cie,packedOpSnippet:die,cpuKernelImpl:nte}),pie={kernelName:Lo,backendName:"webgl",kernelFunc:hie},fie=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((u,c)=>u[0]+e[c]+u[1]);let s=e.length,r=yt(s),a=t.map(u=>u[0]).join(","),o=t.map((u,c)=>u[0]+e[c]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l=n==="reflect"?0:1;if(s===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${o});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${s}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${i}));
      }
    `}},mie=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((p,f)=>p[0]+e[f]+p[1]);let s=e.length,r=yt(s),a=t.map(p=>p[0]).join(","),o=t.map((p,f)=>p[0]+e[f]).join(","),i=Jn("rc",s),l=Jn("source",s),u=`${i[s-1]} < ${this.outputShape[s-1]}`,c=s===1?"source":`vec2(${l.slice(-2).join()})`,h=n==="reflect"?0:1,d="";if(s===1){let p=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${h};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${h};
        }
        source -= start;
      `;d=`
        ${r} rc = outputLoc;
        ${p}
        result[0] = getChannel(getX(${l.join()}), ${c});
        ${i[s-1]} += 1;
        if(${u}) {
          ${p}
          result[1] = getChannel(getX(${l.join()}), ${c});
        }
      `}else{let p=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${h}) +
                gte * ((end - 1) * 2 - source + ${h});
        source -= start;
      `;d=`
        ${r} rc = outputLoc;
        ${p}
        result[0] = getChannel(getX(${l.join()}), ${c});
        ${i[s-1]} += 1;
        if(${u}) {
          ${p}
          result[1] = getChannel(getX(${l.join()}), ${c});
        }
        rc = outputLoc;
        ${i[s-2]} += 1;
        if(${i[s-2]} < ${this.outputShape[s-2]}) {
          ${p}
          result[2] = getChannel(getX(${l.join()}), ${c});
          ${i[s-1]} += 1;
          if(${u}) {
            ${p}
            result[3] = getChannel(getX(${l.join()}), ${c});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${o});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}},gie=({inputs:e,backend:t,attrs:n})=>{let{x:s}=e,{paddings:r,mode:a}=n,o=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new mie(s.shape,r,a):new fie(s.shape,r,a);return t.runWebGLProgram(o,[s],s.dtype)},yie={kernelName:Bo,backendName:"webgl",kernelFunc:gie},Aie=`if (b == 0.0) return NAN;
  return mod(a, b);`,xie=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+Ng+`
  return result;
`,bie=Tn({opSnippet:Aie,packedOpSnippet:xie}),vie={kernelName:_c,backendName:"webgl",kernelFunc:bie},wie=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},kie=`
if (a == b) {
  return 1.0;
};
return a / b;`,Sie=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,Z8=Tn({opSnippet:kie,packedOpSnippet:Sie,checkOutOfBounds:!0}),Iie={kernelName:So,backendName:"webgl",kernelFunc:Z8},xw="return a - b;",Y8=Tn({opSnippet:xw,packedOpSnippet:xw,supportsComplex:!0,cpuKernelImpl:bte}),Cie={kernelName:si,backendName:"webgl",kernelFunc:Y8};function J8(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=v.parseAxisParam([a],r.shape),i=K8({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=T.expandShapeToKeepDim(i.shape,o),u=be({inputs:{x:i},backend:n,attrs:{shape:l}}),c=Y8({inputs:{a:r,b:u},backend:n}),h=j8({inputs:{x:c},backend:n}),d=_g({inputs:{x:h},backend:n,attrs:{axis:o,keepDims:!1}}),p=be({inputs:{x:d},backend:n,attrs:{shape:l}}),f=Z8({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}var Tie={kernelName:ti,backendName:"webgl",kernelFunc:J8};function Nie(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:o,normalized:i}=s,l=i?r:J8({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new wie(u,c,a),d=[[o]],p=n.runWebGLProgram(h,[l],"int32",d);return i||n.disposeIntermediateTensorInfo(l),p}var Eie={kernelName:g0,backendName:"webgl",kernelFunc:Nie},_ie=ir+`
  return -x;
`,Rie=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function $ie(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){let a=n.texData.get(s.dataId),[o,i]=rte(a.values,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,o)}let r;return K().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Li(s.shape,Rie):r=new ha(s.shape,_ie),n.runWebGLProgram(r,[s],s.dtype)}var Die={kernelName:_l,backendName:"webgl",kernelFunc:$ie},Fie=ar.nonMaxSuppressionV3Impl;function Oie(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s,u=n.readSync(r.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=Fie(u,c,o,i,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}var Pie={kernelName:$l,backendName:"webgl",kernelFunc:Oie},Mie=ar.nonMaxSuppressionV4Impl;function zie(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),{selectedIndices:d,validOutputs:p}=Mie(c,h,o,i,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}var Lie={kernelName:Rc,backendName:"webgl",kernelFunc:zie},Bie=ar.nonMaxSuppressionV5Impl;function Wie(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),d=o,p=i,f=l,m=u,{selectedIndices:g,selectedScores:y}=Bie(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var Vie={kernelName:Dl,backendName:"webgl",kernelFunc:Wie},Uie=class{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${s}), float(${n}),
                      float(index == coords.y)));
      }
    `}},Gie=e=>{let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{dtype:a,depth:o,onValue:i,offValue:l}=s,u=v.sizeFromShape(r.shape),c=new Uie(u,o,i,l),h=be({inputs:{x:r},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[h],a);n.disposeIntermediateTensorInfo(h);let p=[...r.shape,o],f=be({inputs:{x:d},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(d),f},Hie={kernelName:Ol,backendName:"webgl",kernelFunc:Gie};function Bm(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){let r=Rp({inputs:{input:s},backend:n}),a=Bm({inputs:{x:r},backend:n}),o=Rg({inputs:{input:s},backend:n}),i=Bm({inputs:{x:o},backend:n}),l=di({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return $p({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}var jie={kernelName:Jl,backendName:"webgl",kernelFunc:Bm};function Q8(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let r=Rp({inputs:{input:s},backend:n}),a=Q8({inputs:{x:r},backend:n}),o=Rg({inputs:{input:s},backend:n}),i=Bm({inputs:{x:o},backend:n}),l=di({inputs:{real:a,imag:i},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}else return $p({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}var qie={kernelName:Fl,backendName:"webgl",kernelFunc:Q8};function Xie(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return u2({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(c=>{v.assertShapesMatch(a,c.shape,"All tensors passed to stack must have matching shapes"),v.assert(o===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(c=>{let h=u2({inputs:{input:c},backend:n,attrs:{dim:r}});return i.push(h),h}),u=z8({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(c=>n.disposeIntermediateTensorInfo(c)),u}var Kie={kernelName:Pl,backendName:"webgl",kernelFunc:Xie},Zie=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((l,u)=>l[0]+e[u]+l[1]);let s=e.length,r=yt(s),a=t.map(l=>l[0]).join(","),o=t.map((l,u)=>l[0]+e[u]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);if(s===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${o});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${i}));
        }
      }
    `}},Yie=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);let s=e.length,r=yt(s),a=t.map(f=>f[0]).join(","),o=t.map((f,m)=>f[0]+e[m]).join(","),i=Jn("rc",s),l=Jn("source",s),u=`${i[s-1]} < ${this.outputShape[s-1]}`,c=s===1?"source":`vec2(${l.slice(-2).join()})`,h=[`${r} rc = outputLoc;`,`${i[s-1]} += 1;
       if(${u}) {
      `,s===1?"":`}
       rc = outputLoc;
       ${i[s-2]} += 1;
       if(${i[s-2]} < ${this.outputShape[s-2]}) {`,s===1?"":`  ${i[s-1]} += 1;
         if(${u}) {`],d=s===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",p="";for(let f=0,m=s===1?2:4;f<m;f++)p+=`
        ${h[f]}
        if (${d}) {
          result[${f}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${f}] = getChannel(getX(${l.join()}), ${c});
        }
      `;p+=s===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${o});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}},eT=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;if(v.sizeFromShape(r.shape)===0){let u=a.map((c,h)=>c[0]+r.shape[h]+c[1]);return $p({backend:n,attrs:{shape:u,value:o,dtype:r.dtype}})}let i=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Yie(r.shape,a,o):new Zie(r.shape,a,o),l=[[o]];return n.runWebGLProgram(i,[r],r.dtype,l)},Jie={kernelName:Vo,backendName:"webgl",kernelFunc:eT},Qie=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,ele=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+Ng+`
  return result;
`,tle=Tn({opSnippet:Qie,packedOpSnippet:ele}),nle={kernelName:Uo,backendName:"webgl",kernelFunc:tle};function sle(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,i=r.shape.length,l=[],u=v.parseAxisParam(a,r.shape),c=u,h=T.getAxesPermutation(c,i),d=r;h!=null&&(d=es({inputs:{x:r},backend:n,attrs:{perm:h}}),c=T.getInnerMostAxes(c.length,i),l.push(d)),T.assertAxesAreInnerMostDims("prod",c,i);let p;if(n.shouldExecuteOnCPU([d])){let f=n.texData.get(d.dataId).values,{outVals:m,outShape:g,outDtype:y}=ote(d.shape,d.dtype,f,c);p=n.makeTensorInfo(g,y,m)}else{let[f,m]=T.computeOutAndReduceShapes(d.shape,c),g=v.sizeFromShape(m),y=be({inputs:{x:d},backend:n,attrs:{shape:[-1,g]}}),x=qh(r.dtype),A=lu(y,x,"prod",n);p=be({inputs:{x:A},backend:n,attrs:{shape:f}}),l.push(y),l.push(A)}if(o){l.push(p);let f=T.expandShapeToKeepDim(p.shape,u);p=be({inputs:{x:p},backend:n,attrs:{shape:f}})}return l.forEach(f=>n.disposeIntermediateTensorInfo(f)),p}var rle={kernelName:Ho,backendName:"webgl",kernelFunc:sle};function ale(e){let{inputs:t,backend:n,attrs:s}=e,{shape:r,values:a,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:l}=s,u=n.readSync(r.dataId),c=n.readSync(a.dataId),h=n.readSync(o.dataId),d=i.map(g=>n.readSync(g.dataId)),p=i.map(g=>g.shape),[f,m]=ite(u,r.shape,c,a.shape,a.dtype,h,o.shape,d,p,l);return n.makeTensorInfo(f,a.dtype,m)}var ole={kernelName:y0,backendName:"webgl",kernelFunc:ale},tT=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=lte(s,r,a,o);return t.makeTensorInfo([i.length],o,i)},ile={kernelName:$c,backendName:"webgl",kernelFunc:tT},lle="return 1.0 / x;",ule=at({opSnippet:lle}),cle={kernelName:Ml,backendName:"webgl",kernelFunc:ule},dle=ir+`
  return (x < 0.0) ? 0.0 : x;
`,hle=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,ple=at({opSnippet:dle,packedOpSnippet:hle}),fle={kernelName:jo,backendName:"webgl",kernelFunc:ple},mle=ir+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,gle=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,yle=at({opSnippet:mle,packedOpSnippet:gle}),Ale={kernelName:Ko,backendName:"webgl",kernelFunc:yle},xle=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let u=[s&&t>1?o-1:o,s&&n>1?i-1:i],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h;r?h="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":h="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/c[0]},
          ${u[1]/c[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},ble=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let u=[s&&t>1?o-1:o,s&&n>1?i-1:i],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h;r?h="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":h="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/c[0]},
          ${u[1]/c[1]},
          ${u[1]/c[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function vle(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,u]=i,c=K().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ble(r.shape,l,u,a,o):new xle(r.shape,l,u,a,o);return n.runWebGLProgram(c,[r],"float32")}var wle={kernelName:Xo,backendName:"webgl",kernelFunc:vle},kle=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,s,r]=t,[,a,o]=e,i=[n&&a>1?s-1:s,n&&o>1?r-1:r],l=[n&&a>1?a-1:a,n&&o>1?o-1:o],u=i[0]/l[0],c=i[1]/l[1],h=1/u,d=1/c,p=Math.ceil(h)*2+2,f=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${c});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${d});

        const int winHeight = int(${p});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Sle(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s,i=new kle(a.shape,r.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}var Ile={kernelName:x0,backendName:"webgl",kernelFunc:Sle},Cle=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let u=[s&&t>1?o-1:o,s&&n>1?i-1:i],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0",d;r?d="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/c[0]},
          ${u[1]/c[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},Tle=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,o,i,l]=e;this.outputShape=[a,t,n,l];let u=[s&&t>1?o-1:o,s&&n>1?i-1:i],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0",d;r?d="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/c[0]},
          ${u[1]/c[1]},
          ${u[1]/c[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function Nle(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,u]=i,c=K().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Tle(r.shape,l,u,a,o):new Cle(r.shape,l,u,a,o);return n.runWebGLProgram(c,[r],r.dtype)}var Ele={kernelName:qo,backendName:"webgl",kernelFunc:Nle},_le=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,s,r]=t,[,a,o]=e,i=[n&&a>1?s-1:s,n&&o>1?r-1:r],l=[n&&a>1?a-1:a,n&&o>1?o-1:o],u=i[0]/l[0],c=i[1]/l[1],h=1/u,d=1/c,p=Math.ceil(h)*2+2,f=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${c});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${d});

        const int winHeight = int(${p});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float sourceFracRow =
              float(${i[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${i[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Rle(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:o}=s,i=new _le(a.shape,r.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}var $le={kernelName:A0,backendName:"webgl",kernelFunc:Rle},Dle=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let s=o=>t.indexOf(o)!==-1&&e[o]!==1?`${e[o]} - coords[${o}] - 1`:`coords[${o}]`,r=e.map((o,i)=>s(i)).join(","),a=yt(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}},Fle=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let s=Jn("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,o=yt(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${i(s.slice())};
          if(${r}){
            result.g = ${l(s.slice())};
          }
          if(${a}) {
            result.b = ${u(s.slice())};
            if(${r}) {
              result.a = ${c(s.slice())};
            }
          }
          setOutput(result);
        }
    `;function i(p){return h(p)}function l(p){return p[n-1]="("+p[n-1]+" + 1)",h(p)}function u(p){return p[n-2]="("+p[n-2]+" + 1)",h(p)}function c(p){return p[n-1]="("+p[n-1]+" + 1)",p[n-2]="("+p[n-2]+" + 1)",h(p)}function h(p){let f=e.map((y,x)=>d(x,p)),m=f.join(","),g=f.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${g}))`}function d(p,f){return t.indexOf(p)!==-1&&e[p]!==1?`${e[p]} - ${f[p]} - 1`:`${f[p]}`}}};function Ole(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,o=r.shape.length,i=v.parseAxisParam(a,r.shape);if(o===0)return $s({inputs:{x:r},backend:n});let l=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Fle(r.shape,i):new Dle(r.shape,i);return n.runWebGLProgram(l,[r],r.dtype)}var Ple={kernelName:Ll,backendName:"webgl",kernelFunc:Ole},Mle=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],s=e[2];this.outputShape=e;let r="";typeof t=="number"?r=`float outputValue = ${t.toFixed(2)};`:r=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},zle={kernelName:Ql,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,l=new Mle(s.shape,a),[u,c]=T.getImageCenter(o,s.shape[1],s.shape[2]),h=[[u,c,Math.sin(r),Math.cos(r)]];return i.runWebGLProgram(l,[s],s.dtype,h)}},Lle=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Ble=at({opSnippet:Lle}),Wle={kernelName:Bl,backendName:"webgl",kernelFunc:Ble},Vle="return inversesqrt(x);",Ule=at({opSnippet:Vle,cpuKernelImpl:ute}),Gle={kernelName:Zo,backendName:"webgl",kernelFunc:Ule},nT=class{constructor(e,t,n,s,r,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;let i=yt(r.length),l=yt(a.length),u="";n===1?u="i":n===2&&(u="i, j");let c=`getIndices(${u})`,h="";s===1?h="i":s===2&&(h="i, coords[1]");let d=`getUpdates(${h})`,p=t>1?"strides[j]":"strides";this.userCode=`
        ${i} strides = ${i}(${r});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${c});
              flattenedIndex += index * ${p};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${d};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function Hle(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=T.calculateShapes(a,r,o),d=[h/u,u];if(h===0)return n.makeTensorInfo(o,r.dtype);let p=be({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),f=be({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new nT(l,i,p.shape.length,f.shape.length,c,d),y=n.runWebGLProgram(g,[f,p,m],f.dtype),x=be({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),x}var jle={kernelName:Wl,backendName:"webgl",kernelFunc:Hle},qle=class{constructor(e,t,n,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];let r="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,o=K().getNumber("WEBGL_VERSION")===2?r:a,i=s==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${o}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${i} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function Xle(e){let{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:a}=t,{side:o}=s,i=new qle(r.shape[0],r.shape[1],a.shape[1],o),l=[[r.shape[1]]];return n.runWebGLProgram(i,[r,a],"int32",l)}var Kle={kernelName:b0,backendName:"webgl",kernelFunc:Xle},Zle=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let s,r;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)r="resRC",s="resRC";else{let o=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],l=[];for(let u=0;u<t.length;u++)l.push(`${o[u]}`),u<e&&i.push(`${o[u]}`);s=i.join(),r=l.join()}let a=yt(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${s});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}};function Yle(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=new Zle(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(o,[s,r,a],Fn(r.dtype,a.dtype))}var Jle={kernelName:Vl,backendName:"webgl",kernelFunc:Yle},Qle=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${T.SELU_SCALEALPHA};
  float scale = ${T.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,eue=at({opSnippet:Qle}),tue={kernelName:Dc,backendName:"webgl",kernelFunc:eue},nue=id+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,sue=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,rue=at({opSnippet:nue,packedOpSnippet:sue,cpuKernelImpl:dte}),aue={kernelName:Jo,backendName:"webgl",kernelFunc:rue},oue=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,iue=at({opSnippet:oue}),lue={kernelName:Fc,backendName:"webgl",kernelFunc:iue},uue=id+`
  return sin(x);
`,cue=at({opSnippet:uue}),due={kernelName:Yo,backendName:"webgl",kernelFunc:cue},hue=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,pue=at({opSnippet:hue}),fue={kernelName:Gl,backendName:"webgl",kernelFunc:pue},mue=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,gue=at({opSnippet:mue}),yue={kernelName:Oc,backendName:"webgl",kernelFunc:gue},Aue=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;v.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let i=a.reduce((y,x)=>y*x),l=[[0,0]];l.push(...o);for(let y=1+a.length;y<r.shape.length;++y)l.push([0,0]);let u=[],c=eT({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),h=T.getReshaped(c.shape,a,i,!1),d=T.getPermuted(h.length,a.length,!1),p=T.getReshapedPermuted(c.shape,a,i,!1),f=be({inputs:{x:c},backend:n,attrs:{shape:h}}),m=es({inputs:{x:f},backend:n,attrs:{perm:d}}),g=be({inputs:{x:m},backend:n,attrs:{shape:p}});return u.push(c),u.push(f),u.push(m),u.forEach(y=>n.disposeIntermediateTensorInfo(y)),g},xue={kernelName:Hl,backendName:"webgl",kernelFunc:Aue};function bue(e){let{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:o}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);let i=n.readSync(s.dataId),l=n.readSync(r.dataId),u=n.readSync(a.dataId),c=n.readSync(o.dataId)[0],[h,d,p,f,m]=pte(i,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var vue={kernelName:zh,backendName:"webgl",kernelFunc:bue};function wue(e){let{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=Array.from(n.readSync(r.dataId)),i=n.readSync(s.dataId),l=Array.from(n.readSync(a.dataId)),[u,c,h]=fte(i,s.shape,s.dtype,o,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}var kue={kernelName:Pc,backendName:"webgl",kernelFunc:wue};function Sue(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${a.shape}`);let o=n.readSync(s.dataId),i=n.readSync(r.dataId),l=n.readSync(a.dataId),[u,c]=k8(o,s.shape,s.dtype,i,l,!0);return n.makeTensorInfo(c,s.dtype,u)}var Iue={kernelName:Lh,backendName:"webgl",kernelFunc:Sue};function Cue(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${a.shape}`);let o=n.readSync(s.dataId),i=n.readSync(r.dataId),l=n.readSync(a.dataId),[u,c]=k8(o,s.shape,s.dtype,i,l);return n.makeTensorInfo(c,s.dtype,u)}var Tue={kernelName:Bh,backendName:"webgl",kernelFunc:Cue};function Nue(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=T.calculateShapes(a,r,i),p=!1;if(a.dtype==="string"){let y=n.bufferSync(r),x=n.bufferSync(a),A=v.decodeString(n.readSync(o.dataId)[0]),b=cte(y,x,i,d,c,u,l,h,A,p);return n.makeTensorInfo(i,b.dtype,b.values)}let f=new nT(u,l,r.shape.length,a.shape.length,h,[d,1],p),m=n.runWebGLProgram(f,[a,r,o],a.dtype),g=be({inputs:{x:m},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(m),g}var Eue={kernelName:Wh,backendName:"webgl",kernelFunc:Nue};function _ue(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=v.parseAxisParam(o,r.shape)[0],l=T.prepareSplitSize(r,a,i),u=r.shape.length,c=new Array(u).fill(0),h=r.shape.slice();return l.map(d=>{let p=[...h];p[i]=d;let f=ld({inputs:{x:r},backend:n,attrs:{begin:c,size:p}});return c[i]+=d,f})}var Rue={kernelName:jl,backendName:"webgl",kernelFunc:_ue},bw="return sqrt(x);",$ue=at({opSnippet:bw,packedOpSnippet:bw,cpuKernelImpl:mte}),Due={kernelName:Qo,backendName:"webgl",kernelFunc:$ue},Fue="return x * x;",Oue=at({opSnippet:Fue}),Pue={kernelName:Mc,backendName:"webgl",kernelFunc:Oue},vw="return (a - b) * (a - b);",Mue=Tn({opSnippet:vw,packedOpSnippet:vw}),zue={kernelName:ni,backendName:"webgl",kernelFunc:Mue};function Lue({inputs:e,attrs:t,backend:n}){let{x:s}=e,r=ir+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,a=new ha(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}var Bue={kernelName:ai,backendName:"webgl",kernelFunc:Lue},Wue=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let s=n.length,r=yt(n.length),a=yt(n.length),o="";if(s===1)o="coords * strides + begin";else{let i=0;o=n.map((l,u)=>(i++,n.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${i-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}};function Vue(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=zt.sliceInfo(r.shape,a,o,i,l,u,c,h,d),w;if(m)w=be({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let C=zt.computeOutShape(x,A,b),_=ld({inputs:{x:r},backend:n,attrs:{begin:x,size:C}});w=be({inputs:{x:_},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(_)}else if(n.shouldExecuteOnCPU([r])){let _=n.readSync(r.dataId),R=Le(r.shape,r.dtype,_),D=gte(p,R,b,x);w=n.makeTensorInfo(f,r.dtype,D.values)}else{let _=new Wue(x,b,p);w=n.runWebGLProgram(_,[r],r.dtype)}let S=be({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),S}var Uue={kernelName:ql,backendName:"webgl",kernelFunc:Vue};function Gue(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=yte(d,p,r,a,o,i,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}var Hue={kernelName:zc,backendName:"webgl",kernelFunc:Gue};function jue(e){let{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:o}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);let i=n.readSync(a.dataId),l=n.readSync(o.dataId)[0],[u,c,h]=Ate(i,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}var que={kernelName:Vh,backendName:"webgl",kernelFunc:jue};function Xue(e){let{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let o=n.readSync(a.dataId),i=xte(o,r);return n.makeTensorInfo(a.shape,"int32",i)}var Kue={kernelName:Uh,backendName:"webgl",kernelFunc:Xue},Zue="return tan(x);",Yue=at({opSnippet:Zue}),Jue={kernelName:Xl,backendName:"webgl",kernelFunc:Yue},Que=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,ece=at({opSnippet:Que}),tce={kernelName:ri,backendName:"webgl",kernelFunc:ece},nce=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let s=yt(this.rank),r=sce(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}};function sce(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<e.length;r++)s.push(`imod(${n[r]}, ${e[r]})`);return s.join()}function sT(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if(r.dtype==="string"||r.shape.length>5){let l=n.readSync(r.dataId),u=r.dtype==="string"?l.map(d=>v.decodeString(d)):l,c=Le(r.shape,r.dtype,u),h=vte(c,a);return n.makeTensorInfo(h.shape,h.dtype,h.values)}let o=new nce(r.shape,a);return n.runWebGLProgram(o,[r],r.dtype)}var rce={kernelName:ka,backendName:"webgl",kernelFunc:sT},ace=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},oce=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function Si(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function ww(e){let t=1;for(;t<e;)t*=2;return t}function ice(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s,i=K().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=K().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([r])||c<i||a>l){let D=n.readSync(r.dataId),[E,F]=wte(D,u,r.dtype,a,o);return[n.makeTensorInfo(E.shape,E.dtype,E.values),n.makeTensorInfo(F.shape,F.dtype,F.values)]}if(a===0)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(c===1)return[r,$p({attrs:{shape:u,dtype:"int32",value:0},backend:n})];let h=n.texData.get(r.dataId),d=h!==null&&h.isPacked,p=d?n.unpackTensor(r):r,m=v.sizeFromShape(u)/c,g=be({inputs:{x:p},attrs:{shape:[m,c]},backend:n});d&&Si(n,p);let y=ww(a),x=ww(c),A=null,b=()=>A===null?[g,g]:[g,A],w=(D,E,F)=>{let k=b(),M=new ace(F),W=[[c],[A===null?1:0],[Number.NEGATIVE_INFINITY],[D],[E]],H=A;A=n.runWebGLProgram(M,k,"int32",W),Si(n,H)};for(let D=1;D<y;D*=2){let E=D*2;for(let F=D;F>=1;F/=2)w(E,F,[m,x])}for(let D=x;D>y;D/=2){let E=b(),F=new oce([m,D/2]),M=[[c],[A===null?1:0],[y]],z=A;A=n.runWebGLProgram(F,E,"int32",M),Si(n,z);let W=y/2,H=W*2;for(let j=W;j>=1;j/=2)w(H,j,A.shape)}let S=A;A=ld({inputs:{x:A},backend:n,attrs:{begin:0,size:[m,a]}}),Si(n,S);let C=X8({inputs:{x:g,indices:A},backend:n,attrs:{axis:1,batchDims:1}});Si(n,g);let _=u.slice(0,-1);_.push(a),S=A,A=be({inputs:{x:A},attrs:{shape:_},backend:n}),Si(n,S);let R=C;return C=be({inputs:{x:C},attrs:{shape:_},backend:n}),Si(n,R),[C,A]}var lce={kernelName:Kl,backendName:"webgl",kernelFunc:ice},uce=class{constructor(e,t,n,s,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;let o=n==="nearest"?1:2,i;switch(s){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${i} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${o} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function cce(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:u}=s,[c,h,d,p]=r.shape,[f,m]=u??[h,d],g=[c,f,m,p],y=new uce(h,d,o,i,l,g);return n.runWebGLProgram(y,[r,a],"float32")}var dce={kernelName:Zl,backendName:"webgl",kernelFunc:cce};function hce(e){let{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;nd(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let o=s.readSync(a.dataId),{outputValues:i,outputShape:l,indices:u}=kte(o,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,i),s.makeTensorInfo([u.length],"int32",u)]}var pce={kernelName:v0,backendName:"webgl",kernelFunc:hce};function fce(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r,i=o.shape.length,l=r.shape[a],u=new Array(i-1),c=0;for(let m=0;m<i;m++)m!==a&&(u[c++]=o.shape[m]);let h=[],d=new Array(i).fill(0),p=o.shape.slice();p[a]=1;let f=new Array(l);for(let m=0;m<f.length;m++){d[a]=m;let g=ld({inputs:{x:o},backend:n,attrs:{begin:d,size:p}}),y=be({inputs:{x:g},backend:n,attrs:{shape:u}});f[m]=y,h.push(g)}return h.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var mce={kernelName:Yl,backendName:"webgl",kernelFunc:fce},gce=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,s=e.batchSize,r=e.inSize,a=e.numSegments,o=a*Math.ceil(r/n);this.outputShape=[s,o];let i="0.0",l="sumValue",u=Math.floor(n/4)*4,c=n%4,h=`
        sumValue += dot(values, segFilter);
    `,d="";r%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let p="";r%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${i};

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${p}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${h}
        }

        int inIdx = inOffset + ${u};
        if (${c===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${h}
        } else if (${c===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${h}
        } else if (${c===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${h}
        }
        setOutput(${l});
      }
    `}};function yce(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:o}=s,i=r.shape.length,l=[],u=0,c=T.getAxesPermutation([u],i),h=r;c!=null&&(h=es({inputs:{x:r},backend:n,attrs:{perm:c}}),l.push(h),u=T.getInnerMostAxes(1,i)[0]);let d=T.segment_util.computeOutShape(h.shape,u,o),p=v.sizeFromShape([h.shape[u]]),f=be({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);let m=qh(r.dtype),g=(b,w,S,C,_)=>{let R=b.shape[0],D=b.shape[1],E=T.segment_util.segOpComputeOptimalWindowSize(D,_),F={windowSize:E,inSize:D,batchSize:R,numSegments:_},k=new gce(F,w),M=n.compileAndRun(k,[b,S],C);if(l.push(M),M.shape[1]===_)return M;let z=tT({backend:n,attrs:{start:0,stop:_,step:1,dtype:"float32"}}),W=sT({inputs:{x:z},backend:n,attrs:{reps:[D/E]}});return l.push(z),l.push(W),g(M,w,W,C,_)},y=g(f,"unsortedSegmentSum",a,m,o),x=be({inputs:{x:y},backend:n,attrs:{shape:d}}),A=x;if(c!=null){l.push(x);let b=T.getUndoAxesPermutation(c);A=es({inputs:{x:A},backend:n,attrs:{perm:b}})}return l.forEach(b=>n.disposeIntermediateTensorInfo(b)),A}var Ace={kernelName:Gh,backendName:"webgl",kernelFunc:yce},xce=[Ane,bne,kne,Cne,Nne,Rne,Dne,One,Lne,Wne,Gne,qne,Zne,ese,sse,ase,ise,dse,pse,mse,xse,Cse,Nse,_se,Pse,zse,Vse,Qte,Hse,Zse,ere,ore,lre,cre,hre,fre,yre,bre,kre,Ire,Tre,Ere,$re,Fre,zre,Bre,Ure,jre,Xre,Jre,nae,oae,uae,hae,pae,mae,yae,xae,vae,kae,Tae,_ae,Dae,Oae,zae,Wae,Hae,Kae,Jte,Yae,Xse,eoe,soe,ooe,tne,coe,foe,goe,boe,koe,Toe,_oe,Foe,zoe,Woe,Uoe,qoe,Koe,Yoe,tie,sie,aie,iie,uie,pie,yie,vie,Eie,one,Die,Pie,Lie,Vie,$se,Hie,qie,Kie,Jie,nle,sne,rle,ole,ile,Dse,Iie,cle,fle,Ale,lne,wle,Ile,Ele,$le,Ple,zle,Wle,Gle,jle,Kle,Jle,tue,aue,lue,due,fue,Sse,Tie,yue,xue,vue,kue,Iue,Tue,Eue,Rue,Due,Pue,zue,Bue,Uue,Hue,que,Kue,Cie,mne,Jue,tce,rce,lce,dce,gne,pce,mce,Ace,jie];for(let e of xce)Ir(e);var Bt;(function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"})(Bt||(Bt={}));var Sh;(function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"})(Sh||(Sh={}));var rT;function bce(e){rT=e.wasm.cwrap(Ja,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function vce(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s,d=n.dataIdMap.get(r.dataId).id,p=n.dataIdMap.get(a.dataId).id,f=0;if(o!=null){let _=n.dataIdMap.get(o.dataId);if(_.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${_.shape.length}.`);f=_.id}let m=i==null?0:n.dataIdMap.get(i.dataId).id,g=Sh[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?r.shape[2]:r.shape[1],x=u?a.shape[1]:a.shape[2],A=eu.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)),b=n.makeOutput([...A,y,x],r.dtype),w=n.dataIdMap.get(b.dataId).id,S=new Uint8Array(new Int32Array(r.shape).buffer),C=new Uint8Array(new Int32Array(a.shape).buffer);return rT(d,S,r.shape.length,p,C,a.shape.length,l,u,g,f,m,h||0,w),b}var wce={kernelName:Ja,backendName:"wasm",setupFunc:bce,kernelFunc:vce};function xn(e,t){let n;function s(a){n=a.wasm.cwrap(e,null,["number","number","number"])}function r(a){let{backend:o,inputs:{x:i}}=a,l=o.dataIdMap.get(i.dataId).id,u=o.makeOutput(i.shape,t||i.dtype),c=o.dataIdMap.get(u.dataId).id;return v.sizeFromShape(u.shape)===0||n(l,Bt[i.dtype],c),u}return{kernelName:e,backendName:"wasm",setupFunc:s,kernelFunc:r}}var kce=xn(dl);function Nn(e,t,n){let s;function r(o){s=o.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function a(o){let{backend:i,inputs:l}=o,{a:u,b:c}=l,h=i.dataIdMap.get(u.dataId).id,d=i.dataIdMap.get(c.dataId).id,p=n??u.dtype,f=T.assertAndGetBroadcastShape(u.shape,c.shape),m=i.makeOutput(f,p);if(v.sizeFromShape(f)===0)return m;let g=new Uint8Array(new Int32Array(u.shape).buffer),y=new Uint8Array(new Int32Array(c.shape).buffer),x=i.dataIdMap.get(m.dataId).id;return(()=>s(h,g,u.shape.length,d,y,c.shape.length,Bt[u.dtype],x))(),m}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:a}}var Sce=!0,Ice=Nn(va,Sce),aT;function Cce(e){aT=e.wasm.cwrap(ho,null,["array","number","number","number"])}function Tce(e){let{inputs:t,backend:n}=e,s=n.makeOutput(t[0].shape,t[0].dtype);if(v.sizeFromShape(s.shape)===0)return s;let r=t.map(i=>n.dataIdMap.get(i.dataId).id),a=new Uint8Array(new Int32Array(r).buffer),o=n.dataIdMap.get(s.dataId).id;return aT(a,r.length,Bt[s.dtype],o),s}var Nce={kernelName:ho,backendName:"wasm",setupFunc:Cce,kernelFunc:Tce};function $g(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype),r=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(s).set(r),s}var Ece={kernelName:Ro,backendName:"wasm",kernelFunc:$g},oT;function _ce(e){oT=e.wasm.cwrap(Xr,null,["number","array","number","number","number","array","number"])}function io(e){let{inputs:t,backend:n,attrs:s}=e,[r,a]=$ce(t.x.shape,s.perm),o=!0;for(let f=0;f<a.length;f++)a[f]!==f&&(o=!1);let i=Rce(t.x.shape,s.perm),l={dataId:t.x.dataId,shape:r,dtype:t.x.dtype};if(o){let f=$g({inputs:t,backend:n});return f.shape=i,f}let u=n.makeOutput(i,l.dtype),c=n.dataIdMap.get(l.dataId).id,h=n.dataIdMap.get(u.dataId).id,d=new Uint8Array(new Int32Array(a).buffer),p=new Uint8Array(new Int32Array(l.shape).buffer);return oT(c,p,l.shape.length,Bt[l.dtype],h,d,a.length),u}function Rce(e,t){let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];return n}function $ce(e,t){let n=[],s=[];for(let r=0;r<e.length;++r)e[r]!==1&&n.push(e[r]),e[t[r]]!==1&&s.push(t[r]);for(let r=0;r<s.length;++r){let a=-1;for(let o=0;o<s.length;++o)s[o]>=r&&(a===-1||s[a]>s[o])&&(a=o);s[a]=r}return[n,s]}var Dce={kernelName:Xr,backendName:"wasm",kernelFunc:io,setupFunc:_ce};function hi(e,t,n){let s=e.shape,r=e.shape.length,a=v.parseAxisParam(t,s),o=a,i=T.getAxesPermutation(o,r),l=null,u=!1;if(i!=null){let c=new Array(r);for(let p=0;p<c.length;p++)c[p]=s[i[p]];o=T.getInnerMostAxes(o.length,r),l=io({inputs:{x:e},attrs:{perm:i},backend:n});let h=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==h&&(u=!0)}return{transposed:l,originalAxes:a,axes:o,inputWasTransposed:u}}var iT;function Fce(e){iT=e.wasm.cwrap(yc,null,["number, number, number"])}function Oce(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,u=o,{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=hi(o,r,t);if(p){let A=t.dataIdMap.get(c.dataId).id;u=c,l=A}let f=u.shape.length;T.assertAxesAreInnerMostDims("all",h,f);let[m,g]=T.computeOutAndReduceShapes(u.shape,h),y=v.sizeFromShape(g),x=t.makeOutput(m,o.dtype);if(v.sizeFromShape(u.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;iT(l,y,A)}if(p&&t.disposeData(c.dataId),a){let A=T.expandShapeToKeepDim(x.shape,d);x.shape=A}return x}var Pce={kernelName:yc,backendName:"wasm",setupFunc:Fce,kernelFunc:Oce},lT;function Mce(e){lT=e.wasm.cwrap(Ac,null,["number, number, number"])}function zce(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,u=o,{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=hi(o,r,t);if(p){let A=t.dataIdMap.get(c.dataId).id;u=c,l=A}let f=u.shape.length;T.assertAxesAreInnerMostDims("any",h,f);let[m,g]=T.computeOutAndReduceShapes(u.shape,h),y=v.sizeFromShape(g),x=t.makeOutput(m,o.dtype);if(v.sizeFromShape(u.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;lT(l,y,A)}if(p&&t.disposeData(c.dataId),a){let A=T.expandShapeToKeepDim(x.shape,d);x.shape=A}return x}var Lce={kernelName:Ac,backendName:"wasm",setupFunc:Mce,kernelFunc:zce},uT;function Bce(e){uT=e.wasm.cwrap(po,null,["number","number","number","number","number"])}function Wce(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r}=s,{x:a}=n,o=t.dataIdMap.get(a.dataId).id,i=o,l=a,{transposed:u,axes:c,inputWasTransposed:h}=hi(a,r,t);if(h){let y=t.dataIdMap.get(u.dataId).id;y!==o&&(l=u,i=y)}let d=l.shape.slice(0,-1),p=t.makeOutput(d,"int32"),f=t.dataIdMap.get(p.dataId).id,m=v.sizeFromShape(p.shape),g=l.shape[c[0]];return uT(i,Bt[l.dtype],m,g,f),h&&t.disposeData(u.dataId),p}var Vce={kernelName:po,backendName:"wasm",kernelFunc:Wce,setupFunc:Bce},cT;function Uce(e){cT=e.wasm.cwrap(fo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Gce(e){let{inputs:t,attrs:n,backend:s}=e,r=t.x,a=s.dataIdMap.get(r.dataId).id,{filterSize:o,strides:i,pad:l,dimRoundingMode:u}=n,c=T.computePool2DInfo(r.shape,o,i,1,l,u),h=c.filterHeight,d=c.filterWidth,p=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.strideHeight,x=c.strideWidth,A=c.inChannels;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);if(c.dilationWidth!==1||c.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);let b=s.makeOutput(c.outShape,"float32"),w=s.dataIdMap.get(b.dataId).id;return cT(a,r.shape[0],r.shape[1],r.shape[2],h,d,p,f,m,g,y,x,A,w),b}var Hce={kernelName:fo,backendName:"wasm",setupFunc:Uce,kernelFunc:Gce};function us(e){let{inputs:t,attrs:n}=e,{x:s}=t,{shape:r}=n,a=v.sizeFromShape(s.shape),o=v.inferFromImplicitShape(r,a);return v.assert(a===v.sizeFromShape(o),()=>`new shape: ${o}, old shape: ${s.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(s.dataId),{dataId:s.dataId,shape:o,dtype:s.dtype}}var jce={kernelName:zl,backendName:"wasm",kernelFunc:us},dT;function qce(e){dT=e.wasm.cwrap(mo,null,["number","array","number","number","array","number","number","number","number"])}function Xce(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=r.shape.length,u=a.shape.length,c=o?r.shape[l-2]:r.shape[l-1],h=i?a.shape[u-1]:a.shape[u-2],d=o?r.shape[l-1]:r.shape[l-2],p=i?a.shape[u-2]:a.shape[u-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=v.sizeFromShape(f),y=v.sizeFromShape(m),A=eu.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([d,p]);v.assert(c===h,()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`);let b=o?[g,c,d]:[g,d,c],w=i?[y,p,h]:[y,h,p],S=us({inputs:{x:r},backend:n,attrs:{shape:b}}),C=us({inputs:{x:a},backend:n,attrs:{shape:w}}),_=n.dataIdMap.get(S.dataId).id,R=n.dataIdMap.get(C.dataId).id,D=o?S.shape[2]:S.shape[1],E=i?C.shape[1]:C.shape[2],F=Math.max(g,y),k=n.makeOutput([F,D,E],S.dtype),M=n.dataIdMap.get(k.dataId).id,z=new Uint8Array(new Int32Array(S.shape).buffer),W=new Uint8Array(new Int32Array(C.shape).buffer);return dT(_,z,S.shape.length,R,W,C.shape.length,o,i,M),n.disposeData(S.dataId),n.disposeData(C.dataId),k.shape=A,k}var Kce={kernelName:mo,backendName:"wasm",setupFunc:qce,kernelFunc:Xce};function il(e){let{inputs:{x:t},attrs:{begin:n,size:s},backend:r}=e,[a,o]=zt.parseSliceParams(t,n,s),i=zt.isSliceContinous(t.shape,a,o),l=r.readSync(t.dataId),u=r.makeOutput(o,t.dtype),c=v.computeStrides(t.shape),h=r.dataIdMap.get(u.dataId);if(i){let f=zt.computeFlatOffset(a,c);return t.dtype==="string"?h.stringBytes=l.slice(f,f+v.sizeFromShape(o)):r.typedArrayFromHeap(u).set(l.subarray(f,f+v.sizeFromShape(o))),u}if(t.dtype==="string"){let f=Fm(l,a,o,t.shape,t.dtype);return h.stringBytes=f,u}let d=r.typedArrayFromHeap(u),p=t.shape.length;if(p===2)Zce(l,c[0],d,a,o);else if(p===3)Yce(l,c[0],c[1],d,a,o);else if(p===4)Jce(l,c[0],c[1],c[2],d,a,o);else{let f=Fm(l,a,o,t.shape,t.dtype);d.set(f)}return u}function Zce(e,t,n,s,r){let a=0,o=s[0],i=s[1],l=o+r[0];for(let u=o;u<l;u++){let c=u*t+i;n.set(e.subarray(c,c+r[1]),a),a+=r[1]}}function Yce(e,t,n,s,r,a){let o=0,i=r[0],l=r[1],u=r[2],c=i+a[0],h=l+a[1];for(let d=i;d<c;d++)for(let p=l;p<h;p++){let f=d*t+p*n+u;s.set(e.subarray(f,f+a[2]),o),o+=a[2]}}function Jce(e,t,n,s,r,a,o){let i=0,l=a[0],u=a[1],c=a[2],h=l+o[0],d=u+o[1],p=c+o[2],f=a[3];for(let m=l;m<h;m++)for(let g=u;g<d;g++)for(let y=c;y<p;y++){let x=m*t+g*n+y*s+f;r.set(e.subarray(x,x+o[3]),i),i+=o[3]}}var Qce={kernelName:Ul,backendName:"wasm",kernelFunc:il};function ede(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s,i=a.reduce((y,x)=>y*x),l=T.getReshaped(r.shape,a,i),u=T.getPermuted(l.length,a.length),c=T.getReshapedPermuted(r.shape,a,i),h=T.getSliceBeginCoords(o,a.length),d=T.getSliceSize(c,o,a.length),p=us({inputs:{x:r},backend:n,attrs:{shape:l}}),f=io({inputs:{x:p},backend:n,attrs:{perm:u}}),m=us({inputs:{x:f},backend:n,attrs:{shape:c}}),g=il({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeData(p.dataId),n.disposeData(f.dataId),n.disposeData(p.dataId),g}var tde={kernelName:pl,backendName:"wasm",kernelFunc:ede};function ud(e){let{inputs:{x:t},attrs:{dtype:n},backend:s}=e,r=s.makeOutput(t.shape,n),a=s.typedArrayFromHeap(t);return s.typedArrayFromHeap(r).set(a),r}var nde={kernelName:go,backendName:"wasm",kernelFunc:ud},sde=xn(yo),hT;function rde(e){hT=e.wasm.cwrap(wa,null,["number","number","number","number"])}function ade(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i=n.dataIdMap.get(r.dataId).id,l=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(l.dataId).id;return hT(i,a,o,u),l}var ode={kernelName:wa,backendName:"wasm",setupFunc:rde,kernelFunc:ade};function pT(e){let{inputs:t,backend:n}=e,s=v.parseAxisParam(e.attrs.axis,t[0].shape)[0],r=T.computeOutShape(t.map(p=>p.shape),s),a=t.filter(p=>v.sizeFromShape(p.shape)>0);if(a.length===1)return $g({inputs:{x:a[0]},backend:n});let o=n.makeOutput(r,t[0].dtype);if(v.sizeFromShape(r)===0)return o;let i=a.map(p=>p.shape);if(T.assertParamsConsistent(i,s),a[0].dtype==="string"){let p=a.map(A=>{let b=v.sizeFromShape(A.shape.slice(s));return us({inputs:{x:A},backend:n,attrs:{shape:[-1,b]}})}),f=p.map(A=>({vals:n.readSync(A.dataId),shape:A.shape}));r=T.computeOutShape(p.map(A=>A.shape),1);let m=p[0].shape[0]===1,g=P5(f,r,t[0].dtype,m),y=T.computeOutShape(a.map(A=>A.shape),s);o.shape=y;let x=n.dataIdMap.get(o.dataId);return x.stringBytes=T.fromStringArrayToUint8(g),p.forEach(A=>n.disposeData(A.dataId)),o}let l=v.sizeFromShape(a[0].shape.slice(0,s)),u=0,c=a.map(p=>{let f=v.sizeFromShape(p.shape.slice(s));return u+=f,f}),h=a.map(p=>n.typedArrayFromHeap(p)),d=n.typedArrayFromHeap(o);for(let p=0;p<l;p++){let f=p*u;for(let m=0;m<h.length;m++){let g=c[m],y=p*g,x=h[m].subarray(y,y+g);d.set(x,f),f+=g}}return o}var ide={kernelName:fl,backendName:"wasm",kernelFunc:pT},fT;function lde(e){fT=e.wasm.cwrap(Ao,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ude(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,o=s.dataIdMap.get(r.dataId).id,i=s.dataIdMap.get(a.dataId).id,{strides:l,dilations:u,pad:c,dimRoundingMode:h,dataFormat:d}=n,p=T.convertConv2DDataFormat(d),f=T.computeConv2DInfo(r.shape,a.shape,l,u,c,h,!1,p),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,x=f.padInfo.right,A=f.padInfo.bottom,b=f.padInfo.left,w=f.dilationHeight,S=f.dilationWidth,C=f.strideHeight,_=f.strideWidth,R=f.inChannels,D=f.outChannels,E=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let F=s.makeOutput(f.outShape,"float32"),k=s.dataIdMap.get(F.dataId).id;return fT(o,r.shape[0],r.shape[1],r.shape[2],i,m,g,y,x,A,b,E,w,S,C,_,R,D,k),F}var cde={kernelName:Ao,backendName:"wasm",setupFunc:lde,kernelFunc:ude},mT;function dde(e){mT=e.wasm.cwrap(xo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function hde(e){let{backend:t,inputs:n,attrs:s}=e,{dy:r,filter:a}=n,{strides:o,pad:i,dataFormat:l,dimRoundingMode:u,inputShape:c}=s,h=1,d=T.convertConv2DDataFormat(l),p=T.computeConv2DInfo(c,a.shape,o,h,i,u,!1,d),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:y,inHeight:x,inWidth:A,outChannels:b,outHeight:w,outWidth:S,strideHeight:C,strideWidth:_}=p,R=m-1-p.padInfo.top,D=g-1-p.padInfo.left,E=p.dataFormat==="channelsLast",F=v.computeStrides(p.inShape),k=v.computeStrides(r.shape),[M,z,W]=v.computeStrides(a.shape),H=F[0],j=E?F[1]:F[2],Z=E?F[2]:1,J=E?1:F[1],Q=k[0],ae=E?k[1]:k[2],ne=E?k[2]:1,ie=E?1:k[1],ue=t.makeOutput(p.inShape,"float32"),te=t.dataIdMap.get(ue.dataId).id,oe=t.dataIdMap.get(r.dataId).id,Ne=t.dataIdMap.get(a.dataId).id;return mT(oe,Ne,f,m,g,x,A,y,w,S,b,C,_,R,D,M,z,W,H,j,Z,J,Q,ae,ne,ie,te),ue}var pde={kernelName:xo,backendName:"wasm",setupFunc:dde,kernelFunc:hde},fde=xn(bo),mde=xn(vo),c2;(function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"})(c2||(c2={}));var gT;function gde(e){gT=e.wasm.cwrap(gl,null,["number","number","number","number","array","number","number","number","number","number"])}function yde(e){let{backend:t,inputs:n,attrs:s}=e,{method:r,extrapolationValue:a,cropSize:o}=s,{image:i,boxes:l,boxInd:u}=n,c=l.shape[0],[h,d]=o,p=[c,h,d,i.shape[3]],f=t.dataIdMap.get(i.dataId),m;i.dtype!=="float32"&&(m=ud({backend:t,inputs:{x:i},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));let g=f.id,y=t.dataIdMap.get(l.dataId).id,x=t.dataIdMap.get(u.dataId).id,A=t.makeOutput(p,"float32"),b=t.dataIdMap.get(A.dataId).id,w=new Uint8Array(new Int32Array(i.shape).buffer);return gT(g,y,x,c,w,h,d,c2[r],a,b),m!=null&&t.disposeData(m.dataId),A}var Ade={kernelName:gl,backendName:"wasm",setupFunc:gde,kernelFunc:yde},yT;function xde(e){yT=e.wasm.cwrap(ml,null,["number","number","number","number","number","number"])}function bde(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s,l=r.shape.length;v.assert(r.dtype==="float32"||r.dtype==="int32",()=>`cumprod does not support ${r.dtype} tensors in the WASM backend`);let u=T.getAxesPermutation([a],l),c=r;u!==null&&(c=io({inputs:{x:r},attrs:{perm:u},backend:n}));let h=T.getInnerMostAxes(1,l)[0];T.assertAxesAreInnerMostDims("cumprod",[h],l);let d=n.makeOutput(c.shape,c.dtype),p=c.shape[h],f=n.dataIdMap.get(c.dataId).id,m=n.dataIdMap.get(d.dataId).id;yT(f,o?1:0,i?1:0,p,m,Bt[r.dtype]);let g=d;if(u!==null){let y=T.getUndoAxesPermutation(u);g=io({inputs:{x:d},attrs:{perm:y},backend:n}),n.disposeData(c.dataId),n.disposeData(d.dataId)}return g}var vde={kernelName:ml,backendName:"wasm",setupFunc:xde,kernelFunc:bde},AT;function wde(e){AT=e.wasm.cwrap(wo,null,["number","number","number","number","number","number"])}function kde(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s,l=r.shape.length;v.assert(r.dtype==="float32"||r.dtype==="int32",()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`);let u=T.getAxesPermutation([a],l),c=r;u!==null&&(c=io({inputs:{x:r},attrs:{perm:u},backend:n}));let h=T.getInnerMostAxes(1,l)[0];T.assertAxesAreInnerMostDims("cumsum",[h],l);let d=n.makeOutput(c.shape,c.dtype),p=c.shape[h],f=n.dataIdMap.get(c.dataId).id,m=n.dataIdMap.get(d.dataId).id;AT(f,o?1:0,i?1:0,p,m,Bt[r.dtype]);let g=d;if(u!==null){let y=T.getUndoAxesPermutation(u);g=io({inputs:{x:d},attrs:{perm:y},backend:n}),n.disposeData(c.dataId),n.disposeData(d.dataId)}return g}var Sde={kernelName:wo,backendName:"wasm",setupFunc:wde,kernelFunc:kde},xT;function Ide(e){xT=e.wasm.cwrap(yl,null,["number","number","number","array","number","array","array","number","number"])}function Cde(e){let{backend:t,inputs:n,attrs:s}=e,{x:r}=n,{blockSize:a,dataFormat:o}=s,i=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],u=o==="NHWC"?r.shape[2]:r.shape[3],c=o==="NHWC"?r.shape[3]:r.shape[1],h=l*a,d=u*a,p=c/(a*a),f=o==="NHWC"?[i,h,d,p]:[i,p,h,d],m=t.makeOutput(f,"float32"),y=t.dataIdMap.get(r.dataId).id,x=new Uint8Array(new Int32Array(v.computeStrides(r.shape)).buffer),A=new Uint8Array(new Int32Array(f).buffer),b=new Uint8Array(new Int32Array(v.computeStrides(f)).buffer),w=t.dataIdMap.get(m.dataId).id;return xT(y,a,o==="NHWC"?1:0,x,r.shape.length-1,A,b,f.length,w),m}var Tde={kernelName:yl,backendName:"wasm",setupFunc:Ide,kernelFunc:Cde},bT;function Nde(e){bT=e.wasm.cwrap(ko,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ede(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,o=s.dataIdMap.get(r.dataId).id,i=s.dataIdMap.get(a.dataId).id,{strides:l,dilations:u,pad:c,dimRoundingMode:h}=n,d=u??[1,1],p=T.computeConv2DInfo(r.shape,a.shape,l,d,c,h,!0),f=p.filterHeight,m=p.filterWidth,g=p.padInfo.top,y=p.padInfo.right,x=p.padInfo.bottom,A=p.padInfo.left,b=p.dilationHeight,w=p.dilationWidth,S=p.strideHeight,C=p.strideWidth,_=p.inChannels,R=p.outChannels,D=p.padInfo.type==="SAME"?1:0;if(p.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);let E=s.makeOutput(p.outShape,"float32"),F=s.dataIdMap.get(E.dataId).id;return bT(o,r.shape[0],r.shape[1],r.shape[2],i,f,m,g,y,x,A,D,b,w,S,C,_,R,F),E}var _de={kernelName:ko,backendName:"wasm",setupFunc:Nde,kernelFunc:Ede},Rde=xn(Io),$de=!1,Dde=Nn(Al,$de,"bool"),Fde=xn(Co,"float32");function d2(e){let{inputs:t,attrs:n,backend:s}=e,{input:r}=t,{dim:a}=n,o=r.shape.length,i=r.shape.slice(),l=a;return a<0&&(v.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+a+1),i.splice(l,0,1),us({inputs:{x:r},backend:s,attrs:{shape:i}})}var Ode={kernelName:xl,backendName:"wasm",kernelFunc:d2};function vT(e){let{attrs:{shape:t,value:n,dtype:s},backend:r}=e,a=r.makeOutput(t,s);return r.typedArrayFromHeap(a).fill(n),a}var Pde={kernelName:Ic,backendName:"wasm",kernelFunc:vT},wT;function Mde(e){wT=e.wasm.cwrap(vl,null,["number","number","number","number","number","number"])}function zde(e){let{inputs:t,backend:n}=e,{image:s}=t,r=n.makeOutput(s.shape,s.dtype),a=n.dataIdMap.get(s.dataId).id,o=n.dataIdMap.get(r.dataId).id,[i,l,u,c]=s.shape;return wT(a,i,l,u,c,o),r}var Lde={kernelName:vl,backendName:"wasm",kernelFunc:zde,setupFunc:Mde},Bde=xn(To),Wde=!1,Vde=Nn(No,Wde),kT;function Ude(e){kT=e.wasm.cwrap(Eo,null,["number","number","number","number","number","number","number"])}function Gde(e){let{backend:t,inputs:n,attrs:s}=e,{varianceEpsilon:r}=s,{x:a,mean:o,variance:i,offset:l,scale:u}=n,c=t.dataIdMap.get(a.dataId).id,h=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(i.dataId).id,p=l!=null?t.dataIdMap.get(l.dataId).id:0,f=u!=null?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(a.shape,a.dtype);if(v.sizeFromShape(a.shape)===0)return m;let g=t.dataIdMap.get(m.dataId).id;return kT(c,h,d,p,f,r,g),m}var Hde={kernelName:Eo,backendName:"wasm",setupFunc:Ude,kernelFunc:Gde},ST;function jde(e){ST=e.wasm.cwrap(Qa,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function qde(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dilations:c,dataFormat:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=n,m=T.computeConv2DInfo(r.shape,a.shape,l,c,u,d),g=Sh[p];if(g==null)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);let y=s.dataIdMap.get(r.dataId).id,x=s.dataIdMap.get(a.dataId).id,A=m.outChannels,b=0;if(o!=null){let ne=s.dataIdMap.get(o.dataId);if(ne.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${ne.shape.length}.`);if(ne.shape[0]!==A)throw new Error(`FusedConv2D bias shape (${ne.shape}) does not match the number of output channels (${A})`);b=ne.id}let w=m.filterHeight,S=m.filterWidth,C=m.padInfo.top,_=m.padInfo.right,R=m.padInfo.bottom,D=m.padInfo.left,E=m.dilationHeight,F=m.dilationWidth,k=m.strideHeight,M=m.strideWidth,z=m.inChannels,W=m.padInfo.type==="SAME"?1:0,H=m.batchSize,j=m.inHeight,Z=m.inWidth;if(h!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);let J=s.makeOutput(m.outShape,"float32"),Q=s.dataIdMap.get(J.dataId).id,ae=i==null?0:s.dataIdMap.get(i.dataId).id;return ST(y,H,j,Z,x,w,S,b,C,_,R,D,W,E,F,k,M,z,A,g,ae,f||0,Q),J}var Xde={kernelName:Qa,backendName:"wasm",setupFunc:jde,kernelFunc:qde},IT;function Kde(e){IT=e.wasm.cwrap(eo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Zde(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dilations:c,dataFormat:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=n,m=T.computeConv2DInfo(r.shape,a.shape,l,c,u,d,!0),g=Sh[p];if(g==null)throw new Error(`${p} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=s.dataIdMap.get(r.dataId).id,x=s.dataIdMap.get(a.dataId).id,A=m.outChannels,b=0;if(o!=null){let ne=s.dataIdMap.get(o.dataId);if(ne.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${ne.shape.length}.`);if(ne.shape[0]!==A)throw new Error(`FusedDepthwiseConv2D bias shape (${ne.shape}) does not match the number of output channels (${A})`);b=ne.id}let w=m.filterHeight,S=m.filterWidth,C=m.padInfo.top,_=m.padInfo.right,R=m.padInfo.bottom,D=m.padInfo.left,E=m.dilationHeight,F=m.dilationWidth,k=m.strideHeight,M=m.strideWidth,z=m.inChannels,W=m.padInfo.type==="SAME"?1:0,H=m.batchSize,j=m.inHeight,Z=m.inWidth;if(h!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);let J=s.makeOutput(m.outShape,"float32"),Q=s.dataIdMap.get(J.dataId).id,ae=i==null?0:s.dataIdMap.get(i.dataId).id;return IT(y,H,j,Z,x,w,S,b,C,_,R,D,W,E,F,k,M,z,A,g,ae,f||0,Q),J}var Yde={kernelName:eo,backendName:"wasm",setupFunc:Kde,kernelFunc:Zde},CT;function Jde(e){CT=e.wasm.cwrap(kl,null,["number","number","number","number","number","number","array","number"])}function Qde(e){let{backend:t,inputs:n}=e,{params:s,indices:r}=n,[a,o,i,l]=j2.prepareAndValidate(s,r),u=t.makeOutput(a,s.dtype);if(o===0)return u;let c=r.shape,h=c[c.length-1],p=t.dataIdMap.get(s.dataId).id,m=t.dataIdMap.get(r.dataId).id,g=new Uint8Array(new Int32Array(l).buffer),y=t.dataIdMap.get(u.dataId).id;return CT(p,Bt[s.dtype],m,o,h,i,g,y),u}var ehe={kernelName:kl,backendName:"wasm",setupFunc:Jde,kernelFunc:Qde},TT;function the(e){TT=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function nhe(e){let{backend:t,inputs:n,attrs:s}=e,{x:r,indices:a}=n,{axis:o,batchDims:i}=s,l=v.parseAxisParam(o,r.shape)[0],u=t.readSync(a.dataId),c=r.shape[l];for(let R=0;R<u.length;++R){let D=u[R];v.assert(D<=c-1&&D>=0,()=>`GatherV2: the index value ${D} is not in [0, ${c-1}]`)}let h=T.segment_util.collectGatherOpShapeInfo(r,a,l,i),d=us({inputs:{x:r},attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]},backend:t}),p=v.sizeFromShape(a.shape),f=us({inputs:{x:a},attrs:{shape:[h.batchSize,p/h.batchSize]},backend:t}),m=[h.batchSize,h.outerSize,p/h.batchSize,h.sliceSize],g=t.makeOutput(m,r.dtype);if(v.sizeFromShape(r.shape)===0)return g;let y=d.shape.length-1,A=t.dataIdMap.get(d.dataId).id,w=t.dataIdMap.get(f.dataId).id,S=t.dataIdMap.get(g.dataId).id,C=new Uint8Array(new Int32Array(v.computeStrides(d.shape)).buffer),_=new Uint8Array(new Int32Array(v.computeStrides(m)).buffer);return TT(A,Bt[r.dtype],C,y,w,h.batchSize,_,S),t.disposeData(d.dataId),t.disposeData(f.dataId),g.shape=h.outputShape,g}var she={kernelName:wl,backendName:"wasm",setupFunc:the,kernelFunc:nhe},rhe=!1,ahe=Nn(Sl,rhe,"bool"),ohe=!1,ihe=Nn(_o,ohe,"bool"),NT;function lhe(e){NT=e.wasm.cwrap($o,null,["number","number","number","number"])}function uhe(e){let{inputs:{x:t},attrs:{alpha:n},backend:s}=e,r=s.dataIdMap.get(t.dataId).id,a=s.makeOutput(t.shape,"float32");if(v.sizeFromShape(t.shape)!==0){let o=s.dataIdMap.get(a.dataId).id;NT(r,Bt[t.dtype],n,o)}return a}var che={kernelName:$o,backendName:"wasm",setupFunc:lhe,kernelFunc:uhe},dhe=!1,hhe=Nn(Cl,dhe,"bool"),phe=!1,fhe=Nn(Tl,phe,"bool"),mhe=xn(Do),ghe=!1,yhe=Nn(Nl,ghe,"bool"),Ahe=xn(El),xhe=!1,bhe=Nn(Ec,xhe,"bool"),vhe=!1,whe=Nn(kS,vhe,"bool"),ET;function khe(e){ET=e.wasm.cwrap(Fo,null,["number","number","number","number"])}function She(e){let{backend:t,inputs:n,attrs:s}=e,{reductionIndices:r,keepDims:a}=s,{x:o}=n,l=t.dataIdMap.get(o.dataId).id,u=o,{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=hi(o,r,t);if(p){let A=t.dataIdMap.get(c.dataId).id;u=c,l=A}let f=u.shape.length;T.assertAxesAreInnerMostDims("max",h,f);let[m,g]=T.computeOutAndReduceShapes(u.shape,h),y=v.sizeFromShape(g),x=t.makeOutput(m,o.dtype);if(v.sizeFromShape(u.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;ET(l,Bt[o.dtype],y,A)}if(p&&t.disposeData(c.dataId),a){let A=T.expandShapeToKeepDim(x.shape,d);x.shape=A}return x}var Ihe={kernelName:Fo,backendName:"wasm",setupFunc:khe,kernelFunc:She},Che=!1,The=Nn(Oo,Che),_T;function Nhe(e){_T=e.wasm.cwrap(Po,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ehe(e){let{inputs:t,attrs:n,backend:s}=e,r=t.x,a=s.dataIdMap.get(r.dataId).id;v.assert(r.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${r.dtype}.`);let{filterSize:o,strides:i,pad:l,dimRoundingMode:u}=n,c=T.computePool2DInfo(r.shape,o,i,1,l,u),h=c.filterHeight,d=c.filterWidth,p=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.dilationHeight,x=c.dilationWidth,A=c.strideHeight,b=c.strideWidth,w=c.inChannels,S=c.outChannels;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let C=s.makeOutput(c.outShape,"float32"),_=s.dataIdMap.get(C.dataId).id;return _T(a,r.shape[0],r.shape[1],r.shape[2],h,d,p,f,m,g,y,x,A,b,w,S,_),C}var _he={kernelName:Po,backendName:"wasm",setupFunc:Nhe,kernelFunc:Ehe},RT;function Rhe(e){RT=e.wasm.cwrap(Mo,null,["number, number, number"])}function $he(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,u=o,{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=hi(o,r,t),f=h;if(p){let b=t.dataIdMap.get(c.dataId).id;b!==i&&(u=c,l=b,f=T.getInnerMostAxes(f.length,u.shape.length))}T.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[m,g]=T.computeOutAndReduceShapes(u.shape,f),y=v.sizeFromShape(g),x=u;u.dtype!=="float32"&&(x=ud({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(x.dataId).id);let A=t.makeOutput(m,"float32");if(v.sizeFromShape(u.shape)!==0){let b=t.dataIdMap.get(A.dataId).id;RT(l,y,b)}if(p&&t.disposeData(c.dataId),a){let b=T.expandShapeToKeepDim(A.shape,d);A.shape=b}return u.dtype!=="float32"&&t.disposeData(x.dataId),A}var Dhe={kernelName:Mo,backendName:"wasm",setupFunc:Rhe,kernelFunc:$he},$T;function Fhe(e){$T=e.wasm.cwrap(zo,null,["number","number","number","number"])}function Ohe(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,u=o,{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=hi(o,r,t);if(p){let A=t.dataIdMap.get(c.dataId).id;A!==i&&(u=c,l=A)}let f=u.shape.length;T.assertAxesAreInnerMostDims("min",h,f);let[m,g]=T.computeOutAndReduceShapes(u.shape,h),y=v.sizeFromShape(g),x=t.makeOutput(m,u.dtype);if(v.sizeFromShape(u.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;$T(l,Bt[o.dtype],y,A)}if(p&&t.disposeData(c.dataId),a){let A=T.expandShapeToKeepDim(x.shape,d);x.shape=A}return x}var Phe={kernelName:zo,backendName:"wasm",setupFunc:Fhe,kernelFunc:Ohe},Mhe=!1,zhe=Nn(Lo,Mhe),h2;(function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"})(h2||(h2={}));var DT;function Lhe(e){DT=e.wasm.cwrap(Bo,null,["number","array","number","number","array","array","number","number"])}function Bhe(e){let{inputs:{x:t},backend:n,attrs:{paddings:s,mode:r}}=e,a=s.map((f,m)=>f[0]+t.shape[m]+f[1]),o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(a,t.dtype),l=n.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),c=s.map(f=>f[0]),h=s.map(f=>f[1]),d=new Uint8Array(new Int32Array(c).buffer),p=new Uint8Array(new Int32Array(h).buffer);return DT(o,u,t.shape.length,Bt[t.dtype],d,p,h2[r],l),i}var Whe={kernelName:Bo,backendName:"wasm",kernelFunc:Bhe,setupFunc:Lhe},Vhe=!0,Uhe=Nn(Wo,Vhe),Ghe=xn(_l);function lv(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),s=n[0],r=n[1],a=n[2],o=n[3];return e.wasm._free(t),{pSelectedIndices:s,selectedSize:r,pSelectedScores:a,pValidOutputs:o}}var FT;function Hhe(e){FT=e.wasm.cwrap($l,"number",["number","number","number","number","number"])}function jhe(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o}=s,{boxes:i,scores:l}=n,u=t.dataIdMap.get(i.dataId).id,c=t.dataIdMap.get(l.dataId).id,h=FT(u,c,a,r,o),{pSelectedIndices:d,selectedSize:p,pSelectedScores:f,pValidOutputs:m}=lv(t,h);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([p],"int32",d)}var qhe={kernelName:$l,backendName:"wasm",setupFunc:Hhe,kernelFunc:jhe},OT;function Xhe(e){OT=e.wasm.cwrap(Rc,"number",["number","number","number","number","number","bool"])}function Khe(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o,padToMaxOutputSize:i}=s,{boxes:l,scores:u}=n,c=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(u.dataId).id,d=OT(c,h,a,r,o,i),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=lv(t,d);t.wasm._free(m);let y=t.makeOutput([f],"int32",p),x=t.makeOutput([],"int32",g);return[y,x]}var Zhe={kernelName:Rc,backendName:"wasm",setupFunc:Xhe,kernelFunc:Khe},PT;function Yhe(e){PT=e.wasm.cwrap(Dl,"number",["number","number","number","number","number","number"])}function Jhe(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:o,softNmsSigma:i}=s,{boxes:l,scores:u}=n,c=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(u.dataId).id,d=PT(c,h,a,r,o,i),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=lv(t,d);t.wasm._free(g);let y=t.makeOutput([f],"int32",p),x=t.makeOutput([f],"float32",m);return[y,x]}var Qhe={kernelName:Dl,backendName:"wasm",setupFunc:Yhe,kernelFunc:Jhe},epe=!1,tpe=Nn(Rl,epe,"bool"),MT;function npe(e){MT=e.wasm.cwrap(Ol,null,["number","number","number","number","number"])}function spe(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{dtype:a,depth:o,onValue:i,offValue:l}=s,u=n.makeOutput([...r.shape,o],a),c=n.dataIdMap.get(u.dataId).id,d=n.dataIdMap.get(r.dataId).id;return MT(d,o,i,l,c),u}var rpe={kernelName:Ol,backendName:"wasm",setupFunc:npe,kernelFunc:spe};function ape(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(s).fill(1),s}var ope={kernelName:Fl,backendName:"wasm",kernelFunc:ape};function ipe(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return d2({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(c=>{v.assertShapesMatch(a,c.shape,"All tensors passed to stack must have matching shapes"),v.assert(o===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(c=>{let h=d2({inputs:{input:c},backend:n,attrs:{dim:r}});return i.push(h),h}),u=pT({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(c=>n.disposeData(c.dataId)),u}var lpe={kernelName:Pl,backendName:"wasm",kernelFunc:ipe},zT;function upe(e){zT=e.wasm.cwrap(Vo,null,["number","array","number","number","array","array","number","number"])}function cpe(e){let{inputs:{x:t},backend:n,attrs:{paddings:s,constantValue:r}}=e,a=s.map((m,g)=>m[0]+t.shape[g]+m[1]);if(v.sizeFromShape(t.shape)===0)return vT({backend:n,attrs:{shape:a,value:r,dtype:t.dtype}});let o=n.dataIdMap.get(t.dataId).id,i=n.makeOutput(a,t.dtype),u=n.dataIdMap.get(i.dataId).id,c=new Uint8Array(new Int32Array(t.shape).buffer),h=s.map(m=>m[0]),d=s.map(m=>m[1]),p=new Uint8Array(new Int32Array(h).buffer),f=new Uint8Array(new Int32Array(d).buffer);return zT(o,c,t.shape.length,Bt[t.dtype],p,f,r,u),i}var LT={kernelName:Vo,backendName:"wasm",kernelFunc:cpe,setupFunc:upe},dpe=!1,hpe=Nn(Uo,dpe),BT;function ppe(e){BT=e.wasm.cwrap(Go,null,["number","number","number"])}function fpe(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=n.dataIdMap.get(s.dataId).id,o=n.dataIdMap.get(r.dataId).id,i=a,l=s,u=l;l.dtype!=="float32"&&(u=ud({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),i=n.dataIdMap.get(u.dataId).id);let c=n.makeOutput(s.shape,"float32"),h=n.dataIdMap.get(c.dataId).id;return BT(i,o,h),l.dtype!=="float32"&&n.disposeData(u.dataId),c}var mpe={kernelName:Go,backendName:"wasm",setupFunc:ppe,kernelFunc:fpe},WT;function gpe(e){WT=e.wasm.cwrap(Ho,null,["number","number","number","number"])}function ype(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,u=o,{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=hi(o,r,t),f=h;if(p){let A=t.dataIdMap.get(c.dataId).id;A!==i&&(u=c,l=A,f=T.getInnerMostAxes(f.length,u.shape.length))}T.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[m,g]=T.computeOutAndReduceShapes(u.shape,f),y=v.sizeFromShape(g),x=t.makeOutput(m,u.dtype);if(v.sizeFromShape(u.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;WT(l,y,Bt[x.dtype],A)}if(p&&t.disposeData(c.dataId),a){let A=T.expandShapeToKeepDim(x.shape,d);x.shape=A}return x}var Ape={kernelName:Ho,backendName:"wasm",setupFunc:gpe,kernelFunc:ype},xpe=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=L5(s,r,a,o),l=t.makeOutput([i.length],o);return t.typedArrayFromHeap(l).set(i),l},bpe={kernelName:$c,backendName:"wasm",kernelFunc:xpe},vpe=!0,wpe=Nn(So,vpe),kpe=xn(jo),Spe=xn(Ko),VT;function Ipe(e){VT=e.wasm.cwrap(Xo,null,["number","number","number","number","number","number","number","number","number","number"])}function Cpe(e){let{backend:t,inputs:n,attrs:s}=e,{images:r}=n,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,u]=i,[c,h,d,p]=r.shape,f=[c,l,u,p],m=t.dataIdMap.get(r.dataId),g;m.dtype!=="float32"&&(g=ud({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(g.dataId));let y=m.id,x=t.makeOutput(f,"float32");if(v.sizeFromShape(r.shape)===0)return x;let A=t.dataIdMap.get(x.dataId).id;return VT(y,c,h,d,p,l,u,a?1:0,o?1:0,A),g!=null&&t.disposeData(g.dataId),x}var Tpe={kernelName:Xo,backendName:"wasm",setupFunc:Ipe,kernelFunc:Cpe},UT;function Npe(e){UT=e.wasm.cwrap(qo,null,["number","number","number","number","number","number","number","number","number","number"])}function Epe(e){let{backend:t,inputs:n,attrs:s}=e,{images:r}=n,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,u]=i,[c,h,d,p]=r.shape,f=[c,l,u,p],m=t.makeOutput(f,"float32");if(v.sizeFromShape(r.shape)===0)return m;let g=t.dataIdMap.get(r.dataId),y;g.dtype!=="float32"&&(y=ud({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(y.dataId));let x=g.id,A=t.dataIdMap.get(m.dataId).id;return UT(x,c,h,d,p,l,u,a?1:0,o?1:0,A),y!=null&&t.disposeData(y.dataId),m}var _pe={kernelName:qo,backendName:"wasm",setupFunc:Npe,kernelFunc:Epe},GT;function Rpe(e){GT=e.wasm.cwrap(Ll,null,["number","array","number","array","number","number"])}function $pe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,o=v.parseAxisParam(a,r.shape);if(r.shape.length===0)return $g({inputs:{x:r},backend:n});let i=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(i.dataId).id,c=new Uint8Array(new Int32Array(o).buffer),h=new Uint8Array(new Int32Array(r.shape).buffer);GT(l,c,o.length,h,r.shape.length,u);let d=us({inputs:{x:i},attrs:{shape:r.shape},backend:n});return n.disposeData(i.dataId),d}var Dpe={kernelName:Ll,backendName:"wasm",kernelFunc:$pe,setupFunc:Rpe},HT;function Fpe(e){HT=e.wasm.cwrap(Ql,null,["number","number","number","number","number","number","number","number","array","number","number"])}function Ope(e){let{inputs:t,backend:n,attrs:s}=e,{image:r}=t,{radians:a,fillValue:o,center:i}=s,l=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(r.dataId).id,c=n.dataIdMap.get(l.dataId).id,[h,d,p,f]=r.shape,[m,g]=T.getImageCenter(i,d,p),y=o===0,x=255,A=typeof o=="number"?[o,o,o,y?0:x]:[...o,x],b=new Uint8Array(new Int32Array(A).buffer);return HT(u,h,d,p,f,a,m,g,b,A.length,c),l}var Ppe={kernelName:Ql,backendName:"wasm",kernelFunc:Ope,setupFunc:Fpe},Mpe=xn(Bl),zpe=xn(Zo),jT;function Lpe(e){jT=e.wasm.cwrap(Wl,null,["number","number","number","number","number","number","array","number","number"])}function Bpe(e){let{backend:t,inputs:n,attrs:s}=e,{indices:r,updates:a}=n,{shape:o}=s,i=t.makeOutput(o,a.dtype);if(v.sizeFromShape(o)===0)return i;let{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=q2.calculateShapes(a,r,o),f=t.dataIdMap.get(r.dataId).id,g=t.dataIdMap.get(a.dataId).id,y=new Uint8Array(new Int32Array(h).buffer),x=t.dataIdMap.get(i.dataId).id;return jT(f,g,Bt[a.dtype],l,u,c,y,d,x),i}var Wpe={kernelName:Wl,backendName:"wasm",setupFunc:Lpe,kernelFunc:Bpe},qT;function Vpe(e){qT=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function Upe(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=n.dataIdMap.get(s.dataId).id,i=n.dataIdMap.get(r.dataId).id,l=n.dataIdMap.get(a.dataId).id,u=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(u.dataId).id,h=s.shape.length,d=r.shape.length,p=h===0||h>1||d===1?1:v.sizeFromShape(r.shape.slice(1));return qT(o,i,l,p,c),u}var Gpe={kernelName:Vl,backendName:"wasm",kernelFunc:Upe,setupFunc:Vpe},XT;function Hpe(e){XT=e.wasm.cwrap(Jo,null,["number","number"])}function jpe(e){let{backend:t,inputs:{x:n}}=e,s=t.dataIdMap.get(n.dataId).id,r=t.makeOutput(n.shape,n.dtype),a=t.dataIdMap.get(r.dataId).id;return v.sizeFromShape(r.shape)===0||XT(s,a),r}var qpe={kernelName:"Sigmoid",backendName:"wasm",setupFunc:Hpe,kernelFunc:jpe},Xpe=xn(Yo),KT;function Kpe(e){KT=e.wasm.cwrap(ti,null,["number","number","number","number"])}function Zpe(e){let{backend:t,inputs:{logits:n},attrs:{dim:s}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),o=t.dataIdMap.get(a.dataId).id,i=n.shape[s],l=v.sizeFromShape(n.shape)/i;return v.sizeFromShape(a.shape)===0||KT(r,o,i,l),a}var Ype={kernelName:ti,backendName:"wasm",setupFunc:Kpe,kernelFunc:Zpe};function Jpe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s,i=v.sizeFromShape(a),l=[[0,0]];l.push(...o);for(let S=1+a.length;S<r.shape.length;++S)l.push([0,0]);let u=LT.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=T.getReshaped(u.shape,a,i,!1),h=T.getPermuted(c.length,a.length,!1),d=T.getReshapedPermuted(u.shape,a,i,!1),m=us({inputs:{x:u},backend:n,attrs:{shape:c}}),x=io({inputs:{x:m},backend:n,attrs:{perm:h}}),w=us({inputs:{x},backend:n,attrs:{shape:d}});return n.disposeData(u.dataId),n.disposeData(m.dataId),n.disposeData(x.dataId),w}var Qpe={kernelName:Hl,backendName:"wasm",kernelFunc:Jpe},ZT;function efe(e){ZT=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function tfe(e){let{backend:t,inputs:n}=e,{indices:s,values:r,denseShape:a,defaultValue:o}=n,i=s.shape[0],l=s.shape[1],u=t.readSync(a.dataId)[0],c=[i+u,l],h=t.dataIdMap.get(s.dataId).id,d=t.dataIdMap.get(r.dataId).id,p=t.dataIdMap.get(o.dataId).id,f=t.makeOutput(c,s.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(c.slice(0,1),r.dtype),y=t.dataIdMap.get(g.dataId).id,x=t.makeOutput([u],"bool"),A=t.dataIdMap.get(x.dataId).id,b=t.makeOutput([i],s.dtype),w=t.dataIdMap.get(b.dataId).id,S=t.makeOutput([4],"int32"),C=t.dataIdMap.get(S.dataId).id,_=ZT(h,d,Bt[r.dtype],i,u,l,p,m,y,A,w,C),R=t.readSync(S.dataId),D;switch(R[0]){case 1:{D=T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(R[1]);break}case 2:{D=T.getSparseFillEmptyRowsNegativeIndexErrorMessage(R[1],R[2]);break}case 3:D=T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(R[1],R[2],R[3]);break;default:D=""}if(t.disposeData(S.dataId),D)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(x.dataId),t.disposeData(b.dataId),new Error(D);let E=f,F=g;return _!==c[0]&&(E=il({inputs:{x:f},attrs:{begin:0,size:[_,l]},backend:t}),F=il({inputs:{x:g},attrs:{begin:0,size:_},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[E,F,x,b]}var nfe={kernelName:zh,backendName:"wasm",setupFunc:efe,kernelFunc:tfe},YT;function sfe(e){YT=e.wasm.cwrap(Pc,null,["number","number","number","number","number","number","number"])}function rfe(e){let{backend:t,inputs:n}=e,{inputIndices:s,inputShape:r,newShape:a}=n;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let o=t.dataIdMap.get(s.dataId).id,i=t.dataIdMap.get(r.dataId).id,l=t.dataIdMap.get(a.dataId).id,u=s.shape[0],c=v.sizeFromShape(a.shape),h=t.makeOutput([u,c],s.dtype),d=t.dataIdMap.get(h.dataId).id,p=t.makeOutput([c],a.dtype),f=t.dataIdMap.get(p.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;YT(o,i,l,u,d,f,g);let y=t.readSync(m.dataId),x;switch(y[0]){case 0:{x=T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y[1],y[2]);break}case 1:{x=T.getSparseReshapeNegativeOutputDimErrorMessage(y[1],y[2]);break}case 2:x=T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let A=Array.from(t.readSync(r.dataId)),b=Array.from(t.readSync(p.dataId));x=T.getSparseReshapeInputOutputMultipleErrorMessage(A,b);break}case 4:{let A=Array.from(t.readSync(r.dataId)),b=Array.from(t.readSync(p.dataId));x=T.getSparseReshapeInputOutputMismatchErrorMessage(A,b);break}default:x=""}if(t.disposeData(m.dataId),x)throw t.disposeData(h.dataId),t.disposeData(p.dataId),new Error(x);return[h,p]}var afe={kernelName:Pc,backendName:"wasm",setupFunc:sfe,kernelFunc:rfe},JT;function QT(e){JT=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function eN(e,t){let{backend:n,inputs:s}=e,{data:r,indices:a,segmentIds:o}=s,i=a.shape[0],l=n.readSync(o.dataId,i-1,i)[0],c=i>0?l+1:0;if(c<0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=r.shape.slice();h[0]=c;let d=n.dataIdMap.get(r.dataId).id,p=n.dataIdMap.get(a.dataId).id,f=n.dataIdMap.get(o.dataId).id,m=n.makeOutput(h,r.dtype),g=n.dataIdMap.get(m.dataId).id,y=n.makeOutput([4],"int32"),x=n.dataIdMap.get(y.dataId).id;JT(d,Bt[r.dtype],r.shape[0],p,f,g,x,t,0);let A=n.readSync(y.dataId),b;switch(A[0]){case 0:{b=T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{b=T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:b=T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(A[1],A[2]);break;case 3:b=T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(A[1],A[2],A[3]);break;default:b=""}if(n.disposeData(y.dataId),b)throw n.disposeData(m.dataId),new Error(b);return m}function ofe(e){return eN(e,!0)}var ife={kernelName:Lh,backendName:"wasm",setupFunc:QT,kernelFunc:ofe};function lfe(e){return eN(e,!1)}var ufe={kernelName:Bh,backendName:"wasm",setupFunc:QT,kernelFunc:lfe};function cfe(e){let{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=n,i=v.parseAxisParam(o,r.shape)[0],l=T.prepareSplitSize(r,a,i),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map(h=>{let d=[...c];d[i]=h;let p=il({inputs:{x:r},attrs:{begin:u,size:d},backend:s});return u[i]+=h,p})}var dfe={kernelName:jl,backendName:"wasm",kernelFunc:cfe},hfe=xn(Qo),pfe=xn(Mc),ffe=!0,mfe=Nn(ni,ffe),tN;function gfe(e){tN=e.wasm.cwrap(ai,null,["number","number","number","number"])}function yfe(e){let{backend:t,inputs:n,attrs:s}=e,{alpha:r}=s,{x:a}=n,o=t.dataIdMap.get(a.dataId).id,i=t.makeOutput(a.shape,a.dtype),l=t.dataIdMap.get(i.dataId).id;return tN(o,r,Bt[a.dtype],l),i}var Afe={kernelName:ai,backendName:"wasm",setupFunc:gfe,kernelFunc:yfe},nN;function xfe(e){nN=e.wasm.cwrap(ql,null,["number","array","number","array","array","array","array","array","number","number"])}function bfe(e){let{backend:t,inputs:n,attrs:s}=e,{x:r}=n,{begin:a,end:o,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=zt.sliceInfo(r.shape,a,o,i,l,u,c,h,d),w;if(m)w=us({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||y){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let S=zt.computeOutShape(x,A,b),C=il({inputs:{x:r},backend:t,attrs:{begin:x,size:S}});w=us({inputs:{x:C},backend:t,attrs:{shape:f}}),t.disposeData(C.dataId)}else{let S=t.makeOutput(p,"float32"),C=t.dataIdMap.get(r.dataId).id,_=new Uint8Array(new Int32Array(v.computeStrides(r.shape)).buffer),R=new Uint8Array(new Int32Array(x).buffer),D=new Uint8Array(new Int32Array(A).buffer),E=new Uint8Array(new Int32Array(b).buffer),F=new Uint8Array(new Int32Array(p).buffer),k=new Uint8Array(new Int32Array(v.computeStrides(p)).buffer),M=t.dataIdMap.get(S.dataId).id;nN(C,_,r.shape.length,R,D,E,F,k,p.length,M),w=us({inputs:{x:S},backend:t,attrs:{shape:f}}),t.disposeData(S.dataId)}return w}var vfe={kernelName:ql,backendName:"wasm",setupFunc:xfe,kernelFunc:bfe};function wfe(e){let{backend:t,inputs:n,attrs:s}=e,{data:r,dataSplits:a}=n,{separator:o,nGramWidths:i,leftPad:l,rightPad:u,padWidth:c,preserveShortSequences:h}=s,d=t.readSync(r.dataId),p=t.readSync(a.dataId),[f,m]=W5(d,p,o,i,l,u,c,h),g=t.makeOutput([f.length],"string"),y=t.dataIdMap.get(g.dataId);y.stringBytes=f;let x=t.makeOutput(a.shape,"int32");return t.typedArrayFromHeap(x).set(m),[g,x]}var kfe={kernelName:zc,backendName:"wasm",kernelFunc:wfe};function Sfe(e){let{backend:t,inputs:n,attrs:s}=e,{input:r,delimiter:a}=n,{skipEmpty:o}=s,i=t.readSync(r.dataId),l=t.readSync(a.dataId),[u,c,h]=V5(i,l[0],o),d=c.length,p=t.makeOutput([d,2],"int32");t.typedArrayFromHeap(p).set(u);let m=t.makeOutput([d],"string"),g=t.dataIdMap.get(m.dataId);g.stringBytes=c;let y=t.makeOutput([2],"int32");return t.typedArrayFromHeap(y).set(h),[p,m,y]}var Ife={kernelName:Vh,backendName:"wasm",kernelFunc:Sfe};function Cfe(e){let{backend:t,inputs:n,attrs:s}=e,{input:r}=n,{numBuckets:a}=s,o=t.readSync(r.dataId),i=U5(o,a),l=t.makeOutput(r.shape,"int32");return t.typedArrayFromHeap(l).set(i),l}var Tfe={kernelName:Uh,backendName:"wasm",kernelFunc:Cfe},Nfe=!0,Efe=Nn(si,Nfe),sN;function _fe(e){sN=e.wasm.cwrap(ei,null,["number","number","number","number"])}function Rfe(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:o}=n,i=t.dataIdMap.get(o.dataId).id,l=i,u=o,{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=hi(o,r,t),f=h;if(p){let A=t.dataIdMap.get(c.dataId).id;A!==i&&(u=c,l=A,f=T.getInnerMostAxes(f.length,u.shape.length))}T.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[m,g]=T.computeOutAndReduceShapes(u.shape,f),y=v.sizeFromShape(g),x=t.makeOutput(m,u.dtype);if(v.sizeFromShape(u.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;sN(l,y,Bt[x.dtype],A)}if(p&&t.disposeData(c.dataId),a){let A=T.expandShapeToKeepDim(x.shape,d);x.shape=A}return x}var $fe={kernelName:ei,backendName:"wasm",setupFunc:_fe,kernelFunc:Rfe},Dfe=xn(Xl),Ffe=xn(ri),rN;function Ofe(e){rN=e.wasm.cwrap(ka,null,["number","array","number","array","number","number"])}function Pfe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,a=n.dataIdMap.get(r.dataId).id,{reps:o}=s,i=new Array(r.shape.length);for(let d=0;d<i.length;d++)i[d]=r.shape[d]*o[d];let l=new Uint8Array(new Int32Array(r.shape).buffer),u=new Uint8Array(new Int32Array(i).buffer),c=n.makeOutput(i,r.dtype),h=n.dataIdMap.get(c.dataId).id;return rN(a,l,r.shape.length,u,i.length,Bt[c.dtype],h),c}var Mfe={kernelName:ka,backendName:"wasm",setupFunc:Ofe,kernelFunc:Pfe},aN;function zfe(e){aN=e.wasm.cwrap(Kl,null,["number","array","number","number","number","bool","number","number"])}var Lfe=({inputs:e,backend:t,attrs:n})=>{let{x:s}=e,{k:r,sorted:a}=n,o=t.dataIdMap.get(s.dataId).id,i=new Uint8Array(new Int32Array(s.shape).buffer),l=s.shape.slice();l[l.length-1]=r;let u=t.makeOutput(l,s.dtype),c=t.dataIdMap.get(u.dataId).id,h=t.makeOutput(l,"int32"),d=t.dataIdMap.get(h.dataId).id;return aN(o,i,s.shape.length,Bt[s.dtype],r,a,c,d),[u,h]},Bfe={kernelName:Kl,backendName:"wasm",setupFunc:zfe,kernelFunc:Lfe},oN;function Wfe(e){oN=e.wasm.cwrap(Zl,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])}function Vfe(e){let{backend:t,inputs:n,attrs:s}=e,{image:r,transforms:a}=n,{interpolation:o,fillMode:i,fillValue:l,outputShape:u}=s,[c,h,d,p]=r.shape,[f,m]=u??[h,d],g=[c,f,m,p],y=new Uint8Array(new Int32Array(v.computeStrides(r.shape)).buffer),x=new Uint8Array(new Int32Array(v.computeStrides(g)).buffer),A=t.makeOutput(g,r.dtype),b=t.dataIdMap.get(A.dataId).id,S=t.dataIdMap.get(r.dataId).id,_=t.dataIdMap.get(a.dataId).id,R=o==="nearest"?1:2,D;switch(i){case"constant":D=1;break;case"reflect":D=2;break;case"wrap":D=3;break;case"nearest":D=4;break;default:D=1;break}return oN(S,_,a.shape[0]>1,c,f,m,p,d,h,y,r.shape.length-1,x,g.length-1,R,D,l,b),A}var Ufe={kernelName:Zl,backendName:"wasm",setupFunc:Wfe,kernelFunc:Vfe};function Gfe(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r.shape[a],i=r.shape.length,l=new Array(i-1),u=0;for(let p=0;p<i;p++)p!==a&&(l[u++]=r.shape[p]);let c=new Array(o),h=new Array(i).fill(0),d=r.shape.slice();d[a]=1;for(let p=0;p<c.length;p++)h[a]=p,c[p]=il({inputs:{x:r},attrs:{begin:h,size:d},backend:n});return c.map(({dataId:p,dtype:f})=>({dataId:p,dtype:f,shape:l}))}var Hfe={kernelName:Yl,backendName:"wasm",kernelFunc:Gfe};function jfe(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(s).fill(0),s}var qfe={kernelName:Jl,backendName:"wasm",kernelFunc:jfe},Xfe=[wce,kce,Ice,Nce,Pce,Lce,Vce,Hce,Kce,tde,nde,sde,ode,ide,cde,pde,fde,mde,Ade,vde,Sde,Tde,_de,Rde,Dde,Fde,Ode,Pde,Lde,Bde,Vde,Hde,Xde,Yde,ehe,she,ahe,ihe,Ece,che,hhe,fhe,mhe,yhe,Ahe,bhe,whe,Ihe,The,_he,Dhe,Phe,zhe,Whe,Uhe,Ghe,qhe,Zhe,Qhe,tpe,rpe,ope,lpe,LT,hpe,mpe,Ape,bpe,wpe,kpe,Spe,jce,Tpe,_pe,Dpe,Ppe,Mpe,zpe,Wpe,Gpe,qpe,Xpe,Qce,Ype,Qpe,nfe,afe,ife,ufe,dfe,hfe,pfe,mfe,Afe,vfe,kfe,Ife,Tfe,Efe,$fe,Dfe,Ffe,Mfe,Bfe,Ufe,Dce,Hfe,qfe];for(let e of Xfe)Ir(e);var p2=K();p2.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));p2.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(p2.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var kw=uo(L_()),Kfe=uo(B_()),Sw=uo(W_()),Iw=kw.default||kw,Zfe=Sw.default||Sw,iN=class extends pc{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(lN),m2=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new Th(this,bn())}write(e,t,n){let s={id:this.dataIdNextNumber++};return this.move(s,e,t,n,1),s}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=v.now();return e(),{kernelMs:v.now()-t}}move(e,t,n,s,r){let a=this.dataIdNextNumber++;if(s==="string"){let u=t;this.dataIdMap.set(e,{id:a,stringBytes:u,shape:n,dtype:s,memoryOffset:null,refCount:r});return}let o=v.sizeFromShape(n),i=o*v.bytesPerElement(s),l=this.wasm._malloc(i);this.dataIdMap.set(e,{id:a,memoryOffset:l,shape:n,dtype:s,refCount:r}),this.wasm.tfjs.registerTensor(a,o,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,i),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:s,dtype:r,shape:a,stringBytes:o}=this.dataIdMap.get(e);if(r==="string")return(t==null||t===0)&&(n==null||n>=o.length)?o:o.slice(t,n);t=t||0,n=n||v.sizeFromShape(a);let i=v.bytesPerElement(r),l=this.wasm.HEAPU8.slice(s+t*i,s+n*i);return Qfe(l.buffer,r)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let s;if(n==null)s=this.write(null,e,t);else{let r=this.dataIdNextNumber++;s={id:r},this.dataIdMap.set(s,{id:r,memoryOffset:n,shape:e,dtype:t,refCount:1});let a=v.sizeFromShape(e);this.wasm.tfjs.registerTensor(r,a,n)}return{dataId:s,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let s=this.wasm.HEAPU8.buffer,{memoryOffset:r}=this.dataIdMap.get(n),a=v.sizeFromShape(e);switch(t){case"float32":return new Float32Array(s,r,a);case"int32":return new Int32Array(s,r,a);case"bool":return new Uint8Array(s,r,a);default:throw new Error(`Unknown dtype ${t}`)}}};function Yfe(e){return(t,n)=>(v.fetch(e,{credentials:"same-origin"}).then(s=>{s.ok||t.env.a(`failed to load wasm binary file at '${e}'`),s.arrayBuffer().then(r=>{WebAssembly.instantiate(r,t).then(a=>{n(a.instance,a.module)})})}),{})}function Cw(e,t,n){if(Wm!=null)return Wm;let s="tfjs-backend-wasm.wasm";return e&&t?s="tfjs-backend-wasm-threaded-simd.wasm":e&&(s="tfjs-backend-wasm-simd.wasm"),sh!=null&&sh[s]!=null?sh[s]:n+s}async function Jfe(){let[e,t]=await Promise.all([K().getAsync("WASM_HAS_SIMD_SUPPORT"),K().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,s)=>{let r={};r.locateFile=(i,l)=>{if(i.endsWith(".worker.js")){let u=Kfe.wasmWorkerContents.replace(/\n/g,"\\n"),c=new Blob([u],{type:"application/javascript"});return URL.createObjectURL(c)}return i.endsWith(".wasm")?Cw(e,t,Hd??l):l+i},uv&&(r.instantiateWasm=Yfe(Cw(e,t,Hd??"")));let a=!1;r.onAbort=()=>{if(a||rh)return;rh=!0,s({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let o;t&&e&&Wm==null?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+Iw.toString()],{type:"text/javascript"}),o=Iw(r)):o=Zfe(r),o.then(i=>{a=!0,rh=!1;let l=null;i.tfjs={init:i.cwrap("init",null,[]),initWithThreadsCount:i.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:i.cwrap("get_threads_count","number",[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",l,["number"]),dispose:i.cwrap("dispose",l,[])},n({wasm:i})}).catch(s)})}function Qfe(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var eme=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],Wm=null,Hd=null,sh={},rh=!1,uv=!1;function tme(e,t=!1){if(U2("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),rh)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");Wm=e,uv=t}function f2(e,t=!1){if(rh)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof e=="string")Hd=e;else{sh=e;let n=eme.filter(s=>sh[s]==null);if(n.length>0)throw new Error(`There were no entries found for the following binaries: ${n.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}uv=t}var lN=-1,m2=-1;function nme(e){lN=e}function sme(){if(m2===-1)throw new Error("WASM backend not initialized.");return m2}var rme="3.20.0",ame=2;Lc("wasm",async()=>{let{wasm:e}=await Jfe();return new iN(e)},ame);var pi=K();pi.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);pi.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);pi.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1);pi.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);pi.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);pi.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);pi.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);pi.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!0);var ome=class{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireUploadBuffer(e,t){return this.acquireBuffer(e,t,!0)}acquireBuffer(e,t,n=!1){let s=Tw(e,t);if(this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.usedBuffers.has(s)||this.usedBuffers.set(s,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(s).length>0){this.numFreeBuffers--;let a=this.freeBuffers.get(s).shift();return this.usedBuffers.get(s).push(a),a}this.numBytesAllocated+=e;let r=this.device.createBuffer({size:e,usage:t,mappedAtCreation:n});return this.usedBuffers.get(s).push(r),r}releaseBuffer(e,t,n){if(this.freeBuffers.size===0)return;let s=Tw(t,n);this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.freeBuffers.get(s).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let r=this.usedBuffers.get(s),a=r.indexOf(e);if(a<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");r.splice(a,1),this.numBytesUsed-=t}releaseUploadBuffer(e,t,n){e.mapAsync(GPUMapMode.WRITE).then(()=>{this.releaseBuffer(e,t,n)},s=>{})}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function Tw(e,t){return`${e}_${t}`}var ime=class{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,n,s){let r=Ew(n),a=e*t*r,o=Nw(e,t,n,s);if(this.freeTextures.has(o)||this.freeTextures.set(o,[]),this.usedTextures.has(o)||this.usedTextures.set(o,[]),this.numBytesUsed+=a,this.numUsedTextures++,this.freeTextures.get(o).length>0){this.numFreeTextures--;let l=this.freeTextures.get(o).shift();return this.usedTextures.get(o).push(l),l}this.numBytesAllocated+=a;let i=this.device.createTexture({size:[e,t],format:n,usage:s});return this.usedTextures.get(o).push(i),i}releaseTexture(e,t,n,s,r){if(this.freeTextures.size===0)return;let a=Nw(t,n,s,r);this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.freeTextures.get(a).push(e),this.numFreeTextures++,this.numUsedTextures--;let o=this.usedTextures.get(a),i=o.indexOf(e);if(i<0)throw new Error("Cannot release a texture that was never provided by this texture manager");o.splice(i,1);let l=Ew(s),u=t*n*l;this.numBytesUsed-=u}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedTextures.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function Nw(e,t,n,s){return`${e}_${t}_${n}_${s}`}function Ew(e){if(e==="rgba8unorm")return 16;throw new Error(`${e} is not supported!`)}function lme(e,t){if(Math.max(...e)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let n=e.length,s=e.map(a=>`${t}[${a}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}var ume=(e,t,n,s)=>{let r={dtype:s.dtype,shape:s.shape},a=cme(n,r,t),o=e.createShaderModule({code:a,label:t.constructor.name});return e.createComputePipeline({compute:{module:o,entryPoint:"_start"},label:t.constructor.name,layout:"auto"})};function Sn(e){if(e<=1)return"i32";if(e===2)return"vec2<i32>";if(e===3)return"vec3<i32>";if(e===4)return"vec4<i32>";if(e===5)return"vec5";if(e===6)return"vec6";throw Error(`GPU for rank ${e} is not yet supported`)}function ma(e){if(e===0)return"x";if(e===1)return"y";if(e===2)return"z";if(e===3)return"w";if(e===4)return"u";if(e===5)return"v";throw Error(`Index ${e} is not yet supported`)}function Ke(...e){let t;switch(e.length){case 0:t=`
        ${Ih()}
        fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                  @builtin(global_invocation_id) GlobalId : vec3<u32>,
                  @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
          localId = LocalId;
          globalId = GlobalId;
          numWorkgroups = NumWorkgroups;
          main();
        }

        fn main()
      `;break;case 1:t=`
        ${Ih()}
        fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                  @builtin(global_invocation_id) GlobalId : vec3<u32>,
                  @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
          localId = LocalId;
          globalId = GlobalId;
          numWorkgroups = NumWorkgroups;
          main(getGlobalIndex());
        }

        fn main(${e[0]} : i32)
      `;break;default:throw Error("Unreachable")}return t}function Ih(){return`
  @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
`}function cme(e,t,n){let s=[];if(s.push(`
      const workGroupSizeX = ${n.workGroupSize[0]}u;
      const workGroupSizeY = ${n.workGroupSize[1]}u;
      const workGroupSizeZ = ${n.workGroupSize[2]}u;

      var<private> localId: vec3<u32>;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${uN(n)?"  return i32(globalId.x);":`  let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
                   localId.y * workGroupSizeX + localId.x;
               let workGroupID = (globalId - localId)/vec3<u32>(
                   workGroupSizeX, workGroupSizeY, workGroupSizeZ);

               return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +
                   workGroupID.y * numWorkgroups.x + workGroupID.x) *
                   (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
                   localInvocationIndex);
        `}
      }
    `),n.isFromPixels)return s.push(`
        struct Uniform {
          size            : i32,
          numChannels     : i32,
          outShapeStrides : vec2<i32>,
        };

        @group(0) @binding(0) var<storage, read_write> result: array<${ah(t.dtype,n.isVec4)}>;
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `),[_w,s.join(`
`),Rw(t.shape),n.getUserCode()].join(`
`);let r="struct Uniforms { NAN : f32, ";n.variableNames.forEach((d,p)=>{let f=Sn(e[p].shape.length);r+=`${d.charAt(0).toLowerCase()+d.slice(1)}Shape : ${f}, `}),r+=`outShape : ${Sn(t.shape.length)}, `;let o=t.shape.length-1;r+=`
         outShapeStrides: ${Sn(o)}, `,n.size&&(r+="size : i32, "),n.uniforms&&(r+=n.uniforms),r+="};",r=Ame(r),s.push(r),n.atomic?s.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):s.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${ah(t.dtype,n.isVec4)}>;
    `),n.variableNames.forEach((d,p)=>{s.push(`
      @group(0) @binding(${1+p}) var<storage, read> ${d}: array<${n.variableTypes?n.variableTypes[p]:ah(e[p].dtype,n.isVec4)}>;
        `)}),r!==""&&s.push(`
      @group(0) @binding(${1+n.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);let l=mme(t.shape,n.dispatchLayout),u=[_w,s.join(`
`),Rw(t.shape),l,gme(t.shape.length)];n.atomic||u.push(yme(t.shape,t.dtype,n.isVec4));let c=e.map((d,p)=>fme(d,t.shape,n.variableTypes?n.variableTypes[p]==="vec4<f32>":n.isVec4,n.dispatchLayout.x.length===t.shape.length)).join(`
`);return u.push(c),u.push(n.getUserCode()),u.join(`
`)}function dme(e,t,n,s){let r=e.shaderKey;if(e.isFromPixels)return r;let a=n.map(c=>c.dtype).concat(s.dtype),o=n.map(c=>T.getBroadcastDims(c.shape,s.shape)),i=n.map(c=>v.arraysEqual(c.shape,s.shape)).join("_"),l=o.map(c=>c.join("_")).join(";"),u=uN(e)?"flatDispatch":"";return r+="_"+(e.workGroupSize?e.workGroupSize.join(","):"")+t.map(c=>c.length).join(",")+a.join(",")+e.variableNames.join(",")+l+i+u,r}var _w=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let modulo: i32 = a % b;
    if (sign < 0. && modulo != 0) {
      res = res - 1;
    }
    return res;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    return vec4<bool>(isnan(val[0]), isnan(val[1]), isnan(val[2]), isnan(val[3]));
  }
`;function Rw(e){let t=e.length;if(t<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";let n=v.computeStrides(e),s=Sn(t),r=[];for(let o=0;o<t;o++)r.push(`d${o}`);if(n.length===1)return`    fn getCoordsFromIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let a;return a="var index2 = index;"+n.map((o,i)=>{let l=`let ${r[i]} = index2 / uniforms.outShapeStrides.${ma(i)}`,u=i===n.length-1?`let ${r[i+1]} = index2 - ${r[i]} * uniforms.outShapeStrides.${ma(i)}`:`index2 = index2 - ${r[i]} * uniforms.outShapeStrides.${ma(i)}`;return`${l}; ${u};`}).join(""),`
    fn getCoordsFromIndex(index : i32) -> ${s} {
      ${a}
      return ${s}(${r.join(",")});
    }
  `}function hme(e,t){let n=e.name,s=e.shape.length,r=Sn(s),a="get"+n.charAt(0).toUpperCase()+n.slice(1),o=["d0","d1","d2","d3","d4","d5"].slice(0,s),i=o.map(c=>`${c} : i32`).join(", ");if(s<1)return t?`
        fn ${a}() -> vec4<f32> {
          return vec4<f32>(${n}[0]);
        }
      `:`
      fn ${a}() ->f32 {
        return f32(${n}[0]);
      }
    `;let l=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`,u=`${s}D`;return s===0&&(u="1D"),t?`
      fn ${a}(${i}) -> vec4<f32> {
        return vec4<f32>(${n}[getIndexFromCoords${u}(${r}(${o.join(",")}),
          ${l}) / 4]);
      }
      `:`
    fn ${a}(${i}) -> f32 {
      return f32(${n}[getIndexFromCoords${u}(${r}(${o.join(",")}),
        ${l})]);
    }
   `}function pme(e,t,n,s){let r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),o="get"+a+"ByOutput",i=e.shape.length,l=t.length,u=Sn(l);if(v.arraysEqual(e.shape,t)&&s)return n?`
      fn ${o}Index(globalIndex : i32) -> vec4<f32> {
        return vec4<f32>(${r}[globalIndex]);
      }

      fn ${o}Coords(coords : ${u}) -> vec4<f32> {
        return vec4<f32>(${r}[${l>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);
      }
      `:`
    fn ${o}Index(globalIndex : i32) -> f32 {
      return f32(${r}[globalIndex]);
    }

    fn ${o}Coords(coords : ${u}) -> f32 {
      return f32(${r}[${l>1?"getOutputIndexFromCoords(coords)":"coords"}]);
    }
    `;let c=T.getBroadcastDims(e.shape,t),h=l-i,d="";if(i===0)return n?`
    fn ${o}Index(globalIndex : i32) -> vec4<f32> {
      return get${a}();
    }

    fn ${o}Coords(coords : ${u}) -> vec4<f32> {
      return get${a}();
    }
  `:`
    fn ${o}Index(globalIndex : i32) -> f32{
      return get${a}();
    }

    fn ${o}Coords(coords : ${u}) -> f32{
      return get${a}();
    }
  `;l<2&&c.length>=1?d="coords = 0;":d=c.map(g=>`coords.${ma(g+h)} = 0;`).join(`
`);let p="";if(l<2&&i>0)p="coords";else if(l>1){let g=Sn(i),y=e.shape.map((x,A)=>`coords.${ma(A+h)}`).join(", ");p=`${g}(${y})`}else p="coords";let f=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,m=`${i}D`;return n?`
    fn ${o}Index(globalIndex : i32) -> vec4<f32> {
      var coords = getCoordsFromIndex(globalIndex);
      ${d}
      return ${r}[getIndexFromCoords${m}(${p}, ${f}) / 4];
    }

    fn ${o}Coords(coordsIn : ${u}) -> vec4<f32> {
      var coords = coordsIn;
      ${d}
      return ${r}[getIndexFromCoords${m}(${p}, ${f}) / 4];
    }
  `:`
  fn ${o}Index(globalIndex : i32) -> f32 {
    var coords = getCoordsFromIndex(globalIndex);
    ${d}
    return f32(${r}[getIndexFromCoords${m}(${p}, ${f})]);
  }

  fn ${o}Coords(coordsIn : ${u}) -> f32 {
    var coords = coordsIn;
    ${d}
    return f32(${r}[getIndexFromCoords${m}(${p}, ${f})]);
  }
`}function fme(e,t,n,s){let r=hme(e,n);return e.shape.length<=t.length&&(r+=pme(e,t,n,s)),r}function mme(e,t){let{x:n,y:s=[],z:r=[]}=t,a=e.length;if(n.length===a)return`fn getOutputCoords() -> ${Sn(a)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let o="",i=[n,s,r],l=0;for(let d=0;d<i.length;d++){let p=i[d];if(p.length!==0)if(l+=p.length,p.length===1)o+=`let d${p[0]} = i32(globalId[${d}]);`;else{let f=lme(p,"uniforms.outShape");o+=`var index${d} = i32(globalId[${d}]);`;for(let m=0;m<f.length;m++)o+=`let d${p[m]} = index${d} / ${f[m]};`,m===f.length-1?o+=`let d${p[m+1]} = index${d} - d${p[m]} * ${f[m]};`:o+=`index${d} = index${d} - d${p[m]} * ${f[m]};`}}let u=[];for(let d=0;d<l;d++)u.push(`d${d}`);let c=Sn(l),h=`fn getOutputCoords() -> ${c} {
  ${o}
`;return u.length===0?h+=`return ${c}(0); }`:h+=`return ${c}(${u.join(",")}); }`,h}function gme(e){let t="";switch(e){case 0:case 1:t+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:t+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:t+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:t+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:t+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:v.assert(!1,()=>`Unsupported ${e}D shape`);break}return t}function uN(e){return e.dispatch[1]===1&&e.dispatch[2]===1}function ah(e,t){return e==="float32"?t?"vec4<f32>":"f32":e==="int32"||e==="bool"?t?"vec4<i32>":"i32":e}function yme(e,t,n){let s=e.length,r=ah(t,n),a;if(n?a=`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {
      result[flatIndex] = ${r}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {
      result[flatIndex] = ${r}(value);
    }`:a=`fn setOutputAtIndex(flatIndex : i32, value : f32) {
      result[flatIndex] = ${r}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {
      result[flatIndex] = ${r}(value);
    }`,s>=2){let o=["d0","d1","d2","d3","d4","d5"].slice(0,s),i=Sn(s);n?a+=`
      fn setOutputAtCoords(${o.map(l=>`${l} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputIndexFromCoords(${i}(${o.join(", ")}));
        setOutputAtIndex(flatIndex / 4, value);
      }
      fn setOutputAtCoordsI32(${o.map(l=>`${l} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputIndexFromCoords(${i}(${o.join(", ")}));
        setOutputAtIndexI32(flatIndex / 4, value);
      }
    `:a+=`
      fn setOutputAtCoords(${o.map(l=>`${l} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputIndexFromCoords(${i}(${o.join(", ")}));
        setOutputAtIndex(flatIndex, value);
      }
      fn setOutputAtCoordsI32(${o.map(l=>`${l} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputIndexFromCoords(${i}(${o.join(", ")}));
        setOutputAtIndexI32(flatIndex, value);
      }
    `}return a}function Ame(e){let t=/(\w+)\s*:\s*vec(5|6)/g;e=e.replace(t,s=>"@align(16) "+s);let n=/vec(5|6)\s*,\s*(\w+)/g;return e=e.replace(n,(s,r,a)=>`vec${r}, @align(16) ${a}`),e}var cN={};Ue(cN,{ArrayBufferToTypedArray:()=>pN,GPUBytesPerElement:()=>hN,MatMulProgramType:()=>fr,computeDispatch:()=>Ve,computeWorkGroupInfoForMatMul:()=>dN,computeWorkGroupSizeForConv2d:()=>cv,computeWorkPerThreadForConv2d:()=>dv,flatDispatchLayout:()=>tt,isWebGPUSupported:()=>hv,tilesFitEvenlyIntoShape:()=>xme});var Hi=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function xme(e,t){if(e.length!==t.length)throw new Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((n,s)=>n%e[s]===0)}function Ve(e,t,n=[1,1,1],s=[1,1,1]){let[r,a,o]=[Math.ceil(Hi(e.x.map(i=>t[i]))/(n[0]*s[0])),e.y?Math.ceil(Hi(e.y.map(i=>t[i]))/(n[1]*s[1])):1,e.z?Math.ceil(Hi(e.z.map(i=>t[i]))/(n[2]*s[2])):1];return[r,a,o]}function dN(e,t,n,s=!1){let r=[8,8,1],a=[4,4,1];return s||(e<=8&&(a[1]=1),t<=16&&n<=16&&(r[0]=4)),{workGroupSize:r,elementsPerThread:a}}function cv(e,t,n=!1){if(n)return[8,8,1];let s=Hi(e.x.map(a=>t[a])),r=Hi(e.y.map(a=>t[a]));return s<=4?[4,16,1]:r<=4?[16,4,1]:[16,16,1]}function dv(e,t,n=!1){if(n)return[4,4,1];let s=Hi(e.x.map(a=>t[a])),r=Hi(e.y.map(a=>t[a]));return s<=4?[1,2,1]:r<=4?[2,1,1]:[2,2,1]}function tt(e){return{x:e.map((t,n)=>n)}}function hN(e){if(e==="float32"||e==="int32"||e==="bool"||e==="string")return 4;if(e==="complex64")return 8;throw new Error(`Unknown dtype ${e}`)}function pN(e,t){if(t==="float32")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function hv(){return(typeof window<"u"||typeof WorkerGlobalScope<"u")&&!!navigator.gpu}var fr;(function(e){e[e.MatMulReduceProgram=0]="MatMulReduceProgram",e[e.MatMulSplitKProgram=1]="MatMulSplitKProgram",e[e.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",e[e.MatMulPackedProgram=3]="MatMulPackedProgram",e[e.MatMulMax=4]="MatMulMax"})(fr||(fr={}));var bme=K().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),vme=(e,t)=>{let n=e.limits.maxComputeWorkgroupsPerDimension,s=t.dispatchLayout,r=t.dispatch;if(r.every(o=>o<=n))return r;v.assert(r[0]>n&&s.y===void 0&&s.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let a=Math.ceil(Math.sqrt(r[0]));return a>n?(a=Math.ceil(Math.cbrt(r[0])),v.assert(a<=n,()=>"Total dispatch size exceeds WebGPU maximum."),[a,a,a]):[a,a,1]},Dg=class extends pc{constructor(e){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchNumberInEncoder=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,!hv())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=e.features.has("timestamp-query"),this.bufferManager=new ome(this.device),this.textureManager=new ime(this.device),this.tensorMap=new Th(this,bn()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),K().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return Dg.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}disposeData(e,t=!1){if(this.tensorDataPendingDisposal.indexOf(e)>=0)return!1;if(!this.tensorMap.has(e))return!0;let n=this.tensorMap.get(e);if(this.decRef(e),!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDataPendingDisposal.push(e),!1;let{complexTensorInfos:s}=this.tensorMap.get(e);return s!=null&&(this.disposeData(s.real.dataId,t),this.disposeData(s.imag.dataId,t)),this.releaseResource(e),this.tensorMap.delete(e),!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){let t=this.tensorMap.get(e);if(!(!t||!t.resourceInfo)){if("texture"in t.resourceInfo){let n=t.resourceInfo;n.texture instanceof GPUTexture&&this.textureManager.releaseTexture(n.texture,n.width,n.height,n.format,n.usage),n.texture=null}else{let n=t.resourceInfo;this.bufferManager.releaseBuffer(n.buffer,n.size,n.usage),n.buffer=null}t.resourceInfo=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.tensorMap.set(s,{dtype:n,shape:t,values:e,refCount:1}),s}move(e,t,n,s,r){if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:s,shape:n,values:t,refCount:r})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.size,e.usage)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.size,e.usage)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.end(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e,t){let n=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e,0,n,0,t),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let s=n.getMappedRange().slice(0);return n.unmap(),n!=null&&this.bufferManager.releaseBuffer(n,t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),K().getBool("WEBGPU_USE_PROFILE_TOOL")&&(v.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),s}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return this.releaseResource(e),n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n}=t;if(n==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t=this.tensorMap.get(e),{values:n}=t;if(n!=null)return this.convertAndCacheOnCPU(e,n);let s;if(t.dtype==="complex64"){let r=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),a=r[0],o=r[1];s=T.mergeRealAndImagArrays(a,o)}else{let r=t.resourceInfo,a=await this.getBufferData(r.buffer,r.size);s=pN(a,t.dtype)}return this.convertAndCacheOnCPU(e,s),s}readToGPU(e){let t=this.tensorMap.get(e),{values:n,dtype:s,shape:r,resourceInfo:a}=t;if(s==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(a==null)throw n!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let o=a.size,i=this.bufferManager.acquireBuffer(o,a.usage);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(a.buffer,0,i,0,o),this.submitQueue();let l=this.makeTensorInfo(r,s),u=bn().makeTensorFromTensorInfo(l),c=this.tensorMap.get(l.dataId);return c.resourceInfo={size:o,usage:this.defaultGpuBufferUsage(),buffer:i},{tensorRef:u,buffer:i,bufSize:o}}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(s=>v.decodeString(s));return Le(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Le(e.shape,e.dtype,t)}async time(e){this.supportTimeQuery||console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled. Using performance.now is not workable for webgpu since it doesn't support synchronous data read from GPU.");let t=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=v.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),a=v.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,s&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},i=await Promise.all(r);return o.kernelMs=v.sum(i),o.getExtraProfileInfo=()=>i.map((l,u)=>({name:a[u],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,o}makeTensorInfo(e,t,n){return t==="string"&&n!=null&&n.length>0&&v.isString(n[0])&&(n=n.map(r=>v.encodeString(r))),{dataId:this.write(n,e,t),shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);if("texture"in t.resourceInfo){let s=t.resourceInfo;return s.texture instanceof GPUExternalTexture?s.texture:s.texture.createView()}let n=t.resourceInfo;return{offset:0,size:n.size,buffer:n.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);if(t.resourceInfo)return;let n=hN(t.dtype)*v.sizeFromShape(t.shape),s=this.bufferManager.acquireBuffer(n,this.defaultGpuBufferUsage());if(t.resourceInfo={size:n,usage:this.defaultGpuBufferUsage(),buffer:s},t.values){let r=this.bufferManager.acquireUploadBuffer(n,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),a=r.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(a).set(t.values):new Float32Array(a).set(t.values),r.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(r,0,s,0,n);let o={size:n,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:r};this.stagingPendingDisposal.push(o)}}makeUniforms(e){let t=0,n=0,s=[];e.forEach(i=>{i.data.length===0&&(i.data=[1]);let l;switch(i.data.length){case 1:l=4;break;case 2:l=8;break;case 3:l=16;break;case 4:l=16;break;case 5:l=16;break;case 6:l=16;break;default:v.assert(!1,()=>`Unsupported ${i.data.length}D shape`)}(n===5||n===6)&&(l=16),t=Math.ceil(t/l)*l,n=i.data.length,s.push(t),t+=i.data.length*4});let r=new ArrayBuffer(t);e.forEach((i,l)=>{let u=s[l];i.type==="int32"?new Int32Array(r,u,i.data.length).set(i.data):i.type==="uint32"?new Uint32Array(r,u,i.data.length).set(i.data):new Float32Array(r,u,i.data.length).set(i.data)});let a=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.queue.writeBuffer(a,0,r,0,t);let o={size:t,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:a};return this.uniformPendingDisposal.push(o),{offset:0,size:t,buffer:a}}runWebGPUProgram(e,t,n,s,r){if(r||(r=this.makeTensorInfo(e.outputShape,n)),v.sizeFromShape(r.shape)===0)return this.tensorMap.get(r.dataId).values=v.getTypedArrayFromDType(r.dtype,0),r;this.uploadToGPU(r.dataId),e.dispatch=vme(this.device,e);let a=[],o=[];if(!e.isFromPixels){a.push({type:"float32",data:[NaN]}),o=t.concat(r).map(g=>g.shape);let f="int32";o.map(g=>{a.push({type:f,data:g})});let m=v.computeStrides(r.shape);if(a.push({type:f,data:m}),e.size){let g=v.sizeFromShape(e.outputShape);a.push({type:f,data:[e.isVec4?g/4:g]})}}let i=t.map((f,m)=>{if(f.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(f.dataId),{dtype:this.tensorMap.get(f.dataId).dtype,shape:f.shape,name:e.variableNames[m]}}),l=dme(e,o,i,r),u;l in this.pipelineCache?u=this.pipelineCache[l]:(u=ume(this.device,e,i,r),this.pipelineCache[l]=u),s&&(a=[...a,...s]);let c=[this.tensorToBinding(r),...t.map(f=>this.tensorToBinding(f)),this.makeUniforms(a)],h=this.device.createBindGroup({layout:u.getBindGroupLayout(0),entries:c.map((f,m)=>({binding:m,resource:f}))});this.ensureCommandEncoderReady();let d=this.getComputePass(),p=this.activeTimers!=null;return p&&this.supportTimeQuery&&d.writeTimestamp(this.querySet,0),d.setPipeline(u),d.setBindGroup(0,h),d.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),p&&this.supportTimeQuery&&d.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach(f=>{this.commandQueueOwnedIds.add(f.dataId)}),this.commandQueueOwnedIds.add(r.dataId),K().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),p&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),r}async getTimeFromQuerySet(e){let t=this.bufferManager.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.bufferManager.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let s=new BigUint64Array(n.getMappedRange()),r=Number(s[1]-s[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),r/1e6}shouldExecuteOnCPU(e,t=bme){return K().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).resourceInfo==null&&v.sizeFromShape(n.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}};Dg.nextDataId=0;hv()&&Lc("webgpu",async()=>{K().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let e={powerPreference:K().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),n=t.limits,s={},r=t.features.has("timestamp-query");s.requiredLimits={maxComputeWorkgroupStorageSize:n.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:n.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:n.maxStorageBufferBindingSize},r&&(s.requiredFeatures=["timestamp-query"]);let a=await t.requestDevice(s);return new Dg(a)},3);var Ge;(function(e){e[e.MUL=0]="MUL",e[e.ADD=1]="ADD",e[e.ATAN2=2]="ATAN2",e[e.SUB=3]="SUB",e[e.DIV=4]="DIV",e[e.EQUAL=5]="EQUAL",e[e.GREATER=6]="GREATER",e[e.GREATER_EQUAL=7]="GREATER_EQUAL",e[e.LESS=8]="LESS",e[e.LESS_EQUAL=9]="LESS_EQUAL",e[e.LOGICAL_AND=10]="LOGICAL_AND",e[e.NOT_EQUAL=11]="NOT_EQUAL",e[e.SQUARED_DIFFERENCE=12]="SQUARED_DIFFERENCE",e[e.INT_DIV=13]="INT_DIV",e[e.POW=14]="POW",e[e.PRELU=15]="PRELU",e[e.MAX=16]="MAX",e[e.MIN=17]="MIN",e[e.COMPLEX_MULTIPLY_REAL=18]="COMPLEX_MULTIPLY_REAL",e[e.COMPLEX_MULTIPLY_IMAG=19]="COMPLEX_MULTIPLY_IMAG"})(Ge||(Ge={}));var wme=`
  if (isnan(a)) { return a; }
  if (isnan(b)) { return b; }
  `,fN=`
  if (isNaN.r) {
    resultTemp.r = valueForNaN;
  }
  if (isNaN.g) {
    resultTemp.g = valueForNaN;
  }
  if (isNaN.b) {
    resultTemp.b = valueForNaN;
  }
  if (isNaN.a) {
    resultTemp.a = valueForNaN;
  }
  `,mN=`
  let isNaN = isnanVec4(a) | isnanVec4(b);
  ${fN}
  `,kme="return a + b;",Sme="return areal * breal - aimag * bimag;",Ime="return areal * bimag + aimag * breal;",Cme="return a / b;",Tme="return a * b;",Nme="return (a - b) * (a - b);",Eme="return a - b;",_me="return f32(a == b);",Rme="return vec4<f32>(a == b);",$me="return f32(a > b);",Dme="return vec4<f32>(a > b);",Fme="return f32(a >= b);",Ome="return vec4<f32>(a >= b);",Pme="return f32(a < b);",Mme="return vec4<f32>(a < b);",zme="return f32(a <= b);",Lme="return vec4<f32>(a <= b);",Bme="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",Wme=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,Vme=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,Ume=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,Gme=`
  if (isnan(a) || isnan(b)) {
    return 1.0;
  }
  return f32(a != b);
`,Hme=`
  var resultTemp = vec4<f32>(a != b);
  let valueForNaN = 1.0;
  ${mN}

  return resultTemp;
`,jme=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,qme=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = a < vec4<f32>(0.0) & floor(b) < b;
  let valueForNaN = uniforms.NAN;
  ${fN}
  return resultTemp;
  `,Xme="if (a < 0.0) { return b * a; }  return a;",Kme=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function Py(e,t,n="uniforms.NAN"){let s=t?mN:wme;return t?`
    let valueForNaN = ${n};
    var resultTemp = vec4<f32>(${e}(a, b));
    `+s+`
    return resultTemp;
  `:s+`
    return ${e}(a, b);
  `}function Vm(e,t){switch(e){case Ge.MUL:return Tme;case Ge.ADD:return kme;case Ge.ATAN2:return Py("atan2",t);case Ge.SUB:return Eme;case Ge.DIV:return Cme;case Ge.EQUAL:return t?Rme:_me;case Ge.GREATER:return t?Dme:$me;case Ge.GREATER_EQUAL:return t?Ome:Fme;case Ge.LESS:return t?Mme:Pme;case Ge.LESS_EQUAL:return t?Lme:zme;case Ge.LOGICAL_AND:return t?Wme:Bme;case Ge.NOT_EQUAL:return t?Hme:Gme;case Ge.SQUARED_DIFFERENCE:return Nme;case Ge.INT_DIV:return t?Ume:Vme;case Ge.PRELU:return t?Kme:Xme;case Ge.MAX:return Py("max",t);case Ge.MIN:return Py("min",t);case Ge.POW:return t?qme:jme;case Ge.COMPLEX_MULTIPLY_REAL:return Sme;case Ge.COMPLEX_MULTIPLY_IMAG:return Ime;default:throw new Error(`BinaryType ${e} is not implemented!`)}}var De;(function(e){e[e.ABS=0]="ABS",e[e.CEIL=1]="CEIL",e[e.COS=2]="COS",e[e.COSH=3]="COSH",e[e.ELU=4]="ELU",e[e.EXP=5]="EXP",e[e.EXPM1=6]="EXPM1",e[e.FLOOR=7]="FLOOR",e[e.IS_NAN=8]="IS_NAN",e[e.LINEAR=9]="LINEAR",e[e.LOG=10]="LOG",e[e.LOGICAL_NOT=11]="LOGICAL_NOT",e[e.NEG=12]="NEG",e[e.RELU=13]="RELU",e[e.RELU6=14]="RELU6",e[e.LEAKYRELU=15]="LEAKYRELU",e[e.RECIPROCAL=16]="RECIPROCAL",e[e.RSQRT=17]="RSQRT",e[e.SIN=18]="SIN",e[e.SINH=19]="SINH",e[e.SIGMOID=20]="SIGMOID",e[e.SQRT=21]="SQRT",e[e.SQUARE=22]="SQUARE",e[e.TANH=23]="TANH",e[e.TO_INT=24]="TO_INT"})(De||(De={}));var Zme="return abs(a);",Yme="return ceil(a);",Jme="return cos(a);",Qme=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,e0e="return exp(a) - 1.0;",t0e="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",n0e=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,s0e="return exp(a);",r0e="return floor(a);",a0e="return f32(isnan(a));",o0e="return a;",i0e=`if (a < 0.0) { return 1.0/0.0; }
  return log(a);`,l0e="return f32(!(a >= 1.0));",u0e="return -a;",c0e="if (a < 0.0) { return uniforms.alpha * a; } return a;",d0e=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,h0e="return 1.0 / a;",p0e="return select(a, 0.0, a < 0.0);",f0e="return clamp(a, 0.0, 6.0);",m0e="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",g0e=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,y0e="return 1.0/sqrt(a);",A0e="return 1.0 / (1.0 + exp(-1.0 * a));",x0e="return sin(a);",b0e=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,v0e="return sqrt(a);",w0e="return a * a;",k0e=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,S0e="return f32(i32((a)));";function _i(e,t){switch(e){case De.ABS:return Zme;case De.COS:return Jme;case De.COSH:return Qme;case De.CEIL:return Yme;case De.ELU:return t?n0e:t0e;case De.EXP:return s0e;case De.EXPM1:return e0e;case De.FLOOR:return r0e;case De.IS_NAN:return a0e;case De.LINEAR:return o0e;case De.LOG:return i0e;case De.LOGICAL_NOT:return l0e;case De.NEG:return u0e;case De.LEAKYRELU:return t?d0e:c0e;case De.RECIPROCAL:return h0e;case De.RELU:return t?g0e:p0e;case De.RELU6:return t?m0e:f0e;case De.RSQRT:return y0e;case De.SIGMOID:return A0e;case De.SIN:return x0e;case De.SINH:return b0e;case De.SQRT:return v0e;case De.SQUARE:return w0e;case De.TANH:return k0e;case De.TO_INT:return S0e;default:throw new Error(`BinaryType ${e} is not implemented!`)}}var Gt=e=>{switch(e){case 1:return"f32";case 2:return"vec2<f32>";case 3:return"vec3<f32>";case 4:return"vec4<f32>";default:throw new Error(`${e}-component is not supported.`)}};function fi(e,t=!1,n=!1,s=3){if(e===null)return"";let r="";if(e==="linear")r=_i(De.LINEAR);else if(e==="relu")r=_i(De.RELU,n);else if(e==="elu")r=_i(De.ELU,n);else if(e==="relu6")r=_i(De.RELU6,n);else if(e==="prelu")r=Vm(Ge.PRELU,n);else if(e==="sigmoid")r=_i(De.SIGMOID,n);else if(e==="leakyrelu")r=_i(De.LEAKYRELU,n);else throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`);let o=Gt(n?4:1),i="";return t?i=`
      fn activation(a : ${o}, coords : vec${s}<i32>) -> ${o} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${r}
      }`:i=`
      fn activation(a : ${o}, coords : vec${s}<i32>) -> ${o} {
        ${r}
      }`,i}function cd(e,t){return`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      ${t?"value = activation(value, coords);":""}
      `}function gN(e,t,n,s,r=!1,a=!1,o=!1,i=1){v.assert(n&&i===1||!n,()=>`transposeA ${n} is not compatible with component size ${i}`);let l=`
      let batch = ${e?"0":"batchIn"};
      let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
      ${n?`value = A[(batch * batchASize + col * uniforms.aShape[2] + row) / ${i}];`:`value = A[(batch * batchASize + row * uniforms.aShape[2] + col) / ${i}];`}

    `,u;return s===!1?u=`value = B[(batch * batchBSize + row * uniforms.bShape[2] + col) / ${i}];`:u=`value = B[(batch * batchBSize + col * uniforms.bShape[2] + row) / ${i}];`,`
  fn mm_readA(batchIn: i32, row: i32, colIn: i32) -> ${Gt(i)} {
    var value = ${Gt(i)}(0.0);
    let col = colIn * ${i};
    ${r&&o?l:`
    ${n?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${l}
    }
    `}
    return value;
  }

  fn mm_readB(batchIn: i32, row: i32, colIn: i32) -> ${Gt(i)} {
    let col = colIn * ${i};
    let batch = ${t?"0":"batchIn"};
    let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
    var value = ${Gt(i)}(0.0);
    ${u}
    return value;
  }
  `}function pv(e,t,n,s,r,a,o=!1,i=!1,l=!1,u=1){return`
  ${gN(n,s,r,a,o,i,l,u)}
  fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${Gt(u)}) {
    let col = colIn * ${u};
    ${o&&i?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${cd(e,t)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}var I0e=e=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / InnerElementSize + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / InnerElementSize + inputCol);
        `,C0e=(e,t)=>e?`
        let ACached0 = mm_Asub[k * InnerElementSize][localRow];
        let ACached1 = mm_Asub[k * InnerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * InnerElementSize + 2][localRow];
        ${t===3?"":"let ACached3 = mm_Asub[k * InnerElementSize + 3][localRow];"}
        for (var i = 0; i < RowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < RowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`;function Fg(e,t,n=!1,s=32,r=!1,a=32,o=!1){let i=t[1]*e[1],l=t[0]*e[0],u=n?i:s,c=n?s:i,h=u/t[0],d=s/t[1];return v.assert((n&&h===4&&e[1]===4||!n&&(h===3||h===4))&&u%t[0]===0&&s%t[1]===0&&e[0]===4,()=>`If transposeA ${n} is true, innerElementSize ${h} and workPerThread[1] ${e[1]} must be 4.
          Otherwise, innerElementSize ${h} must be 3 or 4.
      tileAWidth ${u} must be divisible by workGroupSize[0]${t[0]}. tileInner ${s} must be divisible by workGroupSize[1] ${t[1]}. ColPerThread ${e[0]} must be 4.`),`
  var<workgroup> mm_Asub : array<array<vec${h}<f32>, ${u/h}>, ${c}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${l/e[0]}>, ${s}>;

  const RowPerThread = ${e[1]};
  const ColPerThread = ${e[0]};
  const InnerElementSize = ${h};
  const TileInner = ${s};

  @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
  fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
            @builtin(global_invocation_id) GlobalId : vec3<u32>,
            @builtin(num_workgroups) NumWorkgroups: vec3<u32>,
            @builtin(workgroup_id) workgroupId: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;

    let localRow = i32(localId.y);
    let tileRow = ${o?"0":"localRow * RowPerThread"};
    let tileCol = i32(localId.x);

    let globalRow = ${o?"0":"i32(globalId.y) * RowPerThread"};
    let globalCol = i32(globalId.x);
    let batch = ${r?"0":"i32(globalId.z)"};
    let globalRowStart = i32(workgroupId.y) * ${i};

    let numTiles = ${r?`${Math.ceil(a/s)}`:"(uniforms.dimInner - 1) / TileInner + 1"};
    var kStart = ${r?`i32(globalId.z) * ${a}`:"0"};

    var acc: array<vec4<f32>, RowPerThread>;

    // Loop over shared dimension.
    let tileRowB = localRow * ${d};
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${I0e(n)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${d}; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol);
        }
        kStart = kStart + TileInner;
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / InnerElementSize; k = k + 1) {
            let BCached0 = mm_Bsub[k * InnerElementSize][tileCol];
            let BCached1 = mm_Bsub[k * InnerElementSize + 1][tileCol];
            let BCached2 = mm_Bsub[k * InnerElementSize + 2][tileCol];
            ${h===3?"":"let BCached3 = mm_Bsub[k * InnerElementSize + 3][tileCol];"}

            ${C0e(n,h)}
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}var T0e=e=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRowStart + inputRow,
          kStart + inputCol);
        `,N0e=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function Og(e,t,n=!1,s=32,r=!1,a=32){let o=e[1]*t[1],i=e[0]*t[0],l=n?o:s,u=n?s:o;v.assert(u%t[1]===0&&l%t[0]===0&&s%t[1]===0,()=>`tileAHight ${u} must be divisible by workGroupSize[1]${t[1]}, tileAWidth ${l} must be divisible by workGroupSize[0]${t[0]}, tileInner ${s} must be divisible by workGroupSize[1]${t[1]}`);let c=u/t[1],h=l/t[0],d=s/t[1];return`
    var<workgroup> mm_Asub : array<array<f32, ${l}>, ${u}>;
    var<workgroup> mm_Bsub : array<array<f32, ${i}>, ${s}>;
    const RowPerThread = ${e[1]};
    const ColPerThread = ${e[0]};
    const TileInner = ${s};

    @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
    fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
              @builtin(global_invocation_id) GlobalId : vec3<u32>,
              @builtin(num_workgroups) NumWorkgroups: vec3<u32>,
              @builtin(workgroup_id) workgroupId: vec3<u32>) {
      localId = LocalId;
      globalId = GlobalId;
      numWorkgroups = NumWorkgroups;

      let tileRow = i32(localId.y) * RowPerThread;
      let tileCol = i32(localId.x) * ColPerThread;

      let globalRow = i32(globalId.y) * RowPerThread;
      let globalCol = i32(globalId.x) * ColPerThread;
      let batch = ${r?"0":"i32(globalId.z)"};
      let globalRowStart = i32(workgroupId.y) * ${o};

      let numTiles = ${r?`${Math.ceil(a/s)}`:"(uniforms.dimInner - 1) / TileInner + 1"};
      var kStart = ${r?`i32(globalId.z) * ${a}`:"0"};

      var acc : array<array<f32, ColPerThread>, RowPerThread>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let tileRowA = i32(localId.y) * ${c};
      let tileColA = i32(localId.x) * ${h};
      let tileRowB = i32(localId.y) * ${d};
      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${c}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${h}; innerCol = innerCol + 1) {
            let inputRow = tileRowA + innerRow;
            let inputCol = tileColA + innerCol;
            ${T0e(n)}
          }
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${d}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batch,
              kStart + inputRow,
              globalCol + innerCol);
          }
        }
        kStart = kStart + TileInner;
        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ColPerThread>;
        for (var k = 0; k < TileInner; k = k + 1) {
          for (var inner = 0; inner < ColPerThread; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            ${N0e(n)}
            for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
          mm_write(batch, globalRow + innerRow, globalCol + innerCol,
              acc[innerRow][innerCol]);
        }
      }
    }
  `}var E0e=e=>e?`
      mm_readA(batch, colA, globalRow),
      mm_readA(batch, colA + 1, globalRow),
      mm_readA(batch, colA + 2, globalRow),
      mm_readA(batch, colA + 3, globalRow)
  `:`
      mm_readA(batch, globalRow, colA),
      mm_readA(batch, globalRow, colA + 1),
      mm_readA(batch, globalRow, colA + 2),
      mm_readA(batch, globalRow, colA + 3)
  `;function _0e(e,t=!1){return v.assert(e[1]===1&&e[2]===1,()=>`A linear work group size is required. But got ${e}.`),`
    const TileSize = ${e[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;

    ${Ke()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;
      let batch = i32(globalId.z);
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${E0e(t)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(batch, rowB, globalCol),
                              mm_readB(batch, rowB + 1, globalCol),
                              mm_readB(batch, rowB + 2, globalCol),
                              mm_readB(batch, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}var R0e=class{constructor(e,t,n,s,r=!1,a=!1,o=null,i=null,l=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let u=r?e[1]:e[2];if(this.isVec4=(u%4===0&&!r||t[1]%4===0&&r)&&t[2]%4===0&&!a,this.isVectorA=t[1]===1&&!r,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workGroupSize=[32,1,1];else{let d=dN(t[1],u,t[2],r);this.workGroupSize=d.workGroupSize,this.elementsPerThread=d.elementsPerThread}this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread);let c=o!=null,h=l!=null;c&&this.variableNames.push("bias"),h&&this.variableNames.push("preluActivationWeights"),this.transposeA=r,this.transposeB=a,this.addBias=c,this.activation=i,this.hasPreluActivationWeights=h,this.batchAEqualOne=n,this.batchBEqualOne=s,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],u),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${r}_${a}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getShapeFit(e,t,n){let s=this.workGroupSize[1]*this.elementsPerThread[1],r=this.workGroupSize[0]*this.elementsPerThread[0];!this.isVec4&&this.isVectorA?this.tileInner=this.workGroupSize[0]*4:this.tileInner=r;let a=e%s===0,o=t%r===0,i=n%this.tileInner===0;return[a,o,i]}getUserCode(){return`
      ${fi(this.activation,this.hasPreluActivationWeights,this.isVec4)}
      ${pv(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}
      ${this.isVec4?Fg(this.elementsPerThread,this.workGroupSize,this.transposeA,this.tileInner,!1,null,this.isVectorA):this.isVectorA?_0e(this.workGroupSize,this.transposeA):Og(this.elementsPerThread,this.workGroupSize,this.transposeA,this.tileInner)}
    `}};function $0e(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${Ke()} {
      let coords = getOutputCoords();
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var D0e=class{constructor(e,t,n,s=!1,r=!1,a=null,o=null,i=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize);let l=a!=null,u=i!=null;l&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.transposeA=s,this.transposeB=r,this.addBias=l,this.activation=o,this.hasPreluActivationWeights=u,this.batchAEqualOne=t,this.batchBEqualOne=n,this.shaderKey=`matMulReduce_${this.activation}_${s}_${r}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){return`
      ${fi(this.activation,this.hasPreluActivationWeights)}
      ${pv(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,this.transposeA,this.transposeB)}
      ${$0e()}
    `}};function F0e(e){let t=e[1],n=e[0],s=t>n?t:n;return`
  var<workgroup> mm_Asub : array<array<f32, ${s}>, ${t}>;
  var<workgroup> mm_Bsub : array<array<f32, ${n}>, ${s}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${Ke()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${s} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batch, globalRow, globalColA);
    var regB0 = mm_readB(batch, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batch, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${s};
    globalRowB = globalRowB + ${s};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batch, globalRow, globalColA);
      regB0 = mm_readB(batch, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batch, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${s};
      globalRowB = globalRowB + ${s};

      for (var k = 0; k < ${s}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}var O0e=class{constructor(e,t,n,s=!1,r=!1,a=null,o=null,i=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[16,8,1],this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(n[1]/this.workGroupSize[1]),n[0]];let l=a!=null;l&&this.variableNames.push("bias");let u=i!=null;u&&this.variableNames.push("preluActivationWeights"),this.transposeA=s,this.transposeB=r,this.addBias=l,this.activation=o,this.hasPreluActivationWeights=u,this.batchAEqualOne=e[0]===1,this.batchBEqualOne=t[0]===1,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${s}_${r}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){return`
      ${fi(this.activation,this.hasPreluActivationWeights)}
      ${pv(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,this.transposeA,this.transposeB)}
      ${F0e(this.workGroupSize)}
    `}},P0e=class{constructor(e,t,n,s,r=!1,a=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,8,1],this.atomic=!0,this.isVec4=!1,this.splitedDimInner=128,v.assert(e[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]},this.isVec4=(r&&this.outputShape[1]%4===0||!r&&t%4===0)&&this.outputShape[2]%4===0,this.elementsPerThread=[4,4,this.splitedDimInner],this.isVec4||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=Ve(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workGroupSize,this.elementsPerThread),this.transposeA=r,this.transposeB=a,this.batchAEqualOne=n,this.batchBEqualOne=s,this.shaderKey=`matMulSplitK_${r}_${a}_${n}_${s}_${this.elementsPerThread}_${this.isVec4}`}getUserCode(){let e=s=>`
      for (var i = 0; i < ${s}; i = i + 1)
      {
        var oldValue = atomicLoad(&(result[flatIndex + i]));
        var exchanged = false;
        for (; !exchanged;) {
          let newValueF32 = bitcast<f32>(oldValue) + ${s>1?"value[i]":"value"};
          let newValue = bitcast<i32>(newValueF32);
          let res = atomicCompareExchangeWeak(&(result[flatIndex + i]), oldValue, newValue);
          oldValue = res.old_value;
          exchanged = res.exchanged;
        }
      }
      `,t=this.isVec4?4:1;return`
      ${gN(this.batchAEqualOne,this.batchBEqualOne,!1,this.transposeB,!1,!1,!1,t)}
      fn mm_write(batch: i32, row : i32, colIn : i32, value : ${Gt(t)}) {
        let col = colIn * ${t};
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          ${e(t)}
        }
      }
      ${this.isVec4?Fg(this.elementsPerThread,this.workGroupSize,this.transposeA,32,!0,this.splitedDimInner):Og(this.elementsPerThread,this.workGroupSize,this.transposeA,32,!0,this.splitedDimInner)}
    `}},M0e=class{constructor(e,t=null,n=null,s=null){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize),this.addBias=t!=null,this.hasPreluActivationWeights=s!=null,this.activation=n,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${n}`}getUserCode(){return`
    ${fi(this.activation,this.hasPreluActivationWeights)}
    ${Ke("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${cd(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}},z0e=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${Ke("index")} {
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function uu(e){let{backend:t,attrs:n}=e,{shape:s,value:r}=n,{dtype:a}=n;if(a=a||v.inferDtype(r),a==="string"){let o=v.getArrayFromDType(a,v.sizeFromShape(s));return o.fill(r),t.makeTensorInfo(s,a,o)}else{let o=new z0e(s),i=[{type:"float32",data:[r]}];return t.runWebGPUProgram(o,[],a,i)}}var L0e={kernelName:Ic,backendName:"webgpu",kernelFunc:uu};function We(e){let{inputs:t,attrs:n}=e,{x:s}=t,{shape:r}=n,a=v.sizeFromShape(s.shape),o=v.inferFromImplicitShape(r,a),i=v.sizeFromShape(o);return v.assert(a===i,()=>`The new shape (${o}) has ${i} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),e.backend.incRef(s.dataId),{dataId:s.dataId,shape:o,dtype:s.dtype}}var B0e={kernelName:zl,backendName:"webgpu",kernelFunc:We};function fv({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:l=null}){let u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],d=s?t.shape[c-1]:t.shape[c-2],p=n?e.shape[u-1]:e.shape[u-2],f=s?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=v.sizeFromShape(m),x=v.sizeFromShape(g),b=eu.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);v.assert(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);let w=n?[y,h,p]:[y,p,h],S=s?[x,f,d]:[x,d,f],C=We({inputs:{x:e},backend:r,attrs:{shape:w}}),_=We({inputs:{x:t},backend:r,attrs:{shape:S}}),R=[C,_],D=Math.max(y,x),E=y===1,F=x===1,k=[C,_],M=[{type:"int32",data:[p]},{type:"int32",data:[f]},{type:"int32",data:[h]}],z,W,H=[D,p,f],j=K().get("WEBGPU_MATMUL_PROGRAM_TYPE");switch(j<0&&(p*f<=128?j=fr.MatMulReduceProgram:D===1&&p<=128&&f<=48&&d>=2e3?j=fr.MatMulSplitKProgram:p<=16&&(f<=512||d>=2*f)||f<=16&&(p<=512||h>=2*p)?j=fr.MatMulSmallOutputSizeProgram:j=fr.MatMulPackedProgram),j){case fr.MatMulReduceProgram:z=new D0e(H,E,F,n,s,a,l,o);break;case fr.MatMulSplitKProgram:{if(W=uu({backend:r,attrs:{shape:H,value:0,dtype:e.dtype}}),z=new P0e(H,d,E,F,n,s),a||l){W=r.runWebGPUProgram(z,k,e.dtype,M,W);let J=new M0e(W.shape,a,l,o),Q=null,ae=[W];a&&ae.push(a),o&&ae.push(o),l==="leakyrelu"&&(Q=[{type:"float32",data:[i]}],J.uniforms+=" alpha : f32,");let ne=r.runWebGPUProgram(J,ae,W.dtype,Q);R.push(W);let ie=We({inputs:{x:ne},backend:r,attrs:{shape:b}});R.push(ne);for(let ue of R)r.disposeData(ue.dataId);return ie}break}case fr.MatMulSmallOutputSizeProgram:z=new O0e(w,S,H,n,s,a,l,o);break;case fr.MatMulPackedProgram:z=new R0e(w,H,E,F,n,s,a,l,o);break;default:throw new Error(`Unsupported MatMulProgramType ${j}.`)}a&&k.push(a),o&&k.push(o),l==="leakyrelu"&&(M.push({type:"float32",data:[i]}),z.uniforms+=" alpha : f32,"),W=r.runWebGPUProgram(z,k,e.dtype,M,W);let Z=We({inputs:{x:W},backend:r,attrs:{shape:b}});R.push(W);for(let J of R)r.disposeData(J.dataId);return Z}function W0e(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return fv({a:r,b:a,transposeA:l,transposeB:u,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:h,activation:c})}var V0e={kernelName:Ja,backendName:"webgpu",kernelFunc:W0e},$w=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=T.assertAndGetBroadcastShape(t,n),this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${Vm(this.op,!1)}
      }

      ${Ke("index")} {
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}},g2=class{constructor(e,t,n){this.size=!0,this.variableNames=["A","B"],this.outputShape=T.assertAndGetBroadcastShape(t,n),this.dispatchLayout=tt(this.outputShape),this.op=e,this.useSharedMemoryWithA=t.length===1&&n.length>1&&t[0]<1024,this.useSharedMemoryWithB=n.length===1&&t.length>1&&n[0]<1024,this.useSharedMemoryWithA||this.useSharedMemoryWithB?(this.isVec4=!1,this.lastDimensionSize=this.useSharedMemoryWithB?n[0]:t[0],this.shaderKey=`binary_${this.type}_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`,this.type="shared",this.workGroupSize=[256,1,1],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4):(v.arraysEqual(t,n)&&v.sizeFromShape(t)%4===0?(this.isVec4=!0,this.type="vec4",this.workPerThread=4):(this.isVec4=!1,this.type="plain",this.workPerThread=1),this.shaderKey=`binary_${this.type}_${e}`,this.workGroupSize=[128,1,1]),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1])}getUserCode(){let e;if(this.type==="shared"){let t=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",n=this.useSharedMemoryWithB?`let a = getAByOutputCoords(coords);
          let b = sharedBuf[${t}];`:`let a = sharedBuf[${t}];
          let b = getBByOutputCoords(coords);`;e=`
        fn binaryOperation(a : f32, b : f32) -> f32 {
          ${Vm(this.op,this.isVec4)}
        }
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${Ke("index")} {
          // Fill in the shared memory buffer. Here we need a loop to make sure
          // that all data in A|B are uploaded when |sharedMemorySize| is larger
          // than work group size.
          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
            let flatIndex = index * ${this.workPerThread} + i;
            if(flatIndex < uniforms.size) {
              let coords = getCoordsFromIndex(flatIndex);

              ${n}
              setOutputAtIndex(flatIndex, binaryOperation(a, b));
            }
          }
        }
        `}else{let t=this.type==="vec4"?"vec4<f32>":"f32",n=Vm(this.op,this.isVec4);e=`
       fn binaryOperation(a : ${t}, b : ${t}) -> ${t} {
         ${n}
       }
       ${Ke("index")} {
         if (index < uniforms.size) {
           let a = getAByOutputIndex(index);
           let b = getBByOutputIndex(index);
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `}return e}};function js(e){let{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var U0e={kernelName:Ro,backendName:"webgpu",kernelFunc:js};function dd(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),o=n.tensorMap.get(a.dataId),i=js({inputs:{x:s},backend:n}),l=js({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:l},a}var G0e={kernelName:Eh,backendName:"webgpu",kernelFunc:dd},Dp=class{constructor(e,t){this.variableNames=["A"],this.size=!0;let n=128;this.workGroupSize=[n,1,1],this.outputShape=e,this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${_i(this.op,!1)}
      }
      ${Ke("index")} {
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function dn({opType:e,cpuKernelImpl:t,dtype:n}){return({inputs:s,backend:r})=>{let{x:a}=s,o=r,i=n||a.dtype;if(o.shouldExecuteOnCPU([a])&&t!=null){let u=o.tensorMap.get(a.dataId),c=t(u.values,i);return o.makeTensorInfo(a.shape,i,c)}let l=new Dp(a.shape,e);return o.runWebGPUProgram(l,[a],i)}}function Mn({opType:e,cpuKernelImpl:t,supportsComplex:n=!1,dtype:s}){return({inputs:r,backend:a})=>{let{a:o,b:i}=r,l=a;if(n&&o.dtype==="complex64"){let h=l.tensorMap.get(o.dataId),d=l.tensorMap.get(i.dataId),p,f;if(e!==Ge.MUL)[p,f]=[[h.complexTensorInfos.real,d.complexTensorInfos.real],[h.complexTensorInfos.imag,d.complexTensorInfos.imag]].map(g=>{let[y,x]=g,A={dataId:y.dataId,dtype:y.dtype,shape:o.shape},b={dataId:x.dataId,dtype:x.dtype,shape:i.shape},w=new g2(e,o.shape,i.shape);return l.runWebGPUProgram(w,[A,b],Fn(y.dtype,x.dtype))});else{let g=new $w(Ge.COMPLEX_MULTIPLY_REAL,o.shape,i.shape),y=new $w(Ge.COMPLEX_MULTIPLY_IMAG,o.shape,i.shape),x=[{dataId:h.complexTensorInfos.real.dataId,dtype:h.complexTensorInfos.real.dtype,shape:o.shape},{dataId:h.complexTensorInfos.imag.dataId,dtype:h.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:i.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:i.shape}];p=l.runWebGPUProgram(g,x,"float32"),f=l.runWebGPUProgram(y,x,"float32")}let m=dd({inputs:{real:p,imag:f},backend:l});return l.disposeData(p.dataId),l.disposeData(f.dataId),m}let u=s||Fn(o.dtype,i.dtype);if((o.dtype==="string"||i.dtype==="string"||l.shouldExecuteOnCPU([o,i]))&&t!=null){let h=l.tensorMap.get(o.dataId).values,d=l.tensorMap.get(i.dataId).values,p=o.dtype==="string"?T.fromUint8ToStringArray(h):h,f=o.dtype==="string"?T.fromUint8ToStringArray(d):d,[m,g]=t(o.shape,i.shape,p,f,u);return l.makeTensorInfo(g,u,m)}let c=new g2(e,o.shape,i.shape);return l.runWebGPUProgram(c,[o,i],u)}}var{addImpl:H0e,castImpl:j0e,ceilImpl:q0e,concatImpl:X0e,equalImpl:K0e,expImpl:Z0e,expm1Impl:Y0e,floorImpl:J0e,gatherNdImpl:Q0e,gatherV2Impl:ege,greaterEqualImpl:tge,greaterImpl:nge,lessEqualImpl:sge,lessImpl:rge,logImpl:age,maxImpl:oge,maximumImpl:ige,minimumImpl:lge,multiplyImpl:uge,negImpl:cge,notEqualImpl:dge,prodImpl:hge,rangeImpl:pge,rsqrtImpl:fge,scatterImpl:mge,simpleAbsImpl:gge,sliceImpl:yge,stridedSliceImpl:Age,stringNGramsImpl:xge,subImpl:bge,tileImpl:vge,topKImpl:wge,transposeImpl:kge,uniqueImpl:L5e}=D5,Sge=dn({opType:De.ABS,cpuKernelImpl:gge}),Ige={kernelName:dl,backendName:"webgpu",kernelFunc:Sge},Cge=Mn({opType:Ge.ADD,cpuKernelImpl:H0e,supportsComplex:!0}),Tge={kernelName:va,backendName:"webgpu",kernelFunc:Cge},Nge=class{constructor(e){this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach(s=>{e.push(`let v${s} = get${s}ByOutputCoords(coords);`)});let t=this.variableNames.map(s=>`v${s}`).join(" + ");return`
      ${Ke("index")} {
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}};function Ege(e){let{inputs:t,backend:n}=e,s=t;if(s.length===1)return js({inputs:{x:s[0]},backend:n});let r=s.map(i=>i.dtype).reduce((i,l)=>Fn(i,l)),a=s.map(i=>i.shape),o=new Nge(a);return n.runWebGPUProgram(o,s,r)}var _ge={kernelName:ho,backendName:"webgpu",kernelFunc:Ege},yN=class{constructor(e,t,n){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;let s=[t];this.op=n==="min"?"<":">";let[r,a]=T.computeOutAndReduceShapes(e,s);this.outputShape=r.length===0?[1]:r,this.dispatchLayout=tt(this.outputShape),v.sizeFromShape(a)<32||v.sizeFromShape(r)>1e3?(this.type="plain",this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize)):(this.type="shared",this.dispatch=Ve(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=e,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){let e=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${ma(this.inputShape.length-1)}`,t=()=>{let n="";if(this.outputShape.length===1)this.inputShape.length!==1&&(n+="outputCoords,");else for(let s=0;s<this.outputShape.length;s++)n+=`outputCoords.${ma(s)},`;return n};return this.type==="shared"?`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `}

      ${Ke("index")} {
        let outputIndex = index / i32(workGroupSizeX);
        let reduceLength = ${e()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + i32(workGroupSizeX)) {
          let candidate = getX(${t()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), workGroupSizeX);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `:`
      ${Ke("index")} {
        if (index < uniforms.size) {
          let outputCoords = getCoordsFromIndex(index);
          var bestIndex = 0;
          var bestValue = getX(${t()} 0);
          let reduceLength = ${e()};
          for (var i = 1; i < reduceLength; i++) {
            let candidate = getX(${t()} i);
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
          setOutputAtIndexI32(index, bestIndex);
        }
      }
      `}},Rge=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[16,16,1];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      const TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${Ih()}
      fn _start(@builtin(local_invocation_id) localId : vec3<u32>,
                @builtin(workgroup_id) workgroupId : vec3<u32>) {
        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);
        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = A[y * width + x];
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);
        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}},$ge=class{constructor(e,t){this.variableNames=["A"],this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=Sn(this.outputShape.length),t=Dge(this.newDim);return`
      ${Ke("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function Dge(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=new Array(t);for(let s=0;s<e.length;s++)n[e[s]]=`resRC.${ma(s)}`;return n.join()}function xa(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,o=n,i=r.shape.length,l=new Array(i);for(let c=0;c<l.length;c++)l[c]=r.shape[a[c]];if(n.shouldExecuteOnCPU([r])){let h=o.tensorMap.get(r.dataId).values,d=kge(h,r.shape,r.dtype,a,l);return n.makeTensorInfo(l,r.dtype,d)}if(r.shape.length===2&&v.arraysEqual(a,[1,0])){let c=new Rge(r.shape,a);return o.runWebGPUProgram(c,[r],r.dtype)}let u=new $ge(r.shape,a);return o.runWebGPUProgram(u,[r],r.dtype)}var Fge={kernelName:Xr,backendName:"webgpu",kernelFunc:xa};function Oge(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=v.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),l=r,u=[];i!=null&&(l=xa({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(l),o=T.getInnerMostAxes(o.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);let c=new yN(l.shape,o[0],"max"),h=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],d=n.runWebGPUProgram(c,[l],"int32",h);return u.forEach(p=>n.disposeData(p.dataId)),d}var Pge={kernelName:po,backendName:"webgpu",kernelFunc:Oge};function Mge(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,o=v.parseAxisParam(a,r.shape),i=T.getAxesPermutation(o,r.shape.length),l=r,u=[];i!=null&&(l=xa({inputs:{x:r},backend:n,attrs:{perm:i}}),u.push(l),o=T.getInnerMostAxes(o.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);let c=new yN(l.shape,o[0],"min"),h=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],d=n.runWebGPUProgram(c,[l],"int32",h);return u.forEach(p=>n.disposeData(p.dataId)),d}var zge={kernelName:xc,backendName:"webgpu",kernelFunc:Mge},Lge=Mn({opType:Ge.ATAN2}),Bge={kernelName:hl,backendName:"webgpu",kernelFunc:Lge},Dw=class{constructor(e,t){this.variableNames=["x"],this.uniforms="stride : vec2<i32>, pad : vec2<i32>, dilation : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";this.poolType==="avg"&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return this.poolType==="avg"&&(t="resultValue / count"),`
      ${Ke("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${e}
            }
          }

          setOutputAtIndex(index, ${t});
        }
      }
    `}},Wge=class{constructor(e){this.variableNames=["x"],this.uniforms="stride : vec2<i32>,",this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${Ke("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}},Vge=class{constructor(e,t){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];let[n]=T.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=n.length===0?[1]:n,this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(e=" bestValue = bestValue * candidate; ",t="1.0");let n=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${Ke("index")} {
         let outputIndex = index / i32(workGroupSizeX);
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + i32(workGroupSizeX)) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), workGroupSizeX);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${n}
        }
       }
     `}};function Fp(e,t,n,s,r){let a=e.shape.length,o=[],i=v.parseAxisParam(t,e.shape),l=i,u=T.getAxesPermutation(l,a),c=e;u!=null&&(c=xa({inputs:{x:e},attrs:{perm:u},backend:r}),l=T.getInnerMostAxes(l.length,a),o.push(c)),T.assertAxesAreInnerMostDims(s,l,a);let[h,d]=T.computeOutAndReduceShapes(c.shape,l),p=h;n&&(p=T.expandShapeToKeepDim(h,i));let f;if((s==="max"||s==="prod")&&r.shouldExecuteOnCPU([c])){let m=r.tensorMap.get(c.dataId).values;switch(s){case"max":let g=oge(m,v.sizeFromShape(d),p,e.dtype);f=r.makeTensorInfo(p,e.dtype,g);break;case"prod":let{outVals:y,outShape:x,outDtype:A}=hge(c.shape,c.dtype,m,l);f=r.makeTensorInfo(x,A,y);break;default:throw new Error(`${s} CPU implementation is not yet supported.`)}}else{let m=v.sizeFromShape(d),y=v.sizeFromShape(c.shape)/m,x={windowSize:m,inSize:m,batchSize:y,outSize:1},A=s==="mean"?"float32":qh(e.dtype),b=[{type:"int32",data:[m]}],w=new Vge(x,s),S=r.runWebGPUProgram(w,[c],A,b);o.push(S),f=We({inputs:{x:S},attrs:{shape:p},backend:r})}return o.forEach(m=>r.disposeData(m.dataId)),f}function mv(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s;return Fp(r,a,o,"max",n)}var Uge={kernelName:Fo,backendName:"webgpu",kernelFunc:mv};function AN(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{keepDims:a,axis:o}=s;return Fp(r,o,a,"mean",n)}var Gge={kernelName:Mo,backendName:"webgpu",kernelFunc:AN};function xN(e,t,n,s){if(t.filterWidth===1&&t.filterHeight===1&&v.arraysEqual(t.inShape,t.outShape))return js({inputs:{x:e},backend:s});if(t.filterWidth===t.inWidth&&t.filterHeight===t.inHeight&&t.batchSize===1&&t.padInfo.type==="VALID"){let o=e.shape.length,i=We({inputs:{x:e},backend:s,attrs:{shape:[e.shape[o-3]*e.shape[o-2],e.shape[o-1]]}}),l;n==="avg"?l=AN({inputs:{x:i},backend:s,attrs:{axis:0,keepDims:!1}}):(v.assert(n==="max",()=>`Invalid pool type ${n}`),l=mv({inputs:{x:i},backend:s,attrs:{reductionIndices:0,keepDims:!1}}));let u=We({inputs:{x:l},backend:s,attrs:{shape:t.outShape}});return s.disposeData(i.dataId),s.disposeData(l.dataId),u}let r,a=[{type:"int32",data:[t.strideHeight,t.strideWidth]}];return t.filterHeight===1&&t.filterWidth===1?r=new Wge(t):(n==="avg"?r=new Dw(t,"avg"):(v.assert(n==="max",()=>`Invalid pool type ${n}`),r=new Dw(t,"max")),a.push({type:"int32",data:[t.padInfo.top,t.padInfo.left]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]},{type:"int32",data:[t.inHeight,t.inWidth]},{type:"int32",data:[t.effectiveFilterHeight,t.effectiveFilterWidth]})),s.runWebGPUProgram(r,[e],e.dtype,a)}function Hge(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,u=1,c=T.computePool2DInfo(r.shape,a,o,u,i,l);return xN(r,c,"avg",n)}var jge={kernelName:fo,backendName:"webgpu",kernelFunc:Hge};function qge(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:o,transposeB:i}=s;return fv({a:r,b:a,transposeA:o,transposeB:i,backend:n})}var Xge={kernelName:mo,backendName:"webgpu",kernelFunc:qge},Kge=class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${Sn(e.length)}, `,this.shaderKey="slice"}getUserCode(){let e=Sn(this.rank),t=Zge(this.rank),n;return this.start.length===1?n=this.outputShape.map((r,a)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((r,a)=>`sourceLoc.${y2[a]} = uniforms.start.${ma(a)} + coords.${y2[a]};`),`
      ${Ke("index")} {
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${n.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}},y2=["x","y","z","w","u","v"];function Zge(e){if(e===1)return"sourceLoc";if(e<=6)return y2.slice(0,e).map(t=>`sourceLoc.${t}`).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}function hd(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s,[i,l]=zt.parseSliceParams(r,a,o);if(zt.assertParamsValid(r,i,l),n.shouldExecuteOnCPU([r])||r.dtype==="string"){let h=n.tensorMap.get(r.dataId),d=yge(h.values,i,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,d)}if(v.sizeFromShape(l)===0)return n.makeTensorInfo(l,r.dtype,[]);let u=new Kge(i,l),c=[{type:"int32",data:i}];return n.runWebGPUProgram(u,[r],r.dtype,c)}var Yge={kernelName:Ul,backendName:"webgpu",kernelFunc:hd},Jge=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;v.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let i=a.reduce((x,A)=>x*A),l=T.getReshaped(r.shape,a,i),u=T.getPermuted(l.length,a.length),c=T.getReshapedPermuted(r.shape,a,i),h=T.getSliceBeginCoords(o,a.length),d=T.getSliceSize(c,o,a.length),p=[],f=We({inputs:{x:r},backend:n,attrs:{shape:l}}),m=xa({inputs:{x:f},backend:n,attrs:{perm:u}}),g=We({inputs:{x:m},backend:n,attrs:{shape:c}}),y=hd({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach(x=>n.disposeData(x.dataId)),y},Qge={kernelName:pl,backendName:"webgpu",kernelFunc:Jge},bN=Mn({opType:Ge.NOT_EQUAL,dtype:"bool",cpuKernelImpl:dge}),e1e={kernelName:Rl,backendName:"webgpu",kernelFunc:bN};function Op(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.tensorMap.get(s.dataId);return js({inputs:{x:r.complexTensorInfos.real},backend:n})}var t1e={kernelName:Mh,backendName:"webgpu",kernelFunc:Op};function n1e(e,t){let n=new Dp(e.shape,De.TO_INT),s=t.runWebGPUProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function A2(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return js({inputs:{x:r},backend:n});let o=Vt(r.shape),i=A2({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),l=dd({inputs:{real:i,imag:o},backend:n});return o.dispose(),n.disposeData(i.dataId),l}if(r.dtype==="complex64"){let o=Op({inputs:{input:r},backend:n}),i=A2({inputs:{x:o},backend:n,attrs:{dtype:a}});return n.disposeData(o.dataId),i}if(!v.hasEncodingLoss(r.dtype,a)){let o=js({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:a}}if(n.shouldExecuteOnCPU([r])){let o=n.tensorMap.get(r.dataId).values,[i,l,u]=j0e(o,r.shape,r.dtype,a);return n.makeTensorInfo(i,l,u)}if(a==="int32")return n1e(r,n);if(a==="bool"){let o=n.makeTensorInfo([],"bool",v.getTypedArrayFromDType("bool",1)),l=bN({inputs:{a:r,b:o},backend:n});return n.disposeData(o.dataId),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var s1e={kernelName:go,backendName:"webgpu",kernelFunc:A2},r1e=dn({opType:De.CEIL,cpuKernelImpl:q0e}),a1e={kernelName:yo,backendName:"webgpu",kernelFunc:r1e},o1e=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workGroupSize=[64,1,1],this.isVec4=!0,this.size=!0,this.outputShape=e,this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${Ke("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isnan(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputAtIndex(index, clampedValue);
        }
      }
    `}},i1e=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${Ke("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function l1e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s,i,l=[{type:"float32",data:[a]},{type:"float32",data:[o]}];return v.sizeFromShape(r.shape)%4===0?i=new o1e(r.shape):i=new i1e(r.shape),n.runWebGPUProgram(i,[r],r.dtype,l)}var u1e={kernelName:wa,backendName:"webgpu",kernelFunc:l1e},c1e=class{constructor(e){this.uniforms="",this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=T.computeOutShape(e,1),this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32,`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let r=1;r<this.offsetLength;r++)e.push(`else if (yC < uniforms.offset${[r]}){ setOutputAtCoords(coords.x, coords.y, getT${r}(yR, yC - uniforms.offset${r-1})); }`);let n=this.offsetLength,s=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${n}(yR, yC - uniforms.offset${s})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${Ke("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};function Pg(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.tensorMap.get(s.dataId);return js({inputs:{x:r.complexTensorInfos.imag},backend:n})}var d1e={kernelName:Fh,backendName:"webgpu",kernelFunc:Pg};function jd(e,t,n){let s=e[0].dtype;if(s==="complex64"){let f=e.map(A=>Op({inputs:{input:A},backend:n})),m=e.map(A=>Pg({inputs:{input:A},backend:n})),g=jd(f,t,n),y=jd(m,t,n),x=dd({inputs:{real:g,imag:y},backend:n});return f.forEach(A=>n.disposeData(A.dataId)),m.forEach(A=>n.disposeData(A.dataId)),n.disposeData(g.dataId),n.disposeData(y.dataId),x}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){let f=e.map(w=>{let S=v.sizeFromShape(w.shape.slice(t));return We({inputs:{x:w},backend:n,attrs:{shape:[-1,S]}})}),m=f.map(w=>({vals:n.readSync(w.dataId),shape:w.shape})),g=T.computeOutShape(f.map(w=>w.shape),1),y=f[0].shape[0]===1,x=X0e(m,g,s,y),A=T.computeOutShape(e.map(w=>w.shape),t),b=n.makeTensorInfo(A,s,x);return f.forEach(w=>n.disposeData(w.dataId)),b}let a=n.device.limits.maxStorageBuffersPerShaderStage-1;if(e.length>a){let f=[];for(let g=0;g<e.length;g+=a){let y=e.slice(g,g+a);f.push(jd(y,t,n))}let m=jd(f,t,n);for(let g of f)n.disposeData(g.dataId);return m}let{tensors2D:o,outShape:i}=h1e(e,t,n),l=o.map(f=>f.shape),u=new c1e(l),c=[],h=new Array(l.length-1);if(h.length>0){h[0]=l[0][1],c.push({type:"int32",data:[h[0]]});for(let f=1;f<h.length;f++)h[f]=h[f-1]+l[f][1],c.push({type:"int32",data:[h[f]]})}let d=n.runWebGPUProgram(u,o,o[0].dtype,c);o.forEach(f=>n.disposeData(f.dataId));let p=We({inputs:{x:d},backend:n,attrs:{shape:i}});return n.disposeData(d.dataId),p}function h1e(e,t,n){let s=T.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>We({inputs:{x:a},backend:n,attrs:{shape:[v.sizeFromShape(a.shape.slice(0,t)),v.sizeFromShape(a.shape.slice(t))]}})),outShape:s}}function vN(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=v.parseAxisParam(r,t[0].shape)[0],o=T.computeOutShape(t.map(u=>u.shape),a);if(v.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let i=t.filter(u=>v.sizeFromShape(u.shape)>0);if(i.length===1)return js({inputs:{x:i[0]},backend:n});let l=i.map(u=>u.shape);return T.assertParamsConsistent(l,a),jd(i,a,n)}var p1e={kernelName:fl,backendName:"webgpu",kernelFunc:vN};function f1e(e,t,n,s,r=!1,a=null,o=!1,i=4,l=4,u=4){let c=R=>{switch(R){case 1:return"resData = x[xIndex];";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${R} is not supported.`)}},h=R=>{switch(R){case 1:return"return W[row * uniforms.wShape[3] + colIn];";case 4:return"return W[row * uniforms.wShape[3] / 4 + colIn];";default:throw new Error(`innerElementSize ${R} is not supported.`)}},d=e?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,p=e?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,f=e?"uniforms.xShape[1]":"uniforms.xShape[2]",m=e?"uniforms.xShape[2]":"uniforms.xShape[3]",g=e?"row":"col",y=e?"col":"row",x=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${g} / outWidth;
      let outCol = ${g} % outWidth;

      let WRow = ${y} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${y} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
      let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
      let xCh = ${y} % inChannels;
      var resData = ${Gt(i)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${m}) {
        ${d}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${c(i)}
      }
      return resData;`,A=e?t&&s?`
      let col = colIn * ${i};
      ${x}`:`
      let col = colIn * ${i};
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${x}
      }
      return ${Gt(i)}(0.0);`:s&&n?`
      let col = colIn * ${i};
      ${x}`:`
      let col = colIn * ${i};
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${x}
      }
      return ${Gt(i)}(0.0);`,b=`${h(l)}`,w=Gt(u),S=Gt(e?i:l),C=Gt(e?l:i);return`
      ${fi(a,o,u===4,4)}
      fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${S} {
        ${e?A:b}
      }

      fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${C} {
        ${e?b:A}
      }

      fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${w}) {
        let col = colIn * ${u};
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${p}
        ${cd(r,a)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}var m1e=class{constructor(e,t,n,s,r=!1,a=null,o=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=((e.inChannels%4===0||e.inChannels%3===0)&&this.isChannelsLast||e.outWidth%4===0&&!this.isChannelsLast)&&e.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workGroupSize=cv(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=dv(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.isVec4?(this.isChannelsLast&&e.inChannels%4!==0?(this.innerElementSize=3,this.variableTypes=["f32","vec4<f32>"]):(this.innerElementSize=4,this.variableTypes=["vec4<f32>","vec4<f32>"]),r&&(this.variableNames.push("bias"),this.variableTypes.push("vec4<f32>")),o&&(this.variableNames.push("preluActivationWeights"),this.variableTypes.push("vec4<f32>"))):(this.innerElementSize=this.elementsPerThread[0],r&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights")),this.addBias=r,this.activation=a,this.hasPreluActivationWeights=o,this.tileAOuter=this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workGroupSize[0]*this.innerElementSize,this.workGroupSize[1]),this.fitAOuter=t%this.tileAOuter===0,this.fitBOuter=n%this.tileBOuter===0,this.fitInner=s%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}`}getUserCode(){let e=this.isVec4?Fg(this.elementsPerThread,this.workGroupSize,!this.isChannelsLast,this.tileInner):Og(this.elementsPerThread,this.workGroupSize,!this.isChannelsLast,this.tileInner),t=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`
    ${f1e(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2])}
    ${e}
  `}};function Fw(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&n===1&&e[0]>1?[e[0],1]:null}function g1e({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let l=n.dataFormat==="channelsLast",u=!l,c=!1,h=l&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&n.padInfo.type==="VALID",d=[],p,f;if(h){let y=n.inHeight*n.inWidth*n.inChannels;p=We({inputs:{x:e},backend:s,attrs:{shape:[1,n.batchSize,y]}}),f=We({inputs:{x:t},backend:s,attrs:{shape:[1,y,n.outChannels]}})}else p=We({inputs:{x:e},backend:s,attrs:{shape:l?[n.batchSize,n.inHeight*n.inWidth,n.inChannels]:[n.batchSize,n.inChannels,n.inHeight*n.inWidth]}}),f=We({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});if(d.push(p),d.push(f),a!=null){let y=Fw(a.shape,l);y!=null&&(a=We({inputs:{x:a},backend:s,attrs:{shape:y}}),d.push(a))}if(r!=null){let y=Fw(r.shape,l);y!=null&&(r=We({inputs:{x:r},backend:s,attrs:{shape:y}}),d.push(r))}let m=fv({a:l?p:f,b:l?f:p,transposeA:u,transposeB:c,backend:s,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),g=We({inputs:{x:m},backend:s,attrs:{shape:n.outShape}});d.push(m);for(let y of d)s.disposeData(y.dataId);return g}function wN({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){let l=r!=null,u=a!=null,c=n.dataFormat==="channelsLast";if(c&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&n.padInfo.type==="VALID"||n.filterHeight===1&&n.filterWidth===1&&n.dilationHeight===1&&n.dilationWidth===1&&n.strideHeight===1&&n.strideWidth===1&&(n.padInfo.type==="SAME"||n.padInfo.type==="VALID"))return g1e({x:e,filter:t,convInfo:n,backend:s,bias:r,activation:i,preluActivationWeights:a,leakyreluAlpha:o});let d=c?n.outHeight*n.outWidth:n.outChannels,p=c?n.outChannels:n.outHeight*n.outWidth,f=n.filterHeight*n.filterWidth*n.inChannels,m=[n.padInfo.top,n.padInfo.left],g=[{type:"int32",data:[n.filterHeight,n.filterWidth]},{type:"int32",data:[...m]},{type:"int32",data:[n.strideHeight,n.strideWidth]},{type:"int32",data:[n.dilationHeight,n.dilationWidth]},{type:"int32",data:[d]},{type:"int32",data:[p]},{type:"int32",data:[f]}],y=new m1e(n,d,p,f,l,i,u),x=[],A=[e,t];l&&(!c&&r.shape.length===1&&(r=We({inputs:{x:r},backend:s,attrs:{shape:[r.shape[0],1,1]}}),x.push(r)),A.push(r)),u&&(!c&&a.shape.length===1&&(a=We({inputs:{x:a},backend:s,attrs:{shape:[a.shape[0],1,1]}}),x.push(a)),A.push(a)),i==="leakyrelu"&&(g.push({type:"float32",data:[o]}),y.uniforms+=" alpha : f32,");let b=s.runWebGPUProgram(y,A,e.dtype,g);for(let w of x)s.disposeData(w.dataId);return b}function y1e(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=n,h=T.convertConv2DDataFormat(l),d=T.computeConv2DInfo(r.shape,a.shape,o,u,i,c,!1,h);return wN({x:r,filter:a,convInfo:d,backend:s})}var A1e={kernelName:Ao,backendName:"webgpu",kernelFunc:y1e};function x1e(e=4){let t=a=>{switch(a){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${a} is not supported.`)}},s=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${Gt(e)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${Gt(e)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${e}];`}
      }
      return ${Gt(e)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${Gt(e)} {
    let col = colIn * ${e};
    ${s}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${Gt(e)} {
    let col = colIn * ${e};
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${t(e)}
    }
    return ${Gt(e)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${Gt(e)}) {
    let col = colIn * ${e};
    if (row < uniforms.dimAOuter && (col + ${e-1}) < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${e}] = value;
    }
  }`}var b1e=class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=e.inChannels%4===0&&e.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=cv(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=dv(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.isVec4&&(this.variableTypes=["vec4<f32>","f32"]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){let e=this.isVec4?Fg(this.elementsPerThread,this.workGroupSize):Og(this.elementsPerThread,this.workGroupSize);return`
    ${x1e(this.isVec4?4:1)}
    ${e}
    `}},v1e=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`
    ${Ke("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = dyR;

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = dyC;

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function w1e(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=T.convertConv2DDataFormat(u),d=T.computeConv2DInfo(o,a.shape,i,1,l,c,!1,h),p=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.filterHeight-1-d.padInfo.top,d.filterWidth-1-d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize,d.outHeight,d.outWidth,d.outChannels]}],f;if(K().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))f=new v1e(d);else{f=new b1e(d);let m=d.inShape[1]*d.inShape[2],g=d.inShape[3],y=d.filterHeight*d.filterWidth*d.outChannels;p.push({type:"uint32",data:[m]},{type:"uint32",data:[g]},{type:"uint32",data:[y]})}return n.runWebGPUProgram(f,[r,a],"float32",p)}var k1e={kernelName:xo,backendName:"webgpu",kernelFunc:w1e},S1e=dn({opType:De.COS}),I1e={kernelName:bo,backendName:"webgpu",kernelFunc:S1e},C1e=dn({opType:De.COSH}),T1e={kernelName:vo,backendName:"webgpu",kernelFunc:C1e},N1e=class{constructor(e,t,n,s){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workGroupSize=[64,1,1],this.size=!0;let[r]=t;this.outputShape=[r,n[0],n[1],e],this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=s==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,s,r]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[a,o,i]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
    ${Ke("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${n});
        let width_ratio = f32(${a});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${s};
        let width_scale = ${o};
        let in_y = ${r};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${i};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}},E1e=e=>{let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:u}=s,c=new N1e(r.shape[3],a.shape,i,l),h=[{type:"float32",data:[u]}];return n.runWebGPUProgram(c,[r,a,o],"float32",h)},_1e={kernelName:gl,backendName:"webgpu",kernelFunc:E1e},Ch;(function(e){e.Prod="*",e.Sum="+"})(Ch||(Ch={}));var Ow=class{constructor(e,t,n,s){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0;let r=128;this.workGroupSize=[r,1,1],this.outputShape=t,this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize),this.exclusive=n,this.reverse=s,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){let e=this.outputShape.length,t=this.op===Ch.Prod?"1.0":"0.0",n=this.exclusive?t:`getX(${Pw(e,"coords",this.op)})`,s=this.outputShape[this.outputShape.length-1],r="",a="";return this.exclusive?(r=this.reverse?`end != ${s-1}`:"end != 0",a=this.reverse?"end + 1":"end - 1"):(r=this.reverse?`end + pow2 < ${s}`:"end >= pow2",a=this.reverse?"end + pow2":"end - pow2"),`
      ${Ke("index")} {
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${Mw(e,"coords",this.op)};
         var val = ${n};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${r}) {
           let idx = ${a};
           ${Mw(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${Pw(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}};function Pw(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function Mw(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function kN(e,t,n,s,r,a){let o=t.shape.length,i=T.getAxesPermutation([s],o),l=t;i!=null&&(l=xa({inputs:{x:t},backend:n,attrs:{perm:i}}));let u=T.getInnerMostAxes(1,o)[0];if(u!==o-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);let c=l.shape[u],h=js({inputs:{x:l},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){let p=new Ow(e,l.shape,!1,a),f=h,m=[{type:"float32",data:[d]}];h=n.runWebGPUProgram(p,[h],h.dtype,m),n.disposeData(f.dataId)}if(r){let d=new Ow(e,l.shape,r,a),p=h,f=[{type:"float32",data:[0]}];h=n.runWebGPUProgram(d,[h],h.dtype,f),n.disposeData(p.dataId)}if(i!=null){let d=T.getUndoAxesPermutation(i),p=xa({inputs:{x:h},backend:n,attrs:{perm:d}});return n.disposeData(h.dataId),n.disposeData(l.dataId),p}return h}function R1e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;return kN(Ch.Prod,r,n,a,o,i)}var $1e={kernelName:ml,backendName:"webgpu",kernelFunc:R1e};function D1e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:i}=s;return kN(Ch.Sum,r,n,a,o,i)}var F1e={kernelName:wo,backendName:"webgpu",kernelFunc:D1e},O1e=class{constructor(e,t){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${Ke("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function P1e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s,i=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],u=o==="NHWC"?r.shape[2]:r.shape[3],c=o==="NHWC"?r.shape[3]:r.shape[1],h=l*a,d=u*a,p=c/(a*a),f=o==="NHWC"?[i,h,d,p]:[i,p,h,d],m=[{type:"int32",data:[a]}],g=new O1e(f,o);return n.runWebGPUProgram(g,[r],r.dtype,m)}var M1e={kernelName:yl,backendName:"webgpu",kernelFunc:P1e},z1e=class{constructor(e,t,n,s=!1,r=null,a=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, inDims : vec2<i32>,",this.workGroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize),s&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.addBias=s,this.activation=r,this.hasPreluActivation=a,this.filterHeight=t,this.filterWidth=n,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){let e=this.filterWidth*this.filterHeight,t=this.workGroupSize[0]*this.workGroupSize[1]*this.workGroupSize[2],n=this.workGroupSize[1]+this.filterHeight-1,s=this.workGroupSize[0]+this.filterWidth-1;return`
      ${fi(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${s}>, ${n}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${Ih()}
      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                @builtin(global_invocation_id) GlobalId : vec3<u32>,
                @builtin(local_invocation_index) LocalIndex: u32,
                @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {
        localId = LocalId;
        globalId = GlobalId;
        let localIndex = i32(LocalIndex);
        numWorkgroups = NumWorkgroups;
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pad;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${this.workGroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${s}; inputCol = inputCol + ${this.workGroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = localIndex;
        ${e<t?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${t})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${cd(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}},SN=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, inDims : vec2<i32>,",this.workGroupSize=[4,4,4],this.isVec4=!0,this.outputShape=e.outShape,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize,[4,4,1]),v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=s,this.shaderKey=`depthwiseVec4_${n}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}`}getUserCode(){let e=4+this.convInfo.filterWidth-1;return`
      ${fi(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, row, col, channel);
        }
        return value;
      }
      ${Ih()}
      fn _start(@builtin(global_invocation_id) globalId: vec3<u32>) {
        let batch = i32(globalId.z) / uniforms.outShape[1];
        let r = i32(globalId.z) % uniforms.outShape[1];
        let c = i32(globalId.y) * 4;
        let d1 = i32(globalId.x) * 4;
        let xRCCorner = vec2<i32>(r, c) - uniforms.pad;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${e}>;
        var dotProd : array<vec4<f32>, 4>;
        dotProd[0] = vec4<f32>(0.0);
        dotProd[1] = vec4<f32>(0.0);
        dotProd[2] = vec4<f32>(0.0);
        dotProd[3] = vec4<f32>(0.0);

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          for (var i = 0; i < ${e}; i++)
          {
            xVals[i] = readX(batch, xR, xCCorner + i, d1);
          }
          for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
            let wValue = getW(wR, wC, d1, 0);
            dotProd[0] = dotProd[0] + xVals[0 + wC] * wValue;
            dotProd[1] = dotProd[1] + xVals[1 + wC] * wValue;
            dotProd[2] = dotProd[2] + xVals[2 + wC] * wValue;
            dotProd[3] = dotProd[3] + xVals[3 + wC] * wValue;
          }
        }

        for (var i = 0; i < 4; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${cd(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}},IN=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms=`pad : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, stride : vec2<i32>, dilation : vec2<i32>,`,this.workGroupSize=[256,1,1],this.outputShape=e.outShape,this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=s,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${fi(this.activation,this.hasPreluActivation,!1,4)}

      ${Ke()} {
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.stride - uniforms.pad;
        let d2 = coords[${this.isChannelsLast?3:1}];
        let channelMul = uniforms.wShape[3];
        let d1 = d2 / channelMul;
        let q = d2 % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + uniforms.filterHeight *
            uniforms.dilation[0];
        let inputColEnd = inputColStart + uniforms.filterWidth *
            uniforms.dilation[1];

        // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
        // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
        // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
        // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
        var value = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] &&
              inputColEnd < uniforms.inDims[1]) {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = ${e};
                let wVal = getW(wR, wC, d1, q);
                value = value + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = ${e};
                let wVal = getW(wR, wC, d1, q);
                value = value + xVal * wVal;
              }
            }
          }
          ${cd(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};function L1e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=T.convertConv2DDataFormat(l),d=u;d==null&&(d=[1,1]);let p=T.computeConv2DInfo(r.shape,a.shape,o,d,i,c,!0,h),f=[{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.inHeight,p.inWidth]}],m=p.dataFormat==="channelsLast",g;return!m&&p.inHeight>16&&p.inWidth>16&&p.strideHeight===1&&p.strideWidth===1&&p.dilationWidth===1&&p.dilationHeight===1&&p.inChannels===p.outChannels?g=new z1e(p.outShape,p.filterHeight,p.filterWidth):m&&p.inHeight>4&&p.inWidth>4&&p.strideHeight===1&&p.strideWidth===1&&p.inChannels===p.outChannels&&p.dilationHeight===1&&p.dilationWidth===1&&p.inChannels%4===0?g=new SN(p):(g=new IN(p),f.push({type:"int32",data:[p.filterHeight]},{type:"int32",data:[p.filterWidth]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]})),n.runWebGPUProgram(g,[r,a],r.dtype,f)}var B1e={kernelName:ko,backendName:"webgpu",kernelFunc:L1e},CN=Mn({opType:Ge.MUL,cpuKernelImpl:uge,supportsComplex:!0}),W1e={kernelName:Wo,backendName:"webgpu",kernelFunc:CN};function gv(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return Fp(r,a,o,"sum",n)}var V1e={kernelName:ei,backendName:"webgpu",kernelFunc:gv};function U1e(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:o,summedDims:i,idDims:l}=T.decodeEinsumEquation(r,a.length);T.checkEinsumDimSizes(o.length,l,a);let{path:u,steps:c}=T.getEinsumComputePath(i,l),h=c.length,d=null,p=o.length,f=[];for(let m=0;m<h;++m){for(let g of c[m]){let{permutationIndices:y,expandDims:x}=T.getEinsumPermutation(p,l[g]),A;T.isIdentityPermutation(y)?A=a[g]:(A=xa({inputs:{x:a[g]},backend:n,attrs:{perm:y}}),f.push(A));let b=A.shape.slice();for(let w=0;w<x.length;++w)b.splice(x[w],0,1);v.arraysEqual(A.shape,b)||(A=We({inputs:{x:A},backend:n,attrs:{shape:b}}),f.push(A)),d===null?d=A:(d=CN({inputs:{a:A,b:d},backend:n}),f.push(d))}m<h-1&&(u[m]>=0&&(d=gv({inputs:{x:d},backend:n,attrs:{axis:u[m]-(o.length-p),keepDims:!1}}),f.push(d)),p--)}for(let m of f)m!==d&&n.disposeData(m.dataId);return d}var G1e={kernelName:Dh,backendName:"webgpu",kernelFunc:U1e},H1e=dn({opType:De.ELU}),j1e={kernelName:Io,backendName:"webgpu",kernelFunc:H1e},q1e=Mn({opType:Ge.EQUAL,dtype:"bool",cpuKernelImpl:K0e}),X1e={kernelName:Al,backendName:"webgpu",kernelFunc:q1e},TN=dn({opType:De.EXP,cpuKernelImpl:Z0e,dtype:"float32"}),K1e={kernelName:Co,backendName:"webgpu",kernelFunc:TN};function x2(e){let{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice(),l=r;return r<0&&(v.assert(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),i.splice(l,0,1),We({inputs:{x:a},backend:s,attrs:{shape:i}})}var Z1e={kernelName:xl,backendName:"webgpu",kernelFunc:x2},Y1e=dn({opType:De.EXPM1,cpuKernelImpl:Y0e}),J1e={kernelName:bl,backendName:"webgpu",kernelFunc:Y1e},Q1e=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${Ke("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}},eye={kernelName:vl,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,s=t,r=new Q1e(n.shape);return s.runWebGPUProgram(r,[n],n.dtype)}},tye=dn({opType:De.FLOOR,cpuKernelImpl:J0e}),nye={kernelName:To,backendName:"webgpu",kernelFunc:tye},sye=Mn({opType:Ge.INT_DIV,dtype:"int32"}),rye={kernelName:No,backendName:"webgpu",kernelFunc:sye},aye=class{constructor(e,t,n=!1){this.isFromPixels=!0,this.outputShape=[0],this.variableNames=[],this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize,[t,1,1]),this.importVideo=n,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){let e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${Ke("index")} {
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${e};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}},oye={kernelName:lh,backendName:"webgpu",kernelFunc:iye},Ru,My=K().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU"),Pf=new Map;function iye(e){let{inputs:t,backend:n,attrs:s}=e,{pixels:r}=t,{numChannels:a}=s;if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let o=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,l=typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas,u=typeof ImageBitmap<"u"&&r instanceof ImageBitmap,[c,h]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],d=[h,c,a],p=K().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&o,f=o||i;if(u||l||f){let x;if(p){let D=r;if(!Pf.has(D)||Pf.get(D).expired){let E={source:D};Pf.set(D,n.device.importExternalTexture(E))}x={width:c,height:h,format:null,usage:null,texture:Pf.get(D)}}else{if(f){let k=K().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Ru==null||k!==My)&&(My=k,Ru=document.createElement("canvas").getContext("2d",{willReadFrequently:My})),Ru.canvas.width=c,Ru.canvas.height=h,Ru.drawImage(r,0,0,c,h),r=Ru.canvas}let D=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,E="rgba8unorm",F=n.textureManager.acquireTexture(d[1],d[0],E,D);n.queue.copyExternalImageToTexture({source:r},{texture:F},[d[1],d[0]]),x={width:c,height:h,format:E,usage:D,texture:F}}let A=v.sizeFromShape(d),b=v.computeStrides(d),w=new aye(d,a,p),S=[{type:"uint32",data:[A]},{type:"uint32",data:[a]},{type:"uint32",data:[...b]}],C=n.makeTensorInfo([h,c],"int32"),_=n.tensorMap.get(C.dataId);_.resourceInfo=x;let R=n.runWebGPUProgram(w,[C],"int32",S);return n.disposeData(C.dataId),R}let m=r.data,g=m;if(a!=null&&a!==4){g=new Uint8Array(r.width*r.height*a);let x=m.length,A=0;for(let b=0;b<x;b++)b%4<a&&(g[A++]=m[b])}let y=n.makeTensorInfo(d,"int32",new Int32Array(g));return n.uploadToGPU(y.dataId),y}var lye=class{constructor(e,t,n,s,r){this.uniforms="varianceEpsilon : f32,",this.workGroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize),s!=null&&(T.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset")),r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale")),this.offsetShape=s,this.scaleShape=r,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${Ke("index")} {
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}},uye={kernelName:Eo,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s,scale:r,offset:a,mean:o,variance:i}=e,{varianceEpsilon:l}=t,u=n,c=[s,o,i],h=null;a!=null&&(h=a.shape,c.push(a));let d=null;r!=null&&(d=r.shape,c.push(r));let p=new lye(s.shape,o.shape,i.shape,h,d),f=[{type:"float32",data:[l]}];return u.runWebGPUProgram(p,c,s.dtype,f)}};function cye(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=T.convertConv2DDataFormat(c),g=T.computeConv2DInfo(r.shape,a.shape,l,h,u,d,!1,m);return wN({x:r,filter:a,convInfo:g,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:f,activation:p})}var dye={kernelName:Qa,backendName:"webgpu",kernelFunc:cye};function hye(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=c;f==null&&(f=[1,1]),v.assert(T.eitherStridesOrDilationsAreOne(l,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`);let m=T.computeConv2DInfo(r.shape,a.shape,l,f,u,h,!0),g=[r,a],y=o!=null,x=i!=null;y&&g.push(o),x&&g.push(i);let A=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.inHeight,m.inWidth]}],b;return m.inHeight>4&&m.inWidth>4&&m.strideHeight===1&&m.strideWidth===1&&m.inChannels===m.outChannels&&m.dilationHeight===1&&m.dilationWidth===1&&m.inChannels%4===0?b=new SN(m,y,d,x):(b=new IN(m,y,d,x),A.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]})),d==="leakyrelu"&&(A.push({type:"float32",data:[p]}),b.uniforms+=" alpha : f32,"),n.runWebGPUProgram(b,g,"float32",A)}var pye={kernelName:eo,backendName:"webgpu",kernelFunc:hye},fye=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${Sn(e)},`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
      ${Ke("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function mye(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,o=a[a.length-1],i=v.sizeFromShape(s.shape),[l,u,c,h]=T.prepareAndValidate(s,r),d=We({inputs:{x:r},backend:n,attrs:{shape:[u,o]}}),p=We({inputs:{x:s},backend:n,attrs:{shape:[v.sizeFromShape(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){let x=n.readSync(r.dataId),A=n.bufferSync(s),b=Q0e(x,A,s.dtype,u,o,c,h,s.shape,i);return n.makeTensorInfo(l,s.dtype,b.values)}let f=new fye(o,[u,c]),m=[{type:"int32",data:[o]},{type:"int32",data:h}],g=n.runWebGPUProgram(f,[p,d],p.dtype,m),y=We({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeData(d.dataId),n.disposeData(p.dataId),n.disposeData(g.dataId),y}var gye={kernelName:kl,backendName:"webgpu",kernelFunc:mye},yye=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){let e=Aye(this.aShape);return`
      ${Ke("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}};function Aye(e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let s=0;s<e.length;s++)s===2?n.push("indexZ"):n.push(`${t[s]}`);return n.join()}function NN(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:i}=s,l=v.parseAxisParam(o,r.shape)[0],u=T.segment_util.collectGatherOpShapeInfo(r,a,l,i),c=v.sizeFromShape(a.shape),h=[],d=We({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=We({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);let f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,a])){let A=n.tensorMap.get(p.dataId).values,b=Le(p.shape,p.dtype,A),S=n.tensorMap.get(d.dataId).values,C=Le(d.shape,d.dtype,S),_=ege(C,b,f);return h.forEach(R=>n.disposeData(R.dataId)),n.makeTensorInfo(u.outputShape,_.dtype,_.values)}let m=new yye(d.shape,f),g=n.runWebGPUProgram(m,[d,p],d.dtype);h.push(g);let y=We({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach(x=>n.disposeData(x.dataId)),y}var xye={kernelName:wl,backendName:"webgpu",kernelFunc:NN},bye=Mn({opType:Ge.GREATER,cpuKernelImpl:nge,dtype:"bool"}),vye={kernelName:Sl,backendName:"webgpu",kernelFunc:bye},wye=Mn({opType:Ge.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:tge}),kye={kernelName:_o,backendName:"webgpu",kernelFunc:wye},Sye=dn({opType:De.IS_NAN,dtype:"bool"}),Iye={kernelName:Il,backendName:"webgpu",kernelFunc:Sye};function Cye(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,o=[{type:"float32",data:[a]}],i=new Dp(r.shape,De.LEAKYRELU);return i.uniforms="alpha : f32,",n.runWebGPUProgram(i,[r],"float32",o)}var Tye={kernelName:$o,backendName:"webgpu",kernelFunc:Cye},Nye=Mn({opType:Ge.LESS,dtype:"bool",cpuKernelImpl:rge}),Eye={kernelName:Cl,backendName:"webgpu",kernelFunc:Nye},_ye=Mn({opType:Ge.LESS_EQUAL,dtype:"bool",cpuKernelImpl:sge}),Rye={kernelName:Tl,backendName:"webgpu",kernelFunc:_ye},$ye=dn({opType:De.LOG,cpuKernelImpl:age}),Dye={kernelName:Do,backendName:"webgpu",kernelFunc:$ye},Fye=Mn({opType:Ge.LOGICAL_AND,dtype:"bool"}),Oye={kernelName:Nl,backendName:"webgpu",kernelFunc:Fye},Pye=dn({opType:De.LOGICAL_NOT}),Mye={kernelName:El,backendName:"webgpu",kernelFunc:Pye},zye=Mn({opType:Ge.MAX,cpuKernelImpl:ige}),Lye={kernelName:Oo,backendName:"webgpu",kernelFunc:zye};function Bye(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=s,u=1,c=T.computePool2DInfo(r.shape,a,o,u,i,l);return xN(r,c,"max",n)}var Wye={kernelName:Po,backendName:"webgpu",kernelFunc:Bye};function Vye(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return Fp(r,a,o,"min",n)}var Uye={kernelName:zo,backendName:"webgpu",kernelFunc:Vye},Gye=Mn({opType:Ge.MIN,cpuKernelImpl:lge}),Hye={kernelName:Lo,backendName:"webgpu",kernelFunc:Gye},jye=class{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((s,r)=>s[0]+e[r]+s[1]),this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map((s,r)=>{this.uniforms+=` pad${r} : vec2<i32>,`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map((l,u)=>`uniforms.pad${u}[0]`).join(","),n=this.xShape.map((l,u)=>`uniforms.pad${u}[0] + uniforms.xShape${e>1?`[${u}]`:""}`).join(","),s=e===1?"start":"start[i]",r=e===1?"end":"end[i]",a=e===1?"outC":"outC[i]",o=Sn(e),i=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Ke("index")} {
        if (index < uniforms.size) {
          let start = ${o}(${t});
          let end = ${o}(${n});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${a} < ${s}) {
              ${a} = ${s} * 2 - ${a} - ${this.offset};
            } else if(${a} >= ${r}) {
              ${a} = (${r} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${i}));
        }
      }
    `}},qye={kernelName:Bo,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{paddings:r,mode:a}=t,o=n,i=r.map(c=>({type:"int32",data:[c[0],c[1]]})),l=new jye(s.shape,r,a);return o.runWebGPUProgram(l,[s],s.dtype,i)}};function Xye(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){let a=n.tensorMap.get(s.dataId),[o,i]=cge(a.values,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,o)}let r=new Dp(s.shape,De.NEG);return n.runWebGPUProgram(r,[s],s.dtype)}var Kye={kernelName:_l,backendName:"webgpu",kernelFunc:Xye};function Zye(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=s,u=n.readSync(r.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=ar.nonMaxSuppressionV3Impl(u,c,o,i,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}var Yye={kernelName:$l,backendName:"webgpu",kernelFunc:Zye};function Jye(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),d=o,p=i,f=l,m=u,{selectedIndices:g,selectedScores:y}=ar.nonMaxSuppressionV5Impl(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var Qye={kernelName:Dl,backendName:"webgpu",kernelFunc:Jye};function Um(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){let r=Op({inputs:{input:s},backend:n}),a=Um({inputs:{x:r},backend:n}),o=Pg({inputs:{input:s},backend:n}),i=Um({inputs:{x:o},backend:n}),l=dd({inputs:{real:a,imag:i},backend:n});return n.disposeData(r.dataId),n.disposeData(a.dataId),n.disposeData(o.dataId),n.disposeData(i.dataId),l}else return uu({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}var eAe={kernelName:Jl,backendName:"webgpu",kernelFunc:Um};function EN(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let r=Op({inputs:{input:s},backend:n}),a=EN({inputs:{x:r},backend:n}),o=Pg({inputs:{input:s},backend:n}),i=Um({inputs:{x:o},backend:n}),l=dd({inputs:{real:a,imag:i},backend:n});return n.disposeData(r.dataId),n.disposeData(a.dataId),n.disposeData(o.dataId),n.disposeData(i.dataId),l}else return uu({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}var tAe={kernelName:Fl,backendName:"webgpu",kernelFunc:EN};function nAe(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return x2({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,o=t[0].dtype;t.forEach(c=>{v.assertShapesMatch(a,c.shape,"All tensors passed to stack must have matching shapes"),v.assert(o===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=t.map(c=>{let h=x2({inputs:{input:c},backend:n,attrs:{dim:r}});return i.push(h),h}),u=vN({inputs:l,backend:n,attrs:{axis:r}});return i.forEach(c=>n.disposeData(c.dataId)),u}var sAe={kernelName:Pl,backendName:"webgpu",kernelFunc:nAe},rAe=class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((n,s)=>n[0]+e[s]+n[1]),this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map((n,s)=>{this.uniforms+=` pad${s} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){let e=this.xShape.length,t=Sn(e),n=this.xShape.map((c,h)=>`uniforms.pad${h}[0]`).join(","),s=this.xShape.map((c,h)=>`uniforms.pad${h}[0] + uniforms.xShape${e>1?`[${h}]`:""}`).join(","),r=e>1?`${t}(${n})`:`${n}`,a=e>1?`${t}(${s})`:`${s}`,o=e>1?"any(outC < start)":"outC < start",i=e>1?"any(outC >= end)":"outC >= end",l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Ke("index")} {
        if (index < uniforms.size) {
          let start = ${r};
          let end = ${a};
          let outC = getCoordsFromIndex(index);

          if (${o} || ${i}) {
            setOutputAtIndex(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputAtIndex(index, getX(${l}));
          }
        }
      }
    `}},_N=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s;if(a.every(u=>v.arraysEqual(u,[0,0])))return js({inputs:{x:r},backend:n});if(v.sizeFromShape(r.shape)===0){let u=a.map((c,h)=>c[0]+r.shape[h]+c[1]);return uu({backend:n,attrs:{shape:u,value:o,dtype:r.dtype}})}let i=[{type:"float32",data:[o]}];a.map(u=>i.push({type:"int32",data:[u[0],u[1]]}));let l=new rAe(r.shape,a);return n.runWebGPUProgram(l,[r],r.dtype,i)},aAe={kernelName:Vo,backendName:"webgpu",kernelFunc:_N},oAe=Mn({opType:Ge.POW}),iAe={kernelName:Uo,backendName:"webgpu",kernelFunc:oAe};function lAe(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=new g2(Ge.PRELU,s.shape,r.shape);return n.runWebGPUProgram(a,[s,r],"float32")}var uAe={kernelName:Go,backendName:"webgpu",kernelFunc:lAe};function cAe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return Fp(r,a,o,"prod",n)}var dAe={kernelName:Ho,backendName:"webgpu",kernelFunc:cAe},hAe=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:o}=n,i=pge(s,r,a,o);return t.makeTensorInfo([i.length],o,i)},pAe={kernelName:$c,backendName:"webgpu",kernelFunc:hAe},RN=Mn({opType:Ge.DIV}),fAe={kernelName:So,backendName:"webgpu",kernelFunc:RN},mAe=dn({opType:De.RECIPROCAL}),gAe={kernelName:Ml,backendName:"webgpu",kernelFunc:mAe},yAe=dn({opType:De.RELU}),AAe={kernelName:jo,backendName:"webgpu",kernelFunc:yAe},xAe=dn({opType:De.RELU6}),bAe={kernelName:Ko,backendName:"webgpu",kernelFunc:xAe},vAe=class{constructor(e,t,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${Ke("index")} {
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function wAe(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,size:o,halfPixelCenters:i}=s,[l,u]=o,c=a&&l>1?1:0,h=a&&u>1?1:0,p=[{type:"float32",data:[c,h]},{type:"float32",data:[i?.5:0]}],f=new vAe(r.shape,l,u);return n.runWebGPUProgram(f,[r],"float32",p)}var kAe={kernelName:Xo,backendName:"webgpu",kernelFunc:wAe},SAe=class{constructor(e,t,n,s){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=s,this.shaderKey=`resizeNearest_${s}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${Ke("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function IAe(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:i}=s,[l,u]=i,c=a&&l>1?1:0,h=a&&u>1?1:0,p=[{type:"float32",data:[c,h]},{type:"float32",data:[a?.5:0]}],f=new SAe(r.shape,l,u,o);return n.runWebGPUProgram(f,[r],r.dtype,p)}var CAe={kernelName:qo,backendName:"webgpu",kernelFunc:IAe},TAe=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${Ke("index")} {
          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}},NAe={kernelName:Ql,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:o}=t,i=n,l=new TAe(s.shape,a),[u,c]=T.getImageCenter(o,s.shape[1],s.shape[2]),h=[{type:"float32",data:[u]},{type:"float32",data:[c]},{type:"float32",data:[Math.sin(r)]},{type:"float32",data:[Math.cos(r)]}];return typeof a=="number"?h.push({type:"float32",data:[Number.parseFloat(a.toFixed(2))]}):h.push({type:"float32",data:a}),i.runWebGPUProgram(l,[s],s.dtype,h)}},EAe=dn({opType:De.RSQRT,cpuKernelImpl:fge}),_Ae={kernelName:Zo,backendName:"webgpu",kernelFunc:EAe},om=class{constructor(e,t,n,s,r,a,o,i=!0){this.variableNames=["updates","indices"],this.workGroupSize=[64,1,1],this.atomic=!0,this.outputShape=a,this.type=o,this.sumDupeIndices=i,this.dispatchLayout=tt(e),this.dispatch=Ve(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${s}_${this.sliceDimGreaterThanOne}_${o}_${i}`;let l=Sn(r.length);this.uniforms=`sliceDim : i32, strides: ${l}, size: i32,`,this.updatesRank=s,this.indicesRank=n}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",s="",r="";this.dispatchLayout.x.length===1?(s="flattenedIndex",r=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(s="vec2<i32>(flattenedIndex, coords[1])",r=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);let o=`getUpdates(${Array.from({length:this.updatesRank},(u,c)=>`coords[${c}]`).join(", ")})`,i=(u,c)=>{let h=`atomicAdd(${u}, bitcast<i32>(${c}))`;this.type==="float32"&&(h=`
          {
            var oldBits = 0;
            var newBits = bitcast<i32>(${c});
            loop {
              let info = atomicCompareExchangeWeak(${u}, oldBits, newBits);
              if (info.exchanged) {
                break;
              }
              oldBits = info.old_value;
              let oldValue = bitcast<f32>(oldBits);
              let newValue = oldValue + (${c});
              newBits = bitcast<i32>(newValue);
            }
          }
        `);let d=`atomicStore(${u}, bitcast<i32>(${c}));`;return this.sumDupeIndices?h:d};return`
    ${r}

      ${Ke("index")} {
        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${n};
          }
          let updateValue =
              ${ah(this.type,!1)}(${o});
          let flatIndex = getOutputIndexFromCoords(${s});

          ${i("&result[flatIndex]","updateValue")};
        }
      }`}};function RAe(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=T.calculateShapes(a,r,o),d=[h/u,u];if(h===0)return n.makeTensorInfo(o,r.dtype);let p=We({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),f=We({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=f.dtype,g=uu({backend:n,attrs:{shape:d,value:0,dtype:m}}),y=v.sizeFromShape(f.shape),x=[{type:"int32",data:[i]},{type:"int32",data:c},{type:"int32",data:[y]}],A=new om(f.shape,i,p.shape.length,f.shape.length,c,d,m),b=n.runWebGPUProgram(A,[f,p],m,x,g),w=We({inputs:{x:b},backend:n,attrs:{shape:o}});return n.disposeData(p.dataId),n.disposeData(f.dataId),n.disposeData(b.dataId),w}var $Ae={kernelName:Wl,backendName:"webgpu",kernelFunc:RAe},DAe=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let s=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],a=[];for(let o=0;o<this.outputShape.length;o++)a.push(`${s[o]}`),o<this.cRank&&r.push(`${s[o]}`);e=r.join(),t=a.join()}return`
      ${Ke("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}};function FAe(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=new DAe(s.shape.length,r.shape,r.shape.length);return n.runWebGPUProgram(o,[s,r,a],Fn(r.dtype,a.dtype))}var OAe={kernelName:Vl,backendName:"webgpu",kernelFunc:FAe},PAe=dn({opType:De.SIGMOID}),MAe={kernelName:Jo,backendName:"webgpu",kernelFunc:PAe},zAe=dn({opType:De.SIN}),LAe={kernelName:Yo,backendName:"webgpu",kernelFunc:zAe},BAe=dn({opType:De.SINH}),WAe={kernelName:Gl,backendName:"webgpu",kernelFunc:BAe},$N=Mn({opType:Ge.SUB,cpuKernelImpl:bge,supportsComplex:!0}),VAe={kernelName:si,backendName:"webgpu",kernelFunc:$N};function UAe(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=v.parseAxisParam([a],r.shape),i=mv({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=T.expandShapeToKeepDim(i.shape,o),u=We({inputs:{x:i},backend:n,attrs:{shape:l}}),c=$N({inputs:{a:r,b:u},backend:n}),h=TN({inputs:{x:c},backend:n}),d=gv({inputs:{x:h},backend:n,attrs:{axis:o,keepDims:!1}}),p=We({inputs:{x:d},backend:n,attrs:{shape:l}}),f=RN({inputs:{a:h,b:p},backend:n});return n.disposeData(i.dataId),n.disposeData(u.dataId),n.disposeData(c.dataId),n.disposeData(h.dataId),n.disposeData(d.dataId),n.disposeData(p.dataId),f}var GAe={kernelName:ti,backendName:"webgpu",kernelFunc:UAe},HAe=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;v.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let i=a.reduce((y,x)=>y*x),l=[[0,0]];l.push(...o);for(let y=1+a.length;y<r.shape.length;++y)l.push([0,0]);let u=[],c=_N({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),h=T.getReshaped(c.shape,a,i,!1),d=T.getPermuted(h.length,a.length,!1),p=T.getReshapedPermuted(c.shape,a,i,!1),f=We({inputs:{x:c},backend:n,attrs:{shape:h}}),m=xa({inputs:{x:f},backend:n,attrs:{perm:d}}),g=We({inputs:{x:m},backend:n,attrs:{shape:p}});return u.push(c),u.push(f),u.push(m),u.forEach(y=>n.disposeData(y.dataId)),g},jAe={kernelName:Hl,backendName:"webgpu",kernelFunc:HAe},qAe=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=XAe(this.rank,"uniforms.");return`
      ${Ke("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function XAe(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`(resRC % ${t}aShape)`;let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e;r++)s.push(`(${n[r]} % ${t}aShape[${r}])`);return s.join()}function DN(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if(n.shouldExecuteOnCPU([r])||r.dtype==="string"||r.shape.length>=5){let l=n.readSync(r.dataId),u=r.dtype==="string"?l.map(d=>v.decodeString(d)):l,c=Le(r.shape,r.dtype,u),h=vge(c,a);return n.makeTensorInfo(h.shape,h.dtype,h.values)}let o=new qAe(r.shape,a);return n.runWebGPUProgram(o,[r],r.dtype)}var KAe={kernelName:ka,backendName:"webgpu",kernelFunc:DN};function ZAe(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=T.calculateShapes(a,r,i),p=!1;if(a.dtype==="string"){let _=n.bufferSync(r),R=n.bufferSync(a),D=v.decodeString(n.readSync(o.dataId)[0]),E=mge(_,R,i,d,c,u,l,h,D,p);return n.makeTensorInfo(i,E.dtype,E.values)}let f=[d/c,c],m=We({inputs:{x:r},backend:n,attrs:{shape:[u,l]}}),g=a.shape.length?We({inputs:{x:a},backend:n,attrs:{shape:[u,c]}}):js({inputs:{x:a},backend:n}),y=g.dtype,x=n.makeTensorInfo([],y,v.makeZerosTypedArray(1,y)),A=We({inputs:{x:o},backend:n,attrs:{shape:Array(f.length).fill(1)}}),b=DN({inputs:{x:A},backend:n,attrs:{reps:f}}),w=v.sizeFromShape([u,c]),S=[{type:"int32",data:[l]},{type:"int32",data:h},{type:"int32",data:[w]}];switch(u){case 0:break;case 1:{let _=new om([u,c],l,m.shape.length,g.shape.length,h,f,y,p);n.runWebGPUProgram(_,[g,m],y,S,b)}break;default:{let _=new om([u,c],l,m.shape.length,x.shape.length,h,f,y,p);n.runWebGPUProgram(_,[x,m],y,S,b)}{let _=new om([u,c],l,m.shape.length,g.shape.length,h,f,y);n.runWebGPUProgram(_,[g,m],y,S,b)}}let C=We({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeData(m.dataId),n.disposeData(g.dataId),n.disposeData(A.dataId),n.disposeData(x.dataId),n.disposeData(b.dataId),C}var YAe={kernelName:Wh,backendName:"webgpu",kernelFunc:ZAe};function JAe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,i=v.parseAxisParam(o,r.shape)[0],l=T.prepareSplitSize(r,a,i),u=r.shape.length,c=new Array(u).fill(0),h=r.shape.slice();return l.map(d=>{let p=[...h];p[i]=d;let f=hd({inputs:{x:r},backend:n,attrs:{begin:c,size:p}});return c[i]+=d,f})}var QAe={kernelName:jl,backendName:"webgpu",kernelFunc:JAe},e2e=dn({opType:De.SQRT}),t2e={kernelName:Qo,backendName:"webgpu",kernelFunc:e2e},n2e={kernelName:Mc,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,s=t,r=new Dp(n.shape,De.SQUARE);return s.runWebGPUProgram(r,[n],n.dtype)}},s2e=Mn({opType:Ge.SQUARED_DIFFERENCE}),r2e={kernelName:ni,backendName:"webgpu",kernelFunc:s2e},a2e=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=Sn(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let s=0;t=this.outputShape.map((r,a)=>(s++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${s-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${Ke("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}};function o2e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=zt.sliceInfo(r.shape,a,o,i,l,u,c,h,d),w;if(m)w=We({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let S=zt.computeOutShape(x,A,b),C=hd({inputs:{x:r},backend:n,attrs:{begin:x,size:S}});w=We({inputs:{x:C},backend:n,attrs:{shape:f}}),n.disposeData(C.dataId)}else if(n.shouldExecuteOnCPU([r])){let C=n.readSync(r.dataId),_=Le(r.shape,r.dtype,C),R=Age(p,_,b,x);w=n.makeTensorInfo(f,r.dtype,R.values)}else{let C=new a2e(p),_=[{type:"int32",data:x},{type:"int32",data:b}],R=n.runWebGPUProgram(C,[r],r.dtype,_);w=We({inputs:{x:R},backend:n,attrs:{shape:f}}),n.disposeData(R.dataId)}return w}var i2e={kernelName:ql,backendName:"webgpu",kernelFunc:o2e};function l2e(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=xge(d,p,r,a,o,i,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}var u2e={kernelName:zc,backendName:"webgpu",kernelFunc:l2e},c2e=dn({opType:De.TANH}),d2e={kernelName:ri,backendName:"webgpu",kernelFunc:c2e},h2e=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${Ke("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},p2e=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${Ke("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function $u(e,t){t!==null&&e.disposeData(t.dataId)}function zw(e){let t=1;for(;t<e;)t*=2;return t}function f2e(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:o}=s,i=r.shape,l=i[i.length-1];if(n.shouldExecuteOnCPU([r])){let w=n.readSync(r.dataId),[S,C]=wge(w,i,r.dtype,a,o);return[n.makeTensorInfo(S.shape,S.dtype,S.values),n.makeTensorInfo(C.shape,C.dtype,C.values)]}if(a===0)return i[i.length-1]=0,[n.makeTensorInfo(i,r.dtype,[]),n.makeTensorInfo(i,"int32",[])];if(l===1)return[r,uu({attrs:{shape:i,dtype:"int32",value:0},backend:n})];let c=v.sizeFromShape(i)/l,h=We({inputs:{x:r},attrs:{shape:[c,l]},backend:n}),d=zw(a),p=zw(l),f=null,m=()=>f===null?[h,h]:[h,f],g=(w,S,C)=>{let _=m(),R=new h2e(C),E=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[w]},{type:"int32",data:[S]}],F=f;f=n.runWebGPUProgram(R,_,"int32",E),$u(n,F)};for(let w=1;w<d;w*=2){let S=w*2;for(let C=w;C>=1;C/=2)g(S,C,[c,p])}for(let w=p;w>d;w/=2){let S=m(),C=new p2e([c,w/2]),R=[{type:"int32",data:[l]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[d]}],D=f;f=n.runWebGPUProgram(C,S,"int32",R),$u(n,D);let E=d/2,F=E*2;for(let k=E;k>=1;k/=2)g(F,k,f.shape)}let y=f;f=hd({inputs:{x:f},backend:n,attrs:{begin:0,size:[c,a]}}),$u(n,y);let x=NN({inputs:{x:h,indices:f},backend:n,attrs:{axis:1,batchDims:1}});$u(n,h);let A=i.slice(0,-1);A.push(a),y=f,f=We({inputs:{x:f},attrs:{shape:A},backend:n}),$u(n,y);let b=x;return x=We({inputs:{x},attrs:{shape:A},backend:n}),$u(n,b),[x,f]}var m2e={kernelName:Kl,backendName:"webgpu",kernelFunc:f2e},g2e=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=tt(this.outputShape),this.dispatch=Ve(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${Ke("index")} {
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function y2e(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:u}=s,[c,h,d,p]=r.shape,[f,m]=u??[h,d],g=[c,f,m,p],y=new g2e(g),x=o==="nearest"?1:2,A;switch(i){case"constant":A=1;break;case"reflect":A=2;break;case"wrap":A=3;break;case"nearest":A=4;break;default:A=1;break}let b=[{type:"int32",data:[x]},{type:"int32",data:[A]},{type:"float32",data:[l]}];return n.runWebGPUProgram(y,[r,a],"float32",b)}var A2e={kernelName:Zl,backendName:"webgpu",kernelFunc:y2e};function x2e(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let o=r,i=o.shape.length,l=r.shape[a],u=new Array(i-1),c=0;for(let m=0;m<i;m++)m!==a&&(u[c++]=o.shape[m]);let h=[],d=new Array(i).fill(0),p=o.shape.slice();p[a]=1;let f=new Array(l);for(let m=0;m<f.length;m++){d[a]=m;let g=hd({inputs:{x:o},backend:n,attrs:{begin:d,size:p}}),y=We({inputs:{x:g},backend:n,attrs:{shape:u}});f[m]=y,h.push(g)}return h.forEach(m=>n.disposeData(m.dataId)),f}var b2e={kernelName:Yl,backendName:"webgpu",kernelFunc:x2e},v2e=[V0e,Ige,Tge,_ge,Pge,zge,Bge,jge,Xge,Qge,s1e,a1e,u1e,G0e,p1e,A1e,k1e,I1e,T1e,_1e,$1e,F1e,M1e,B1e,G1e,j1e,X1e,K1e,Z1e,J1e,L0e,eye,oye,nye,rye,uye,dye,pye,gye,xye,vye,kye,U0e,d1e,Iye,Tye,Eye,Rye,Dye,Oye,Mye,Uge,Lye,Wye,Gge,Uye,Hye,qye,W1e,Kye,Yye,Qye,e1e,tAe,sAe,aAe,iAe,uAe,dAe,pAe,t1e,fAe,gAe,AAe,bAe,B0e,kAe,CAe,NAe,_Ae,$Ae,OAe,MAe,LAe,WAe,Yge,i2e,u2e,GAe,jAe,YAe,QAe,t2e,n2e,r2e,VAe,V1e,d2e,KAe,m2e,A2e,Fge,b2e,eAe];for(let e of v2e)Ir(e);var w2e="3.20.0",k2e="3.20.0",S2e="3.20.0",I2e="3.20.0",C2e="3.20.0",T2e="3.20.0",N2e="3.20.0",yv={tfjs:w2e,"tfjs-core":k2e,"tfjs-data":S2e,"tfjs-layers":I2e,"tfjs-converter":C2e,"tfjs-backend-webgl":T2e,"tfjs-backend-wasm":N2e},E2e=`
  precision highp float;
  attribute vec2 pos;
  attribute vec2 uv;
  varying vec2 vUv;
  uniform float flipY;
  void main(void) {
    vUv = uv;
    gl_Position = vec4(pos.x, pos.y*flipY, 0.0, 1.);
  }
`,_2e=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[3] * c.a + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[8] * c.a + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[13] * c.a + m[14];
    gl_FragColor.a = m[15] * c.r + m[16] * c.g + m[17] * c.b + m[18] * c.a + m[19];
  }
`,R2e=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[14];
    gl_FragColor.a = c.a;
  }
`,$2e=`
  precision highp float;
  varying vec2 vUv;
  uniform vec2 size;
  uniform sampler2D texture;
  vec2 pixelate(vec2 coord, vec2 size) {
    return floor( coord / size ) * size;
  }
  void main(void) {
    gl_FragColor = vec4(0.0);
    vec2 coord = pixelate(vUv, size);
    gl_FragColor += texture2D(texture, coord);
  }
`,D2e=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  void main(void) {
    gl_FragColor = vec4(0.0);
    gl_FragColor += texture2D(texture, vUv + vec2(-7.0*px.x, -7.0*px.y))*0.0044299121055113265;
    gl_FragColor += texture2D(texture, vUv + vec2(-6.0*px.x, -6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2(-5.0*px.x, -5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2(-4.0*px.x, -4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2(-3.0*px.x, -3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2(-2.0*px.x, -2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2(-1.0*px.x, -1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv                             )*0.159576912161;
    gl_FragColor += texture2D(texture, vUv + vec2( 1.0*px.x,  1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv + vec2( 2.0*px.x,  2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2( 3.0*px.x,  3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2( 4.0*px.x,  4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2( 5.0*px.x,  5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2( 6.0*px.x,  6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2( 7.0*px.x,  7.0*px.y))*0.0044299121055113265;
  }
`,F2e=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  uniform float m[9];
  void main(void) {
    vec4 c11 = texture2D(texture, vUv - px); // top left
    vec4 c12 = texture2D(texture, vec2(vUv.x, vUv.y - px.y)); // top center
    vec4 c13 = texture2D(texture, vec2(vUv.x + px.x, vUv.y - px.y)); // top right
    vec4 c21 = texture2D(texture, vec2(vUv.x - px.x, vUv.y) ); // mid left
    vec4 c22 = texture2D(texture, vUv); // mid center
    vec4 c23 = texture2D(texture, vec2(vUv.x + px.x, vUv.y) ); // mid right
    vec4 c31 = texture2D(texture, vec2(vUv.x - px.x, vUv.y + px.y) ); // bottom left
    vec4 c32 = texture2D(texture, vec2(vUv.x, vUv.y + px.y) ); // bottom center
    vec4 c33 = texture2D(texture, vUv + px ); // bottom right
    gl_FragColor = 
    c11 * m[0] + c12 * m[1] + c22 * m[2] +
    c21 * m[3] + c22 * m[4] + c23 * m[5] +
    c31 * m[6] + c32 * m[7] + c33 * m[8];
    gl_FragColor.a = c22.a;
  }
`,zy=(e,t,n)=>{let s=new RegExp("\\b"+t+" \\w+ (\\w+)","ig");e.replace(s,(r,a)=>(n[a]=0,r))},O2e=class{constructor(e,t,n){me(this,"uniform",{}),me(this,"attribute",{}),me(this,"gl"),me(this,"id"),me(this,"compile",(a,o)=>{let i=this.gl.createShader(o);return i?(this.gl.shaderSource(i,a),this.gl.compileShader(i),this.gl.getShaderParameter(i,this.gl.COMPILE_STATUS)?i:(he(`filter: gl compile failed: ${this.gl.getShaderInfoLog(i)||"unknown"}`),null)):(he("filter: could not create shader"),null)}),this.gl=e;let s=this.compile(t,this.gl.VERTEX_SHADER),r=this.compile(n,this.gl.FRAGMENT_SHADER);if(this.id=this.gl.createProgram(),!(!s||!r)){if(!this.id){he("filter: could not create webgl program");return}if(this.gl.attachShader(this.id,s),this.gl.attachShader(this.id,r),this.gl.linkProgram(this.id),!this.gl.getProgramParameter(this.id,this.gl.LINK_STATUS)){he(`filter: gl link failed: ${this.gl.getProgramInfoLog(this.id)||"unknown"}`);return}this.gl.useProgram(this.id),zy(t,"attribute",this.attribute);for(let a in this.attribute)this.attribute[a]=this.gl.getAttribLocation(this.id,a);zy(t,"uniform",this.uniform),zy(n,"uniform",this.uniform);for(let a in this.uniform)this.uniform[a]=this.gl.getUniformLocation(this.id,a)}}};function P2e(){let e=0,t=null,n=!1,s=-1,r=[null,null],a=[],o=null,i=null,l=Er(100,100),u={},c={INTERMEDIATE:1},h=l.getContext("webgl");if(!h){he("filter: cannot get webgl context");return}this.gl=h;function d(x,A){if(!(x===l.width&&A===l.height)){if(l.width=x,l.height=A,!o){let b=new Float32Array([-1,-1,0,1,1,-1,1,1,-1,1,0,0,-1,1,0,0,1,-1,1,1,1,1,1,0]);o=h.createBuffer(),h.bindBuffer(h.ARRAY_BUFFER,o),h.bufferData(h.ARRAY_BUFFER,b,h.STATIC_DRAW),h.pixelStorei(h.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0)}h.viewport(0,0,l.width,l.height),r=[null,null]}}function p(x,A){let b=h.createFramebuffer();h.bindFramebuffer(h.FRAMEBUFFER,b);let w=h.createRenderbuffer();h.bindRenderbuffer(h.RENDERBUFFER,w);let S=h.createTexture();return h.bindTexture(h.TEXTURE_2D,S),h.texImage2D(h.TEXTURE_2D,0,h.RGBA,x,A,0,h.RGBA,h.UNSIGNED_BYTE,null),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_MAG_FILTER,h.LINEAR),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_MIN_FILTER,h.LINEAR),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_WRAP_S,h.CLAMP_TO_EDGE),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_WRAP_T,h.CLAMP_TO_EDGE),h.framebufferTexture2D(h.FRAMEBUFFER,h.COLOR_ATTACHMENT0,h.TEXTURE_2D,S,0),h.bindTexture(h.TEXTURE_2D,null),h.bindFramebuffer(h.FRAMEBUFFER,null),{fbo:b,texture:S}}function f(x){return r[x]=r[x]||p(l.width,l.height),r[x]}function m(x=0){if(!i)return;let A=null,b=null,w=!1;e===0?A=t:A=f(s).texture||null,e++,n&&!(x&c.INTERMEDIATE)?(b=null,w=e%2===0):(s=(s+1)%2,b=f(s).fbo||null),h.bindTexture(h.TEXTURE_2D,A),h.bindFramebuffer(h.FRAMEBUFFER,b),h.uniform1f(i.uniform.flipY,w?-1:1),h.drawArrays(h.TRIANGLES,0,6)}function g(x){if(u[x])return i=u[x],h.useProgram((i?i.id:null)||null),i;if(i=new O2e(h,E2e,x),!i)return he("filter: could not get webgl program"),null;let A=Float32Array.BYTES_PER_ELEMENT,b=4*A;return h.enableVertexAttribArray(i.attribute.pos),h.vertexAttribPointer(i.attribute.pos,2,h.FLOAT,!1,b,0*A),h.enableVertexAttribArray(i.attribute.uv),h.vertexAttribPointer(i.attribute.uv,2,h.FLOAT,!1,b,2*A),u[x]=i,i}let y={colorMatrix:x=>{let A=new Float32Array(x);A[4]/=255,A[9]/=255,A[14]/=255,A[19]/=255;let b=A[18]===1&&A[3]===0&&A[8]===0&&A[13]===0&&A[15]===0&&A[16]===0&&A[17]===0&&A[19]===0?R2e:_2e,w=g(b);!w||(h.uniform1fv(w.uniform.m,A),m())},brightness:x=>{let A=(x||0)+1;y.colorMatrix([A,0,0,0,0,0,A,0,0,0,0,0,A,0,0,0,0,0,1,0])},saturation:x=>{let A=(x||0)*2/3+1,b=(A-1)*-.5;y.colorMatrix([A,b,b,0,0,b,A,b,0,0,b,b,A,0,0,0,0,0,1,0])},desaturate:()=>{y.saturation(-1)},contrast:x=>{let A=(x||0)+1,b=-128*(A-1);y.colorMatrix([A,0,0,0,b,0,A,0,0,b,0,0,A,0,b,0,0,0,1,0])},negative:()=>{y.contrast(-2)},hue:x=>{x=(x||0)/180*Math.PI;let A=Math.cos(x),b=Math.sin(x),w=.213,S=.715,C=.072;y.colorMatrix([w+A*(1-w)+b*-w,S+A*-S+b*-S,C+A*-C+b*(1-C),0,0,w+A*-w+b*.143,S+A*(1-S)+b*.14,C+A*-C+b*-.283,0,0,w+A*-w+b*-(1-w),S+A*-S+b*S,C+A*(1-C)+b*C,0,0,0,0,0,1,0])},desaturateLuminance:()=>{y.colorMatrix([.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,0,0,0,1,0])},sepia:()=>{y.colorMatrix([.393,.7689999,.18899999,0,0,.349,.6859999,.16799999,0,0,.272,.5339999,.13099999,0,0,0,0,0,1,0])},brownie:()=>{y.colorMatrix([.5997023498159715,.34553243048391263,-.2708298674538042,0,47.43192855600873,-.037703249837783157,.8609577587992641,.15059552388459913,0,-36.96841498319127,.24113635128153335,-.07441037908422492,.44972182064877153,0,-7.562075277591283,0,0,0,1,0])},vintagePinhole:()=>{y.colorMatrix([.6279345635605994,.3202183420819367,-.03965408211312453,0,9.651285835294123,.02578397704808868,.6441188644374771,.03259127616149294,0,7.462829176470591,.0466055556782719,-.0851232987247891,.5241648018700465,0,5.159190588235296,0,0,0,1,0])},kodachrome:()=>{y.colorMatrix([1.1285582396593525,-.3967382283601348,-.03992559172921793,0,63.72958762196502,-.16404339962244616,1.0835251566291304,-.05498805115633132,0,24.732407896706203,-.16786010706155763,-.5603416277695248,1.6014850761964943,0,35.62982807460946,0,0,0,1,0])},technicolor:()=>{y.colorMatrix([1.9125277891456083,-.8545344976951645,-.09155508482755585,0,11.793603434377337,-.3087833385928097,1.7658908555458428,-.10601743074722245,0,-70.35205161461398,-.231103377548616,-.7501899197440212,1.847597816108189,0,30.950940869491138,0,0,0,1,0])},polaroid:()=>{y.colorMatrix([1.438,-.062,-.062,0,0,-.122,1.378,-.122,0,0,-.016,-.016,1.483,0,0,0,0,0,1,0])},shiftToBGR:()=>{y.colorMatrix([0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0])},convolution:x=>{let A=new Float32Array(x),b=1/l.width,w=1/l.height,S=g(F2e);!S||(h.uniform1fv(S.uniform.m,A),h.uniform2f(S.uniform.px,b,w),m())},detectEdges:()=>{y.convolution.call(this,[0,1,0,1,-4,1,0,1,0])},sobelX:()=>{y.convolution.call(this,[-1,0,1,-2,0,2,-1,0,1])},sobelY:()=>{y.convolution.call(this,[-1,-2,-1,0,0,0,1,2,1])},sharpen:x=>{let A=x||1;y.convolution.call(this,[0,-1*A,0,-1*A,1+4*A,-1*A,0,-1*A,0])},emboss:x=>{let A=x||1;y.convolution.call(this,[-2*A,-1*A,0,-1*A,1,1*A,0,1*A,2*A])},blur:x=>{let A=x/7/l.width,b=x/7/l.height,w=g(D2e);!w||(h.uniform2f(w.uniform.px,0,b),m(c.INTERMEDIATE),h.uniform2f(w.uniform.px,A,0),m())},pixelate:x=>{let A=x/l.width,b=x/l.height,w=g($2e);!w||(h.uniform2f(w.uniform.size,A,b),m())}};this.add=function(x){let A=Array.prototype.slice.call(arguments,1),b=y[x];a.push({func:b,args:A})},this.reset=function(){a=[]},this.get=function(){return a},this.apply=function(x){d(x.width,x.height),e=0,t||(t=h.createTexture()),h.bindTexture(h.TEXTURE_2D,t),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_WRAP_S,h.CLAMP_TO_EDGE),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_WRAP_T,h.CLAMP_TO_EDGE),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_MIN_FILTER,h.NEAREST),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_MAG_FILTER,h.NEAREST),h.texImage2D(h.TEXTURE_2D,0,h.RGBA,h.RGBA,h.UNSIGNED_BYTE,x);for(let A=0;A<a.length;A++){n=A===a.length-1;let b=a[A];b.func.apply(this,b.args||[])}return l},this.draw=function(x){return this.add("brightness",0),this.apply(x)}}async function FN(e){let t=e.shape.length===4?mt(e):e,n=kn(t,3,2),s=[ja(n[0]),ja(n[1]),ja(n[2])],r=[Dn(n[0]),Dn(n[1]),Dn(n[2])],a=await Promise.all(r.map(p=>p.data())),o=.99*Math.max(a[0][0],a[1][0],a[2][0]),i=[ge(n[0],s[0]),ge(n[1],s[1]),ge(n[2],s[2])],l=[ge(r[0],s[0]),ge(r[1],s[1]),ge(r[2],s[2])],u=[Ae(o,l[0]),Ae(o,l[1]),Ae(o,l[2])],c=[L(i[0],u[0]),L(i[1],u[1]),L(i[2],u[2])],h=Pn([c[0],c[1],c[2]],2),d=U(h,[1,t.shape[0],t.shape[1],3]);return le([...n,...s,...r,...i,...l,...u,...c,h,t]),d}var Mf=3840,hn=null,pn=null,Du=null,Ct,Ps={inputSum:0,cacheDiff:1,sumMethod:0,inputTensor:void 0};function Lw(){Ps.inputSum=0,Ps.cacheDiff=1,Ps.sumMethod=0,Ps.inputTensor=void 0}function Er(e,t){let n;if(ke.browser)if(ke.worker){if(typeof OffscreenCanvas>"u")throw new Error("canvas error: attempted to run in web worker but OffscreenCanvas is not supported");n=new OffscreenCanvas(e,t)}else{if(typeof document>"u")throw new Error("canvas error: attempted to run in browser but DOM is not defined");n=document.createElement("canvas"),n.width=e,n.height=t}else typeof ke.Canvas<"u"?n=new ke.Canvas(e,t):typeof globalThis.Canvas<"u"&&(n=new globalThis.Canvas(e,t));return n}function zf(e,t){let n=t||Er(e.width,e.height);return n.getContext("2d").drawImage(e,0,0),n}async function Gm(e,t,n=!0){var s,r;if(!e)return t.debug&&he("input error: input is missing"),{tensor:null,canvas:null};if(!(e instanceof et)&&!(typeof Image<"u"&&e instanceof Image)&&!(typeof ke.Canvas<"u"&&e instanceof ke.Canvas)&&!(typeof globalThis.Canvas<"u"&&e instanceof globalThis.Canvas)&&!(typeof ImageData<"u"&&e instanceof ImageData)&&!(typeof ImageBitmap<"u"&&e instanceof ImageBitmap)&&!(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement)&&!(typeof HTMLMediaElement<"u"&&e instanceof HTMLMediaElement)&&!(typeof HTMLVideoElement<"u"&&e instanceof HTMLVideoElement)&&!(typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement)&&!(typeof OffscreenCanvas<"u"&&e instanceof OffscreenCanvas))throw new Error("input error: type is not recognized");if(e instanceof et){let f=null;if(e.isDisposedInternal)throw new Error("input error: attempted to use tensor but it is disposed");if(!e.shape)throw new Error("input error: attempted to use tensor without a shape");if(e.shape.length===3){if(e.shape[2]===3)f=Jt(e,0);else if(e.shape[2]===4){let m=el(e,[0,0,0],[-1,-1,3]);f=Jt(m,0),le(m)}}else e.shape.length===4&&(e.shape[3]===3?f=Qn(e):e.shape[3]===4&&(f=tl(e,[0,0,0,0],[-1,-1,-1,3])));if(f==null||f.shape.length!==4||f.shape[0]!==1||f.shape[3]!==3)throw new Error(`input error: attempted to use tensor with unrecognized shape: ${e.shape.toString()}`);if(f.dtype==="int32"){let m=fe(f,"float32");le(f),f=m}return{tensor:f,canvas:t.filter.return?pn:null}}if(typeof e.readyState<"u"&&e.readyState<=2)return t.debug&&he("input stream is not ready"),{tensor:null,canvas:hn};let a=e.naturalWidth||e.videoWidth||e.width||e.shape&&e.shape[1]>0,o=e.naturalHeight||e.videoHeight||e.height||e.shape&&e.shape[2]>0;if(!a||!o)return t.debug&&he("cannot determine input dimensions"),{tensor:null,canvas:hn};let i=a,l=o;if(i>Mf&&(i=Mf,l=Math.trunc(i*o/a)),l>Mf&&(l=Mf,i=Math.trunc(l*a/o)),(((s=t.filter)==null?void 0:s.width)||0)>0?i=t.filter.width:(((r=t.filter)==null?void 0:r.height)||0)>0&&(i=a*((t.filter.height||0)/o)),(t.filter.height||0)>0?l=t.filter.height:(t.filter.width||0)>0&&(l=o*((t.filter.width||0)/a)),!i||!l)throw new Error("input error: cannot determine dimension");(!hn||hn.width!==i||hn.height!==l)&&(hn=Er(i,l));let u=hn.getContext("2d");if(typeof ImageData<"u"&&e instanceof ImageData?u.putImageData(e,0,0):t.filter.flip&&typeof u.translate<"u"?(u.translate(a,0),u.scale(-1,1),u.drawImage(e,0,0,a,o,0,0,hn.width,hn.height),u.setTransform(1,0,0,1,0,0)):u.drawImage(e,0,0,a,o,0,0,hn.width,hn.height),(!pn||hn.width!==pn.width||hn.height!==pn.height)&&(pn=Er(hn.width,hn.height)),t.filter.enabled&&ke.webgl.supported?(Ct||(Ct=ke.browser?new P2e:null),ke.filter=!!Ct,Ct?.add?(Ct.reset(),t.filter.brightness!==0&&Ct.add("brightness",t.filter.brightness),t.filter.contrast!==0&&Ct.add("contrast",t.filter.contrast),t.filter.sharpness!==0&&Ct.add("sharpen",t.filter.sharpness),t.filter.blur!==0&&Ct.add("blur",t.filter.blur),t.filter.saturation!==0&&Ct.add("saturation",t.filter.saturation),t.filter.hue!==0&&Ct.add("hue",t.filter.hue),t.filter.negative&&Ct.add("negative"),t.filter.sepia&&Ct.add("sepia"),t.filter.vintage&&Ct.add("brownie"),t.filter.sepia&&Ct.add("sepia"),t.filter.kodachrome&&Ct.add("kodachrome"),t.filter.technicolor&&Ct.add("technicolor"),t.filter.polaroid&&Ct.add("polaroid"),t.filter.pixelate!==0&&Ct.add("pixelate",t.filter.pixelate),Ct.get()>0?pn=Ct.apply(hn):pn=Ct.draw(hn)):(t.debug&&he("input process error: cannot initialize filters"),ke.webgl.supported=!1,t.filter.enabled=!1,zf(hn,pn))):(zf(hn,pn),Ct&&(Ct=null),ke.filter=!!Ct),!n)return{tensor:null,canvas:pn};if(!pn)throw new Error("canvas error: cannot create output");let c,h=3;if(typeof ImageData<"u"&&e instanceof ImageData||e.data&&e.width&&e.height)if(ke.browser&&Ar)c=Ar?Ar.fromPixels(e):null;else{h=e.data.length/e.height/e.width;let f=new Uint8Array(e.data.buffer);c=lt(f,[e.height,e.width,h],"int32")}else if((!Du||pn.width!==Du.width||pn.height!==Du.height)&&(Du=Er(pn.width,pn.height)),Ar&&ke.browser)t.backend==="webgl"||t.backend==="humangl"||t.backend==="webgpu"?c=Ar.fromPixels(pn):(Du=zf(pn),c=Ar.fromPixels(Du));else{let g=zf(pn).getContext("2d").getImageData(0,0,i,l);h=g.data.length/i/l;let y=new Uint8Array(g.data.buffer);c=lt(y,[i,l,h])}if(h===4){let f=el(c,[0,0,0],[-1,-1,3]);le(c),c=f}if(!c)throw new Error("input error: cannot create tensor");let d=fe(c,"float32"),p=t.filter.equalization?await FN(d):Jt(d,0);return le([c,d]),{tensor:p,canvas:t.filter.return?pn:null}}async function M2e(e,t){let n=!1;if(e.cacheSensitivity===0||!t.shape||t.shape.length!==4||t.shape[1]>2048||t.shape[2]>2048)return n;if(!Ps.inputTensor)Ps.inputTensor=Qn(t);else if(Ps.inputTensor.shape[1]!==t.shape[1]||Ps.inputTensor.shape[2]!==t.shape[2])le(Ps.inputTensor),Ps.inputTensor=Qn(t);else{let s={};s.diff=ge(t,Ps.inputTensor),s.squared=L(s.diff,s.diff),s.sum=Se(s.squared);let a=(await s.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;le([Ps.inputTensor,s.diff,s.squared,s.sum]),Ps.inputTensor=Qn(t),n=a<=(e.cacheSensitivity||0)}return n}async function z2e(e,t,n){let s={};if(!t||!n||t.shape.length!==4||t.shape.length!==n.shape.length)return e.debug||he("invalid input tensor or tensor shapes do not match:",t.shape,n.shape),0;if(t.shape[0]!==1||n.shape[0]!==1||t.shape[3]!==3||n.shape[3]!==3)return e.debug||he("input tensors must be of shape [1, height, width, 3]:",t.shape,n.shape),0;s.input1=Qn(t),s.input2=t.shape[1]!==n.shape[1]||t.shape[2]!==n.shape[2]?He.resizeBilinear(n,[t.shape[1],t.shape[2]]):Qn(n),s.diff=ge(s.input1,s.input2),s.squared=L(s.diff,s.diff),s.sum=Se(s.squared);let a=(await s.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;return le([s.input1,s.input2,s.diff,s.squared,s.sum]),a}var L2e=class{constructor(){if(me(this,"browser"),me(this,"node"),me(this,"worker"),me(this,"platform",""),me(this,"agent",""),me(this,"backends",[]),me(this,"initial"),me(this,"filter"),me(this,"tfjs"),me(this,"offscreen"),me(this,"perfadd",!1),me(this,"tensorflow",{version:void 0,gpu:void 0}),me(this,"wasm",{supported:void 0,backend:void 0,simd:void 0,multithread:void 0}),me(this,"webgl",{supported:void 0,backend:void 0,version:void 0,renderer:void 0}),me(this,"webgpu",{supported:void 0,backend:void 0,adapter:void 0}),me(this,"cpu",{model:void 0,flags:[]}),me(this,"kernels",[]),me(this,"Canvas"),me(this,"Image"),me(this,"ImageData"),this.browser=typeof navigator<"u",this.node=typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u",this.tfjs={version:yv["tfjs-core"]},this.offscreen=typeof OffscreenCanvas<"u",this.initial=!0,this.worker=this.browser&&this.offscreen?typeof WorkerGlobalScope<"u":void 0,typeof navigator<"u"){let e=navigator.userAgent.match(/\(([^()]+)\)/g);if(e?.[0]){let t=e[0].match(/\(([^()]+)\)/g);this.platform=t?.[0]?t[0].replace(/\(|\)/g,""):"",this.agent=navigator.userAgent.replace(e[0],""),this.platform[1]&&(this.agent=this.agent.replace(e[1],"")),this.agent=this.agent.replace(/  /g," ")}}else typeof process<"u"&&(this.platform=`${process.platform} ${process.arch}`,this.agent=`NodeJS ${process.version}`)}async updateBackend(){this.backends=Object.keys(bn().registryFactory),this.tensorflow={version:yr().binding?yr().binding.TF_Version:void 0,gpu:yr().binding?yr().binding.isUsingGpuDevice():void 0},this.wasm.supported=typeof WebAssembly<"u",this.wasm.backend=this.backends.includes("wasm"),this.wasm.supported&&this.wasm.backend&&vn()==="wasm"&&(this.wasm.simd=K().get("WASM_HAS_SIMD_SUPPORT"),this.wasm.multithread=K().get("WASM_HAS_MULTITHREAD_SUPPORT"));let e=Er(100,100),t=e?e.getContext("webgl2"):void 0;if(this.webgl.supported=typeof t<"u",this.webgl.backend=this.backends.includes("webgl"),this.webgl.supported&&this.webgl.backend&&(vn()==="webgl"||vn()==="humangl")){let n=yr().gpgpu!=="undefined"?await yr().getGPGPUContext().gl:null;n&&(this.webgl.version=n.getParameter(n.VERSION),this.webgl.renderer=n.getParameter(n.RENDERER))}this.webgpu.supported=this.browser&&typeof navigator.gpu<"u",this.webgpu.backend=this.backends.includes("webgpu");try{if(this.webgpu.supported){let n=await navigator.gpu.requestAdapter();this.webgpu.adapter=n?n.name:void 0}}catch{this.webgpu.supported=!1}try{this.kernels=Xi(vn()).map(n=>n.kernelName.toLowerCase())}catch{}}updateCPU(){let e={model:"",flags:[]};this.node&&this.platform.startsWith("linux"),this.cpu?this.cpu=e:Object.defineProperty(this,"cpu",{value:e})}},ke=new L2e,ON={};lo(ON,{age:()=>KN,"anti-spoofing":()=>CE,antispoof:()=>PN,blazeface:()=>MN,"blazeface-back":()=>ZN,"blazeface-front":()=>YN,"blazepose-detect":()=>IE,"blazepose-detector2d":()=>JN,"blazepose-detector3d":()=>QN,"blazepose-full":()=>eE,"blazepose-heavy":()=>tE,"blazepose-lite":()=>nE,default:()=>B2e,efficientpose:()=>sE,"efficientpose-i-lite":()=>TE,"efficientpose-ii-lite":()=>NE,"efficientpose-iv":()=>EE,emotion:()=>zN,faceboxes:()=>rE,facemesh:()=>LN,"facemesh-attention":()=>oE,"facemesh-attention-alt":()=>aE,"facemesh-detection-full":()=>iE,"facemesh-detection-short":()=>lE,"facemesh-orig":()=>uE,faceres:()=>BN,"faceres-deep":()=>cE,gear:()=>dE,gender:()=>pE,"gender-ssrnet-imdb":()=>hE,handdetect:()=>fE,"handlandmark-full":()=>WN,"handlandmark-lite":()=>mE,"handlandmark-sparse":()=>gE,handskeleton:()=>yE,handtrack:()=>VN,"insightface-efficientnet-b0":()=>_E,"insightface-ghostnet-strides1":()=>RE,"insightface-ghostnet-strides2":()=>$E,"insightface-mobilenet-emore":()=>DE,"insightface-mobilenet-swish":()=>FE,iris:()=>UN,liveness:()=>GN,"mb3-centernet":()=>HN,meet:()=>AE,mobileface:()=>xE,mobilefacenet:()=>bE,models:()=>jN,"movenet-lightning":()=>qN,"movenet-multipose":()=>vE,"movenet-thunder":()=>wE,nanodet:()=>kE,"nanodet-e":()=>OE,"nanodet-g":()=>PE,"nanodet-m":()=>ME,"nanodet-t":()=>zE,posenet:()=>SE,selfie:()=>XN});var PN=853098,MN=538928,zN=820516,LN=1477958,BN=6978814,WN=5431368,VN=2964837,UN=2599092,GN=592976,HN=4030290,jN=0,qN=4650216,XN=212886,KN=161240,ZN=538928,YN=402048,JN=7499400,QN=5928856,eE=6338290,tE=27501554,nE=2725490,sE=5651240,rE=2013002,aE=2387598,oE=2382414,iE=1026192,lE=201268,uE=2955780,cE=13957620,dE=1498916,hE=161236,pE=201808,fE=3515612,mE=2023432,gE=5286322,yE=5502280,AE=372228,xE=2183192,bE=5171976,vE=9448838,wE=12477112,kE=7574558,SE=5032780,IE=5928804,CE=853098,TE=2269064,NE=5651240,EE=25643252,_E=13013224,RE=8093408,$E=8049584,DE=6938536,FE=12168584,OE=12319156,PE=7574558,ME=1887474,zE=5294216,B2e={antispoof:PN,blazeface:MN,emotion:zN,facemesh:LN,faceres:BN,"handlandmark-full":WN,handtrack:VN,iris:UN,liveness:GN,"mb3-centernet":HN,models:jN,"movenet-lightning":qN,selfie:XN,age:KN,"blazeface-back":ZN,"blazeface-front":YN,"blazepose-detector2d":JN,"blazepose-detector3d":QN,"blazepose-full":eE,"blazepose-heavy":tE,"blazepose-lite":nE,efficientpose:sE,faceboxes:rE,"facemesh-attention-alt":aE,"facemesh-attention":oE,"facemesh-detection-full":iE,"facemesh-detection-short":lE,"facemesh-orig":uE,"faceres-deep":cE,gear:dE,"gender-ssrnet-imdb":hE,gender:pE,handdetect:fE,"handlandmark-lite":mE,"handlandmark-sparse":gE,handskeleton:yE,meet:AE,mobileface:xE,mobilefacenet:bE,"movenet-multipose":vE,"movenet-thunder":wE,nanodet:kE,posenet:SE,"blazepose-detect":IE,"anti-spoofing":CE,"efficientpose-i-lite":TE,"efficientpose-ii-lite":NE,"efficientpose-iv":EE,"insightface-efficientnet-b0":_E,"insightface-ghostnet-strides1":RE,"insightface-ghostnet-strides2":$E,"insightface-mobilenet-emore":DE,"insightface-mobilenet-swish":FE,"nanodet-e":OE,"nanodet-g":PE,"nanodet-m":ME,"nanodet-t":zE},LE={};lo(LE,{Models:()=>f9,getModelStats:()=>m9,load:()=>g9,reset:()=>wv,validate:()=>S2,validateModel:()=>Bg});var br,Ly=[],W2e=["white","black","asian","indian","other"],V2e=[15,23,28,35.5,45.5,55.5,65],Bw=0,Ww=0,By=Number.MAX_SAFE_INTEGER;async function U2e(e){var t;return ke.initial&&(br=null),br?e.debug&&he("cached model:",br.modelUrl):br=await Dt((t=e.face.gear)==null?void 0:t.modelPath),br}async function Vw(e,t,n,s){var r,a;if(!br)return{age:0,gender:"unknown",genderScore:0,race:[]};let o=By<(((r=t.face.gear)==null?void 0:r.skipFrames)||0),i=(((a=t.face.gear)==null?void 0:a.skipTime)||0)>pe()-Ww;return t.skipAllowed&&i&&o&&Bw===s&&Ly[n]?(By++,Ly[n]):(By=0,new Promise(async l=>{var u,c;if(!br?.inputs[0].shape)return;let h={},d=[[0,.1,.9,.9]];h.resize=He.cropAndResize(e,d,[0],[br.inputs[0].shape[2],br.inputs[0].shape[1]]);let p={age:0,gender:"unknown",genderScore:0,race:[]};(u=t.face.gear)!=null&&u.enabled&&([h.age,h.gender,h.race]=br.execute(h.resize,["age_output","gender_output","race_output"]));let f=await h.gender.data();p.gender=f[0]>f[1]?"male":"female",p.genderScore=Math.round(100*(f[0]>f[1]?f[0]:f[1]))/100;let m=await h.race.data();for(let A=0;A<m.length;A++)m[A]>(((c=t.face.gear)==null?void 0:c.minConfidence)||.2)&&p.race.push({score:Math.round(100*m[A])/100,race:W2e[A]});p.race.sort((A,b)=>b.score-A.score);let y=Array.from(await h.age.data()).map((A,b)=>[V2e[b],A]).sort((A,b)=>b[1]-A[1]),x=y[0][0];for(let A=1;A<y.length;A++)x+=y[A][1]*(y[A][0]-x);p.age=Math.round(10*x)/10,Object.keys(h).forEach(A=>le(h[A])),Ly[n]=p,Bw=s,Ww=pe(),l(p)}))}var kt={tf255:255,tf1:1,tf2:2,tf05:.5,tf127:127.5,rgb:[.2989,.587,.114]};function G2e(){kt.tf255=Ee(255,"float32"),kt.tf1=Ee(1,"float32"),kt.tf2=Ee(2,"float32"),kt.tf05=Ee(.5,"float32"),kt.tf127=Ee(127.5,"float32"),kt.rgb=qt([.2989,.587,.114],"float32")}var Ls,Lf=[],Uw=0,Gw=0,Wy=Number.MAX_SAFE_INTEGER;async function H2e(e){return ke.initial&&(Ls=null),Ls?e.debug&&he("cached model:",Ls.modelUrl):Ls=await Dt(e.face.ssrnet.modelPathAge),Ls}async function Hw(e,t,n,s){var r,a,o,i;if(!Ls)return{age:0};let l=Wy<(((r=t.face.ssrnet)==null?void 0:r.skipFrames)||0),u=(((a=t.face.ssrnet)==null?void 0:a.skipTime)||0)>pe()-Gw;return t.skipAllowed&&l&&u&&Uw===s&&((o=Lf[n])==null?void 0:o.age)&&((i=Lf[n])==null?void 0:i.age)>0?(Wy++,Lf[n]):(Wy=0,new Promise(async c=>{var h;if(!Ls?.inputs||!Ls.inputs[0]||!Ls.inputs[0].shape)return;let d={};d.resize=He.resizeBilinear(e,[Ls.inputs[0].shape[2],Ls.inputs[0].shape[1]],!1),d.enhance=L(d.resize,kt.tf255);let p={age:0};if((h=t.face.ssrnet)!=null&&h.enabled&&(d.age=Ls.execute(d.enhance)),d.age){let f=await d.age.data();p.age=Math.trunc(10*f[0])/10}Object.keys(d).forEach(f=>le(d[f])),Lf[n]=p,Uw=s,Gw=pe(),c(p)}))}var vr,Bf=[],jw=0,qw=0,Vy=Number.MAX_SAFE_INTEGER,Uy=[.2989,.587,.114];async function j2e(e){var t;return ke.initial&&(vr=null),vr?e.debug&&he("cached model:",vr.modelUrl):vr=await Dt((t=e.face.ssrnet)==null?void 0:t.modelPathGender),vr}async function Xw(e,t,n,s){var r,a,o,i;if(!vr)return{gender:"unknown",genderScore:0};let l=Vy<(((r=t.face.ssrnet)==null?void 0:r.skipFrames)||0),u=(((a=t.face.ssrnet)==null?void 0:a.skipTime)||0)>pe()-qw;return t.skipAllowed&&l&&u&&jw===s&&((o=Bf[n])==null?void 0:o.gender)&&((i=Bf[n])==null?void 0:i.genderScore)>0?(Vy++,Bf[n]):(Vy=0,new Promise(async c=>{var h;if(!vr?.inputs[0].shape)return;let d={};d.resize=He.resizeBilinear(e,[vr.inputs[0].shape[2],vr.inputs[0].shape[1]],!1),d.enhance=Y(()=>{let[m,g,y]=kn(d.resize,3,3),x=L(m,Uy[0]),A=L(g,Uy[1]),b=L(y,Uy[2]),w=ex([x,A,b]);return L(ge(w,kt.tf05),2)});let p={gender:"unknown",genderScore:0};(h=t.face.ssrnet)!=null&&h.enabled&&(d.gender=vr.execute(d.enhance));let f=await d.gender.data();p.gender=f[0]>f[1]?"female":"male",p.genderScore=f[0]>f[1]?Math.trunc(100*f[0])/100:Math.trunc(100*f[1])/100,Object.keys(d).forEach(m=>le(d[m])),Bf[n]=p,jw=s,qw=pe(),c(p)}))}var qn,Wf=[],Gy=Number.MAX_SAFE_INTEGER,Kw=0,Zw=0;async function q2e(e){var t;return ke.initial&&(qn=null),qn?e.debug&&he("cached model:",qn.modelUrl):qn=await Dt((t=e.face.antispoof)==null?void 0:t.modelPath),qn}async function Yw(e,t,n,s){var r,a;if(!qn||!qn?.executor)return 0;let o=(((r=t.face.antispoof)==null?void 0:r.skipTime)||0)>pe()-Zw,i=Gy<(((a=t.face.antispoof)==null?void 0:a.skipFrames)||0);return t.skipAllowed&&o&&i&&Kw===s&&Wf[n]?(Gy++,Wf[n]):(Gy=0,new Promise(async l=>{let u=He.resizeBilinear(e,[qn?.inputs[0].shape?qn.inputs[0].shape[2]:0,qn?.inputs[0].shape?qn.inputs[0].shape[1]:0],!1),c=qn?.execute(u),h=(await c.data())[0];Wf[n]=Math.round(100*h)/100,Kw=s,Zw=pe(),le([u,c]),l(Wf[n])}))}var ba={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[185,40,39,37,0,267,269,270,409],lipsLowerOuter:[61,146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[191,80,81,82,13,312,311,310,415],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],lipsLowerSemiOuter:[76,77,90,180,85,16,315,404,320,307,306],lipsUpperSemiOuter:[184,74,73,72,11,302,303,304,408],lipsLowerSemiInner:[62,96,89,179,86,15,316,403,319,325,292],lipsUpperSemiInner:[183,42,41,38,12,268,271,272,407],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]},Jw={count:468,mouth:13,symmetryLine:[13,ba.midwayBetweenEyes[0]]},qd={leftEye:0,rightEye:1,nose:2,mouth:3,leftEar:4,rightEar:5,symmetryLine:[3,2]},Qw=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]},{key:"EyebrowUpper",indices:[63,64,65,66,67,68,69,70]},{key:"EyebrowLower",indices:[48,49,50,51,52,53]}],Mg=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]],Xd=[127,34,139,11,0,37,232,231,120,72,37,39,128,121,47,232,121,128,104,69,67,175,171,148,157,154,155,118,50,101,73,39,40,9,151,108,48,115,131,194,204,211,74,40,185,80,42,183,40,92,186,230,229,118,202,212,214,83,18,17,76,61,146,160,29,30,56,157,173,106,204,194,135,214,192,203,165,98,21,71,68,51,45,4,144,24,23,77,146,91,205,50,187,201,200,18,91,106,182,90,91,181,85,84,17,206,203,36,148,171,140,92,40,39,193,189,244,159,158,28,247,246,161,236,3,196,54,68,104,193,168,8,117,228,31,189,193,55,98,97,99,126,47,100,166,79,218,155,154,26,209,49,131,135,136,150,47,126,217,223,52,53,45,51,134,211,170,140,67,69,108,43,106,91,230,119,120,226,130,247,63,53,52,238,20,242,46,70,156,78,62,96,46,53,63,143,34,227,173,155,133,123,117,111,44,125,19,236,134,51,216,206,205,154,153,22,39,37,167,200,201,208,36,142,100,57,212,202,20,60,99,28,158,157,35,226,113,160,159,27,204,202,210,113,225,46,43,202,204,62,76,77,137,123,116,41,38,72,203,129,142,64,98,240,49,102,64,41,73,74,212,216,207,42,74,184,169,170,211,170,149,176,105,66,69,122,6,168,123,147,187,96,77,90,65,55,107,89,90,180,101,100,120,63,105,104,93,137,227,15,86,85,129,102,49,14,87,86,55,8,9,100,47,121,145,23,22,88,89,179,6,122,196,88,95,96,138,172,136,215,58,172,115,48,219,42,80,81,195,3,51,43,146,61,171,175,199,81,82,38,53,46,225,144,163,110,246,33,7,52,65,66,229,228,117,34,127,234,107,108,69,109,108,151,48,64,235,62,78,191,129,209,126,111,35,143,163,161,246,117,123,50,222,65,52,19,125,141,221,55,65,3,195,197,25,7,33,220,237,44,70,71,139,122,193,245,247,130,33,71,21,162,153,158,159,170,169,150,188,174,196,216,186,92,144,160,161,2,97,167,141,125,241,164,167,37,72,38,12,145,159,160,38,82,13,63,68,71,226,35,111,158,153,154,101,50,205,206,92,165,209,198,217,165,167,97,220,115,218,133,112,243,239,238,241,214,135,169,190,173,133,171,208,32,125,44,237,86,87,178,85,86,179,84,85,180,83,84,181,201,83,182,137,93,132,76,62,183,61,76,184,57,61,185,212,57,186,214,207,187,34,143,156,79,239,237,123,137,177,44,1,4,201,194,32,64,102,129,213,215,138,59,166,219,242,99,97,2,94,141,75,59,235,24,110,228,25,130,226,23,24,229,22,23,230,26,22,231,112,26,232,189,190,243,221,56,190,28,56,221,27,28,222,29,27,223,30,29,224,247,30,225,238,79,20,166,59,75,60,75,240,147,177,215,20,79,166,187,147,213,112,233,244,233,128,245,128,114,188,114,217,174,131,115,220,217,198,236,198,131,134,177,132,58,143,35,124,110,163,7,228,110,25,356,389,368,11,302,267,452,350,349,302,303,269,357,343,277,452,453,357,333,332,297,175,152,377,384,398,382,347,348,330,303,304,270,9,336,337,278,279,360,418,262,431,304,408,409,310,415,407,270,409,410,450,348,347,422,430,434,313,314,17,306,307,375,387,388,260,286,414,398,335,406,418,364,367,416,423,358,327,251,284,298,281,5,4,373,374,253,307,320,321,425,427,411,421,313,18,321,405,406,320,404,405,315,16,17,426,425,266,377,400,369,322,391,269,417,465,464,386,257,258,466,260,388,456,399,419,284,332,333,417,285,8,346,340,261,413,441,285,327,460,328,355,371,329,392,439,438,382,341,256,429,420,360,364,394,379,277,343,437,443,444,283,275,440,363,431,262,369,297,338,337,273,375,321,450,451,349,446,342,467,293,334,282,458,461,462,276,353,383,308,324,325,276,300,293,372,345,447,382,398,362,352,345,340,274,1,19,456,248,281,436,427,425,381,256,252,269,391,393,200,199,428,266,330,329,287,273,422,250,462,328,258,286,384,265,353,342,387,259,257,424,431,430,342,353,276,273,335,424,292,325,307,366,447,345,271,303,302,423,266,371,294,455,460,279,278,294,271,272,304,432,434,427,272,407,408,394,430,431,395,369,400,334,333,299,351,417,168,352,280,411,325,319,320,295,296,336,319,403,404,330,348,349,293,298,333,323,454,447,15,16,315,358,429,279,14,15,316,285,336,9,329,349,350,374,380,252,318,402,403,6,197,419,318,319,325,367,364,365,435,367,397,344,438,439,272,271,311,195,5,281,273,287,291,396,428,199,311,271,268,283,444,445,373,254,339,263,466,249,282,334,296,449,347,346,264,447,454,336,296,299,338,10,151,278,439,455,292,407,415,358,371,355,340,345,372,390,249,466,346,347,280,442,443,282,19,94,370,441,442,295,248,419,197,263,255,359,440,275,274,300,383,368,351,412,465,263,467,466,301,368,389,380,374,386,395,378,379,412,351,419,436,426,322,373,390,388,2,164,393,370,462,461,164,0,267,302,11,12,374,373,387,268,12,13,293,300,301,446,261,340,385,384,381,330,266,425,426,423,391,429,355,437,391,327,326,440,457,438,341,382,362,459,457,461,434,430,394,414,463,362,396,369,262,354,461,457,316,403,402,315,404,403,314,405,404,313,406,405,421,418,406,366,401,361,306,408,407,291,409,408,287,410,409,432,436,410,434,416,411,264,368,383,309,438,457,352,376,401,274,275,4,421,428,262,294,327,358,433,416,367,289,455,439,462,370,326,2,326,370,305,460,455,254,449,448,255,261,446,253,450,449,252,451,450,256,452,451,341,453,452,413,464,463,441,413,414,258,442,441,257,443,442,259,444,443,260,445,444,467,342,445,459,458,250,289,392,290,290,328,460,376,433,435,250,290,392,411,416,433,341,463,464,453,464,465,357,465,412,343,412,399,360,363,440,437,399,456,420,456,363,401,435,288,372,383,353,339,255,249,448,261,255,133,243,190,133,155,112,33,246,247,33,130,25,398,384,286,362,398,414,362,463,341,263,359,467,263,249,255,466,467,260,75,60,166,238,239,79,162,127,139,72,11,37,121,232,120,73,72,39,114,128,47,233,232,128,103,104,67,152,175,148,173,157,155,119,118,101,74,73,40,107,9,108,49,48,131,32,194,211,184,74,185,191,80,183,185,40,186,119,230,118,210,202,214,84,83,17,77,76,146,161,160,30,190,56,173,182,106,194,138,135,192,129,203,98,54,21,68,5,51,4,145,144,23,90,77,91,207,205,187,83,201,18,181,91,182,180,90,181,16,85,17,205,206,36,176,148,140,165,92,39,245,193,244,27,159,28,30,247,161,174,236,196,103,54,104,55,193,8,111,117,31,221,189,55,240,98,99,142,126,100,219,166,218,112,155,26,198,209,131,169,135,150,114,47,217,224,223,53,220,45,134,32,211,140,109,67,108,146,43,91,231,230,120,113,226,247,105,63,52,241,238,242,124,46,156,95,78,96,70,46,63,116,143,227,116,123,111,1,44,19,3,236,51,207,216,205,26,154,22,165,39,167,199,200,208,101,36,100,43,57,202,242,20,99,56,28,157,124,35,113,29,160,27,211,204,210,124,113,46,106,43,204,96,62,77,227,137,116,73,41,72,36,203,142,235,64,240,48,49,64,42,41,74,214,212,207,183,42,184,210,169,211,140,170,176,104,105,69,193,122,168,50,123,187,89,96,90,66,65,107,179,89,180,119,101,120,68,63,104,234,93,227,16,15,85,209,129,49,15,14,86,107,55,9,120,100,121,153,145,22,178,88,179,197,6,196,89,88,96,135,138,136,138,215,172,218,115,219,41,42,81,5,195,51,57,43,61,208,171,199,41,81,38,224,53,225,24,144,110,105,52,66,118,229,117,227,34,234,66,107,69,10,109,151,219,48,235,183,62,191,142,129,126,116,111,143,7,163,246,118,117,50,223,222,52,94,19,141,222,221,65,196,3,197,45,220,44,156,70,139,188,122,245,139,71,162,145,153,159,149,170,150,122,188,196,206,216,92,163,144,161,164,2,167,242,141,241,0,164,37,11,72,12,144,145,160,12,38,13,70,63,71,31,226,111,157,158,154,36,101,205,203,206,165,126,209,217,98,165,97,237,220,218,237,239,241,210,214,169,140,171,32,241,125,237,179,86,178,180,85,179,181,84,180,182,83,181,194,201,182,177,137,132,184,76,183,185,61,184,186,57,185,216,212,186,192,214,187,139,34,156,218,79,237,147,123,177,45,44,4,208,201,32,98,64,129,192,213,138,235,59,219,141,242,97,97,2,141,240,75,235,229,24,228,31,25,226,230,23,229,231,22,230,232,26,231,233,112,232,244,189,243,189,221,190,222,28,221,223,27,222,224,29,223,225,30,224,113,247,225,99,60,240,213,147,215,60,20,166,192,187,213,243,112,244,244,233,245,245,128,188,188,114,174,134,131,220,174,217,236,236,198,134,215,177,58,156,143,124,25,110,7,31,228,25,264,356,368,0,11,267,451,452,349,267,302,269,350,357,277,350,452,357,299,333,297,396,175,377,381,384,382,280,347,330,269,303,270,151,9,337,344,278,360,424,418,431,270,304,409,272,310,407,322,270,410,449,450,347,432,422,434,18,313,17,291,306,375,259,387,260,424,335,418,434,364,416,391,423,327,301,251,298,275,281,4,254,373,253,375,307,321,280,425,411,200,421,18,335,321,406,321,320,405,314,315,17,423,426,266,396,377,369,270,322,269,413,417,464,385,386,258,248,456,419,298,284,333,168,417,8,448,346,261,417,413,285,326,327,328,277,355,329,309,392,438,381,382,256,279,429,360,365,364,379,355,277,437,282,443,283,281,275,363,395,431,369,299,297,337,335,273,321,348,450,349,359,446,467,283,293,282,250,458,462,300,276,383,292,308,325,283,276,293,264,372,447,346,352,340,354,274,19,363,456,281,426,436,425,380,381,252,267,269,393,421,200,428,371,266,329,432,287,422,290,250,328,385,258,384,446,265,342,386,387,257,422,424,430,445,342,276,422,273,424,306,292,307,352,366,345,268,271,302,358,423,371,327,294,460,331,279,294,303,271,304,436,432,427,304,272,408,395,394,431,378,395,400,296,334,299,6,351,168,376,352,411,307,325,320,285,295,336,320,319,404,329,330,349,334,293,333,366,323,447,316,15,315,331,358,279,317,14,316,8,285,9,277,329,350,253,374,252,319,318,403,351,6,419,324,318,325,397,367,365,288,435,397,278,344,439,310,272,311,248,195,281,375,273,291,175,396,199,312,311,268,276,283,445,390,373,339,295,282,296,448,449,346,356,264,454,337,336,299,337,338,151,294,278,455,308,292,415,429,358,355,265,340,372,388,390,466,352,346,280,295,442,282,354,19,370,285,441,295,195,248,197,457,440,274,301,300,368,417,351,465,251,301,389,385,380,386,394,395,379,399,412,419,410,436,322,387,373,388,326,2,393,354,370,461,393,164,267,268,302,12,386,374,387,312,268,13,298,293,301,265,446,340,380,385,381,280,330,425,322,426,391,420,429,437,393,391,326,344,440,438,458,459,461,364,434,394,428,396,262,274,354,457,317,316,402,316,315,403,315,314,404,314,313,405,313,421,406,323,366,361,292,306,407,306,291,408,291,287,409,287,432,410,427,434,411,372,264,383,459,309,457,366,352,401,1,274,4,418,421,262,331,294,358,435,433,367,392,289,439,328,462,326,94,2,370,289,305,455,339,254,448,359,255,446,254,253,449,253,252,450,252,256,451,256,341,452,414,413,463,286,441,414,286,258,441,258,257,442,257,259,443,259,260,444,260,467,445,309,459,250,305,289,290,305,290,460,401,376,435,309,250,392,376,411,433,453,341,464,357,453,465,343,357,412,437,343,399,344,360,440,420,437,456,360,420,363,361,401,288,265,372,353,390,339,249,339,448,255],X2e=[127,234,132,58,172,150,149,148,152,377,378,379,397,288,361,454,356,70,63,105,66,107,336,296,334,293,300,168,6,195,4,98,97,2,326,327,33,160,158,133,153,144,362,385,387,263,373,380,57,40,37,0,267,270,287,321,314,17,84,91,78,81,13,311,308,402,14,178],K2e=[33,133,362,263,1,62,308,159,145,386,374,6,102,331,2,13,14,70,105,107,336,334,300,54,10,284,50,280,234,454,58,288,152],Z2e=[33,133,362,263,1,78,308],B5e=X2e.map(e=>Mg[e]),W5e=K2e.map(e=>Mg[e]),V5e=Z2e.map(e=>Mg[e]);function Fa(e){let t=e.map(n=>n[0]);return t.push(e[e.length-1][1]),t}var Y2e=[[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]],J2e=[[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]],Q2e=[[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]],exe=[[474,475],[475,476],[476,477],[477,474]],txe=[[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]],nxe=[[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]],sxe=[[469,470],[470,471],[471,472],[472,469]],rxe=[[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]],U5e={lips:Fa(Y2e),leftEye:Fa(J2e),leftEyebrow:Fa(Q2e),leftIris:Fa(exe),rightEye:Fa(txe),rightEyebrow:Fa(nxe),rightIris:Fa(sxe),faceOval:Fa(rxe)},Pp=e=>[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])],zg=e=>[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2,1],Hy=(e,t)=>e?[Math.trunc(Math.max(0,e.startPoint[0])),Math.trunc(Math.max(0,e.startPoint[1])),Math.trunc(Math.min(t.shape[2]||0,e.endPoint[0])-Math.max(0,e.startPoint[0])),Math.trunc(Math.min(t.shape[1]||0,e.endPoint[1])-Math.max(0,e.startPoint[1]))]:[0,0,0,0],jy=(e,t)=>e?[e.startPoint[0]/(t.shape[2]||0),e.startPoint[1]/(t.shape[1]||0),(e.endPoint[0]-e.startPoint[0])/(t.shape[2]||0),(e.endPoint[1]-e.startPoint[1])/(t.shape[1]||0)]:[0,0,0,0],axe=(e,t)=>{let n=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],s=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]];return{startPoint:n,endPoint:s,landmarks:e.landmarks,confidence:e.confidence}},qy=(e,t,n)=>{let s=t.shape[1],r=t.shape[2],a=[e.startPoint[1]/s,e.startPoint[0]/r,e.endPoint[1]/s,e.endPoint[0]/r],o=He.cropAndResize(t,[a],[0],n),i=Ae(o,kt.tf255);return le(o),i},BE=(e,t)=>{let n=zg(e),s=Pp(e),r=[t*s[0]/2,t*s[1]/2];return{startPoint:[n[0]-r[0],n[1]-r[1]],endPoint:[n[0]+r[0],n[1]+r[1]],landmarks:e.landmarks,confidence:e.confidence}},WE=e=>{let t=zg(e),n=Pp(e),s=Math.max(...n)/2;return{startPoint:[Math.round(t[0]-s),Math.round(t[1]-s)],endPoint:[Math.round(t[0]+s),Math.round(t[1]+s)],landmarks:e.landmarks,confidence:e.confidence}},oxe=e=>{let t=e.map(s=>s[0]),n=e.map(s=>s[1]);return{startPoint:[Math.min(...t),Math.min(...n)],endPoint:[Math.max(...t),Math.max(...n)],landmarks:e}},b2=[[1,0,0],[0,1,0],[0,0,1]],ixe=e=>e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI)),lxe=(e,t)=>ixe(Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0])),ek=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]],ll=(e,t)=>{let n=0;for(let s=0;s<e.length;s++)n+=e[s]*t[s];return n},uxe=(e,t)=>{let n=[];for(let s=0;s<e.length;s++)n.push(e[s][t]);return n},tk=(e,t)=>{let n=[],s=e.length;for(let r=0;r<s;r++){n.push([]);for(let a=0;a<s;a++)n[r].push(ll(e[r],uxe(t,a)))}return n},VE=(e,t)=>{let n=Math.cos(e),s=Math.sin(e),r=[[n,-s,0],[s,n,0],[0,0,1]],a=ek(t[0],t[1]),o=tk(a,r),i=ek(-t[0],-t[1]);return tk(o,i)},cxe=e=>{let t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],s=[-ll(t[0],n),-ll(t[1],n)];return[t[0].concat(s[0]),t[1].concat(s[1]),[0,0,1]]},dxe=(e,t)=>[ll(e,t[0]),ll(e,t[1])];function hxe(e){let t=e===192?{strides:[4],anchors:[1]}:{strides:[e/16,e/8],anchors:[2,6]},n=[];for(let s=0;s<t.strides.length;s++){let r=t.strides[s],a=Math.floor((e+r-1)/r),o=Math.floor((e+r-1)/r),i=t.anchors[s];for(let l=0;l<a;l++){let u=r*(l+.5);for(let c=0;c<o;c++){let h=r*(c+.5);for(let d=0;d<i;d++)n.push([h,u])}}}return n}function pxe(e,t,n,s,r){let a=Pp(t),o=e.map(p=>[a[0]/r*(p[0]-r/2),a[1]/r*(p[1]-r/2),p[2]||0]),i=n&&n!==0&&Math.abs(n)>.2,l=i?VE(n,[0,0]):b2,u=i?o.map(p=>[...dxe(p,l),p[2]]):o,c=i?cxe(s):b2,h=zg(t),d=[ll(h,c[0]),ll(h,c[1])];return u.map(p=>[Math.trunc(p[0]+d[0]),Math.trunc(p[1]+d[1]),Math.trunc(p[2]||0)])}function fxe(e,t,n,s){let r=t.landmarks.length>=Jw.count?Jw.symmetryLine:qd.symmetryLine,a=0,o=b2,i;if(e&&ke.kernels.includes("rotatewithoffset"))if(a=lxe(t.landmarks[r[0]],t.landmarks[r[1]]),a&&a!==0&&Math.abs(a)>.2){let u=zg(t),c=[u[0]/n.shape[2],u[1]/n.shape[1]],h=He.rotateWithOffset(n,a,0,c);o=VE(-a,u),i=qy(t,h,[s,s]),le(h)}else i=qy(t,n,[s,s]);else i=qy(t,n,[s,s]);return[a,o,i]}var mxe=e=>{let t=e.map(s=>s[0]),n=e.map(s=>s[1]);return[Math.min(...t)+(Math.max(...t)-Math.min(...t))/2,Math.min(...n)+(Math.max(...n)-Math.min(...n))/2]},gxe=(e,t)=>{let n=mxe(e),s=Pp(t);return{startPoint:[n[0]-s[0]/2,n[1]-s[1]/2],endPoint:[n[0]+s[0]/2,n[1]+s[1]/2]}},nk=6,yxe=1.4,Wr,UE=null,Ua=0,Kd=null,Od=()=>Ua;async function Axe(e){var t;return ke.initial&&(Wr=null),Wr?e.debug&&he("cached model:",Wr.modelUrl):Wr=await Dt((t=e.face.detector)==null?void 0:t.modelPath),Ua=Wr.executor&&Wr.inputs[0].shape?Wr.inputs[0].shape[2]:256,Kd=Ee(Ua,"int32"),UE=Kr(hxe(Ua)),Wr}function xxe(e){let t={};t.boxStarts=ze(e,[0,1],[-1,2]),t.centers=ce(t.boxStarts,UE),t.boxSizes=ze(e,[0,3],[-1,2]),t.boxSizesNormalized=Ae(t.boxSizes,Kd),t.centersNormalized=Ae(t.centers,Kd),t.halfBoxSize=Ae(t.boxSizesNormalized,kt.tf2),t.starts=ge(t.centersNormalized,t.halfBoxSize),t.ends=ce(t.centersNormalized,t.halfBoxSize),t.startNormalized=L(t.starts,Kd),t.endNormalized=L(t.ends,Kd);let n=tp([t.startNormalized,t.endNormalized],1);return Object.keys(t).forEach(s=>le(t[s])),n}async function bxe(e,t){var n,s,r,a;if(!e||e.isDisposedInternal||e.shape.length!==4||e.shape[1]<1||e.shape[2]<1)return[];let o={};o.resized=He.resizeBilinear(e,[Ua,Ua]),o.div=Ae(o.resized,kt.tf127),o.normalized=ge(o.div,kt.tf05);let i=Wr?.execute(o.normalized);if(Array.isArray(i)&&i.length>2){let h=i.sort((d,p)=>d.size-p.size);o.concat384=Et([h[0],h[2]],2),o.concat512=Et([h[1],h[3]],2),o.concat=Et([o.concat512,o.concat384],1),o.batch=mt(o.concat,0)}else Array.isArray(i)?o.batch=mt(i[0]):o.batch=mt(i);le(i),o.boxes=xxe(o.batch),o.logits=ze(o.batch,[0,0],[-1,1]),o.sigmoid=Ts(o.logits),o.scores=mt(o.sigmoid),o.nms=await He.nonMaxSuppressionAsync(o.boxes,o.scores,((n=t.face.detector)==null?void 0:n.maxDetected)||0,((s=t.face.detector)==null?void 0:s.iouThreshold)||0,((r=t.face.detector)==null?void 0:r.minConfidence)||0);let l=await o.nms.array(),u=[],c=await o.scores.data();for(let h=0;h<l.length;h++){let d=c[l[h]];if(d>(((a=t.face.detector)==null?void 0:a.minConfidence)||0)){let p={};p.bbox=ze(o.boxes,[l[h],0],[1,-1]),p.slice=ze(o.batch,[l[h],nk-1],[1,-1]),p.squeeze=mt(p.slice),p.landmarks=U(p.squeeze,[nk,-1]);let f=await p.bbox.data(),m={startPoint:[f[0],f[1]],endPoint:[f[2],f[3]],landmarks:await p.landmarks.array(),confidence:d},g=axe(m,[(e.shape[2]||0)/Ua,(e.shape[1]||0)/Ua]),y=BE(g,t.face.scale||yxe),x=WE(y);u.push(x),Object.keys(p).forEach(A=>le(p[A]))}}return Object.keys(o).forEach(h=>le(o[h])),u}var GE={};lo(GE,{connected:()=>jE,kpt:()=>HE});var HE=["nose","leftEyeInside","leftEye","leftEyeOutside","rightEyeInside","rightEye","rightEyeOutside","leftEar","rightEar","leftMouth","rightMouth","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftPinky","rightPinky","leftIndex","rightIndex","leftThumb","rightThumb","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle","leftHeel","rightHeel","leftFoot","rightFoot","bodyCenter","bodyTop","leftPalm","leftHand","rightPalm","rightHand"],jE={shoulders:["leftShoulder","rightShoulder"],hips:["rightHip","leftHip"],mouth:["leftMouth","rightMouth"],leftLegUpper:["leftHip","leftKnee"],leftLegLower:["leftKnee","leftAnkle"],leftFoot:["leftAnkle","leftHeel","leftFoot"],leftTorso:["leftShoulder","leftHip"],leftArmUpper:["leftShoulder","leftElbow"],leftArmLower:["leftElbow","leftWrist"],leftHand:["leftWrist","leftPalm"],leftHandPinky:["leftPalm","leftPinky"],leftHandIndex:["leftPalm","leftIndex"],leftHandThumb:["leftPalm","leftThumb"],leftEyeOutline:["leftEyeInside","leftEyeOutside"],rightLegUpper:["rightHip","rightKnee"],rightLegLower:["rightKnee","rightAnkle"],rightFoot:["rightAnkle","rightHeel","rightFoot"],rightTorso:["rightShoulder","rightHip"],rightArmUpper:["rightShoulder","rightElbow"],rightArmLower:["rightElbow","rightWrist"],rightHand:["rightWrist","rightPalm"],rightHandPinky:["rightPalm","rightPinky"],rightHandIndex:["rightPalm","rightIndex"],rightHandThumb:["rightPalm","rightThumb"],rightEyeOutline:["rightEyeInside","rightEyeOutside"]},sk=224,vxe,wxe=5,Vf=[8,16,32,32,32];function kxe(){let e=[],t=0;for(;t<wxe;){let n=0,s=t;for(;s<Vf.length&&Vf[s]===Vf[t];)n+=2,s++;let r=Vf[t],a=Math.ceil(sk/r),o=Math.ceil(sk/r);for(let i=0;i<a;++i)for(let l=0;l<o;++l)for(let u=0;u<n;++u)e.push({x:(l+.5)/o,y:(i+.5)/a});t=s}vxe={x:qt(e.map(n=>n.x)),y:qt(e.map(n=>n.y))}}function Mp(e,t=[1,1]){let n=[e.map(i=>i[0]),e.map(i=>i[1])],s=[Math.min(...n[0]),Math.min(...n[1])],r=[Math.max(...n[0]),Math.max(...n[1])],a=[s[0],s[1],r[0]-s[0],r[1]-s[1]],o=[a[0]/t[0],a[1]/t[1],a[2]/t[0],a[3]/t[1]];return{box:a,boxRaw:o}}function Sxe(e,t=[1,1]){let n=[e.map(u=>u[0]),e.map(u=>u[1])],s=[Math.min(...n[0]),Math.min(...n[1])],r=[Math.max(...n[0]),Math.max(...n[1])],a=[(s[0]+r[0])/2,(s[1]+r[1])/2],o=Math.max(a[0]-s[0],a[1]-s[1],-a[0]+r[0],-a[1]+r[1]),i=[Math.trunc(a[0]-o),Math.trunc(a[1]-o),Math.trunc(2*o),Math.trunc(2*o)],l=[i[0]/t[0],i[1]/t[1],i[2]/t[0],i[3]/t[1]];return{box:i,boxRaw:l}}function v2(e,t){let n=[e[2]*t,e[3]*t];return[e[0]-(n[0]-e[2])/2,e[1]-(n[1]-e[3])/2,n[0],n[1]]}var qE={initial:!0},Rn={detector:null,landmarks:null},dc={detector:[224,224],landmarks:[256,256]},Xy=Number.MAX_SAFE_INTEGER,Ixe={landmarks:["ld_3d","activation_segmentation","activation_heatmap","world_3d","output_poseflag"],detector:[]},Uf=null,oh,za=[[0,0],[0,0],[0,0],[0,0]],rk=0,ak=e=>1-1/(1+Math.exp(e));async function Cxe(e){var t;if(qE.initial&&(Rn.detector=null),!Rn.detector&&e.body.detector&&e.body.detector.modelPath){Rn.detector=await Dt(e.body.detector.modelPath);let n=(t=Rn.detector)!=null&&t.executor?Object.values(Rn.detector.modelSignature.inputs):void 0;dc.detector[0]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[1].size):0,dc.detector[1]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[2].size):0}else e.debug&&Rn.detector&&he("cached model:",Rn.detector.modelUrl);return kxe(),Rn.detector}async function Txe(e){var t;if(qE.initial&&(Rn.landmarks=null),Rn.landmarks)e.debug&&he("cached model:",Rn.landmarks.modelUrl);else{Rn.landmarks=await Dt(e.body.modelPath);let n=(t=Rn.landmarks)!=null&&t.executor?Object.values(Rn.landmarks.modelSignature.inputs):void 0;dc.landmarks[0]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[1].size):0,dc.landmarks[1]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[2].size):0}return Rn.landmarks}function Nxe(e,t){var n,s;let r={};if(!((n=e?.shape)!=null&&n[1])||!((s=e?.shape)!=null&&s[2]))return e;let a;if(oh&&(r.cropped=He.cropAndResize(e,[oh],[0],[e.shape[1],e.shape[2]])),e.shape[1]!==e.shape[2]){let o=[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],i=[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0];za=[[0,0],o,i,[0,0]],r.pad=Dr(r.cropped||e,za),r.resize=He.resizeBilinear(r.pad,[t,t]),a=Ae(r.resize,kt.tf255)}else e.shape[1]!==t?(r.resize=He.resizeBilinear(r.cropped||e,[t,t]),a=Ae(r.resize,kt.tf255)):a=Ae(r.cropped||e,kt.tf255);return Object.keys(r).forEach(o=>le(r[o])),a}function Exe(e,t){for(let n of e)n.position=[Math.trunc(n.position[0]*(t[0]+za[2][0]+za[2][1])/t[0]-za[2][0]),Math.trunc(n.position[1]*(t[1]+za[1][0]+za[1][1])/t[1]-za[1][0]),n.position[2]],n.positionRaw=[n.position[0]/t[0],n.position[1]/t[1],2*n.position[2]/(t[0]+t[1])];if(oh)for(let n of e)n.positionRaw=[n.positionRaw[0]+oh[1],n.positionRaw[1]+oh[0],n.positionRaw[2]],n.position=[Math.trunc(n.positionRaw[0]*t[0]),Math.trunc(n.positionRaw[1]*t[1]),n.positionRaw[2]];return e}function _xe(e){let t=e.find(i=>i.part==="leftPalm"),n=e.find(i=>i.part==="leftWrist"),s=e.find(i=>i.part==="leftIndex");t.position[2]=((n.position[2]||0)+(s.position[2]||0))/2;let r=e.find(i=>i.part==="rightPalm"),a=e.find(i=>i.part==="rightWrist"),o=e.find(i=>i.part==="rightIndex");r.position[2]=((a.position[2]||0)+(o.position[2]||0))/2}async function Rxe(e,t,n){var s,r;if(!((s=Rn.landmarks)!=null&&s.executor))return null;let a={};[a.ld,a.segmentation,a.heatmap,a.world,a.poseflag]=(r=Rn.landmarks)==null?void 0:r.execute(e,Ixe.landmarks);let o=(await a.poseflag.data())[0],i=await a.ld.data(),l=await a.world.data();Object.keys(a).forEach(g=>le(a[g]));let u=[],c=5;for(let g=0;g<i.length/c;g++){let y=ak(i[c*g+3]),x=ak(i[c*g+4]),A=Math.trunc(100*y*x*o)/100,b=[i[c*g+0]/dc.landmarks[0],i[c*g+1]/dc.landmarks[1],i[c*g+2]+0],w=[Math.trunc(n[0]*b[0]),Math.trunc(n[1]*b[1]),b[2]],S=[l[c*g+0],l[c*g+1],l[c*g+2]+0];u.push({part:HE[g],positionRaw:b,position:w,distance:S,score:A})}if(o<(t.body.minConfidence||0))return null;_xe(u);let h=Exe(u,n),d=h.map(g=>g.position),p=Mp(d,[n[0],n[1]]),f={};for(let[g,y]of Object.entries(jE)){let x=[];for(let A=0;A<y.length-1;A++){let b=h.find(S=>S.part===y[A]),w=h.find(S=>S.part===y[A+1]);b&&w&&x.push([b.position,w.position])}f[g]=x}return{id:0,score:Math.trunc(100*o)/100,box:p.box,boxRaw:p.boxRaw,keypoints:h,annotations:f}}async function ok(e,t){let n=[e.shape[2]||0,e.shape[1]||0],s=(t.body.skipTime||0)>pe()-rk,r=Xy<(t.body.skipFrames||0);if(t.skipAllowed&&s&&r&&Uf!==null)Xy++;else{let a={};a.landmarks=Nxe(e,256),Uf=await Rxe(a.landmarks,t,n),Object.keys(a).forEach(o=>le(a[o])),rk=pe(),Xy=0}return Uf?[Uf]:[]}var im=[{class:1,label:"person"},{class:2,label:"bicycle"},{class:3,label:"car"},{class:4,label:"motorcycle"},{class:5,label:"airplane"},{class:6,label:"bus"},{class:7,label:"train"},{class:8,label:"truck"},{class:9,label:"boat"},{class:10,label:"traffic light"},{class:11,label:"fire hydrant"},{class:12,label:"stop sign"},{class:13,label:"parking meter"},{class:14,label:"bench"},{class:15,label:"bird"},{class:16,label:"cat"},{class:17,label:"dog"},{class:18,label:"horse"},{class:19,label:"sheep"},{class:20,label:"cow"},{class:21,label:"elephant"},{class:22,label:"bear"},{class:23,label:"zebra"},{class:24,label:"giraffe"},{class:25,label:"backpack"},{class:26,label:"umbrella"},{class:27,label:"handbag"},{class:28,label:"tie"},{class:29,label:"suitcase"},{class:30,label:"frisbee"},{class:31,label:"skis"},{class:32,label:"snowboard"},{class:33,label:"sports ball"},{class:34,label:"kite"},{class:35,label:"baseball bat"},{class:36,label:"baseball glove"},{class:37,label:"skateboard"},{class:38,label:"surfboard"},{class:39,label:"tennis racket"},{class:40,label:"bottle"},{class:41,label:"wine glass"},{class:42,label:"cup"},{class:43,label:"fork"},{class:44,label:"knife"},{class:45,label:"spoon"},{class:46,label:"bowl"},{class:47,label:"banana"},{class:48,label:"apple"},{class:49,label:"sandwich"},{class:50,label:"orange"},{class:51,label:"broccoli"},{class:52,label:"carrot"},{class:53,label:"hot dog"},{class:54,label:"pizza"},{class:55,label:"donut"},{class:56,label:"cake"},{class:57,label:"chair"},{class:58,label:"couch"},{class:59,label:"potted plant"},{class:60,label:"bed"},{class:61,label:"dining table"},{class:62,label:"toilet"},{class:63,label:"tv"},{class:64,label:"laptop"},{class:65,label:"mouse"},{class:66,label:"remote"},{class:67,label:"keyboard"},{class:68,label:"cell phone"},{class:69,label:"microwave"},{class:70,label:"oven"},{class:71,label:"toaster"},{class:72,label:"sink"},{class:73,label:"refrigerator"},{class:74,label:"book"},{class:75,label:"clock"},{class:76,label:"vase"},{class:77,label:"scissors"},{class:78,label:"teddy bear"},{class:79,label:"hair drier"},{class:80,label:"toothbrush"}],er,Bi=0,Ky=[],ik=0,Zy=Number.MAX_SAFE_INTEGER;async function $xe(e){if(ke.initial&&(er=null),er)e.debug&&he("cached model:",er.modelUrl);else{er=await Dt(e.object.modelPath);let t=er?.executor?Object.values(er.modelSignature.inputs):void 0;Bi=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}return er}async function Dxe(e,t,n){if(!e)return[];let s={},r=[],a=await e.array();s.squeeze=mt(e);let o=kn(s.squeeze,6,1);s.stack=Pn([o[1],o[0],o[3],o[2]],1),s.boxes=mt(s.stack),s.scores=mt(o[4]),s.classes=mt(o[5]),le([e,...o]),s.nms=await He.nonMaxSuppressionAsync(s.boxes,s.scores,n.object.maxDetected,n.object.iouThreshold,n.object.minConfidence||0);let i=await s.nms.data(),l=0;for(let u of Array.from(i)){let c=Math.trunc(100*a[0][u][4])/100,h=a[0][u][5];if(Number.isNaN(h))continue;let d=im[h].label,[p,f]=[a[0][u][0]/Bi,a[0][u][1]/Bi],m=[p,f,a[0][u][2]/Bi-p,a[0][u][3]/Bi-f],g=[Math.trunc(m[0]*t[0]),Math.trunc(m[1]*t[1]),Math.trunc(m[2]*t[0]),Math.trunc(m[3]*t[1])];r.push({id:l++,score:c,class:h,label:d,box:g,boxRaw:m})}return Object.keys(s).forEach(u=>le(s[u])),r}async function lk(e,t){if(!er?.executor)return[];let n=(t.object.skipTime||0)>pe()-ik,s=Zy<(t.object.skipFrames||0);return t.skipAllowed&&n&&s&&Ky.length>0?(Zy++,Ky):(Zy=0,new Promise(async r=>{let a=[e.shape[2]||0,e.shape[1]||0],o=He.resizeBilinear(e,[Bi,Bi]),i=t.object.enabled?er?.execute(o,["tower_0/detections"]):null;ik=pe(),le(o);let l=await Dxe(i,a,t);Ky=l,r(l)}))}var XE={};lo(XE,{connected:()=>ZE,kpt:()=>KE});var KE=["head","neck","rightShoulder","rightElbow","rightWrist","chest","leftShoulder","leftElbow","leftWrist","bodyCenter","rightHip","rightKnee","rightAnkle","leftHip","leftKnee","leftAnkle"],ZE={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]},_n,uk=0,Hn={id:0,keypoints:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,annotations:{}},Yy=Number.MAX_SAFE_INTEGER;async function Fxe(e){return ke.initial&&(_n=null),_n?e.debug&&he("cached model:",_n.modelUrl):_n=await Dt(e.body.modelPath),_n}async function Oxe(e,t){let[n,s]=e.shape,r=U(e,[s*n]),a=Dn(r,0),o=(await a.data())[0];if(o>t){let i=Jr(r,0),l=ip(i,n),u=(await l.data())[0],c=Ae(i,n),h=(await c.data())[0];return le([r,a,i,l,c]),[u,h,o]}return le([r,a]),[0,0,o]}async function ck(e,t){if(!_n?.executor)return[];let n=(t.body.skipTime||0)>pe()-uk,s=Yy<(t.body.skipFrames||0);return t.skipAllowed&&n&&s&&Object.keys(Hn.keypoints).length>0?(Yy++,[Hn]):(Yy=0,new Promise(async r=>{let a=Y(()=>{if(!_n?.inputs[0].shape)return null;let h=He.resizeBilinear(e,[_n.inputs[0].shape[2],_n.inputs[0].shape[1]],!1),d=L(h,kt.tf2);return ge(d,kt.tf1)}),o;if(t.body.enabled&&(o=_n?.execute(a)),uk=pe(),le(a),o){Hn.keypoints.length=0;let h=mt(o);le(o);let d=ds(h,2);le(h);for(let p=0;p<d.length;p++){let[f,m,g]=await Oxe(d[p],t.body.minConfidence);g>(t.body.minConfidence||0)&&Hn.keypoints.push({score:Math.round(100*g)/100,part:KE[p],positionRaw:[f/_n.inputs[0].shape[2],m/_n.inputs[0].shape[1]],position:[Math.round(e.shape[2]*f/_n.inputs[0].shape[2]),Math.round(e.shape[1]*m/_n.inputs[0].shape[1])]})}d.forEach(p=>le(p))}Hn.score=Hn.keypoints.reduce((h,d)=>d.score>h?d.score:h,0);let i=Hn.keypoints.map(h=>h.position[0]),l=Hn.keypoints.map(h=>h.position[1]);Hn.box=[Math.min(...i),Math.min(...l),Math.max(...i)-Math.min(...i),Math.max(...l)-Math.min(...l)];let u=Hn.keypoints.map(h=>h.positionRaw[0]),c=Hn.keypoints.map(h=>h.positionRaw[1]);Hn.boxRaw=[Math.min(...u),Math.min(...c),Math.max(...u)-Math.min(...u),Math.max(...c)-Math.min(...c)];for(let[h,d]of Object.entries(ZE)){let p=[];for(let f=0;f<d.length-1;f++){let m=Hn.keypoints.find(y=>y.part===d[f]),g=Hn.keypoints.find(y=>y.part===d[f+1]);m&&g&&m.score>(t.body.minConfidence||0)&&g.score>(t.body.minConfidence||0)&&p.push([m.position,g.position])}Hn.annotations[h]=p}r([Hn])}))}var Pxe=["angry","disgust","fear","happy","sad","surprise","neutral"],wr,Gf=[],dk=0,hk=0,Jy=Number.MAX_SAFE_INTEGER;async function Mxe(e){var t;return ke.initial&&(wr=null),wr?e.debug&&he("cached model:",wr.modelUrl):wr=await Dt((t=e.face.emotion)==null?void 0:t.modelPath),wr}async function pk(e,t,n,s){var r,a;if(!wr)return[];let o=Jy<(((r=t.face.emotion)==null?void 0:r.skipFrames)||0),i=(((a=t.face.emotion)==null?void 0:a.skipTime)||0)>pe()-hk;return t.skipAllowed&&i&&o&&dk===s&&Gf[n]&&Gf[n].length>0?(Jy++,Gf[n]):(Jy=0,new Promise(async l=>{var u;let c=[];if((u=t.face.emotion)!=null&&u.enabled){let h={},d=wr?.inputs[0].shape?wr.inputs[0].shape[2]:0;h.resize=He.resizeBilinear(e,[d,d],!1),h.channels=L(h.resize,kt.rgb),h.grayscale=Se(h.channels,3,!0),h.grayscaleSub=ge(h.grayscale,kt.tf05),h.grayscaleMul=L(h.grayscaleSub,kt.tf2),h.emotion=wr?.execute(h.grayscaleMul),hk=pe();let p=await h.emotion.data();for(let f=0;f<p.length;f++)p[f]>(t.face.emotion.minConfidence||0)&&c.push({score:Math.min(.99,Math.trunc(100*p[f])/100),emotion:Pxe[f]});c.sort((f,m)=>m.score-f.score),Object.keys(h).forEach(f=>le(h[f]))}Gf[n]=c,dk=s,l(c)}))}var tr,Qy=[],fk=0,mk=0,gk=Number.MAX_SAFE_INTEGER;async function zxe(e){var t;return ke.initial&&(tr=null),tr?e.debug&&he("cached model:",tr.modelUrl):tr=await Dt((t=e.face.mobilefacenet)==null?void 0:t.modelPath),tr}async function yk(e,t,n,s){var r,a;if(!tr?.executor)return[];let o=gk<(((r=t.face.mobilefacenet)==null?void 0:r.skipFrames)||0),i=(((a=t.face.mobilefacenet)==null?void 0:a.skipTime)||0)>pe()-mk;return t.skipAllowed&&i&&o&&fk===s&&Qy[n]?(gk++,Qy[n]):new Promise(async l=>{var u;let c=[];if(((u=t.face.mobilefacenet)==null?void 0:u.enabled)&&tr?.inputs[0].shape){let h={};h.crop=He.resizeBilinear(e,[tr.inputs[0].shape[2],tr.inputs[0].shape[1]],!1),h.data=tr.execute(h.crop);let d=await h.data.data();c=Array.from(d),Object.keys(h).forEach(p=>le(h[p]))}Qy[n]=c,fk=s,mk=pe(),l(c)})}var nr,eA=[],Ak=0,xk=0,bk=Number.MAX_SAFE_INTEGER;async function Lxe(e){return ke.initial&&(nr=null),nr?e.debug&&he("cached model:",nr.modelUrl):nr=await Dt(e.face.insightface.modelPath),nr}async function vk(e,t,n,s){var r,a;if(!nr?.executor)return[];let o=bk<(((r=t.face.insightface)==null?void 0:r.skipFrames)||0),i=(((a=t.face.insightface)==null?void 0:a.skipTime)||0)>pe()-xk;return t.skipAllowed&&i&&o&&Ak===s&&eA[n]?(bk++,eA[n]):new Promise(async l=>{var u;let c=[];if(((u=t.face.insightface)==null?void 0:u.enabled)&&nr?.inputs[0].shape){let h={};h.crop=He.resizeBilinear(e,[nr.inputs[0].shape[2],nr.inputs[0].shape[1]],!1),h.data=nr.execute(h.crop);let d=await h.data.data();c=Array.from(d),Object.keys(h).forEach(p=>le(h[p]))}eA[n]=c,Ak=s,xk=pe(),l(c)})}var Js,Ka=0,Bxe=2.3,tA=ba.leftEyeLower0,nA=ba.rightEyeLower0,Lu={leftBounds:[tA[0],tA[tA.length-1]],rightBounds:[nA[0],nA[nA.length-1]]},hc={upperCenter:3,lowerCenter:4,index:71,numCoordinates:76};async function Wxe(e){var t,n;return ke.initial&&(Js=null),Js?e.debug&&he("cached model:",Js.modelUrl):Js=await Dt((t=e.face.iris)==null?void 0:t.modelPath),Ka=Js?.executor&&((n=Js.inputs)==null?void 0:n[0].shape)?Js.inputs[0].shape[2]:0,Ka===-1&&(Ka=64),Js}function Hf(e,t,n,s){for(let r=0;r<Qw.length;r++){let{key:a,indices:o}=Qw[r],i=ba[`${n}${a}`];if(!s||s.includes(a))for(let l=0;l<o.length;l++){let u=o[l];e[i[l]]=[t[u][0],t[u][1],(t[u][2]+e[i[l]][2])/2]}}}var Vxe=e=>{let t=e[Lu.leftBounds[0]][2],n=e[Lu.rightBounds[0]][2];return t-n},wk=(e,t,n,s,r,a=!1)=>{let o=WE(BE(oxe([e[n],e[s]]),Bxe)),i=Pp(o),l=He.cropAndResize(t,[[o.startPoint[1]/r,o.startPoint[0]/r,o.endPoint[1]/r,o.endPoint[0]/r]],[0],[Ka,Ka]);if(a&&ke.kernels.includes("flipleftright")){let u=He.flipLeftRight(l);le(l),l=u}return{box:o,boxSize:i,crop:l}},kk=(e,t,n,s=!1)=>{let r=[];for(let a=0;a<hc.numCoordinates;a++){let o=e[a*3],i=e[a*3+1],l=e[a*3+2];r.push([(s?1-o/Ka:o/Ka)*n[0]+t.startPoint[0],i/Ka*n[1]+t.startPoint[1],l])}return{rawCoords:r,iris:r.slice(hc.index)}},Sk=(e,t,n)=>{let s=e[ba[`${n}EyeUpper0`][hc.upperCenter]][2],r=e[ba[`${n}EyeLower0`][hc.lowerCenter]][2],a=(s+r)/2;return t.map((o,i)=>{let l=a;return i===2?l=s:i===4&&(l=r),[o[0],o[1],l]})};async function Uxe(e,t,n){if(!Js?.executor)return e;let{box:s,boxSize:r,crop:a}=wk(e,t,Lu.leftBounds[0],Lu.leftBounds[1],n,!0),{box:o,boxSize:i,crop:l}=wk(e,t,Lu.rightBounds[0],Lu.rightBounds[1],n,!0),u=Et([a,l]);le(a),le(l);let c=Js.execute(u);le(u);let h=await c.data();le(c);let d=h.slice(0,hc.numCoordinates*3),{rawCoords:p,iris:f}=kk(d,s,r,!0),m=h.slice(hc.numCoordinates*3),{rawCoords:g,iris:y}=kk(m,o,i,!1),x=Vxe(e);Math.abs(x)<30?(Hf(e,p,"left",null),Hf(e,g,"right",null)):x<1?Hf(e,p,"left",["EyeUpper0","EyeLower0"]):Hf(e,g,"right",["EyeUpper0","EyeLower0"]);let A=Sk(e,f,"left"),b=Sk(e,y,"right");return e.concat(A).concat(b)}var Gxe=[[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]],Hxe=[[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]],jxe=[[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]],qxe=[[474,475],[475,476],[476,477],[477,474]],Xxe=[[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]],Kxe=[[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]],Zxe=[[469,470],[470,471],[471,472],[472,469]],Yxe=[[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]];function Oa(e){let t=e.map(n=>n[0]);return t.push(e[e.length-1][1]),t}var Jxe={lips:Oa(Gxe),leftEye:Oa(Hxe),leftEyebrow:Oa(jxe),leftIris:Oa(qxe),rightEye:Oa(Xxe),rightEyebrow:Oa(Kxe),rightIris:Oa(Zxe),faceOval:Oa(Yxe)},Qxe=Object.entries(Jxe).map(([e,t])=>t.map(n=>[n,e])).flat(),G5e=new Map(Qxe),w2=[61,146,91,181,84,17,314,405,321,375,291,185,40,39,37,0,267,269,270,409,78,95,88,178,87,14,317,402,318,324,308,191,80,81,82,13,312,311,310,415,76,77,90,180,85,16,315,404,320,307,306,184,74,73,72,11,302,303,304,408,62,96,89,179,86,15,316,403,319,325,292,183,42,41,38,12,268,271,272,407],Zd=[33,7,163,144,145,153,154,155,133,246,161,160,159,158,157,173,130,25,110,24,23,22,26,112,243,247,30,29,27,28,56,190,226,31,228,229,230,231,232,233,244,113,225,224,223,222,221,189,35,124,46,53,52,65,143,111,117,118,119,120,121,128,245,156,70,63,105,66,107,55,193],Yd=[263,249,390,373,374,380,381,382,362,466,388,387,386,385,384,398,359,255,339,254,253,252,256,341,463,467,260,259,257,258,286,414,446,261,448,449,450,451,452,453,464,342,445,444,443,442,441,413,265,353,276,283,282,295,372,340,346,347,348,349,350,357,465,383,300,293,334,296,336,285,417];async function ebe(e,t){var n,s,r,a,o,i,l,u,c,h;let d={lips:await((s=(n=t.filter(m=>m.size===160))==null?void 0:n[0])==null?void 0:s.data()),irisL:await((a=(r=t.filter(m=>m.size===10))==null?void 0:r[0])==null?void 0:a.data()),eyeL:await((i=(o=t.filter(m=>m.size===142))==null?void 0:o[0])==null?void 0:i.data()),irisR:await((u=(l=t.filter(m=>m.size===10))==null?void 0:l[1])==null?void 0:u.data()),eyeR:await((h=(c=t.filter(m=>m.size===142))==null?void 0:c[1])==null?void 0:h.data())};for(let m of Object.values(d))if(!m)return e;let p=Zd.reduce((m,g)=>m+=e[g][2],0)/Zd.length;for(let m=0;m<d.irisL.length/2;m++)e.push([d.irisL[2*m+0],d.irisL[2*m+1],p]);let f=Yd.reduce((m,g)=>m+=e[g][2],0)/Yd.length;for(let m=0;m<d.irisR.length/2;m++)e.push([d.irisR[2*m+0],d.irisR[2*m+1],f]);for(let m=0;m<d.eyeL.length/2;m++)e[Zd[m]]=[d.eyeL[2*m+0],d.eyeL[2*m+1],e[Zd[m]][2]];for(let m=0;m<d.eyeR.length/2;m++)e[Yd[m]]=[d.eyeR[2*m+0],d.eyeR[2*m+1],e[Yd[m]][2]];for(let m=0;m<d.lips.length/2;m++)e[w2[m]]=[d.lips[2*m+0],d.lips[2*m+1],e[w2[m]][2]];return e}var Lr={boxes:[],skipped:Number.MAX_SAFE_INTEGER,timestamp:0},an=null,Jd=0;async function tbe(e,t){var n,s,r,a,o,i,l,u,c,h;if(!an?.executor)return[];let d=(((n=t.face.detector)==null?void 0:n.skipTime)||0)>pe()-Lr.timestamp,p=Lr.skipped<(((s=t.face.detector)==null?void 0:s.skipFrames)||0);!t.skipAllowed||!d||!p||Lr.boxes.length===0?(Lr.boxes=await bxe(e,t),Lr.timestamp=pe(),Lr.skipped=0):Lr.skipped++;let f=[],m=[],g=0,y=Jd;for(let x=0;x<Lr.boxes.length;x++){let A=Lr.boxes[x],b=0,w,S={id:g++,mesh:[],meshRaw:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,boxScore:0,faceScore:0,annotations:{}};if([b,w,S.tensor]=fxe((r=t.face.detector)==null?void 0:r.rotation,A,e,(a=t.face.mesh)!=null&&a.enabled?Jd:Od()),t.filter.equalization){let C=S.tensor?await FN(S.tensor):void 0;le(S.tensor),C&&(S.tensor=C)}if(S.boxScore=Math.round(100*A.confidence)/100,(o=t.face.mesh)!=null&&o.enabled)if(!an)t.debug&&he("face mesh detection requested, but model is not loaded");else{if(((i=t.face.attention)==null?void 0:i.enabled)&&!ke.kernels.includes("atan2"))return t.face.attention.enabled=!1,le(S.tensor),f;let C=an.execute(S.tensor),R=await C.find(D=>D.shape[D.shape.length-1]===1).data();if(S.faceScore=Math.round(100*R[0])/100,S.faceScore<(((l=t.face.detector)==null?void 0:l.minConfidence)||1)){if(A.confidence=S.faceScore,t.face.mesh.keepInvalid){S.box=Hy(A,e),S.boxRaw=jy(A,e),S.score=S.boxScore,S.mesh=A.landmarks.map(D=>[(A.startPoint[0]+A.endPoint[0])/2+(A.endPoint[0]+A.startPoint[0])*D[0]/Od(),(A.startPoint[1]+A.endPoint[1])/2+(A.endPoint[1]+A.startPoint[1])*D[1]/Od()]),S.meshRaw=S.mesh.map(D=>[D[0]/(e.shape[2]||1),D[1]/(e.shape[1]||1),(D[2]||0)/y]);for(let D of Object.keys(qd))S.annotations[D]=[S.mesh[qd[D]]]}}else{let D=C.find(M=>M.shape[M.shape.length-1]===1404),E=U(D,[-1,3]),F=await E.array();le(E),(u=t.face.attention)!=null&&u.enabled?F=await ebe(F,C):(c=t.face.iris)!=null&&c.enabled&&(F=await Uxe(F,S.tensor,Jd)),S.mesh=pxe(F,A,b,w,Jd),S.meshRaw=S.mesh.map(M=>[M[0]/(e.shape[2]||0),M[1]/(e.shape[1]||0),(M[2]||0)/y]);for(let M of Object.keys(ba))S.annotations[M]=ba[M].map(z=>S.mesh[z]);S.score=S.faceScore;let k={...gxe(S.mesh,A),confidence:A.confidence,landmarks:A.landmarks};S.box=Hy(k,e),S.boxRaw=jy(k,e),m.push(k)}le(C)}else{S.box=Hy(A,e),S.boxRaw=jy(A,e),S.score=S.boxScore,S.mesh=A.landmarks.map(C=>[(A.startPoint[0]+A.endPoint[0])/2+(A.endPoint[0]+A.startPoint[0])*C[0]/Od(),(A.startPoint[1]+A.endPoint[1])/2+(A.endPoint[1]+A.startPoint[1])*C[1]/Od()]),S.meshRaw=S.mesh.map(C=>[C[0]/(e.shape[2]||0),C[1]/(e.shape[1]||0),(C[2]||0)/y]);for(let C of Object.keys(qd))S.annotations[C]=[S.mesh[qd[C]]]}S.score>(((h=t.face.detector)==null?void 0:h.minConfidence)||1)?f.push(S):le(S.tensor)}return Lr.boxes=m,f}async function nbe(e){var t,n,s,r,a,o;return ke.initial&&(an=null),((t=e.face.attention)==null?void 0:t.enabled)&&an?.signature&&Object.keys(((n=an?.signature)==null?void 0:n.outputs)||{}).length<6&&(an=null),an?e.debug&&he("cached model:",an.modelUrl):(s=e.face.attention)!=null&&s.enabled?an=await Dt(e.face.attention.modelPath):an=await Dt((r=e.face.mesh)==null?void 0:r.modelPath),Jd=an.executor&&((a=an?.inputs)==null?void 0:a[0].shape)?(o=an?.inputs)==null?void 0:o[0].shape[2]:256,an}var sbe=Xd,rbe=Mg,Ss,Fu=[],Ik=0,Ck=0,sA=Number.MAX_SAFE_INTEGER;async function abe(e){var t;return ke.initial&&(Ss=null),Ss?e.debug&&he("cached model:",Ss.modelUrl):Ss=await Dt((t=e.face.description)==null?void 0:t.modelPath),Ss}function YE(e){let t=e.image||e.tensor||e;if(!Ss?.inputs[0].shape)return t;let n=He.resizeBilinear(t,[Ss.inputs[0].shape[2],Ss.inputs[0].shape[1]],!1),s=L(n,kt.tf255);return le(n),s}async function Tk(e,t,n,s){var r,a,o,i;let l={age:0,gender:"unknown",genderScore:0,descriptor:[]};if(!Ss?.executor)return l;let u=sA<(((r=t.face.description)==null?void 0:r.skipFrames)||0),c=(((a=t.face.description)==null?void 0:a.skipTime)||0)>pe()-Ik;return t.skipAllowed&&u&&c&&Ck===s&&((o=Fu?.[n])==null?void 0:o.age)>0&&((i=Fu?.[n])==null?void 0:i.genderScore)>0?(sA++,Fu[n]):(sA=0,new Promise(async h=>{var d;if((d=t.face.description)!=null&&d.enabled){let p=YE(e),f=Ss?.execute(p);Ik=pe(),le(p);let g=await f.find(_=>_.shape[1]===1).data(),y=Math.trunc(200*Math.abs(g[0]-.5))/100;y>(t.face.description.minConfidence||0)&&(l.gender=g[0]<=.5?"female":"male",l.genderScore=Math.min(.99,y));let x=Jr(f.find(_=>_.shape[1]===100),1),A=(await x.data())[0];le(x);let w=await f.find(_=>_.shape[1]===100).data();l.age=Math.round(w[A-1]>w[A+1]?10*A-100*w[A-1]:10*A+100*w[A+1])/10,(Number.isNaN(g[0])||Number.isNaN(w[0]))&&he("faceres error:",{model:Ss,result:f});let S=f.find(_=>_.shape[1]===1024),C=S?await S.data():[];l.descriptor=Array.from(C),f.forEach(_=>le(_))}Fu[n]=l,Ck=s,h(l)}))}function Av(e){return[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]}function Hm(e){return[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2]}function obe(e,t,n){let s=t.shape[1],r=t.shape[2],a=[[e.startPoint[1]/s,e.startPoint[0]/r,e.endPoint[1]/s,e.endPoint[0]/r]];return He.cropAndResize(t,a,[0],n)}function ibe(e,t){let n=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],s=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]],r=e.palmLandmarks.map(a=>[a[0]*t[0],a[1]*t[1]]);return{startPoint:n,endPoint:s,palmLandmarks:r,confidence:e.confidence}}function rA(e,t=1.5){let n=Hm(e),s=Av(e),r=[t*s[0]/2,t*s[1]/2],a=[n[0]-r[0],n[1]-r[1]],o=[n[0]+r[0],n[1]+r[1]];return{startPoint:a,endPoint:o,palmLandmarks:e.palmLandmarks}}function aA(e){let t=Hm(e),n=Av(e),r=Math.max(...n)/2,a=[t[0]-r,t[1]-r],o=[t[0]+r,t[1]+r];return{startPoint:a,endPoint:o,palmLandmarks:e.palmLandmarks}}function lbe(e){return e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}function ube(e,t){let n=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]);return lbe(n)}var Nk=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]];function ul(e,t){let n=0;for(let s=0;s<e.length;s++)n+=e[s]*t[s];return n}function cbe(e,t){let n=[];for(let s=0;s<e.length;s++)n.push(e[s][t]);return n}function Ek(e,t){let n=[],s=e.length;for(let r=0;r<s;r++){n.push([]);for(let a=0;a<s;a++)n[r].push(ul(e[r],cbe(t,a)))}return n}function _k(e,t){let n=Math.cos(e),s=Math.sin(e),r=[[n,-s,0],[s,n,0],[0,0,1]],a=Nk(t[0],t[1]),o=Ek(a,r),i=Nk(-t[0],-t[1]);return Ek(o,i)}function dbe(e){let t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],s=[-ul(t[0],n),-ul(t[1],n)];return[t[0].concat(s[0]),t[1].concat(s[1]),[0,0,1]]}function Rk(e,t){return[ul(e,t[0]),ul(e,t[1])]}var hbe=[{x:.015625,y:.015625},{x:.015625,y:.015625},{x:.046875,y:.015625},{x:.046875,y:.015625},{x:.078125,y:.015625},{x:.078125,y:.015625},{x:.109375,y:.015625},{x:.109375,y:.015625},{x:.140625,y:.015625},{x:.140625,y:.015625},{x:.171875,y:.015625},{x:.171875,y:.015625},{x:.203125,y:.015625},{x:.203125,y:.015625},{x:.234375,y:.015625},{x:.234375,y:.015625},{x:.265625,y:.015625},{x:.265625,y:.015625},{x:.296875,y:.015625},{x:.296875,y:.015625},{x:.328125,y:.015625},{x:.328125,y:.015625},{x:.359375,y:.015625},{x:.359375,y:.015625},{x:.390625,y:.015625},{x:.390625,y:.015625},{x:.421875,y:.015625},{x:.421875,y:.015625},{x:.453125,y:.015625},{x:.453125,y:.015625},{x:.484375,y:.015625},{x:.484375,y:.015625},{x:.515625,y:.015625},{x:.515625,y:.015625},{x:.546875,y:.015625},{x:.546875,y:.015625},{x:.578125,y:.015625},{x:.578125,y:.015625},{x:.609375,y:.015625},{x:.609375,y:.015625},{x:.640625,y:.015625},{x:.640625,y:.015625},{x:.671875,y:.015625},{x:.671875,y:.015625},{x:.703125,y:.015625},{x:.703125,y:.015625},{x:.734375,y:.015625},{x:.734375,y:.015625},{x:.765625,y:.015625},{x:.765625,y:.015625},{x:.796875,y:.015625},{x:.796875,y:.015625},{x:.828125,y:.015625},{x:.828125,y:.015625},{x:.859375,y:.015625},{x:.859375,y:.015625},{x:.890625,y:.015625},{x:.890625,y:.015625},{x:.921875,y:.015625},{x:.921875,y:.015625},{x:.953125,y:.015625},{x:.953125,y:.015625},{x:.984375,y:.015625},{x:.984375,y:.015625},{x:.015625,y:.046875},{x:.015625,y:.046875},{x:.046875,y:.046875},{x:.046875,y:.046875},{x:.078125,y:.046875},{x:.078125,y:.046875},{x:.109375,y:.046875},{x:.109375,y:.046875},{x:.140625,y:.046875},{x:.140625,y:.046875},{x:.171875,y:.046875},{x:.171875,y:.046875},{x:.203125,y:.046875},{x:.203125,y:.046875},{x:.234375,y:.046875},{x:.234375,y:.046875},{x:.265625,y:.046875},{x:.265625,y:.046875},{x:.296875,y:.046875},{x:.296875,y:.046875},{x:.328125,y:.046875},{x:.328125,y:.046875},{x:.359375,y:.046875},{x:.359375,y:.046875},{x:.390625,y:.046875},{x:.390625,y:.046875},{x:.421875,y:.046875},{x:.421875,y:.046875},{x:.453125,y:.046875},{x:.453125,y:.046875},{x:.484375,y:.046875},{x:.484375,y:.046875},{x:.515625,y:.046875},{x:.515625,y:.046875},{x:.546875,y:.046875},{x:.546875,y:.046875},{x:.578125,y:.046875},{x:.578125,y:.046875},{x:.609375,y:.046875},{x:.609375,y:.046875},{x:.640625,y:.046875},{x:.640625,y:.046875},{x:.671875,y:.046875},{x:.671875,y:.046875},{x:.703125,y:.046875},{x:.703125,y:.046875},{x:.734375,y:.046875},{x:.734375,y:.046875},{x:.765625,y:.046875},{x:.765625,y:.046875},{x:.796875,y:.046875},{x:.796875,y:.046875},{x:.828125,y:.046875},{x:.828125,y:.046875},{x:.859375,y:.046875},{x:.859375,y:.046875},{x:.890625,y:.046875},{x:.890625,y:.046875},{x:.921875,y:.046875},{x:.921875,y:.046875},{x:.953125,y:.046875},{x:.953125,y:.046875},{x:.984375,y:.046875},{x:.984375,y:.046875},{x:.015625,y:.078125},{x:.015625,y:.078125},{x:.046875,y:.078125},{x:.046875,y:.078125},{x:.078125,y:.078125},{x:.078125,y:.078125},{x:.109375,y:.078125},{x:.109375,y:.078125},{x:.140625,y:.078125},{x:.140625,y:.078125},{x:.171875,y:.078125},{x:.171875,y:.078125},{x:.203125,y:.078125},{x:.203125,y:.078125},{x:.234375,y:.078125},{x:.234375,y:.078125},{x:.265625,y:.078125},{x:.265625,y:.078125},{x:.296875,y:.078125},{x:.296875,y:.078125},{x:.328125,y:.078125},{x:.328125,y:.078125},{x:.359375,y:.078125},{x:.359375,y:.078125},{x:.390625,y:.078125},{x:.390625,y:.078125},{x:.421875,y:.078125},{x:.421875,y:.078125},{x:.453125,y:.078125},{x:.453125,y:.078125},{x:.484375,y:.078125},{x:.484375,y:.078125},{x:.515625,y:.078125},{x:.515625,y:.078125},{x:.546875,y:.078125},{x:.546875,y:.078125},{x:.578125,y:.078125},{x:.578125,y:.078125},{x:.609375,y:.078125},{x:.609375,y:.078125},{x:.640625,y:.078125},{x:.640625,y:.078125},{x:.671875,y:.078125},{x:.671875,y:.078125},{x:.703125,y:.078125},{x:.703125,y:.078125},{x:.734375,y:.078125},{x:.734375,y:.078125},{x:.765625,y:.078125},{x:.765625,y:.078125},{x:.796875,y:.078125},{x:.796875,y:.078125},{x:.828125,y:.078125},{x:.828125,y:.078125},{x:.859375,y:.078125},{x:.859375,y:.078125},{x:.890625,y:.078125},{x:.890625,y:.078125},{x:.921875,y:.078125},{x:.921875,y:.078125},{x:.953125,y:.078125},{x:.953125,y:.078125},{x:.984375,y:.078125},{x:.984375,y:.078125},{x:.015625,y:.109375},{x:.015625,y:.109375},{x:.046875,y:.109375},{x:.046875,y:.109375},{x:.078125,y:.109375},{x:.078125,y:.109375},{x:.109375,y:.109375},{x:.109375,y:.109375},{x:.140625,y:.109375},{x:.140625,y:.109375},{x:.171875,y:.109375},{x:.171875,y:.109375},{x:.203125,y:.109375},{x:.203125,y:.109375},{x:.234375,y:.109375},{x:.234375,y:.109375},{x:.265625,y:.109375},{x:.265625,y:.109375},{x:.296875,y:.109375},{x:.296875,y:.109375},{x:.328125,y:.109375},{x:.328125,y:.109375},{x:.359375,y:.109375},{x:.359375,y:.109375},{x:.390625,y:.109375},{x:.390625,y:.109375},{x:.421875,y:.109375},{x:.421875,y:.109375},{x:.453125,y:.109375},{x:.453125,y:.109375},{x:.484375,y:.109375},{x:.484375,y:.109375},{x:.515625,y:.109375},{x:.515625,y:.109375},{x:.546875,y:.109375},{x:.546875,y:.109375},{x:.578125,y:.109375},{x:.578125,y:.109375},{x:.609375,y:.109375},{x:.609375,y:.109375},{x:.640625,y:.109375},{x:.640625,y:.109375},{x:.671875,y:.109375},{x:.671875,y:.109375},{x:.703125,y:.109375},{x:.703125,y:.109375},{x:.734375,y:.109375},{x:.734375,y:.109375},{x:.765625,y:.109375},{x:.765625,y:.109375},{x:.796875,y:.109375},{x:.796875,y:.109375},{x:.828125,y:.109375},{x:.828125,y:.109375},{x:.859375,y:.109375},{x:.859375,y:.109375},{x:.890625,y:.109375},{x:.890625,y:.109375},{x:.921875,y:.109375},{x:.921875,y:.109375},{x:.953125,y:.109375},{x:.953125,y:.109375},{x:.984375,y:.109375},{x:.984375,y:.109375},{x:.015625,y:.140625},{x:.015625,y:.140625},{x:.046875,y:.140625},{x:.046875,y:.140625},{x:.078125,y:.140625},{x:.078125,y:.140625},{x:.109375,y:.140625},{x:.109375,y:.140625},{x:.140625,y:.140625},{x:.140625,y:.140625},{x:.171875,y:.140625},{x:.171875,y:.140625},{x:.203125,y:.140625},{x:.203125,y:.140625},{x:.234375,y:.140625},{x:.234375,y:.140625},{x:.265625,y:.140625},{x:.265625,y:.140625},{x:.296875,y:.140625},{x:.296875,y:.140625},{x:.328125,y:.140625},{x:.328125,y:.140625},{x:.359375,y:.140625},{x:.359375,y:.140625},{x:.390625,y:.140625},{x:.390625,y:.140625},{x:.421875,y:.140625},{x:.421875,y:.140625},{x:.453125,y:.140625},{x:.453125,y:.140625},{x:.484375,y:.140625},{x:.484375,y:.140625},{x:.515625,y:.140625},{x:.515625,y:.140625},{x:.546875,y:.140625},{x:.546875,y:.140625},{x:.578125,y:.140625},{x:.578125,y:.140625},{x:.609375,y:.140625},{x:.609375,y:.140625},{x:.640625,y:.140625},{x:.640625,y:.140625},{x:.671875,y:.140625},{x:.671875,y:.140625},{x:.703125,y:.140625},{x:.703125,y:.140625},{x:.734375,y:.140625},{x:.734375,y:.140625},{x:.765625,y:.140625},{x:.765625,y:.140625},{x:.796875,y:.140625},{x:.796875,y:.140625},{x:.828125,y:.140625},{x:.828125,y:.140625},{x:.859375,y:.140625},{x:.859375,y:.140625},{x:.890625,y:.140625},{x:.890625,y:.140625},{x:.921875,y:.140625},{x:.921875,y:.140625},{x:.953125,y:.140625},{x:.953125,y:.140625},{x:.984375,y:.140625},{x:.984375,y:.140625},{x:.015625,y:.171875},{x:.015625,y:.171875},{x:.046875,y:.171875},{x:.046875,y:.171875},{x:.078125,y:.171875},{x:.078125,y:.171875},{x:.109375,y:.171875},{x:.109375,y:.171875},{x:.140625,y:.171875},{x:.140625,y:.171875},{x:.171875,y:.171875},{x:.171875,y:.171875},{x:.203125,y:.171875},{x:.203125,y:.171875},{x:.234375,y:.171875},{x:.234375,y:.171875},{x:.265625,y:.171875},{x:.265625,y:.171875},{x:.296875,y:.171875},{x:.296875,y:.171875},{x:.328125,y:.171875},{x:.328125,y:.171875},{x:.359375,y:.171875},{x:.359375,y:.171875},{x:.390625,y:.171875},{x:.390625,y:.171875},{x:.421875,y:.171875},{x:.421875,y:.171875},{x:.453125,y:.171875},{x:.453125,y:.171875},{x:.484375,y:.171875},{x:.484375,y:.171875},{x:.515625,y:.171875},{x:.515625,y:.171875},{x:.546875,y:.171875},{x:.546875,y:.171875},{x:.578125,y:.171875},{x:.578125,y:.171875},{x:.609375,y:.171875},{x:.609375,y:.171875},{x:.640625,y:.171875},{x:.640625,y:.171875},{x:.671875,y:.171875},{x:.671875,y:.171875},{x:.703125,y:.171875},{x:.703125,y:.171875},{x:.734375,y:.171875},{x:.734375,y:.171875},{x:.765625,y:.171875},{x:.765625,y:.171875},{x:.796875,y:.171875},{x:.796875,y:.171875},{x:.828125,y:.171875},{x:.828125,y:.171875},{x:.859375,y:.171875},{x:.859375,y:.171875},{x:.890625,y:.171875},{x:.890625,y:.171875},{x:.921875,y:.171875},{x:.921875,y:.171875},{x:.953125,y:.171875},{x:.953125,y:.171875},{x:.984375,y:.171875},{x:.984375,y:.171875},{x:.015625,y:.203125},{x:.015625,y:.203125},{x:.046875,y:.203125},{x:.046875,y:.203125},{x:.078125,y:.203125},{x:.078125,y:.203125},{x:.109375,y:.203125},{x:.109375,y:.203125},{x:.140625,y:.203125},{x:.140625,y:.203125},{x:.171875,y:.203125},{x:.171875,y:.203125},{x:.203125,y:.203125},{x:.203125,y:.203125},{x:.234375,y:.203125},{x:.234375,y:.203125},{x:.265625,y:.203125},{x:.265625,y:.203125},{x:.296875,y:.203125},{x:.296875,y:.203125},{x:.328125,y:.203125},{x:.328125,y:.203125},{x:.359375,y:.203125},{x:.359375,y:.203125},{x:.390625,y:.203125},{x:.390625,y:.203125},{x:.421875,y:.203125},{x:.421875,y:.203125},{x:.453125,y:.203125},{x:.453125,y:.203125},{x:.484375,y:.203125},{x:.484375,y:.203125},{x:.515625,y:.203125},{x:.515625,y:.203125},{x:.546875,y:.203125},{x:.546875,y:.203125},{x:.578125,y:.203125},{x:.578125,y:.203125},{x:.609375,y:.203125},{x:.609375,y:.203125},{x:.640625,y:.203125},{x:.640625,y:.203125},{x:.671875,y:.203125},{x:.671875,y:.203125},{x:.703125,y:.203125},{x:.703125,y:.203125},{x:.734375,y:.203125},{x:.734375,y:.203125},{x:.765625,y:.203125},{x:.765625,y:.203125},{x:.796875,y:.203125},{x:.796875,y:.203125},{x:.828125,y:.203125},{x:.828125,y:.203125},{x:.859375,y:.203125},{x:.859375,y:.203125},{x:.890625,y:.203125},{x:.890625,y:.203125},{x:.921875,y:.203125},{x:.921875,y:.203125},{x:.953125,y:.203125},{x:.953125,y:.203125},{x:.984375,y:.203125},{x:.984375,y:.203125},{x:.015625,y:.234375},{x:.015625,y:.234375},{x:.046875,y:.234375},{x:.046875,y:.234375},{x:.078125,y:.234375},{x:.078125,y:.234375},{x:.109375,y:.234375},{x:.109375,y:.234375},{x:.140625,y:.234375},{x:.140625,y:.234375},{x:.171875,y:.234375},{x:.171875,y:.234375},{x:.203125,y:.234375},{x:.203125,y:.234375},{x:.234375,y:.234375},{x:.234375,y:.234375},{x:.265625,y:.234375},{x:.265625,y:.234375},{x:.296875,y:.234375},{x:.296875,y:.234375},{x:.328125,y:.234375},{x:.328125,y:.234375},{x:.359375,y:.234375},{x:.359375,y:.234375},{x:.390625,y:.234375},{x:.390625,y:.234375},{x:.421875,y:.234375},{x:.421875,y:.234375},{x:.453125,y:.234375},{x:.453125,y:.234375},{x:.484375,y:.234375},{x:.484375,y:.234375},{x:.515625,y:.234375},{x:.515625,y:.234375},{x:.546875,y:.234375},{x:.546875,y:.234375},{x:.578125,y:.234375},{x:.578125,y:.234375},{x:.609375,y:.234375},{x:.609375,y:.234375},{x:.640625,y:.234375},{x:.640625,y:.234375},{x:.671875,y:.234375},{x:.671875,y:.234375},{x:.703125,y:.234375},{x:.703125,y:.234375},{x:.734375,y:.234375},{x:.734375,y:.234375},{x:.765625,y:.234375},{x:.765625,y:.234375},{x:.796875,y:.234375},{x:.796875,y:.234375},{x:.828125,y:.234375},{x:.828125,y:.234375},{x:.859375,y:.234375},{x:.859375,y:.234375},{x:.890625,y:.234375},{x:.890625,y:.234375},{x:.921875,y:.234375},{x:.921875,y:.234375},{x:.953125,y:.234375},{x:.953125,y:.234375},{x:.984375,y:.234375},{x:.984375,y:.234375},{x:.015625,y:.265625},{x:.015625,y:.265625},{x:.046875,y:.265625},{x:.046875,y:.265625},{x:.078125,y:.265625},{x:.078125,y:.265625},{x:.109375,y:.265625},{x:.109375,y:.265625},{x:.140625,y:.265625},{x:.140625,y:.265625},{x:.171875,y:.265625},{x:.171875,y:.265625},{x:.203125,y:.265625},{x:.203125,y:.265625},{x:.234375,y:.265625},{x:.234375,y:.265625},{x:.265625,y:.265625},{x:.265625,y:.265625},{x:.296875,y:.265625},{x:.296875,y:.265625},{x:.328125,y:.265625},{x:.328125,y:.265625},{x:.359375,y:.265625},{x:.359375,y:.265625},{x:.390625,y:.265625},{x:.390625,y:.265625},{x:.421875,y:.265625},{x:.421875,y:.265625},{x:.453125,y:.265625},{x:.453125,y:.265625},{x:.484375,y:.265625},{x:.484375,y:.265625},{x:.515625,y:.265625},{x:.515625,y:.265625},{x:.546875,y:.265625},{x:.546875,y:.265625},{x:.578125,y:.265625},{x:.578125,y:.265625},{x:.609375,y:.265625},{x:.609375,y:.265625},{x:.640625,y:.265625},{x:.640625,y:.265625},{x:.671875,y:.265625},{x:.671875,y:.265625},{x:.703125,y:.265625},{x:.703125,y:.265625},{x:.734375,y:.265625},{x:.734375,y:.265625},{x:.765625,y:.265625},{x:.765625,y:.265625},{x:.796875,y:.265625},{x:.796875,y:.265625},{x:.828125,y:.265625},{x:.828125,y:.265625},{x:.859375,y:.265625},{x:.859375,y:.265625},{x:.890625,y:.265625},{x:.890625,y:.265625},{x:.921875,y:.265625},{x:.921875,y:.265625},{x:.953125,y:.265625},{x:.953125,y:.265625},{x:.984375,y:.265625},{x:.984375,y:.265625},{x:.015625,y:.296875},{x:.015625,y:.296875},{x:.046875,y:.296875},{x:.046875,y:.296875},{x:.078125,y:.296875},{x:.078125,y:.296875},{x:.109375,y:.296875},{x:.109375,y:.296875},{x:.140625,y:.296875},{x:.140625,y:.296875},{x:.171875,y:.296875},{x:.171875,y:.296875},{x:.203125,y:.296875},{x:.203125,y:.296875},{x:.234375,y:.296875},{x:.234375,y:.296875},{x:.265625,y:.296875},{x:.265625,y:.296875},{x:.296875,y:.296875},{x:.296875,y:.296875},{x:.328125,y:.296875},{x:.328125,y:.296875},{x:.359375,y:.296875},{x:.359375,y:.296875},{x:.390625,y:.296875},{x:.390625,y:.296875},{x:.421875,y:.296875},{x:.421875,y:.296875},{x:.453125,y:.296875},{x:.453125,y:.296875},{x:.484375,y:.296875},{x:.484375,y:.296875},{x:.515625,y:.296875},{x:.515625,y:.296875},{x:.546875,y:.296875},{x:.546875,y:.296875},{x:.578125,y:.296875},{x:.578125,y:.296875},{x:.609375,y:.296875},{x:.609375,y:.296875},{x:.640625,y:.296875},{x:.640625,y:.296875},{x:.671875,y:.296875},{x:.671875,y:.296875},{x:.703125,y:.296875},{x:.703125,y:.296875},{x:.734375,y:.296875},{x:.734375,y:.296875},{x:.765625,y:.296875},{x:.765625,y:.296875},{x:.796875,y:.296875},{x:.796875,y:.296875},{x:.828125,y:.296875},{x:.828125,y:.296875},{x:.859375,y:.296875},{x:.859375,y:.296875},{x:.890625,y:.296875},{x:.890625,y:.296875},{x:.921875,y:.296875},{x:.921875,y:.296875},{x:.953125,y:.296875},{x:.953125,y:.296875},{x:.984375,y:.296875},{x:.984375,y:.296875},{x:.015625,y:.328125},{x:.015625,y:.328125},{x:.046875,y:.328125},{x:.046875,y:.328125},{x:.078125,y:.328125},{x:.078125,y:.328125},{x:.109375,y:.328125},{x:.109375,y:.328125},{x:.140625,y:.328125},{x:.140625,y:.328125},{x:.171875,y:.328125},{x:.171875,y:.328125},{x:.203125,y:.328125},{x:.203125,y:.328125},{x:.234375,y:.328125},{x:.234375,y:.328125},{x:.265625,y:.328125},{x:.265625,y:.328125},{x:.296875,y:.328125},{x:.296875,y:.328125},{x:.328125,y:.328125},{x:.328125,y:.328125},{x:.359375,y:.328125},{x:.359375,y:.328125},{x:.390625,y:.328125},{x:.390625,y:.328125},{x:.421875,y:.328125},{x:.421875,y:.328125},{x:.453125,y:.328125},{x:.453125,y:.328125},{x:.484375,y:.328125},{x:.484375,y:.328125},{x:.515625,y:.328125},{x:.515625,y:.328125},{x:.546875,y:.328125},{x:.546875,y:.328125},{x:.578125,y:.328125},{x:.578125,y:.328125},{x:.609375,y:.328125},{x:.609375,y:.328125},{x:.640625,y:.328125},{x:.640625,y:.328125},{x:.671875,y:.328125},{x:.671875,y:.328125},{x:.703125,y:.328125},{x:.703125,y:.328125},{x:.734375,y:.328125},{x:.734375,y:.328125},{x:.765625,y:.328125},{x:.765625,y:.328125},{x:.796875,y:.328125},{x:.796875,y:.328125},{x:.828125,y:.328125},{x:.828125,y:.328125},{x:.859375,y:.328125},{x:.859375,y:.328125},{x:.890625,y:.328125},{x:.890625,y:.328125},{x:.921875,y:.328125},{x:.921875,y:.328125},{x:.953125,y:.328125},{x:.953125,y:.328125},{x:.984375,y:.328125},{x:.984375,y:.328125},{x:.015625,y:.359375},{x:.015625,y:.359375},{x:.046875,y:.359375},{x:.046875,y:.359375},{x:.078125,y:.359375},{x:.078125,y:.359375},{x:.109375,y:.359375},{x:.109375,y:.359375},{x:.140625,y:.359375},{x:.140625,y:.359375},{x:.171875,y:.359375},{x:.171875,y:.359375},{x:.203125,y:.359375},{x:.203125,y:.359375},{x:.234375,y:.359375},{x:.234375,y:.359375},{x:.265625,y:.359375},{x:.265625,y:.359375},{x:.296875,y:.359375},{x:.296875,y:.359375},{x:.328125,y:.359375},{x:.328125,y:.359375},{x:.359375,y:.359375},{x:.359375,y:.359375},{x:.390625,y:.359375},{x:.390625,y:.359375},{x:.421875,y:.359375},{x:.421875,y:.359375},{x:.453125,y:.359375},{x:.453125,y:.359375},{x:.484375,y:.359375},{x:.484375,y:.359375},{x:.515625,y:.359375},{x:.515625,y:.359375},{x:.546875,y:.359375},{x:.546875,y:.359375},{x:.578125,y:.359375},{x:.578125,y:.359375},{x:.609375,y:.359375},{x:.609375,y:.359375},{x:.640625,y:.359375},{x:.640625,y:.359375},{x:.671875,y:.359375},{x:.671875,y:.359375},{x:.703125,y:.359375},{x:.703125,y:.359375},{x:.734375,y:.359375},{x:.734375,y:.359375},{x:.765625,y:.359375},{x:.765625,y:.359375},{x:.796875,y:.359375},{x:.796875,y:.359375},{x:.828125,y:.359375},{x:.828125,y:.359375},{x:.859375,y:.359375},{x:.859375,y:.359375},{x:.890625,y:.359375},{x:.890625,y:.359375},{x:.921875,y:.359375},{x:.921875,y:.359375},{x:.953125,y:.359375},{x:.953125,y:.359375},{x:.984375,y:.359375},{x:.984375,y:.359375},{x:.015625,y:.390625},{x:.015625,y:.390625},{x:.046875,y:.390625},{x:.046875,y:.390625},{x:.078125,y:.390625},{x:.078125,y:.390625},{x:.109375,y:.390625},{x:.109375,y:.390625},{x:.140625,y:.390625},{x:.140625,y:.390625},{x:.171875,y:.390625},{x:.171875,y:.390625},{x:.203125,y:.390625},{x:.203125,y:.390625},{x:.234375,y:.390625},{x:.234375,y:.390625},{x:.265625,y:.390625},{x:.265625,y:.390625},{x:.296875,y:.390625},{x:.296875,y:.390625},{x:.328125,y:.390625},{x:.328125,y:.390625},{x:.359375,y:.390625},{x:.359375,y:.390625},{x:.390625,y:.390625},{x:.390625,y:.390625},{x:.421875,y:.390625},{x:.421875,y:.390625},{x:.453125,y:.390625},{x:.453125,y:.390625},{x:.484375,y:.390625},{x:.484375,y:.390625},{x:.515625,y:.390625},{x:.515625,y:.390625},{x:.546875,y:.390625},{x:.546875,y:.390625},{x:.578125,y:.390625},{x:.578125,y:.390625},{x:.609375,y:.390625},{x:.609375,y:.390625},{x:.640625,y:.390625},{x:.640625,y:.390625},{x:.671875,y:.390625},{x:.671875,y:.390625},{x:.703125,y:.390625},{x:.703125,y:.390625},{x:.734375,y:.390625},{x:.734375,y:.390625},{x:.765625,y:.390625},{x:.765625,y:.390625},{x:.796875,y:.390625},{x:.796875,y:.390625},{x:.828125,y:.390625},{x:.828125,y:.390625},{x:.859375,y:.390625},{x:.859375,y:.390625},{x:.890625,y:.390625},{x:.890625,y:.390625},{x:.921875,y:.390625},{x:.921875,y:.390625},{x:.953125,y:.390625},{x:.953125,y:.390625},{x:.984375,y:.390625},{x:.984375,y:.390625},{x:.015625,y:.421875},{x:.015625,y:.421875},{x:.046875,y:.421875},{x:.046875,y:.421875},{x:.078125,y:.421875},{x:.078125,y:.421875},{x:.109375,y:.421875},{x:.109375,y:.421875},{x:.140625,y:.421875},{x:.140625,y:.421875},{x:.171875,y:.421875},{x:.171875,y:.421875},{x:.203125,y:.421875},{x:.203125,y:.421875},{x:.234375,y:.421875},{x:.234375,y:.421875},{x:.265625,y:.421875},{x:.265625,y:.421875},{x:.296875,y:.421875},{x:.296875,y:.421875},{x:.328125,y:.421875},{x:.328125,y:.421875},{x:.359375,y:.421875},{x:.359375,y:.421875},{x:.390625,y:.421875},{x:.390625,y:.421875},{x:.421875,y:.421875},{x:.421875,y:.421875},{x:.453125,y:.421875},{x:.453125,y:.421875},{x:.484375,y:.421875},{x:.484375,y:.421875},{x:.515625,y:.421875},{x:.515625,y:.421875},{x:.546875,y:.421875},{x:.546875,y:.421875},{x:.578125,y:.421875},{x:.578125,y:.421875},{x:.609375,y:.421875},{x:.609375,y:.421875},{x:.640625,y:.421875},{x:.640625,y:.421875},{x:.671875,y:.421875},{x:.671875,y:.421875},{x:.703125,y:.421875},{x:.703125,y:.421875},{x:.734375,y:.421875},{x:.734375,y:.421875},{x:.765625,y:.421875},{x:.765625,y:.421875},{x:.796875,y:.421875},{x:.796875,y:.421875},{x:.828125,y:.421875},{x:.828125,y:.421875},{x:.859375,y:.421875},{x:.859375,y:.421875},{x:.890625,y:.421875},{x:.890625,y:.421875},{x:.921875,y:.421875},{x:.921875,y:.421875},{x:.953125,y:.421875},{x:.953125,y:.421875},{x:.984375,y:.421875},{x:.984375,y:.421875},{x:.015625,y:.453125},{x:.015625,y:.453125},{x:.046875,y:.453125},{x:.046875,y:.453125},{x:.078125,y:.453125},{x:.078125,y:.453125},{x:.109375,y:.453125},{x:.109375,y:.453125},{x:.140625,y:.453125},{x:.140625,y:.453125},{x:.171875,y:.453125},{x:.171875,y:.453125},{x:.203125,y:.453125},{x:.203125,y:.453125},{x:.234375,y:.453125},{x:.234375,y:.453125},{x:.265625,y:.453125},{x:.265625,y:.453125},{x:.296875,y:.453125},{x:.296875,y:.453125},{x:.328125,y:.453125},{x:.328125,y:.453125},{x:.359375,y:.453125},{x:.359375,y:.453125},{x:.390625,y:.453125},{x:.390625,y:.453125},{x:.421875,y:.453125},{x:.421875,y:.453125},{x:.453125,y:.453125},{x:.453125,y:.453125},{x:.484375,y:.453125},{x:.484375,y:.453125},{x:.515625,y:.453125},{x:.515625,y:.453125},{x:.546875,y:.453125},{x:.546875,y:.453125},{x:.578125,y:.453125},{x:.578125,y:.453125},{x:.609375,y:.453125},{x:.609375,y:.453125},{x:.640625,y:.453125},{x:.640625,y:.453125},{x:.671875,y:.453125},{x:.671875,y:.453125},{x:.703125,y:.453125},{x:.703125,y:.453125},{x:.734375,y:.453125},{x:.734375,y:.453125},{x:.765625,y:.453125},{x:.765625,y:.453125},{x:.796875,y:.453125},{x:.796875,y:.453125},{x:.828125,y:.453125},{x:.828125,y:.453125},{x:.859375,y:.453125},{x:.859375,y:.453125},{x:.890625,y:.453125},{x:.890625,y:.453125},{x:.921875,y:.453125},{x:.921875,y:.453125},{x:.953125,y:.453125},{x:.953125,y:.453125},{x:.984375,y:.453125},{x:.984375,y:.453125},{x:.015625,y:.484375},{x:.015625,y:.484375},{x:.046875,y:.484375},{x:.046875,y:.484375},{x:.078125,y:.484375},{x:.078125,y:.484375},{x:.109375,y:.484375},{x:.109375,y:.484375},{x:.140625,y:.484375},{x:.140625,y:.484375},{x:.171875,y:.484375},{x:.171875,y:.484375},{x:.203125,y:.484375},{x:.203125,y:.484375},{x:.234375,y:.484375},{x:.234375,y:.484375},{x:.265625,y:.484375},{x:.265625,y:.484375},{x:.296875,y:.484375},{x:.296875,y:.484375},{x:.328125,y:.484375},{x:.328125,y:.484375},{x:.359375,y:.484375},{x:.359375,y:.484375},{x:.390625,y:.484375},{x:.390625,y:.484375},{x:.421875,y:.484375},{x:.421875,y:.484375},{x:.453125,y:.484375},{x:.453125,y:.484375},{x:.484375,y:.484375},{x:.484375,y:.484375},{x:.515625,y:.484375},{x:.515625,y:.484375},{x:.546875,y:.484375},{x:.546875,y:.484375},{x:.578125,y:.484375},{x:.578125,y:.484375},{x:.609375,y:.484375},{x:.609375,y:.484375},{x:.640625,y:.484375},{x:.640625,y:.484375},{x:.671875,y:.484375},{x:.671875,y:.484375},{x:.703125,y:.484375},{x:.703125,y:.484375},{x:.734375,y:.484375},{x:.734375,y:.484375},{x:.765625,y:.484375},{x:.765625,y:.484375},{x:.796875,y:.484375},{x:.796875,y:.484375},{x:.828125,y:.484375},{x:.828125,y:.484375},{x:.859375,y:.484375},{x:.859375,y:.484375},{x:.890625,y:.484375},{x:.890625,y:.484375},{x:.921875,y:.484375},{x:.921875,y:.484375},{x:.953125,y:.484375},{x:.953125,y:.484375},{x:.984375,y:.484375},{x:.984375,y:.484375},{x:.015625,y:.515625},{x:.015625,y:.515625},{x:.046875,y:.515625},{x:.046875,y:.515625},{x:.078125,y:.515625},{x:.078125,y:.515625},{x:.109375,y:.515625},{x:.109375,y:.515625},{x:.140625,y:.515625},{x:.140625,y:.515625},{x:.171875,y:.515625},{x:.171875,y:.515625},{x:.203125,y:.515625},{x:.203125,y:.515625},{x:.234375,y:.515625},{x:.234375,y:.515625},{x:.265625,y:.515625},{x:.265625,y:.515625},{x:.296875,y:.515625},{x:.296875,y:.515625},{x:.328125,y:.515625},{x:.328125,y:.515625},{x:.359375,y:.515625},{x:.359375,y:.515625},{x:.390625,y:.515625},{x:.390625,y:.515625},{x:.421875,y:.515625},{x:.421875,y:.515625},{x:.453125,y:.515625},{x:.453125,y:.515625},{x:.484375,y:.515625},{x:.484375,y:.515625},{x:.515625,y:.515625},{x:.515625,y:.515625},{x:.546875,y:.515625},{x:.546875,y:.515625},{x:.578125,y:.515625},{x:.578125,y:.515625},{x:.609375,y:.515625},{x:.609375,y:.515625},{x:.640625,y:.515625},{x:.640625,y:.515625},{x:.671875,y:.515625},{x:.671875,y:.515625},{x:.703125,y:.515625},{x:.703125,y:.515625},{x:.734375,y:.515625},{x:.734375,y:.515625},{x:.765625,y:.515625},{x:.765625,y:.515625},{x:.796875,y:.515625},{x:.796875,y:.515625},{x:.828125,y:.515625},{x:.828125,y:.515625},{x:.859375,y:.515625},{x:.859375,y:.515625},{x:.890625,y:.515625},{x:.890625,y:.515625},{x:.921875,y:.515625},{x:.921875,y:.515625},{x:.953125,y:.515625},{x:.953125,y:.515625},{x:.984375,y:.515625},{x:.984375,y:.515625},{x:.015625,y:.546875},{x:.015625,y:.546875},{x:.046875,y:.546875},{x:.046875,y:.546875},{x:.078125,y:.546875},{x:.078125,y:.546875},{x:.109375,y:.546875},{x:.109375,y:.546875},{x:.140625,y:.546875},{x:.140625,y:.546875},{x:.171875,y:.546875},{x:.171875,y:.546875},{x:.203125,y:.546875},{x:.203125,y:.546875},{x:.234375,y:.546875},{x:.234375,y:.546875},{x:.265625,y:.546875},{x:.265625,y:.546875},{x:.296875,y:.546875},{x:.296875,y:.546875},{x:.328125,y:.546875},{x:.328125,y:.546875},{x:.359375,y:.546875},{x:.359375,y:.546875},{x:.390625,y:.546875},{x:.390625,y:.546875},{x:.421875,y:.546875},{x:.421875,y:.546875},{x:.453125,y:.546875},{x:.453125,y:.546875},{x:.484375,y:.546875},{x:.484375,y:.546875},{x:.515625,y:.546875},{x:.515625,y:.546875},{x:.546875,y:.546875},{x:.546875,y:.546875},{x:.578125,y:.546875},{x:.578125,y:.546875},{x:.609375,y:.546875},{x:.609375,y:.546875},{x:.640625,y:.546875},{x:.640625,y:.546875},{x:.671875,y:.546875},{x:.671875,y:.546875},{x:.703125,y:.546875},{x:.703125,y:.546875},{x:.734375,y:.546875},{x:.734375,y:.546875},{x:.765625,y:.546875},{x:.765625,y:.546875},{x:.796875,y:.546875},{x:.796875,y:.546875},{x:.828125,y:.546875},{x:.828125,y:.546875},{x:.859375,y:.546875},{x:.859375,y:.546875},{x:.890625,y:.546875},{x:.890625,y:.546875},{x:.921875,y:.546875},{x:.921875,y:.546875},{x:.953125,y:.546875},{x:.953125,y:.546875},{x:.984375,y:.546875},{x:.984375,y:.546875},{x:.015625,y:.578125},{x:.015625,y:.578125},{x:.046875,y:.578125},{x:.046875,y:.578125},{x:.078125,y:.578125},{x:.078125,y:.578125},{x:.109375,y:.578125},{x:.109375,y:.578125},{x:.140625,y:.578125},{x:.140625,y:.578125},{x:.171875,y:.578125},{x:.171875,y:.578125},{x:.203125,y:.578125},{x:.203125,y:.578125},{x:.234375,y:.578125},{x:.234375,y:.578125},{x:.265625,y:.578125},{x:.265625,y:.578125},{x:.296875,y:.578125},{x:.296875,y:.578125},{x:.328125,y:.578125},{x:.328125,y:.578125},{x:.359375,y:.578125},{x:.359375,y:.578125},{x:.390625,y:.578125},{x:.390625,y:.578125},{x:.421875,y:.578125},{x:.421875,y:.578125},{x:.453125,y:.578125},{x:.453125,y:.578125},{x:.484375,y:.578125},{x:.484375,y:.578125},{x:.515625,y:.578125},{x:.515625,y:.578125},{x:.546875,y:.578125},{x:.546875,y:.578125},{x:.578125,y:.578125},{x:.578125,y:.578125},{x:.609375,y:.578125},{x:.609375,y:.578125},{x:.640625,y:.578125},{x:.640625,y:.578125},{x:.671875,y:.578125},{x:.671875,y:.578125},{x:.703125,y:.578125},{x:.703125,y:.578125},{x:.734375,y:.578125},{x:.734375,y:.578125},{x:.765625,y:.578125},{x:.765625,y:.578125},{x:.796875,y:.578125},{x:.796875,y:.578125},{x:.828125,y:.578125},{x:.828125,y:.578125},{x:.859375,y:.578125},{x:.859375,y:.578125},{x:.890625,y:.578125},{x:.890625,y:.578125},{x:.921875,y:.578125},{x:.921875,y:.578125},{x:.953125,y:.578125},{x:.953125,y:.578125},{x:.984375,y:.578125},{x:.984375,y:.578125},{x:.015625,y:.609375},{x:.015625,y:.609375},{x:.046875,y:.609375},{x:.046875,y:.609375},{x:.078125,y:.609375},{x:.078125,y:.609375},{x:.109375,y:.609375},{x:.109375,y:.609375},{x:.140625,y:.609375},{x:.140625,y:.609375},{x:.171875,y:.609375},{x:.171875,y:.609375},{x:.203125,y:.609375},{x:.203125,y:.609375},{x:.234375,y:.609375},{x:.234375,y:.609375},{x:.265625,y:.609375},{x:.265625,y:.609375},{x:.296875,y:.609375},{x:.296875,y:.609375},{x:.328125,y:.609375},{x:.328125,y:.609375},{x:.359375,y:.609375},{x:.359375,y:.609375},{x:.390625,y:.609375},{x:.390625,y:.609375},{x:.421875,y:.609375},{x:.421875,y:.609375},{x:.453125,y:.609375},{x:.453125,y:.609375},{x:.484375,y:.609375},{x:.484375,y:.609375},{x:.515625,y:.609375},{x:.515625,y:.609375},{x:.546875,y:.609375},{x:.546875,y:.609375},{x:.578125,y:.609375},{x:.578125,y:.609375},{x:.609375,y:.609375},{x:.609375,y:.609375},{x:.640625,y:.609375},{x:.640625,y:.609375},{x:.671875,y:.609375},{x:.671875,y:.609375},{x:.703125,y:.609375},{x:.703125,y:.609375},{x:.734375,y:.609375},{x:.734375,y:.609375},{x:.765625,y:.609375},{x:.765625,y:.609375},{x:.796875,y:.609375},{x:.796875,y:.609375},{x:.828125,y:.609375},{x:.828125,y:.609375},{x:.859375,y:.609375},{x:.859375,y:.609375},{x:.890625,y:.609375},{x:.890625,y:.609375},{x:.921875,y:.609375},{x:.921875,y:.609375},{x:.953125,y:.609375},{x:.953125,y:.609375},{x:.984375,y:.609375},{x:.984375,y:.609375},{x:.015625,y:.640625},{x:.015625,y:.640625},{x:.046875,y:.640625},{x:.046875,y:.640625},{x:.078125,y:.640625},{x:.078125,y:.640625},{x:.109375,y:.640625},{x:.109375,y:.640625},{x:.140625,y:.640625},{x:.140625,y:.640625},{x:.171875,y:.640625},{x:.171875,y:.640625},{x:.203125,y:.640625},{x:.203125,y:.640625},{x:.234375,y:.640625},{x:.234375,y:.640625},{x:.265625,y:.640625},{x:.265625,y:.640625},{x:.296875,y:.640625},{x:.296875,y:.640625},{x:.328125,y:.640625},{x:.328125,y:.640625},{x:.359375,y:.640625},{x:.359375,y:.640625},{x:.390625,y:.640625},{x:.390625,y:.640625},{x:.421875,y:.640625},{x:.421875,y:.640625},{x:.453125,y:.640625},{x:.453125,y:.640625},{x:.484375,y:.640625},{x:.484375,y:.640625},{x:.515625,y:.640625},{x:.515625,y:.640625},{x:.546875,y:.640625},{x:.546875,y:.640625},{x:.578125,y:.640625},{x:.578125,y:.640625},{x:.609375,y:.640625},{x:.609375,y:.640625},{x:.640625,y:.640625},{x:.640625,y:.640625},{x:.671875,y:.640625},{x:.671875,y:.640625},{x:.703125,y:.640625},{x:.703125,y:.640625},{x:.734375,y:.640625},{x:.734375,y:.640625},{x:.765625,y:.640625},{x:.765625,y:.640625},{x:.796875,y:.640625},{x:.796875,y:.640625},{x:.828125,y:.640625},{x:.828125,y:.640625},{x:.859375,y:.640625},{x:.859375,y:.640625},{x:.890625,y:.640625},{x:.890625,y:.640625},{x:.921875,y:.640625},{x:.921875,y:.640625},{x:.953125,y:.640625},{x:.953125,y:.640625},{x:.984375,y:.640625},{x:.984375,y:.640625},{x:.015625,y:.671875},{x:.015625,y:.671875},{x:.046875,y:.671875},{x:.046875,y:.671875},{x:.078125,y:.671875},{x:.078125,y:.671875},{x:.109375,y:.671875},{x:.109375,y:.671875},{x:.140625,y:.671875},{x:.140625,y:.671875},{x:.171875,y:.671875},{x:.171875,y:.671875},{x:.203125,y:.671875},{x:.203125,y:.671875},{x:.234375,y:.671875},{x:.234375,y:.671875},{x:.265625,y:.671875},{x:.265625,y:.671875},{x:.296875,y:.671875},{x:.296875,y:.671875},{x:.328125,y:.671875},{x:.328125,y:.671875},{x:.359375,y:.671875},{x:.359375,y:.671875},{x:.390625,y:.671875},{x:.390625,y:.671875},{x:.421875,y:.671875},{x:.421875,y:.671875},{x:.453125,y:.671875},{x:.453125,y:.671875},{x:.484375,y:.671875},{x:.484375,y:.671875},{x:.515625,y:.671875},{x:.515625,y:.671875},{x:.546875,y:.671875},{x:.546875,y:.671875},{x:.578125,y:.671875},{x:.578125,y:.671875},{x:.609375,y:.671875},{x:.609375,y:.671875},{x:.640625,y:.671875},{x:.640625,y:.671875},{x:.671875,y:.671875},{x:.671875,y:.671875},{x:.703125,y:.671875},{x:.703125,y:.671875},{x:.734375,y:.671875},{x:.734375,y:.671875},{x:.765625,y:.671875},{x:.765625,y:.671875},{x:.796875,y:.671875},{x:.796875,y:.671875},{x:.828125,y:.671875},{x:.828125,y:.671875},{x:.859375,y:.671875},{x:.859375,y:.671875},{x:.890625,y:.671875},{x:.890625,y:.671875},{x:.921875,y:.671875},{x:.921875,y:.671875},{x:.953125,y:.671875},{x:.953125,y:.671875},{x:.984375,y:.671875},{x:.984375,y:.671875},{x:.015625,y:.703125},{x:.015625,y:.703125},{x:.046875,y:.703125},{x:.046875,y:.703125},{x:.078125,y:.703125},{x:.078125,y:.703125},{x:.109375,y:.703125},{x:.109375,y:.703125},{x:.140625,y:.703125},{x:.140625,y:.703125},{x:.171875,y:.703125},{x:.171875,y:.703125},{x:.203125,y:.703125},{x:.203125,y:.703125},{x:.234375,y:.703125},{x:.234375,y:.703125},{x:.265625,y:.703125},{x:.265625,y:.703125},{x:.296875,y:.703125},{x:.296875,y:.703125},{x:.328125,y:.703125},{x:.328125,y:.703125},{x:.359375,y:.703125},{x:.359375,y:.703125},{x:.390625,y:.703125},{x:.390625,y:.703125},{x:.421875,y:.703125},{x:.421875,y:.703125},{x:.453125,y:.703125},{x:.453125,y:.703125},{x:.484375,y:.703125},{x:.484375,y:.703125},{x:.515625,y:.703125},{x:.515625,y:.703125},{x:.546875,y:.703125},{x:.546875,y:.703125},{x:.578125,y:.703125},{x:.578125,y:.703125},{x:.609375,y:.703125},{x:.609375,y:.703125},{x:.640625,y:.703125},{x:.640625,y:.703125},{x:.671875,y:.703125},{x:.671875,y:.703125},{x:.703125,y:.703125},{x:.703125,y:.703125},{x:.734375,y:.703125},{x:.734375,y:.703125},{x:.765625,y:.703125},{x:.765625,y:.703125},{x:.796875,y:.703125},{x:.796875,y:.703125},{x:.828125,y:.703125},{x:.828125,y:.703125},{x:.859375,y:.703125},{x:.859375,y:.703125},{x:.890625,y:.703125},{x:.890625,y:.703125},{x:.921875,y:.703125},{x:.921875,y:.703125},{x:.953125,y:.703125},{x:.953125,y:.703125},{x:.984375,y:.703125},{x:.984375,y:.703125},{x:.015625,y:.734375},{x:.015625,y:.734375},{x:.046875,y:.734375},{x:.046875,y:.734375},{x:.078125,y:.734375},{x:.078125,y:.734375},{x:.109375,y:.734375},{x:.109375,y:.734375},{x:.140625,y:.734375},{x:.140625,y:.734375},{x:.171875,y:.734375},{x:.171875,y:.734375},{x:.203125,y:.734375},{x:.203125,y:.734375},{x:.234375,y:.734375},{x:.234375,y:.734375},{x:.265625,y:.734375},{x:.265625,y:.734375},{x:.296875,y:.734375},{x:.296875,y:.734375},{x:.328125,y:.734375},{x:.328125,y:.734375},{x:.359375,y:.734375},{x:.359375,y:.734375},{x:.390625,y:.734375},{x:.390625,y:.734375},{x:.421875,y:.734375},{x:.421875,y:.734375},{x:.453125,y:.734375},{x:.453125,y:.734375},{x:.484375,y:.734375},{x:.484375,y:.734375},{x:.515625,y:.734375},{x:.515625,y:.734375},{x:.546875,y:.734375},{x:.546875,y:.734375},{x:.578125,y:.734375},{x:.578125,y:.734375},{x:.609375,y:.734375},{x:.609375,y:.734375},{x:.640625,y:.734375},{x:.640625,y:.734375},{x:.671875,y:.734375},{x:.671875,y:.734375},{x:.703125,y:.734375},{x:.703125,y:.734375},{x:.734375,y:.734375},{x:.734375,y:.734375},{x:.765625,y:.734375},{x:.765625,y:.734375},{x:.796875,y:.734375},{x:.796875,y:.734375},{x:.828125,y:.734375},{x:.828125,y:.734375},{x:.859375,y:.734375},{x:.859375,y:.734375},{x:.890625,y:.734375},{x:.890625,y:.734375},{x:.921875,y:.734375},{x:.921875,y:.734375},{x:.953125,y:.734375},{x:.953125,y:.734375},{x:.984375,y:.734375},{x:.984375,y:.734375},{x:.015625,y:.765625},{x:.015625,y:.765625},{x:.046875,y:.765625},{x:.046875,y:.765625},{x:.078125,y:.765625},{x:.078125,y:.765625},{x:.109375,y:.765625},{x:.109375,y:.765625},{x:.140625,y:.765625},{x:.140625,y:.765625},{x:.171875,y:.765625},{x:.171875,y:.765625},{x:.203125,y:.765625},{x:.203125,y:.765625},{x:.234375,y:.765625},{x:.234375,y:.765625},{x:.265625,y:.765625},{x:.265625,y:.765625},{x:.296875,y:.765625},{x:.296875,y:.765625},{x:.328125,y:.765625},{x:.328125,y:.765625},{x:.359375,y:.765625},{x:.359375,y:.765625},{x:.390625,y:.765625},{x:.390625,y:.765625},{x:.421875,y:.765625},{x:.421875,y:.765625},{x:.453125,y:.765625},{x:.453125,y:.765625},{x:.484375,y:.765625},{x:.484375,y:.765625},{x:.515625,y:.765625},{x:.515625,y:.765625},{x:.546875,y:.765625},{x:.546875,y:.765625},{x:.578125,y:.765625},{x:.578125,y:.765625},{x:.609375,y:.765625},{x:.609375,y:.765625},{x:.640625,y:.765625},{x:.640625,y:.765625},{x:.671875,y:.765625},{x:.671875,y:.765625},{x:.703125,y:.765625},{x:.703125,y:.765625},{x:.734375,y:.765625},{x:.734375,y:.765625},{x:.765625,y:.765625},{x:.765625,y:.765625},{x:.796875,y:.765625},{x:.796875,y:.765625},{x:.828125,y:.765625},{x:.828125,y:.765625},{x:.859375,y:.765625},{x:.859375,y:.765625},{x:.890625,y:.765625},{x:.890625,y:.765625},{x:.921875,y:.765625},{x:.921875,y:.765625},{x:.953125,y:.765625},{x:.953125,y:.765625},{x:.984375,y:.765625},{x:.984375,y:.765625},{x:.015625,y:.796875},{x:.015625,y:.796875},{x:.046875,y:.796875},{x:.046875,y:.796875},{x:.078125,y:.796875},{x:.078125,y:.796875},{x:.109375,y:.796875},{x:.109375,y:.796875},{x:.140625,y:.796875},{x:.140625,y:.796875},{x:.171875,y:.796875},{x:.171875,y:.796875},{x:.203125,y:.796875},{x:.203125,y:.796875},{x:.234375,y:.796875},{x:.234375,y:.796875},{x:.265625,y:.796875},{x:.265625,y:.796875},{x:.296875,y:.796875},{x:.296875,y:.796875},{x:.328125,y:.796875},{x:.328125,y:.796875},{x:.359375,y:.796875},{x:.359375,y:.796875},{x:.390625,y:.796875},{x:.390625,y:.796875},{x:.421875,y:.796875},{x:.421875,y:.796875},{x:.453125,y:.796875},{x:.453125,y:.796875},{x:.484375,y:.796875},{x:.484375,y:.796875},{x:.515625,y:.796875},{x:.515625,y:.796875},{x:.546875,y:.796875},{x:.546875,y:.796875},{x:.578125,y:.796875},{x:.578125,y:.796875},{x:.609375,y:.796875},{x:.609375,y:.796875},{x:.640625,y:.796875},{x:.640625,y:.796875},{x:.671875,y:.796875},{x:.671875,y:.796875},{x:.703125,y:.796875},{x:.703125,y:.796875},{x:.734375,y:.796875},{x:.734375,y:.796875},{x:.765625,y:.796875},{x:.765625,y:.796875},{x:.796875,y:.796875},{x:.796875,y:.796875},{x:.828125,y:.796875},{x:.828125,y:.796875},{x:.859375,y:.796875},{x:.859375,y:.796875},{x:.890625,y:.796875},{x:.890625,y:.796875},{x:.921875,y:.796875},{x:.921875,y:.796875},{x:.953125,y:.796875},{x:.953125,y:.796875},{x:.984375,y:.796875},{x:.984375,y:.796875},{x:.015625,y:.828125},{x:.015625,y:.828125},{x:.046875,y:.828125},{x:.046875,y:.828125},{x:.078125,y:.828125},{x:.078125,y:.828125},{x:.109375,y:.828125},{x:.109375,y:.828125},{x:.140625,y:.828125},{x:.140625,y:.828125},{x:.171875,y:.828125},{x:.171875,y:.828125},{x:.203125,y:.828125},{x:.203125,y:.828125},{x:.234375,y:.828125},{x:.234375,y:.828125},{x:.265625,y:.828125},{x:.265625,y:.828125},{x:.296875,y:.828125},{x:.296875,y:.828125},{x:.328125,y:.828125},{x:.328125,y:.828125},{x:.359375,y:.828125},{x:.359375,y:.828125},{x:.390625,y:.828125},{x:.390625,y:.828125},{x:.421875,y:.828125},{x:.421875,y:.828125},{x:.453125,y:.828125},{x:.453125,y:.828125},{x:.484375,y:.828125},{x:.484375,y:.828125},{x:.515625,y:.828125},{x:.515625,y:.828125},{x:.546875,y:.828125},{x:.546875,y:.828125},{x:.578125,y:.828125},{x:.578125,y:.828125},{x:.609375,y:.828125},{x:.609375,y:.828125},{x:.640625,y:.828125},{x:.640625,y:.828125},{x:.671875,y:.828125},{x:.671875,y:.828125},{x:.703125,y:.828125},{x:.703125,y:.828125},{x:.734375,y:.828125},{x:.734375,y:.828125},{x:.765625,y:.828125},{x:.765625,y:.828125},{x:.796875,y:.828125},{x:.796875,y:.828125},{x:.828125,y:.828125},{x:.828125,y:.828125},{x:.859375,y:.828125},{x:.859375,y:.828125},{x:.890625,y:.828125},{x:.890625,y:.828125},{x:.921875,y:.828125},{x:.921875,y:.828125},{x:.953125,y:.828125},{x:.953125,y:.828125},{x:.984375,y:.828125},{x:.984375,y:.828125},{x:.015625,y:.859375},{x:.015625,y:.859375},{x:.046875,y:.859375},{x:.046875,y:.859375},{x:.078125,y:.859375},{x:.078125,y:.859375},{x:.109375,y:.859375},{x:.109375,y:.859375},{x:.140625,y:.859375},{x:.140625,y:.859375},{x:.171875,y:.859375},{x:.171875,y:.859375},{x:.203125,y:.859375},{x:.203125,y:.859375},{x:.234375,y:.859375},{x:.234375,y:.859375},{x:.265625,y:.859375},{x:.265625,y:.859375},{x:.296875,y:.859375},{x:.296875,y:.859375},{x:.328125,y:.859375},{x:.328125,y:.859375},{x:.359375,y:.859375},{x:.359375,y:.859375},{x:.390625,y:.859375},{x:.390625,y:.859375},{x:.421875,y:.859375},{x:.421875,y:.859375},{x:.453125,y:.859375},{x:.453125,y:.859375},{x:.484375,y:.859375},{x:.484375,y:.859375},{x:.515625,y:.859375},{x:.515625,y:.859375},{x:.546875,y:.859375},{x:.546875,y:.859375},{x:.578125,y:.859375},{x:.578125,y:.859375},{x:.609375,y:.859375},{x:.609375,y:.859375},{x:.640625,y:.859375},{x:.640625,y:.859375},{x:.671875,y:.859375},{x:.671875,y:.859375},{x:.703125,y:.859375},{x:.703125,y:.859375},{x:.734375,y:.859375},{x:.734375,y:.859375},{x:.765625,y:.859375},{x:.765625,y:.859375},{x:.796875,y:.859375},{x:.796875,y:.859375},{x:.828125,y:.859375},{x:.828125,y:.859375},{x:.859375,y:.859375},{x:.859375,y:.859375},{x:.890625,y:.859375},{x:.890625,y:.859375},{x:.921875,y:.859375},{x:.921875,y:.859375},{x:.953125,y:.859375},{x:.953125,y:.859375},{x:.984375,y:.859375},{x:.984375,y:.859375},{x:.015625,y:.890625},{x:.015625,y:.890625},{x:.046875,y:.890625},{x:.046875,y:.890625},{x:.078125,y:.890625},{x:.078125,y:.890625},{x:.109375,y:.890625},{x:.109375,y:.890625},{x:.140625,y:.890625},{x:.140625,y:.890625},{x:.171875,y:.890625},{x:.171875,y:.890625},{x:.203125,y:.890625},{x:.203125,y:.890625},{x:.234375,y:.890625},{x:.234375,y:.890625},{x:.265625,y:.890625},{x:.265625,y:.890625},{x:.296875,y:.890625},{x:.296875,y:.890625},{x:.328125,y:.890625},{x:.328125,y:.890625},{x:.359375,y:.890625},{x:.359375,y:.890625},{x:.390625,y:.890625},{x:.390625,y:.890625},{x:.421875,y:.890625},{x:.421875,y:.890625},{x:.453125,y:.890625},{x:.453125,y:.890625},{x:.484375,y:.890625},{x:.484375,y:.890625},{x:.515625,y:.890625},{x:.515625,y:.890625},{x:.546875,y:.890625},{x:.546875,y:.890625},{x:.578125,y:.890625},{x:.578125,y:.890625},{x:.609375,y:.890625},{x:.609375,y:.890625},{x:.640625,y:.890625},{x:.640625,y:.890625},{x:.671875,y:.890625},{x:.671875,y:.890625},{x:.703125,y:.890625},{x:.703125,y:.890625},{x:.734375,y:.890625},{x:.734375,y:.890625},{x:.765625,y:.890625},{x:.765625,y:.890625},{x:.796875,y:.890625},{x:.796875,y:.890625},{x:.828125,y:.890625},{x:.828125,y:.890625},{x:.859375,y:.890625},{x:.859375,y:.890625},{x:.890625,y:.890625},{x:.890625,y:.890625},{x:.921875,y:.890625},{x:.921875,y:.890625},{x:.953125,y:.890625},{x:.953125,y:.890625},{x:.984375,y:.890625},{x:.984375,y:.890625},{x:.015625,y:.921875},{x:.015625,y:.921875},{x:.046875,y:.921875},{x:.046875,y:.921875},{x:.078125,y:.921875},{x:.078125,y:.921875},{x:.109375,y:.921875},{x:.109375,y:.921875},{x:.140625,y:.921875},{x:.140625,y:.921875},{x:.171875,y:.921875},{x:.171875,y:.921875},{x:.203125,y:.921875},{x:.203125,y:.921875},{x:.234375,y:.921875},{x:.234375,y:.921875},{x:.265625,y:.921875},{x:.265625,y:.921875},{x:.296875,y:.921875},{x:.296875,y:.921875},{x:.328125,y:.921875},{x:.328125,y:.921875},{x:.359375,y:.921875},{x:.359375,y:.921875},{x:.390625,y:.921875},{x:.390625,y:.921875},{x:.421875,y:.921875},{x:.421875,y:.921875},{x:.453125,y:.921875},{x:.453125,y:.921875},{x:.484375,y:.921875},{x:.484375,y:.921875},{x:.515625,y:.921875},{x:.515625,y:.921875},{x:.546875,y:.921875},{x:.546875,y:.921875},{x:.578125,y:.921875},{x:.578125,y:.921875},{x:.609375,y:.921875},{x:.609375,y:.921875},{x:.640625,y:.921875},{x:.640625,y:.921875},{x:.671875,y:.921875},{x:.671875,y:.921875},{x:.703125,y:.921875},{x:.703125,y:.921875},{x:.734375,y:.921875},{x:.734375,y:.921875},{x:.765625,y:.921875},{x:.765625,y:.921875},{x:.796875,y:.921875},{x:.796875,y:.921875},{x:.828125,y:.921875},{x:.828125,y:.921875},{x:.859375,y:.921875},{x:.859375,y:.921875},{x:.890625,y:.921875},{x:.890625,y:.921875},{x:.921875,y:.921875},{x:.921875,y:.921875},{x:.953125,y:.921875},{x:.953125,y:.921875},{x:.984375,y:.921875},{x:.984375,y:.921875},{x:.015625,y:.953125},{x:.015625,y:.953125},{x:.046875,y:.953125},{x:.046875,y:.953125},{x:.078125,y:.953125},{x:.078125,y:.953125},{x:.109375,y:.953125},{x:.109375,y:.953125},{x:.140625,y:.953125},{x:.140625,y:.953125},{x:.171875,y:.953125},{x:.171875,y:.953125},{x:.203125,y:.953125},{x:.203125,y:.953125},{x:.234375,y:.953125},{x:.234375,y:.953125},{x:.265625,y:.953125},{x:.265625,y:.953125},{x:.296875,y:.953125},{x:.296875,y:.953125},{x:.328125,y:.953125},{x:.328125,y:.953125},{x:.359375,y:.953125},{x:.359375,y:.953125},{x:.390625,y:.953125},{x:.390625,y:.953125},{x:.421875,y:.953125},{x:.421875,y:.953125},{x:.453125,y:.953125},{x:.453125,y:.953125},{x:.484375,y:.953125},{x:.484375,y:.953125},{x:.515625,y:.953125},{x:.515625,y:.953125},{x:.546875,y:.953125},{x:.546875,y:.953125},{x:.578125,y:.953125},{x:.578125,y:.953125},{x:.609375,y:.953125},{x:.609375,y:.953125},{x:.640625,y:.953125},{x:.640625,y:.953125},{x:.671875,y:.953125},{x:.671875,y:.953125},{x:.703125,y:.953125},{x:.703125,y:.953125},{x:.734375,y:.953125},{x:.734375,y:.953125},{x:.765625,y:.953125},{x:.765625,y:.953125},{x:.796875,y:.953125},{x:.796875,y:.953125},{x:.828125,y:.953125},{x:.828125,y:.953125},{x:.859375,y:.953125},{x:.859375,y:.953125},{x:.890625,y:.953125},{x:.890625,y:.953125},{x:.921875,y:.953125},{x:.921875,y:.953125},{x:.953125,y:.953125},{x:.953125,y:.953125},{x:.984375,y:.953125},{x:.984375,y:.953125},{x:.015625,y:.984375},{x:.015625,y:.984375},{x:.046875,y:.984375},{x:.046875,y:.984375},{x:.078125,y:.984375},{x:.078125,y:.984375},{x:.109375,y:.984375},{x:.109375,y:.984375},{x:.140625,y:.984375},{x:.140625,y:.984375},{x:.171875,y:.984375},{x:.171875,y:.984375},{x:.203125,y:.984375},{x:.203125,y:.984375},{x:.234375,y:.984375},{x:.234375,y:.984375},{x:.265625,y:.984375},{x:.265625,y:.984375},{x:.296875,y:.984375},{x:.296875,y:.984375},{x:.328125,y:.984375},{x:.328125,y:.984375},{x:.359375,y:.984375},{x:.359375,y:.984375},{x:.390625,y:.984375},{x:.390625,y:.984375},{x:.421875,y:.984375},{x:.421875,y:.984375},{x:.453125,y:.984375},{x:.453125,y:.984375},{x:.484375,y:.984375},{x:.484375,y:.984375},{x:.515625,y:.984375},{x:.515625,y:.984375},{x:.546875,y:.984375},{x:.546875,y:.984375},{x:.578125,y:.984375},{x:.578125,y:.984375},{x:.609375,y:.984375},{x:.609375,y:.984375},{x:.640625,y:.984375},{x:.640625,y:.984375},{x:.671875,y:.984375},{x:.671875,y:.984375},{x:.703125,y:.984375},{x:.703125,y:.984375},{x:.734375,y:.984375},{x:.734375,y:.984375},{x:.765625,y:.984375},{x:.765625,y:.984375},{x:.796875,y:.984375},{x:.796875,y:.984375},{x:.828125,y:.984375},{x:.828125,y:.984375},{x:.859375,y:.984375},{x:.859375,y:.984375},{x:.890625,y:.984375},{x:.890625,y:.984375},{x:.921875,y:.984375},{x:.921875,y:.984375},{x:.953125,y:.984375},{x:.953125,y:.984375},{x:.984375,y:.984375},{x:.984375,y:.984375},{x:.03125,y:.03125},{x:.03125,y:.03125},{x:.09375,y:.03125},{x:.09375,y:.03125},{x:.15625,y:.03125},{x:.15625,y:.03125},{x:.21875,y:.03125},{x:.21875,y:.03125},{x:.28125,y:.03125},{x:.28125,y:.03125},{x:.34375,y:.03125},{x:.34375,y:.03125},{x:.40625,y:.03125},{x:.40625,y:.03125},{x:.46875,y:.03125},{x:.46875,y:.03125},{x:.53125,y:.03125},{x:.53125,y:.03125},{x:.59375,y:.03125},{x:.59375,y:.03125},{x:.65625,y:.03125},{x:.65625,y:.03125},{x:.71875,y:.03125},{x:.71875,y:.03125},{x:.78125,y:.03125},{x:.78125,y:.03125},{x:.84375,y:.03125},{x:.84375,y:.03125},{x:.90625,y:.03125},{x:.90625,y:.03125},{x:.96875,y:.03125},{x:.96875,y:.03125},{x:.03125,y:.09375},{x:.03125,y:.09375},{x:.09375,y:.09375},{x:.09375,y:.09375},{x:.15625,y:.09375},{x:.15625,y:.09375},{x:.21875,y:.09375},{x:.21875,y:.09375},{x:.28125,y:.09375},{x:.28125,y:.09375},{x:.34375,y:.09375},{x:.34375,y:.09375},{x:.40625,y:.09375},{x:.40625,y:.09375},{x:.46875,y:.09375},{x:.46875,y:.09375},{x:.53125,y:.09375},{x:.53125,y:.09375},{x:.59375,y:.09375},{x:.59375,y:.09375},{x:.65625,y:.09375},{x:.65625,y:.09375},{x:.71875,y:.09375},{x:.71875,y:.09375},{x:.78125,y:.09375},{x:.78125,y:.09375},{x:.84375,y:.09375},{x:.84375,y:.09375},{x:.90625,y:.09375},{x:.90625,y:.09375},{x:.96875,y:.09375},{x:.96875,y:.09375},{x:.03125,y:.15625},{x:.03125,y:.15625},{x:.09375,y:.15625},{x:.09375,y:.15625},{x:.15625,y:.15625},{x:.15625,y:.15625},{x:.21875,y:.15625},{x:.21875,y:.15625},{x:.28125,y:.15625},{x:.28125,y:.15625},{x:.34375,y:.15625},{x:.34375,y:.15625},{x:.40625,y:.15625},{x:.40625,y:.15625},{x:.46875,y:.15625},{x:.46875,y:.15625},{x:.53125,y:.15625},{x:.53125,y:.15625},{x:.59375,y:.15625},{x:.59375,y:.15625},{x:.65625,y:.15625},{x:.65625,y:.15625},{x:.71875,y:.15625},{x:.71875,y:.15625},{x:.78125,y:.15625},{x:.78125,y:.15625},{x:.84375,y:.15625},{x:.84375,y:.15625},{x:.90625,y:.15625},{x:.90625,y:.15625},{x:.96875,y:.15625},{x:.96875,y:.15625},{x:.03125,y:.21875},{x:.03125,y:.21875},{x:.09375,y:.21875},{x:.09375,y:.21875},{x:.15625,y:.21875},{x:.15625,y:.21875},{x:.21875,y:.21875},{x:.21875,y:.21875},{x:.28125,y:.21875},{x:.28125,y:.21875},{x:.34375,y:.21875},{x:.34375,y:.21875},{x:.40625,y:.21875},{x:.40625,y:.21875},{x:.46875,y:.21875},{x:.46875,y:.21875},{x:.53125,y:.21875},{x:.53125,y:.21875},{x:.59375,y:.21875},{x:.59375,y:.21875},{x:.65625,y:.21875},{x:.65625,y:.21875},{x:.71875,y:.21875},{x:.71875,y:.21875},{x:.78125,y:.21875},{x:.78125,y:.21875},{x:.84375,y:.21875},{x:.84375,y:.21875},{x:.90625,y:.21875},{x:.90625,y:.21875},{x:.96875,y:.21875},{x:.96875,y:.21875},{x:.03125,y:.28125},{x:.03125,y:.28125},{x:.09375,y:.28125},{x:.09375,y:.28125},{x:.15625,y:.28125},{x:.15625,y:.28125},{x:.21875,y:.28125},{x:.21875,y:.28125},{x:.28125,y:.28125},{x:.28125,y:.28125},{x:.34375,y:.28125},{x:.34375,y:.28125},{x:.40625,y:.28125},{x:.40625,y:.28125},{x:.46875,y:.28125},{x:.46875,y:.28125},{x:.53125,y:.28125},{x:.53125,y:.28125},{x:.59375,y:.28125},{x:.59375,y:.28125},{x:.65625,y:.28125},{x:.65625,y:.28125},{x:.71875,y:.28125},{x:.71875,y:.28125},{x:.78125,y:.28125},{x:.78125,y:.28125},{x:.84375,y:.28125},{x:.84375,y:.28125},{x:.90625,y:.28125},{x:.90625,y:.28125},{x:.96875,y:.28125},{x:.96875,y:.28125},{x:.03125,y:.34375},{x:.03125,y:.34375},{x:.09375,y:.34375},{x:.09375,y:.34375},{x:.15625,y:.34375},{x:.15625,y:.34375},{x:.21875,y:.34375},{x:.21875,y:.34375},{x:.28125,y:.34375},{x:.28125,y:.34375},{x:.34375,y:.34375},{x:.34375,y:.34375},{x:.40625,y:.34375},{x:.40625,y:.34375},{x:.46875,y:.34375},{x:.46875,y:.34375},{x:.53125,y:.34375},{x:.53125,y:.34375},{x:.59375,y:.34375},{x:.59375,y:.34375},{x:.65625,y:.34375},{x:.65625,y:.34375},{x:.71875,y:.34375},{x:.71875,y:.34375},{x:.78125,y:.34375},{x:.78125,y:.34375},{x:.84375,y:.34375},{x:.84375,y:.34375},{x:.90625,y:.34375},{x:.90625,y:.34375},{x:.96875,y:.34375},{x:.96875,y:.34375},{x:.03125,y:.40625},{x:.03125,y:.40625},{x:.09375,y:.40625},{x:.09375,y:.40625},{x:.15625,y:.40625},{x:.15625,y:.40625},{x:.21875,y:.40625},{x:.21875,y:.40625},{x:.28125,y:.40625},{x:.28125,y:.40625},{x:.34375,y:.40625},{x:.34375,y:.40625},{x:.40625,y:.40625},{x:.40625,y:.40625},{x:.46875,y:.40625},{x:.46875,y:.40625},{x:.53125,y:.40625},{x:.53125,y:.40625},{x:.59375,y:.40625},{x:.59375,y:.40625},{x:.65625,y:.40625},{x:.65625,y:.40625},{x:.71875,y:.40625},{x:.71875,y:.40625},{x:.78125,y:.40625},{x:.78125,y:.40625},{x:.84375,y:.40625},{x:.84375,y:.40625},{x:.90625,y:.40625},{x:.90625,y:.40625},{x:.96875,y:.40625},{x:.96875,y:.40625},{x:.03125,y:.46875},{x:.03125,y:.46875},{x:.09375,y:.46875},{x:.09375,y:.46875},{x:.15625,y:.46875},{x:.15625,y:.46875},{x:.21875,y:.46875},{x:.21875,y:.46875},{x:.28125,y:.46875},{x:.28125,y:.46875},{x:.34375,y:.46875},{x:.34375,y:.46875},{x:.40625,y:.46875},{x:.40625,y:.46875},{x:.46875,y:.46875},{x:.46875,y:.46875},{x:.53125,y:.46875},{x:.53125,y:.46875},{x:.59375,y:.46875},{x:.59375,y:.46875},{x:.65625,y:.46875},{x:.65625,y:.46875},{x:.71875,y:.46875},{x:.71875,y:.46875},{x:.78125,y:.46875},{x:.78125,y:.46875},{x:.84375,y:.46875},{x:.84375,y:.46875},{x:.90625,y:.46875},{x:.90625,y:.46875},{x:.96875,y:.46875},{x:.96875,y:.46875},{x:.03125,y:.53125},{x:.03125,y:.53125},{x:.09375,y:.53125},{x:.09375,y:.53125},{x:.15625,y:.53125},{x:.15625,y:.53125},{x:.21875,y:.53125},{x:.21875,y:.53125},{x:.28125,y:.53125},{x:.28125,y:.53125},{x:.34375,y:.53125},{x:.34375,y:.53125},{x:.40625,y:.53125},{x:.40625,y:.53125},{x:.46875,y:.53125},{x:.46875,y:.53125},{x:.53125,y:.53125},{x:.53125,y:.53125},{x:.59375,y:.53125},{x:.59375,y:.53125},{x:.65625,y:.53125},{x:.65625,y:.53125},{x:.71875,y:.53125},{x:.71875,y:.53125},{x:.78125,y:.53125},{x:.78125,y:.53125},{x:.84375,y:.53125},{x:.84375,y:.53125},{x:.90625,y:.53125},{x:.90625,y:.53125},{x:.96875,y:.53125},{x:.96875,y:.53125},{x:.03125,y:.59375},{x:.03125,y:.59375},{x:.09375,y:.59375},{x:.09375,y:.59375},{x:.15625,y:.59375},{x:.15625,y:.59375},{x:.21875,y:.59375},{x:.21875,y:.59375},{x:.28125,y:.59375},{x:.28125,y:.59375},{x:.34375,y:.59375},{x:.34375,y:.59375},{x:.40625,y:.59375},{x:.40625,y:.59375},{x:.46875,y:.59375},{x:.46875,y:.59375},{x:.53125,y:.59375},{x:.53125,y:.59375},{x:.59375,y:.59375},{x:.59375,y:.59375},{x:.65625,y:.59375},{x:.65625,y:.59375},{x:.71875,y:.59375},{x:.71875,y:.59375},{x:.78125,y:.59375},{x:.78125,y:.59375},{x:.84375,y:.59375},{x:.84375,y:.59375},{x:.90625,y:.59375},{x:.90625,y:.59375},{x:.96875,y:.59375},{x:.96875,y:.59375},{x:.03125,y:.65625},{x:.03125,y:.65625},{x:.09375,y:.65625},{x:.09375,y:.65625},{x:.15625,y:.65625},{x:.15625,y:.65625},{x:.21875,y:.65625},{x:.21875,y:.65625},{x:.28125,y:.65625},{x:.28125,y:.65625},{x:.34375,y:.65625},{x:.34375,y:.65625},{x:.40625,y:.65625},{x:.40625,y:.65625},{x:.46875,y:.65625},{x:.46875,y:.65625},{x:.53125,y:.65625},{x:.53125,y:.65625},{x:.59375,y:.65625},{x:.59375,y:.65625},{x:.65625,y:.65625},{x:.65625,y:.65625},{x:.71875,y:.65625},{x:.71875,y:.65625},{x:.78125,y:.65625},{x:.78125,y:.65625},{x:.84375,y:.65625},{x:.84375,y:.65625},{x:.90625,y:.65625},{x:.90625,y:.65625},{x:.96875,y:.65625},{x:.96875,y:.65625},{x:.03125,y:.71875},{x:.03125,y:.71875},{x:.09375,y:.71875},{x:.09375,y:.71875},{x:.15625,y:.71875},{x:.15625,y:.71875},{x:.21875,y:.71875},{x:.21875,y:.71875},{x:.28125,y:.71875},{x:.28125,y:.71875},{x:.34375,y:.71875},{x:.34375,y:.71875},{x:.40625,y:.71875},{x:.40625,y:.71875},{x:.46875,y:.71875},{x:.46875,y:.71875},{x:.53125,y:.71875},{x:.53125,y:.71875},{x:.59375,y:.71875},{x:.59375,y:.71875},{x:.65625,y:.71875},{x:.65625,y:.71875},{x:.71875,y:.71875},{x:.71875,y:.71875},{x:.78125,y:.71875},{x:.78125,y:.71875},{x:.84375,y:.71875},{x:.84375,y:.71875},{x:.90625,y:.71875},{x:.90625,y:.71875},{x:.96875,y:.71875},{x:.96875,y:.71875},{x:.03125,y:.78125},{x:.03125,y:.78125},{x:.09375,y:.78125},{x:.09375,y:.78125},{x:.15625,y:.78125},{x:.15625,y:.78125},{x:.21875,y:.78125},{x:.21875,y:.78125},{x:.28125,y:.78125},{x:.28125,y:.78125},{x:.34375,y:.78125},{x:.34375,y:.78125},{x:.40625,y:.78125},{x:.40625,y:.78125},{x:.46875,y:.78125},{x:.46875,y:.78125},{x:.53125,y:.78125},{x:.53125,y:.78125},{x:.59375,y:.78125},{x:.59375,y:.78125},{x:.65625,y:.78125},{x:.65625,y:.78125},{x:.71875,y:.78125},{x:.71875,y:.78125},{x:.78125,y:.78125},{x:.78125,y:.78125},{x:.84375,y:.78125},{x:.84375,y:.78125},{x:.90625,y:.78125},{x:.90625,y:.78125},{x:.96875,y:.78125},{x:.96875,y:.78125},{x:.03125,y:.84375},{x:.03125,y:.84375},{x:.09375,y:.84375},{x:.09375,y:.84375},{x:.15625,y:.84375},{x:.15625,y:.84375},{x:.21875,y:.84375},{x:.21875,y:.84375},{x:.28125,y:.84375},{x:.28125,y:.84375},{x:.34375,y:.84375},{x:.34375,y:.84375},{x:.40625,y:.84375},{x:.40625,y:.84375},{x:.46875,y:.84375},{x:.46875,y:.84375},{x:.53125,y:.84375},{x:.53125,y:.84375},{x:.59375,y:.84375},{x:.59375,y:.84375},{x:.65625,y:.84375},{x:.65625,y:.84375},{x:.71875,y:.84375},{x:.71875,y:.84375},{x:.78125,y:.84375},{x:.78125,y:.84375},{x:.84375,y:.84375},{x:.84375,y:.84375},{x:.90625,y:.84375},{x:.90625,y:.84375},{x:.96875,y:.84375},{x:.96875,y:.84375},{x:.03125,y:.90625},{x:.03125,y:.90625},{x:.09375,y:.90625},{x:.09375,y:.90625},{x:.15625,y:.90625},{x:.15625,y:.90625},{x:.21875,y:.90625},{x:.21875,y:.90625},{x:.28125,y:.90625},{x:.28125,y:.90625},{x:.34375,y:.90625},{x:.34375,y:.90625},{x:.40625,y:.90625},{x:.40625,y:.90625},{x:.46875,y:.90625},{x:.46875,y:.90625},{x:.53125,y:.90625},{x:.53125,y:.90625},{x:.59375,y:.90625},{x:.59375,y:.90625},{x:.65625,y:.90625},{x:.65625,y:.90625},{x:.71875,y:.90625},{x:.71875,y:.90625},{x:.78125,y:.90625},{x:.78125,y:.90625},{x:.84375,y:.90625},{x:.84375,y:.90625},{x:.90625,y:.90625},{x:.90625,y:.90625},{x:.96875,y:.90625},{x:.96875,y:.90625},{x:.03125,y:.96875},{x:.03125,y:.96875},{x:.09375,y:.96875},{x:.09375,y:.96875},{x:.15625,y:.96875},{x:.15625,y:.96875},{x:.21875,y:.96875},{x:.21875,y:.96875},{x:.28125,y:.96875},{x:.28125,y:.96875},{x:.34375,y:.96875},{x:.34375,y:.96875},{x:.40625,y:.96875},{x:.40625,y:.96875},{x:.46875,y:.96875},{x:.46875,y:.96875},{x:.53125,y:.96875},{x:.53125,y:.96875},{x:.59375,y:.96875},{x:.59375,y:.96875},{x:.65625,y:.96875},{x:.65625,y:.96875},{x:.71875,y:.96875},{x:.71875,y:.96875},{x:.78125,y:.96875},{x:.78125,y:.96875},{x:.84375,y:.96875},{x:.84375,y:.96875},{x:.90625,y:.96875},{x:.90625,y:.96875},{x:.96875,y:.96875},{x:.96875,y:.96875},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375}],pbe=class{constructor(e){me(this,"model"),me(this,"anchors"),me(this,"anchorsTensor"),me(this,"inputSize"),me(this,"inputSizeTensor"),me(this,"doubleInputSizeTensor");var t,n,s,r;this.model=e,this.anchors=hbe.map(a=>[a.x,a.y]),this.anchorsTensor=Kr(this.anchors),this.inputSize=((r=(s=(n=(t=this==null?void 0:this.model)==null?void 0:t.inputs)==null?void 0:n[0])==null?void 0:s.shape)==null?void 0:r[2])||0,this.inputSizeTensor=qt([this.inputSize,this.inputSize]),this.doubleInputSizeTensor=qt([this.inputSize*2,this.inputSize*2])}normalizeBoxes(e){let t={};t.boxOffsets=ze(e,[0,0],[-1,2]),t.boxSizes=ze(e,[0,2],[-1,2]),t.div=Ae(t.boxOffsets,this.inputSizeTensor),t.boxCenterPoints=ce(t.div,this.anchorsTensor),t.halfBoxSizes=Ae(t.boxSizes,this.doubleInputSizeTensor),t.sub=ge(t.boxCenterPoints,t.halfBoxSizes),t.startPoints=L(t.sub,this.inputSizeTensor),t.add=ce(t.boxCenterPoints,t.halfBoxSizes),t.endPoints=L(t.add,this.inputSizeTensor);let n=tp([t.startPoints,t.endPoints],1);return Object.keys(t).forEach(s=>le(t[s])),n}normalizeLandmarks(e,t){let n={};n.reshape=U(e,[-1,7,2]),n.div=Ae(n.reshape,this.inputSizeTensor),n.landmarks=ce(n.div,this.anchors[t]?this.anchors[t]:0);let s=L(n.landmarks,this.inputSizeTensor);return Object.keys(n).forEach(r=>le(n[r])),s}async predict(e,t){var n;let s={};s.resize=He.resizeBilinear(e,[this.inputSize,this.inputSize]),s.div=Ae(s.resize,kt.tf127),s.image=ge(s.div,kt.tf1),s.batched=this.model.execute(s.image),s.predictions=mt(s.batched),s.slice=ze(s.predictions,[0,0],[-1,1]),s.sigmoid=Ts(s.slice),s.scores=mt(s.sigmoid);let r=await s.scores.data();s.boxes=ze(s.predictions,[0,1],[-1,4]),s.norm=this.normalizeBoxes(s.boxes),s.nms=await He.nonMaxSuppressionAsync(s.norm,s.scores,3*(((n=t.hand)==null?void 0:n.maxDetected)||1),t.hand.iouThreshold,t.hand.minConfidence);let a=await s.nms.array(),o=[];for(let i of a){let l={};l.box=ze(s.norm,[i,0],[1,-1]),l.slice=ze(s.predictions,[i,5],[1,14]),l.norm=this.normalizeLandmarks(l.slice,i),l.palmLandmarks=U(l.norm,[-1,2]);let u=await l.box.data(),c=u.slice(0,2),h=u.slice(2,4),d=await l.palmLandmarks.array(),p={startPoint:c,endPoint:h,palmLandmarks:d,confidence:r[i]},f=ibe(p,[(e.shape[2]||1)/this.inputSize,(e.shape[1]||0)/this.inputSize]);o.push(f),Object.keys(l).forEach(m=>le(l[m]))}return Object.keys(s).forEach(i=>le(s[i])),o}},fbe=5,$k=1.65,Dk=[0,5,9,13,17,1,2],mbe=0,gbe=2,Fk=0,ybe=class{constructor(e,t){me(this,"handDetector"),me(this,"handPoseModel"),me(this,"inputSize"),me(this,"storedBoxes"),me(this,"skipped"),me(this,"detectedHands");var n,s,r;this.handDetector=e,this.handPoseModel=t,this.inputSize=((r=(s=(n=this.handPoseModel)==null?void 0:n.inputs)==null?void 0:s[0].shape)==null?void 0:r[2])||0,this.storedBoxes=[],this.skipped=Number.MAX_SAFE_INTEGER,this.detectedHands=0}calculateLandmarksBoundingBox(e){let t=e.map(a=>a[0]),n=e.map(a=>a[1]),s=[Math.min(...t),Math.min(...n)],r=[Math.max(...t),Math.max(...n)];return{startPoint:s,endPoint:r}}getBoxForPalmLandmarks(e,t){let n=e.map(r=>Rk([...r,1],t)),s=this.calculateLandmarksBoundingBox(n);return rA(aA(s),fbe)}getBoxForHandLandmarks(e){let t=this.calculateLandmarksBoundingBox(e),n=rA(aA(t),$k);n.palmLandmarks=[];for(let s=0;s<Dk.length;s++)n.palmLandmarks.push(e[Dk[s]].slice(0,2));return n}transformRawCoords(e,t,n,s){let r=Av(t),a=[r[0]/this.inputSize,r[1]/this.inputSize,(r[0]+r[1])/this.inputSize/2],o=e.map(d=>[a[0]*(d[0]-this.inputSize/2),a[1]*(d[1]-this.inputSize/2),a[2]*d[2]]),i=_k(n,[0,0]),l=o.map(d=>[...Rk(d,i),d[2]]),u=dbe(s),c=[...Hm(t),1],h=[ul(c,u[0]),ul(c,u[1])];return l.map(d=>[Math.trunc(d[0]+h[0]),Math.trunc(d[1]+h[1]),Math.trunc(d[2])])}async estimateHands(e,t){let n=!1,s,r=(t.hand.skipTime||0)>pe()-Fk,a=this.skipped<(t.hand.skipFrames||0);t.skipAllowed&&r&&a&&(s=await this.handDetector.predict(e,t),this.skipped=0),t.skipAllowed&&this.skipped++,s&&s.length>0&&(s.length!==this.detectedHands&&this.detectedHands!==t.hand.maxDetected||!t.hand.landmarks)&&(this.detectedHands=0,this.storedBoxes=[...s],this.storedBoxes.length>0&&(n=!0));let o=[];for(let i=0;i<this.storedBoxes.length;i++){let l=this.storedBoxes[i];if(!!l)if(t.hand.landmarks){let u=t.hand.rotation?ube(l.palmLandmarks[mbe],l.palmLandmarks[gbe]):0,c=Hm(l),h=[c[0]/e.shape[2],c[1]/e.shape[1]],d=t.hand.rotation&&ke.kernels.includes("rotatewithoffset")?He.rotateWithOffset(e,u,0,h):e.clone(),p=_k(-u,c),f=n?this.getBoxForPalmLandmarks(l.palmLandmarks,p):l,m=obe(f,d,[this.inputSize,this.inputSize]),g=Ae(m,kt.tf255);le(m),le(d);let[y,x]=this.handPoseModel.execute(g);Fk=pe(),le(g);let A=(await y.data())[0];if(le(y),A>=t.hand.minConfidence/4){let b=U(x,[-1,3]),w=await b.array();le(x),le(b);let S=this.transformRawCoords(w,f,u,p),C=this.getBoxForHandLandmarks(S);this.storedBoxes[i]={...C,confidence:A};let _={landmarks:S,confidence:A,boxConfidence:l.confidence,fingerConfidence:A,box:{topLeft:C.startPoint,bottomRight:C.endPoint}};o.push(_)}else this.storedBoxes[i]=null;le(x)}else{let u=rA(aA(l),$k),c={confidence:l.confidence,boxConfidence:l.confidence,fingerConfidence:0,box:{topLeft:u.startPoint,bottomRight:u.endPoint},landmarks:[]};o.push(c)}}return this.storedBoxes=this.storedBoxes.filter(i=>i!==null),this.detectedHands=o.length,o.length>t.hand.maxDetected&&(o.length=t.hand.maxDetected),o}},Is={thumb:0,index:1,middle:2,ring:3,pinky:4,all:[0,1,2,3,4],nameMapping:{0:"thumb",1:"index",2:"middle",3:"ring",4:"pinky"},pointsMapping:{0:[[0,1],[1,2],[2,3],[3,4]],1:[[0,5],[5,6],[6,7],[7,8]],2:[[0,9],[9,10],[10,11],[11,12]],3:[[0,13],[13,14],[14,15],[15,16]],4:[[0,17],[17,18],[18,19],[19,20]]},getName:e=>Is.nameMapping[e],getPoints:e=>Is.pointsMapping[e]},qu={none:0,half:1,full:2,nameMapping:{0:"none",1:"half",2:"full"},getName:e=>qu.nameMapping[e]},Ht={verticalUp:0,verticalDown:1,horizontalLeft:2,horizontalRight:3,diagonalUpRight:4,diagonalUpLeft:5,diagonalDownRight:6,diagonalDownLeft:7,nameMapping:{0:"verticalUp",1:"verticalDown",2:"horizontalLeft",3:"horizontalRight",4:"diagonalUpRight",5:"diagonalUpLeft",6:"diagonalDownRight",7:"diagonalDownLeft"},getName:e=>Ht.nameMapping[e]},zp=class{constructor(e){me(this,"name"),me(this,"curls"),me(this,"directions"),me(this,"weights"),me(this,"weightsRelative"),this.name=e,this.curls={},this.directions={},this.weights=[1,1,1,1,1],this.weightsRelative=[1,1,1,1,1]}curl(e,t,n){typeof this.curls[e]>"u"&&(this.curls[e]=[]),this.curls[e].push([t,n])}direction(e,t,n){this.directions[e]||(this.directions[e]=[]),this.directions[e].push([t,n])}weight(e,t){this.weights[e]=t;let n=this.weights.reduce((s,r)=>s+r,0);this.weightsRelative=this.weights.map(s=>s*5/n)}matchAgainst(e,t){let n=0;for(let s in e){let r=e[s],a=this.curls[s];if(typeof a>"u"){n+=this.weightsRelative[s];continue}for(let[o,i]of a)if(r===o){n+=i*this.weightsRelative[s];break}}for(let s in t){let r=t[s],a=this.directions[s];if(typeof a>"u"){n+=this.weightsRelative[s];continue}for(let[o,i]of a)if(r===o){n+=i*this.weightsRelative[s];break}}return n/10}},{thumb:Pr,index:Ta,middle:Na,ring:cu,pinky:du}=Is,{none:Mr,half:Abe,full:zr}=qu,{verticalUp:pd,verticalDown:H5e,horizontalLeft:xv,horizontalRight:xbe,diagonalUpRight:bbe,diagonalUpLeft:fd,diagonalDownRight:j5e,diagonalDownLeft:q5e}=Ht,Za=new zp("thumbs up");Za.curl(Pr,Mr,1);Za.direction(Pr,pd,1);Za.direction(Pr,fd,.25);Za.direction(Pr,bbe,.25);for(let e of[Is.index,Is.middle,Is.ring,Is.pinky])Za.curl(e,zr,1),Za.direction(e,xv,1),Za.direction(e,xbe,1);var sn=new zp("victory");sn.curl(Pr,Abe,.5);sn.curl(Pr,Mr,.5);sn.direction(Pr,pd,1);sn.direction(Pr,fd,1);sn.curl(Ta,Mr,1);sn.direction(Ta,pd,.75);sn.direction(Ta,fd,1);sn.curl(Na,Mr,1);sn.direction(Na,pd,1);sn.direction(Na,fd,.75);sn.curl(cu,zr,1);sn.direction(cu,pd,.2);sn.direction(cu,fd,1);sn.direction(cu,xv,.2);sn.curl(du,zr,1);sn.direction(du,pd,.2);sn.direction(du,fd,1);sn.direction(du,xv,.2);sn.weight(Ta,2);sn.weight(Na,2);var mi=new zp("point");mi.curl(Pr,zr,1);mi.curl(Ta,Mr,.5);mi.curl(Na,zr,.5);mi.curl(cu,zr,.5);mi.curl(du,zr,.5);mi.weight(Ta,2);mi.weight(Na,2);var gi=new zp("middle finger");gi.curl(Pr,Mr,1);gi.curl(Ta,zr,.5);gi.curl(Na,zr,.5);gi.curl(cu,zr,.5);gi.curl(du,zr,.5);gi.weight(Ta,2);gi.weight(Na,2);var md=new zp("open palm");md.curl(Pr,Mr,.75);md.curl(Ta,Mr,.75);md.curl(Na,Mr,.75);md.curl(cu,Mr,.75);md.curl(du,Mr,.75);var vbe=[Za,sn,mi,gi,md],wbe=.7,Pi={HALF_CURL_START_LIMIT:60,NO_CURL_START_LIMIT:130,DISTANCE_VOTE_POWER:1.1,SINGLE_ANGLE_VOTE_POWER:.9,TOTAL_ANGLE_VOTE_POWER:1.6};function Ok(e,t,n,s){let r=(t-s)/(e-n),a=Math.atan(r)*180/Math.PI;return a<=0?a=-a:a>0&&(a=180-a),a}function JE(e,t){if(!e||!t)return[0,0];let n=Ok(e[0],e[1],t[0],t[1]);if(e.length===2)return n;let s=Ok(e[1],e[2],t[1],t[2]);return[n,s]}function Pk(e,t=1){let n=0,s=0,r=0;return e>=75&&e<=105?n=1*t:e>=25&&e<=155?s=1*t:r=1*t,[n,s,r]}function kbe(e,t,n){let s=e[0]-t[0],r=e[0]-n[0],a=t[0]-n[0],o=e[1]-t[1],i=e[1]-n[1],l=t[1]-n[1],u=e[2]-t[2],c=e[2]-n[2],h=t[2]-n[2],d=Math.sqrt(s*s+o*o+u*u),p=Math.sqrt(r*r+i*i+c*c),f=Math.sqrt(a*a+l*l+h*h),m=(f*f+d*d-p*p)/(2*f*d);m>1?m=1:m<-1&&(m=-1);let g=Math.acos(m);g=57.2958*g%180;let y;return g>Pi.NO_CURL_START_LIMIT?y=qu.none:g>Pi.HALF_CURL_START_LIMIT?y=qu.half:y=qu.full,y}function QE(e,t,n,s){let r;return s===Math.abs(e)?e>0?r=Ht.horizontalLeft:r=Ht.horizontalRight:s===Math.abs(t)?t>0?r=Ht.horizontalLeft:r=Ht.horizontalRight:n>0?r=Ht.horizontalLeft:r=Ht.horizontalRight,r}function e9(e,t,n,s){let r;return s===Math.abs(e)?e<0?r=Ht.verticalDown:r=Ht.verticalUp:s===Math.abs(t)?t<0?r=Ht.verticalDown:r=Ht.verticalUp:n<0?r=Ht.verticalDown:r=Ht.verticalUp,r}function Sbe(e,t,n,s,r,a,o,i){let l,u=e9(e,t,n,s),c=QE(r,a,o,i);return u===Ht.verticalUp?c===Ht.horizontalLeft?l=Ht.diagonalUpLeft:l=Ht.diagonalUpRight:c===Ht.horizontalLeft?l=Ht.diagonalDownLeft:l=Ht.diagonalDownRight,l}function Ibe(e,t,n,s){let r=e[0]-t[0],a=e[0]-n[0],o=t[0]-n[0],i=e[1]-t[1],l=e[1]-n[1],u=t[1]-n[1],c=Math.max(Math.abs(r),Math.abs(a),Math.abs(o)),h=Math.max(Math.abs(i),Math.abs(l),Math.abs(u)),d=0,p=0,f=0,m=h/(c+1e-5);m>1.5?d+=Pi.DISTANCE_VOTE_POWER:m>.66?p+=Pi.DISTANCE_VOTE_POWER:f+=Pi.DISTANCE_VOTE_POWER;let g=Math.sqrt(r*r+i*i),y=Math.sqrt(a*a+l*l),x=Math.sqrt(o*o+u*u),A=Math.max(g,y,x),b=e[0],w=e[1],S=n[0],C=n[1];A===g?(S=n[0],C=n[1]):A===x&&(b=t[0],w=t[1]);let D=JE([b,w],[S,C]),E=Pk(D,Pi.TOTAL_ANGLE_VOTE_POWER);d+=E[0],p+=E[1],f+=E[2];for(let k of s){let M=Pk(k,Pi.SINGLE_ANGLE_VOTE_POWER);d+=M[0],p+=M[1],f+=M[2]}let F;return d===Math.max(d,p,f)?F=e9(l,i,u,h):f===Math.max(p,f)?F=QE(a,r,o,c):F=Sbe(l,i,u,h,a,r,o,c),F}function t9(e){let t=[],n=[],s=[],r=[];if(!e)return{curls:s,directions:r};for(let a of Is.all){let o=Is.getPoints(a),i=[],l=[];for(let u of o){let c=e[u[0]],h=e[u[1]],d=JE(c,h),p=d[0],f=d[1];i.push(p),l.push(f)}t.push(i),n.push(l)}for(let a of Is.all){let o=a===Is.thumb?1:0,i=Is.getPoints(a),l=e[i[o][0]],u=e[i[o+1][1]],c=e[i[3][1]],h=kbe(l,u,c),d=Ibe(l,u,c,t[a].slice(o));s[a]=h,r[a]=d}return{curls:s,directions:r}}function n9(e){if(!e||e.length===0)return null;let t=t9(e),n={};for(let s of Is.all)n[Is.getName(s)]={curl:qu.getName(t.curls[s]),direction:Ht.getName(t.directions[s])};return n}function Cbe(e){let t=[];if(!e||e.length===0)return t;let n=t9(e);for(let s of vbe){let r=s.matchAgainst(n.curls,n.directions);r>=wbe&&t.push({name:s.name,confidence:r})}return t}var Mk={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],palm:[0]},Ii,Ci,s9;async function zk(e,t){let n=await s9.estimateHands(e,t);if(!n)return[];let s=[];for(let r=0;r<n.length;r++){let a={};if(n[r].landmarks)for(let c of Object.keys(Mk))a[c]=Mk[c].map(h=>n[r].landmarks[h]);let o=n[r].landmarks,i=[Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,0,0],l=[0,0,0,0];if(o&&o.length>0){for(let c of o)c[0]<i[0]&&(i[0]=c[0]),c[1]<i[1]&&(i[1]=c[1]),c[0]>i[2]&&(i[2]=c[0]),c[1]>i[3]&&(i[3]=c[1]);i[2]-=i[0],i[3]-=i[1],l=[i[0]/(e.shape[2]||0),i[1]/(e.shape[1]||0),i[2]/(e.shape[2]||0),i[3]/(e.shape[1]||0)]}else i=n[r].box?[Math.trunc(Math.max(0,n[r].box.topLeft[0])),Math.trunc(Math.max(0,n[r].box.topLeft[1])),Math.trunc(Math.min(e.shape[2]||0,n[r].box.bottomRight[0])-Math.max(0,n[r].box.topLeft[0])),Math.trunc(Math.min(e.shape[1]||0,n[r].box.bottomRight[1])-Math.max(0,n[r].box.topLeft[1]))]:[0,0,0,0],l=[n[r].box.topLeft[0]/(e.shape[2]||0),n[r].box.topLeft[1]/(e.shape[1]||0),(n[r].box.bottomRight[0]-n[r].box.topLeft[0])/(e.shape[2]||0),(n[r].box.bottomRight[1]-n[r].box.topLeft[1])/(e.shape[1]||0)];let u=n9(o);s.push({id:r,score:Math.round(100*n[r].confidence)/100,boxScore:Math.round(100*n[r].boxConfidence)/100,fingerScore:Math.round(100*n[r].fingerConfidence)/100,label:"hand",box:i,boxRaw:l,keypoints:o,annotations:a,landmarks:u})}return s}async function Lk(e){var t,n;ke.initial&&(Ii=null,Ci=null),!Ii||!Ci?[Ii,Ci]=await Promise.all([e.hand.enabled?Dt((t=e.hand.detector)==null?void 0:t.modelPath):null,e.hand.landmarks?Dt((n=e.hand.skeleton)==null?void 0:n.modelPath):null]):(e.debug&&he("cached model:",Ii.modelUrl),e.debug&&he("cached model:",Ci.modelUrl));let s=Ii?new pbe(Ii):void 0;return s&&Ci&&(s9=new ybe(s,Ci)),[Ii,Ci]}var _t={name:"humangl",priority:999,canvas:null,gl:null,extensions:[],webGLattr:{alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!1,desynchronized:!0}};function Tbe(){let e=_t.gl;!e||(_t.extensions=e.getSupportedExtensions())}function Nbe(e){var t;if(e.config.backend==="humangl"&&(_t.name in bn().registry&&!((t=_t?.gl)!=null&&t.getParameter(_t.gl.VERSION))&&(he("humangl error: backend invalid context"),wv(e)),!ZS(_t.name))){try{_t.canvas=Er(100,100)}catch(s){he("humangl error: cannot create canvas:",s);return}try{if(_t.gl=_t.canvas.getContext("webgl2",_t.webGLattr),!_t.gl){he("humangl error: cannot get webgl context");return}if(!_t.gl.getParameter(_t.gl.VERSION).includes("2.0")){he("backend override: using fallback webgl backend as webgl 2.0 is not detected"),e.config.backend="webgl";return}_t.canvas&&(_t.canvas.addEventListener("webglcontextlost",r=>{throw he("humangl error:",r.type),he("possible browser memory leak using webgl or conflict with multiple backend registrations"),e.emit("error"),new Error("backend error: webgl context lost")}),_t.canvas.addEventListener("webglcontextrestored",r=>{he("humangl error: context restored:",r)}),_t.canvas.addEventListener("webglcontextcreationerror",r=>{he("humangl error: context create:",r)}))}catch(s){he("humangl error: cannot get webgl context:",s);return}try{X5(2,_t.gl)}catch(s){he("humangl error: cannot set webgl context:",s);return}try{let s=new nh(_t.gl);Lc(_t.name,()=>new Ep(s),_t.priority)}catch(s){he("humangl error: cannot register webgl backend:",s);return}try{Xi("webgl").forEach(r=>{let a={...r,backendName:_t.name};Ir(a)})}catch(s){he("humangl error: cannot update webgl backend registration:",s);return}try{K().flagRegistry.WEBGL_VERSION&&K().set("WEBGL_VERSION",2)}catch(s){he("humangl error: cannot set WebGL backend flags:",s);return}Tbe();let n=yr().getGPGPUContext?yr().getGPGPUContext().gl:null;n?e.config.debug&&he("humangl backend registered:",{webgl:n.getParameter(n.VERSION),renderer:n.getParameter(n.RENDERER)}):he("humangl error: no current gl context:",n,_t.gl)}}function Ebe(e){let t=[];if(!ke.kernels.includes("mod")){let n={kernelName:"Mod",backendName:vn(),kernelFunc:s=>Y(()=>ge(s.inputs.a,L(Ae(s.inputs.a,s.inputs.b),s.inputs.b)))};Ir(n),ke.kernels.push("mod"),t.push("mod")}if(!ke.kernels.includes("floormod")){let n={kernelName:"FloorMod",backendName:vn(),kernelFunc:s=>Y(()=>ce(L(Yh(s.inputs.a/s.inputs.b),s.inputs.b),ip(s.inputs.a,s.inputs.b)))};Ir(n),ke.kernels.push("floormod"),t.push("floormod")}if(!ke.kernels.includes("rotatewithoffset")&&e.softwareKernels){let n={kernelName:"RotateWithOffset",backendName:vn(),kernelFunc:s=>Y(()=>{let r=vn();bm("cpu");let a=He.rotateWithOffset(s.inputs.image,s.attrs.radians,s.attrs.fillValue,s.attrs.center);return bm(r),a})};Ir(n),ke.kernels.push("rotatewithoffset"),t.push("rotatewithoffset")}t.length>0&&e.debug&&he("registered kernels:",t)}var Bk={};async function k2(e,t=!1){if(e.state="backend",t||ke.initial||e.config.backend&&e.config.backend.length>0&&vn()!==e.config.backend){let n=pe();if(e.config.backend&&e.config.backend.length>0){if(typeof window>"u"&&typeof WorkerGlobalScope<"u"&&e.config.debug&&e.config.debug&&he("running inside web worker"),ke.browser&&e.config.backend==="tensorflow"&&(e.config.debug&&he("override: backend set to tensorflow while running in browser"),e.config.backend="webgl"),ke.node&&(e.config.backend==="webgl"||e.config.backend==="humangl")&&(e.config.debug&&he(`override: backend set to ${e.config.backend} while running in nodejs`),e.config.backend="tensorflow"),ke.browser&&e.config.backend==="webgpu")if(typeof navigator>"u"||typeof navigator.gpu>"u")he("override: backend set to webgpu but browser does not support webgpu"),e.config.backend="webgl";else{let r=await navigator.gpu.requestAdapter();if(e.config.debug&&he("enumerated webgpu adapter:",r),!r)he("override: backend set to webgpu but browser reports no available gpu"),e.config.backend="webgl";else{let a="requestAdapterInfo"in r?await r.requestAdapterInfo():void 0;he("webgpu adapter info:",a)}}let s=Object.keys(bn().registryFactory);if(e.config.backend==="humangl"&&!s.includes("humangl")&&(Nbe(e),s=Object.keys(bn().registryFactory)),e.config.debug&&he("available backends:",s),s.includes(e.config.backend)||(he(`error: backend ${e.config.backend} not found in registry`),e.config.backend=ke.node?"tensorflow":"webgl",e.config.debug&&he(`override: setting backend ${e.config.backend}`)),e.config.debug&&he("setting backend:",[e.config.backend]),e.config.backend==="wasm"){if(K().flagRegistry.CANVAS2D_WILL_READ_FREQUENTLY&&K().set("CANVAS2D_WILL_READ_FREQUENTLY",!0),e.config.debug&&he("wasm path:",e.config.wasmPath),typeof f2<"u")f2(e.config.wasmPath,e.config.wasmPlatformFetch);else throw new Error("backend error: attempting to use wasm backend but wasm path is not set");let r=!1,a=!1;try{r=await K().getAsync("WASM_HAS_MULTITHREAD_SUPPORT"),a=await K().getAsync("WASM_HAS_SIMD_SUPPORT"),e.config.debug&&he(`wasm execution: ${a?"simd":"no simd"} ${r?"multithreaded":"singlethreaded"}`),e.config.debug&&!a&&he("warning: wasm simd support is not enabled")}catch{he("wasm detection failed")}}try{await bm(e.config.backend),await G2()}catch(r){return he("error: cannot set backend:",e.config.backend,r),!1}e.config.debug&&(Bk=JSON.parse(JSON.stringify(K().flags)))}if((vn()==="humangl"||vn()==="webgl")&&(K().flagRegistry.WEBGL_USE_SHAPES_UNIFORMS&&K().set("WEBGL_USE_SHAPES_UNIFORMS",!0),K().flagRegistry.WEBGL_EXP_CONV&&K().set("WEBGL_EXP_CONV",!0),e.config.debug&&typeof e.config.deallocate<"u"&&e.config.deallocate&&(he("changing webgl: WEBGL_DELETE_TEXTURE_THRESHOLD:",!0),K().set("WEBGL_DELETE_TEXTURE_THRESHOLD",0))),vn(),e.config.debug){let s=K().flags,r={};for(let a of Object.keys(s))Bk[a]!==s[a]&&(r[a]=s[a]);e.config.debug&&Object.keys(r).length>0&&he("backend:",vn(),"flags:",r)}if(e.config.flags&&Object.keys(e.config.flags).length>0){e.config.debug&&he("flags:",e.config.flags);for(let[s,r]of Object.entries(e.config.flags))K().set(s,r)}KS(),G2e(),e.performance.initBackend=Math.trunc(pe()-n),e.config.backend=vn(),await ke.updateBackend(),Ebe(e.config),ke.initial=!1}return!0}function r9(e,t){for(let n of e){let s={kernelName:n,backendName:t.backend,kernelFunc:()=>{t.debug&&he("kernelFunc",n,t.backend)}};Ir(s)}ke.kernels=Xi(vn()).map(n=>n.kernelName.toLowerCase())}var jt=[null,null],_be=["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],Ga=[[0,0],[0,0]],Rbe=["hand","fist","pinch","point","face","tip","pinchtip"],Wk=4,Vk=1.6,$be=512,Dbe=1.4,jf=Number.MAX_SAFE_INTEGER,oA=0,pa=[0,0],Ut={boxes:[],hands:[]},Uk={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],base:[0],palm:[0,17,13,9,5,1,0]};async function Fbe(e){var t;if(ke.initial&&(jt[0]=null),jt[0])e.debug&&he("cached model:",jt[0].modelUrl);else{r9(["tensorlistreserve","enter","tensorlistfromtensor","merge","loopcond","switch","exit","tensorliststack","nextiteration","tensorlistsetitem","tensorlistgetitem","reciprocal","shape","split","where"],e),jt[0]=await Dt((t=e.hand.detector)==null?void 0:t.modelPath);let n=jt[0].executor?Object.values(jt[0].modelSignature.inputs):void 0;Ga[0][0]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[1].size):0,Ga[0][1]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[2].size):0}return jt[0]}async function Obe(e){var t;if(ke.initial&&(jt[1]=null),jt[1])e.debug&&he("cached model:",jt[1].modelUrl);else{jt[1]=await Dt((t=e.hand.skeleton)==null?void 0:t.modelPath);let n=jt[1].executor?Object.values(jt[1].modelSignature.inputs):void 0;Ga[1][0]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[1].size):0,Ga[1][1]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[2].size):0}return jt[1]}async function Pbe(e,t){let n=[];if(!e||!jt[0])return n;let s={},r=(e.shape[2]||1)/(e.shape[1]||1),a=Math.min(Math.round((e.shape[1]||0)/8)*8,$be),o=Math.round(a*r/8)*8;s.resize=He.resizeBilinear(e,[a,o]),s.cast=fe(s.resize,"int32"),[s.rawScores,s.rawBoxes]=await jt[0].executeAsync(s.cast,_be),s.boxes=mt(s.rawBoxes,[0,2]),s.scores=mt(s.rawScores,[0]);let i=ds(s.scores,1);le(i[Wk]),i.splice(Wk,1),s.filtered=Pn(i,1),le(i),s.max=Dn(s.filtered,1),s.argmax=Jr(s.filtered,1);let l=0;s.nms=await He.nonMaxSuppressionAsync(s.boxes,s.max,(t.hand.maxDetected||0)+1,t.hand.iouThreshold||0,t.hand.minConfidence||1);let u=await s.nms.data(),c=await s.max.data(),h=await s.argmax.data();for(let d of Array.from(u)){let p=ze(s.boxes,d,1),f=await p.data();le(p);let m=[f[1],f[0],f[3]-f[1],f[2]-f[0]],g=v2(m,Dbe),y=[Math.trunc(m[0]*pa[0]),Math.trunc(m[1]*pa[1]),Math.trunc(m[2]*pa[0]),Math.trunc(m[3]*pa[1])],x=c[d],A=Rbe[h[d]],b={id:l++,score:x,box:y,boxRaw:g,label:A};n.push(b)}return Object.keys(s).forEach(d=>le(s[d])),n.sort((d,p)=>p.score-d.score),n.length>(t.hand.maxDetected||1)&&(n.length=t.hand.maxDetected||1),n}async function iA(e,t,n){let s={id:t.id,score:Math.round(100*t.score)/100,boxScore:Math.round(100*t.score)/100,fingerScore:0,box:t.box,boxRaw:t.boxRaw,label:t.label,keypoints:[],landmarks:{},annotations:{}};if(e&&jt[1]&&n.hand.landmarks&&t.score>(n.hand.minConfidence||0)){let r={},a=[t.boxRaw[1],t.boxRaw[0],t.boxRaw[3]+t.boxRaw[1],t.boxRaw[2]+t.boxRaw[0]];r.crop=He.cropAndResize(e,[a],[0],[Ga[1][0],Ga[1][1]],"bilinear"),r.div=Ae(r.crop,kt.tf255),[r.score,r.keypoints]=jt[1].execute(r.div,["Identity_1","Identity"]);let o=(await r.score.data())[0],i=(100-Math.trunc(100/(1+Math.exp(o))))/100;if(i>=(n.hand.minConfidence||0)){s.fingerScore=i,r.reshaped=U(r.keypoints,[-1,3]);let c=(await r.reshaped.array()).map(h=>[h[0]/Ga[1][1],h[1]/Ga[1][0],h[2]||0]).map(h=>[h[0]*t.boxRaw[2],h[1]*t.boxRaw[3],h[2]||0]);s.keypoints=c.map(h=>[pa[0]*(h[0]+t.boxRaw[0]),pa[1]*(h[1]+t.boxRaw[1]),h[2]||0]),s.landmarks=n9(s.keypoints);for(let h of Object.keys(Uk))s.annotations[h]=Uk[h].map(d=>s.landmarks&&s.keypoints[d]?s.keypoints[d]:null)}Object.keys(r).forEach(l=>le(r[l]))}return s}async function Gk(e,t){var n,s;if(!((n=jt[0])!=null&&n.executor)||!((s=jt[1])!=null&&s.executor)||!jt[0].inputs[0].shape||!jt[1].inputs[0].shape)return[];pa=[e.shape[2]||0,e.shape[1]||0],jf++;let r=(t.hand.skipTime||0)>pe()-oA,a=jf<(t.hand.skipFrames||0);return t.skipAllowed&&r&&a?Ut.hands:new Promise(async o=>{let i=3*(t.hand.skipTime||0)>pe()-oA,l=jf<3*(t.hand.skipFrames||0);t.skipAllowed&&Ut.hands.length===t.hand.maxDetected?Ut.hands=await Promise.all(Ut.boxes.map(c=>iA(e,c,t))):t.skipAllowed&&i&&l&&Ut.hands.length>0?Ut.hands=await Promise.all(Ut.boxes.map(c=>iA(e,c,t))):(Ut.boxes=await Pbe(e,t),oA=pe(),Ut.hands=await Promise.all(Ut.boxes.map(c=>iA(e,c,t))),jf=0);let u=[...Ut.boxes];if(Ut.boxes.length=0,t.cacheSensitivity>0)for(let c=0;c<Ut.hands.length;c++){let h=Sxe(Ut.hands[c].keypoints,pa);if(h.box[2]/(e.shape[2]||1)>.05&&h.box[3]/(e.shape[1]||1)>.05&&Ut.hands[c].fingerScore&&Ut.hands[c].fingerScore>(t.hand.minConfidence||0)){let d=v2(h.box,Vk),p=v2(h.boxRaw,Vk);Ut.boxes.push({...u[c],box:d,boxRaw:p})}}for(let c=0;c<Ut.hands.length;c++){let h=Mp(Ut.hands[c].keypoints,pa);Ut.hands[c].box=h.box,Ut.hands[c].boxRaw=h.boxRaw}o(Ut.hands)})}var as,qf=[],lA=Number.MAX_SAFE_INTEGER,Hk=0,jk=0;async function Mbe(e){var t;return ke.initial&&(as=null),as?e.debug&&he("cached model:",as.modelUrl):as=await Dt((t=e.face.liveness)==null?void 0:t.modelPath),as}async function qk(e,t,n,s){var r,a;if(!as?.executor)return 0;let o=(((r=t.face.liveness)==null?void 0:r.skipTime)||0)>pe()-jk,i=lA<(((a=t.face.liveness)==null?void 0:a.skipFrames)||0);return t.skipAllowed&&o&&i&&Hk===s&&qf[n]?(lA++,qf[n]):(lA=0,new Promise(async l=>{let u=He.resizeBilinear(e,[as?.inputs[0].shape?as.inputs[0].shape[2]:0,as?.inputs[0].shape?as.inputs[0].shape[1]:0],!1),c=as?.execute(u),h=(await c.data())[0];qf[n]=Math.round(100*h)/100,Hk=s,jk=pe(),le([u,c]),l(qf[n])}))}var a9={};lo(a9,{connected:()=>vv,horizontal:()=>o9,kpt:()=>bv,relative:()=>l9,vertical:()=>i9});var bv=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],o9=[["leftEye","rightEye"],["leftEar","rightEar"],["leftShoulder","rightShoulder"],["leftElbow","rightElbow"],["leftWrist","rightWrist"],["leftHip","rightHip"],["leftKnee","rightKnee"],["leftAnkle","rightAnkle"]],i9=[["leftKnee","leftShoulder"],["rightKnee","rightShoulder"],["leftAnkle","leftKnee"],["rightAnkle","rightKnee"]],l9=[[["leftHip","rightHip"],["leftShoulder","rightShoulder"]],[["leftElbow","rightElbow"],["leftShoulder","rightShoulder"]]],vv={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]},Xk=.005,ws={keypoints:[],padding:[[0,0],[0,0],[0,0],[0,0]]};function u9(e){for(let t of o9){let n=e.keypoints.findIndex(r=>r.part===t[0]),s=e.keypoints.findIndex(r=>r.part===t[1]);if(e.keypoints[n]&&e.keypoints[s]&&e.keypoints[n].position[0]<e.keypoints[s].position[0]){let r=e.keypoints[n];e.keypoints[n]=e.keypoints[s],e.keypoints[s]=r}}for(let t of i9){let n=e.keypoints.findIndex(r=>r&&r.part===t[0]),s=e.keypoints.findIndex(r=>r&&r.part===t[1]);e.keypoints[n]&&e.keypoints[s]&&e.keypoints[n].position[1]<e.keypoints[s].position[1]&&e.keypoints.splice(n,1)}for(let[t,n]of l9){let s=e.keypoints.findIndex(u=>u&&u.part===t[0]),r=e.keypoints.findIndex(u=>u&&u.part===t[1]),a=e.keypoints.findIndex(u=>u&&u.part===n[0]),o=e.keypoints.findIndex(u=>u&&u.part===n[1]);if(!e.keypoints[a]||!e.keypoints[o])continue;let i=e.keypoints[s]?[Math.abs(e.keypoints[a].position[0]-e.keypoints[s].position[0]),Math.abs(e.keypoints[o].position[0]-e.keypoints[s].position[0])]:[0,0],l=e.keypoints[r]?[Math.abs(e.keypoints[o].position[0]-e.keypoints[r].position[0]),Math.abs(e.keypoints[a].position[0]-e.keypoints[r].position[0])]:[0,0];if(i[0]>i[1]||l[0]>l[1]){let u=e.keypoints[s];e.keypoints[s]=e.keypoints[r],e.keypoints[r]=u}}}function zbe(e){for(let t=0;t<e.length;t++)if(e[t]&&ws.keypoints[t]){let n=[Math.abs(e[t].positionRaw[0]-ws.keypoints[t].positionRaw[0]),Math.abs(e[t].positionRaw[1]-ws.keypoints[t].positionRaw[1])];n[0]<Xk&&n[1]<Xk?e[t]=ws.keypoints[t]:ws.keypoints[t]=e[t]}else ws.keypoints[t]=e[t];return e}function Lbe(e,t){var n,s;let r={};if(!((n=e?.shape)!=null&&n[1])||!((s=e?.shape)!=null&&s[2]))return e;ws.padding=[[0,0],[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0],[0,0]],r.pad=Dr(e,ws.padding),r.resize=He.resizeBilinear(r.pad,[t,t]);let a=fe(r.resize,"int32");return Object.keys(r).forEach(o=>le(r[o])),a}function Bbe(e,t){e.keypoints=e.keypoints.filter(s=>s?.position);for(let s of e.keypoints)s.position=[s.position[0]*(t[0]+ws.padding[2][0]+ws.padding[2][1])/t[0]-ws.padding[2][0],s.position[1]*(t[1]+ws.padding[1][0]+ws.padding[1][1])/t[1]-ws.padding[1][0]],s.positionRaw=[s.position[0]/t[0],s.position[1]/t[1]];let n=Mp(e.keypoints.map(s=>s.position),t);return e.box=n.box,e.boxRaw=n.boxRaw,e}var Xn,lm=0,uA=Number.MAX_SAFE_INTEGER,Ti={boxes:[],bodies:[],last:0};async function Wbe(e){var t;return ke.initial&&(Xn=null),Xn?e.debug&&he("cached model:",Xn.modelUrl):(r9(["size"],e),Xn=await Dt(e.body.modelPath)),lm=Xn?.executor&&((t=Xn?.inputs)==null?void 0:t[0].shape)?Xn.inputs[0].shape[2]:0,lm<64&&(lm=256),Xn}function Vbe(e,t,n){let s=e[0][0],r=[],a=0;for(let c=0;c<s.length;c++)if(a=s[c][2],a>t.body.minConfidence){let h=[s[c][1],s[c][0]];r.push({score:Math.round(100*a)/100,part:bv[c],positionRaw:h,position:[Math.round((n.shape[2]||0)*h[0]),Math.round((n.shape[1]||0)*h[1])]})}a=r.reduce((c,h)=>h.score>c?h.score:c,0);let o=[],i=Mp(r.map(c=>c.position),[n.shape[2],n.shape[1]]),l={};for(let[c,h]of Object.entries(vv)){let d=[];for(let p=0;p<h.length-1;p++){let f=r.find(g=>g.part===h[p]),m=r.find(g=>g.part===h[p+1]);f&&m&&f.score>(t.body.minConfidence||0)&&m.score>(t.body.minConfidence||0)&&d.push([f.position,m.position])}l[c]=d}let u={id:0,score:a,box:i.box,boxRaw:i.boxRaw,keypoints:r,annotations:l};return u9(u),o.push(u),o}function Ube(e,t,n){let s=[];for(let r=0;r<e[0].length;r++){let a=e[0][r],o=Math.round(100*a[51+4])/100;if(o>t.body.minConfidence){let i=[];for(let h=0;h<17;h++){let d=a[3*h+2];if(d>t.body.minConfidence){let p=[a[3*h+1],a[3*h+0]];i.push({part:bv[h],score:Math.round(100*d)/100,positionRaw:p,position:[Math.round((n.shape[2]||0)*p[0]),Math.round((n.shape[1]||0)*p[1])]})}}let l=Mp(i.map(h=>h.position),[n.shape[2],n.shape[1]]),u={};for(let[h,d]of Object.entries(vv)){let p=[];for(let f=0;f<d.length-1;f++){let m=i.find(y=>y.part===d[f]),g=i.find(y=>y.part===d[f+1]);m&&g&&m.score>(t.body.minConfidence||0)&&g.score>(t.body.minConfidence||0)&&p.push([m.position,g.position])}u[h]=p}let c={id:r,score:o,box:l.box,boxRaw:l.boxRaw,keypoints:[...i],annotations:u};u9(c),s.push(c)}}return s.sort((r,a)=>a.score-r.score),s.length>t.body.maxDetected&&(s.length=t.body.maxDetected),s}async function Kk(e,t){var n;if(!Xn?.executor||!((n=Xn?.inputs)!=null&&n[0].shape))return[];t.skipAllowed||(Ti.boxes.length=0),uA++;let s=(t.body.skipTime||0)>pe()-Ti.last,r=uA<(t.body.skipFrames||0);return t.skipAllowed&&s&&r?Ti.bodies:new Promise(async a=>{let o={};uA=0,o.input=Lbe(e,lm),o.res=Xn?.execute(o.input),Ti.last=pe();let i=await o.res.array();Ti.bodies=o.res.shape[2]===17?Vbe(i,t,e):Ube(i,t,e);for(let l of Ti.bodies)Bbe(l,[e.shape[2]||1,e.shape[1]||1]),zbe(l.keypoints);Object.keys(o).forEach(l=>le(o[l])),a(Ti.bodies)})}var Vr,Xf=[],Zk=0,cA=Number.MAX_SAFE_INTEGER,jm=0,Kf=2.5;async function Gbe(e){if(!Vr||ke.initial){Vr=await Dt(e.object.modelPath);let t=Vr?.executor?Object.values(Vr.modelSignature.inputs):void 0;jm=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):416}else e.debug&&he("cached model:",Vr.modelUrl);return Vr}async function Hbe(e,t,n){let s=0,r=[],a=jm;for(let u of[1,2,4]){let c=u*13,h=mt(e.find(y=>y.shape[1]===c**2&&(y.shape[2]||0)===im.length)),d=await h.array(),p=mt(e.find(y=>y.shape[1]===c**2&&(y.shape[2]||0)<im.length)),f=p.reshape([-1,4,p.shape[1]/4]),m=f.argMax(2),g=await m.array();for(let y=0;y<h.shape[0];y++)for(let x=0;x<h.shape[1];x++){let A=d[y][x];if(A>(n.object.minConfidence||0)&&x!==61){let b=(.5+Math.trunc(y%c))/c,w=(.5+Math.trunc(y/c))/c,S=g[y].map(M=>M*(c/u/a)),[C,_]=[b-Kf/u*S[0],w-Kf/u*S[1]],[R,D]=[b+Kf/u*S[2]-C,w+Kf/u*S[3]-_],E=[C,_,R,D];E=E.map(M=>Math.max(0,Math.min(M,1)));let F=[E[0]*t[0],E[1]*t[1],E[2]*t[0],E[3]*t[1]],k={id:s++,score:Math.round(100*A)/100,class:x+1,label:im[x].label,box:F.map(M=>Math.trunc(M)),boxRaw:E};r.push(k)}}le([h,p,f,m])}let o=r.map(u=>[u.boxRaw[1],u.boxRaw[0],u.boxRaw[3],u.boxRaw[2]]),i=r.map(u=>u.score),l=[];if(o&&o.length>0){let u=await He.nonMaxSuppressionAsync(o,i,n.object.maxDetected,n.object.iouThreshold,n.object.minConfidence);l=await u.data(),le(u)}return r=r.filter((u,c)=>l.includes(c)).sort((u,c)=>c.score-u.score),r}async function Yk(e,t){if(!Vr?.executor)return[];let n=(t.object.skipTime||0)>pe()-Zk,s=cA<(t.object.skipFrames||0);return t.skipAllowed&&n&&s&&Xf.length>0?(cA++,Xf):(cA=0,!ke.kernels.includes("mod")||!ke.kernels.includes("sparsetodense")?Xf:new Promise(async r=>{let a=[e.shape[2]||0,e.shape[1]||0],o=He.resizeBilinear(e,[jm,jm],!1),i=Ae(o,kt.tf255),l=Qe(i,[0,3,1,2]),u;t.object.enabled&&(u=Vr.execute(l)),Zk=pe();let c=await Hbe(u,a,t);Xf=c,le([o,i,l,...u]),r(c)}))}var Lg=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],jbe=Lg.length,qm=Lg.reduce((e,t,n)=>(e[t]=n,e),{}),qbe=[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]],X5e=qbe.map(([e,t])=>[qm[e],qm[t]]),Xbe=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]];function Kbe(e){let t=e.reduce(({maxX:n,maxY:s,minX:r,minY:a},{position:{x:o,y:i}})=>({maxX:Math.max(n,o),maxY:Math.max(s,i),minX:Math.min(r,o),minY:Math.min(a,i)}),{maxX:Number.NEGATIVE_INFINITY,maxY:Number.NEGATIVE_INFINITY,minX:Number.POSITIVE_INFINITY,minY:Number.POSITIVE_INFINITY});return[t.minX,t.minY,t.maxX-t.minX,t.maxY-t.minY]}function Zbe(e,[t,n],[s,r]){let a=t/s,o=n/r,i=(u,c)=>({id:c,score:u.score,boxRaw:[u.box[0]/r,u.box[1]/s,u.box[2]/r,u.box[3]/s],box:[Math.trunc(u.box[0]*o),Math.trunc(u.box[1]*a),Math.trunc(u.box[2]*o),Math.trunc(u.box[3]*a)],keypoints:u.keypoints.map(({score:h,part:d,position:p})=>({score:h,part:d,position:[Math.trunc(p.x*o),Math.trunc(p.y*a)],positionRaw:[p.x/s,p.y/s]})),annotations:{}});return e.map((u,c)=>i(u,c))}var Ybe=class{constructor(e,t){me(this,"priorityQueue"),me(this,"numberOfElements"),me(this,"getElementValue"),this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}enqueue(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)}dequeue(){let e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e}empty(){return this.numberOfElements===-1}size(){return this.numberOfElements+1}all(){return this.priorityQueue.slice(0,this.numberOfElements+1)}max(){return this.priorityQueue[0]}swim(e){for(;e>0&&this.less(Math.floor(e/2),e);)this.exchange(e,Math.floor(e/2)),e=Math.floor(e/2)}sink(e){for(;2*e<=this.numberOfElements;){let t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}}getValueAt(e){return this.getElementValue(this.priorityQueue[e])}less(e,t){return this.getValueAt(e)<this.getValueAt(t)}exchange(e,t){let n=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=n}};function c9(e,t,n,s){return{y:s.get(e,t,n),x:s.get(e,t,n+jbe)}}function d9(e,t,n){let{heatmapY:s,heatmapX:r,id:a}=e,{y:o,x:i}=c9(s,r,a,n);return{x:e.heatmapX*t+i,y:e.heatmapY*t+o}}function Jk(e,t,n){return e<t?t:e>n?n:e}function Jbe(e,t,n,s){let r=n-e,a=s-t;return r*r+a*a}function Qk(e,t){return{x:e.x+t.x,y:e.y+t.y}}var Ms,Qbe=["MobilenetV1/offset_2/BiasAdd","MobilenetV1/heatmap_2/BiasAdd","MobilenetV1/displacement_fwd_2/BiasAdd","MobilenetV1/displacement_bwd_2/BiasAdd"],Zf=1,Bu=16,e5e=50**2;function eS(e,t,n,s,r,a,o=2){let i=y=>({y:a.get(y.y,y.x,e),x:a.get(y.y,y.x,a.shape[2]/2+e)}),l=(y,x,A)=>({y:Jk(Math.round(y.y/Bu),0,x-1),x:Jk(Math.round(y.x/Bu),0,A-1)}),[u,c]=s.shape,h=l(t.position,u,c),d=i(h),f=Qk(t.position,d);for(let y=0;y<o;y++){let x=l(f,u,c),A=c9(x.y,x.x,n,r);f=Qk({x:x.x*Bu,y:x.y*Bu},{x:A.x,y:A.y})}let m=l(f,u,c),g=s.get(m.y,m.x,n);return{position:f,part:Lg[n],score:g}}function t5e(e,t,n,s,r){let a=Xbe.map(([d,p])=>[qm[d],qm[p]]),o=a.map(([,d])=>d),i=a.map(([d])=>d),l=t.shape[2],u=o.length,c=new Array(l),h=d9(e.part,Bu,n);c[e.part.id]={score:e.score,part:Lg[e.part.id],position:h};for(let d=u-1;d>=0;--d){let p=o[d],f=i[d];c[p]&&!c[f]&&(c[f]=eS(d,c[p],f,t,n,r))}for(let d=0;d<u;++d){let p=i[d],f=o[d];c[p]&&!c[f]&&(c[f]=eS(d,c[p],f,t,n,s))}return c}function n5e(e,t,n,s,r){let[a,o]=r.shape,i=!0,l=Math.max(n-Zf,0),u=Math.min(n+Zf+1,a);for(let c=l;c<u;++c){let h=Math.max(s-Zf,0),d=Math.min(s+Zf+1,o);for(let p=h;p<d;++p)if(r.get(c,p,e)>t){i=!1;break}if(!i)break}return i}function s5e(e,t){let[n,s,r]=t.shape,a=new Ybe(n*s*r,({score:o})=>o);for(let o=0;o<n;++o)for(let i=0;i<s;++i)for(let l=0;l<r;++l){let u=t.get(o,i,l);u<e||n5e(l,u,o,i,t)&&a.enqueue({score:u,part:{heatmapY:o,heatmapX:i,id:l}})}return a}function h9(e,{x:t,y:n},s){return e.some(({keypoints:r})=>{var a;let o=(a=r[s])==null?void 0:a.position;return o?Jbe(n,t,o.y,o.x)<=e5e:!1})}function r5e(e,t){return t.reduce((s,{position:r,score:a},o)=>(h9(e,r,o)||(s+=a),s),0)/t.length}function a5e(e,t,n,s,r,a){let o=[],i=s5e(a,t);for(;o.length<r&&!i.empty();){let l=i.dequeue(),u=d9(l.part,Bu,e);if(h9(o,u,l.part.id))continue;let c=t5e(l,t,e,n,s);c=c.filter(p=>p.score>a);let h=r5e(o,c),d=Kbe(c);h>a&&o.push({keypoints:c,box:d,score:Math.round(100*h)/100})}return o}async function tS(e,t){if(!Ms?.executor)return[];let n=Y(()=>{if(!Ms.inputs[0].shape)return[];let o=He.resizeBilinear(e,[Ms.inputs[0].shape[2],Ms.inputs[0].shape[1]]),i=ge(Ae(fe(o,"float32"),127.5),1),u=Ms.execute(i,Qbe).map(c=>mt(c,[0]));return u[1]=Ts(u[1]),u}),s=await Promise.all(n.map(o=>o.buffer()));for(let o of n)le(o);let r=a5e(s[0],s[1],s[2],s[3],t.body.maxDetected,t.body.minConfidence);return Ms.inputs[0].shape?Zbe(r,[e.shape[1],e.shape[2]],[Ms.inputs[0].shape[2],Ms.inputs[0].shape[1]]):[]}async function o5e(e){return!Ms||ke.initial?Ms=await Dt(e.body.modelPath):e.debug&&he("cached model:",Ms.modelUrl),Ms}var qr,dA=!1;async function p9(e){return!qr||ke.initial?qr=await Dt(e.segmentation.modelPath):e.debug&&he("cached model:",qr.modelUrl),qr}async function i5e(e,t,n){var s,r;if(dA)return{data:[],canvas:null,alpha:null};dA=!0,qr||await p9(n);let a=await Gm(e,n),o=((s=a.tensor)==null?void 0:s.shape[2])||0,i=((r=a.tensor)==null?void 0:r.shape[1])||0;if(!a.tensor)return{data:[],canvas:null,alpha:null};let l={};l.resize=He.resizeBilinear(a.tensor,[qr.inputs[0].shape?qr.inputs[0].shape[1]:0,qr.inputs[0].shape?qr.inputs[0].shape[2]:0],!1),le(a.tensor),l.norm=Ae(l.resize,kt.tf255),l.res=qr.execute(l.norm),l.squeeze=mt(l.res,0),l.squeeze.shape[2]===2?(l.softmax=Kc(l.squeeze),[l.bg,l.fg]=ds(l.softmax,2),l.expand=Jt(l.fg,2),l.pad=Jt(l.expand,0),l.crop=He.cropAndResize(l.pad,[[0,0,.5,.5]],[0],[o,i]),l.data=mt(l.crop,0)):l.data=He.resizeBilinear(l.squeeze,[i,o]);let u=Array.from(await l.data.data());if(ke.node&&!ke.Canvas&&typeof ImageData>"u")return n.debug&&he("canvas support missing"),Object.keys(l).forEach(y=>le(l[y])),{data:u,canvas:null,alpha:null};let c=Er(o,i);Ar&&await Ar.toPixels(l.data,c);let h=c.getContext("2d");n.segmentation.blur&&n.segmentation.blur>0&&(h.filter=`blur(${n.segmentation.blur}px)`);let d=h.getImageData(0,0,o,i),p=Er(o,i),f=p.getContext("2d");a.canvas&&f.drawImage(a.canvas,0,0),f.globalCompositeOperation="darken",n.segmentation.blur&&n.segmentation.blur>0&&(f.filter=`blur(${n.segmentation.blur}px)`),f.drawImage(c,0,0),f.globalCompositeOperation="source-over",f.filter="none";let m=f.getImageData(0,0,o,i);for(let y=0;y<o*i;y++)m.data[4*y+3]=d.data[4*y+0];f.putImageData(m,0,0);let g=null;if(t&&p){g=Er(o,i);let y=await Gm(t,n);le(y.tensor);let x=g.getContext("2d");x.drawImage(y.canvas,0,0,g.width,g.height),x.drawImage(p,0,0)}return Object.keys(l).forEach(y=>le(l[y])),dA=!1,{data:u,canvas:p,alpha:c}}var f9=class{constructor(){me(this,"ssrnetage",null),me(this,"gear",null),me(this,"blazeposedetect",null),me(this,"blazepose",null),me(this,"centernet",null),me(this,"efficientpose",null),me(this,"mobilefacenet",null),me(this,"insightface",null),me(this,"emotion",null),me(this,"facedetect",null),me(this,"faceiris",null),me(this,"facemesh",null),me(this,"faceres",null),me(this,"ssrnetgender",null),me(this,"handpose",null),me(this,"handskeleton",null),me(this,"handtrack",null),me(this,"liveness",null),me(this,"movenet",null),me(this,"nanodet",null),me(this,"posenet",null),me(this,"segmentation",null),me(this,"antispoof",null)}},m9=e=>{let t=0,n=0,s=0;for(let a of Object.values(mr))t+=a.sizeFromManifest,n+=a.sizeLoadedWeights,s+=a.sizeDesired;let r=s>0?n/s:0;return{numLoadedModels:Object.values(mr).length,numEnabledModels:void 0,numDefinedModels:Object.keys(e.models).length,percentageLoaded:r,totalSizeFromManifest:t,totalSizeWeights:n,totalSizeLoading:s,totalSizeEnabled:void 0,modelStats:Object.values(mr)}};function wv(e){for(let t of Object.keys(e.models))e.models[t]=null}async function g9(e){var t,n,s,r,a,o,i,l,u,c,h,d,p,f,m,g,y,x,A,b,w,S,C,_,R,D;ke.initial&&wv(e),e.config.hand.enabled&&(!e.models.handpose&&((n=(t=e.config.hand.detector)==null?void 0:t.modelPath)==null?void 0:n.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await Lk(e.config)),!e.models.handskeleton&&e.config.hand.landmarks&&((r=(s=e.config.hand.detector)==null?void 0:s.modelPath)==null?void 0:r.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await Lk(e.config))),e.config.body.enabled&&!e.models.blazepose&&((a=e.config.body.modelPath)==null?void 0:a.includes("blazepose"))&&(e.models.blazepose=Txe(e.config)),e.config.body.enabled&&!e.models.blazeposedetect&&e.config.body.detector&&e.config.body.detector.modelPath&&(e.models.blazeposedetect=Cxe(e.config)),e.config.body.enabled&&!e.models.efficientpose&&((o=e.config.body.modelPath)==null?void 0:o.includes("efficientpose"))&&(e.models.efficientpose=Fxe(e.config)),e.config.body.enabled&&!e.models.movenet&&((i=e.config.body.modelPath)==null?void 0:i.includes("movenet"))&&(e.models.movenet=Wbe(e.config)),e.config.body.enabled&&!e.models.posenet&&((l=e.config.body.modelPath)==null?void 0:l.includes("posenet"))&&(e.models.posenet=o5e(e.config)),e.config.face.enabled&&!e.models.facedetect&&(e.models.facedetect=Axe(e.config)),e.config.face.enabled&&((u=e.config.face.antispoof)==null?void 0:u.enabled)&&!e.models.antispoof&&(e.models.antispoof=q2e(e.config)),e.config.face.enabled&&((c=e.config.face.liveness)==null?void 0:c.enabled)&&!e.models.liveness&&(e.models.liveness=Mbe(e.config)),e.config.face.enabled&&((h=e.config.face.description)==null?void 0:h.enabled)&&!e.models.faceres&&(e.models.faceres=abe(e.config)),e.config.face.enabled&&((d=e.config.face.emotion)==null?void 0:d.enabled)&&!e.models.emotion&&(e.models.emotion=Mxe(e.config)),e.config.face.enabled&&((p=e.config.face.iris)==null?void 0:p.enabled)&&!((f=e.config.face.attention)!=null&&f.enabled)&&!e.models.faceiris&&(e.models.faceiris=Wxe(e.config)),e.config.face.enabled&&((m=e.config.face.mesh)==null?void 0:m.enabled)&&!e.models.facemesh&&(e.models.facemesh=nbe(e.config)),e.config.face.enabled&&((g=e.config.face.gear)==null?void 0:g.enabled)&&!e.models.gear&&(e.models.gear=U2e(e.config)),e.config.face.enabled&&((y=e.config.face.ssrnet)==null?void 0:y.enabled)&&!e.models.ssrnetage&&(e.models.ssrnetage=H2e(e.config)),e.config.face.enabled&&((x=e.config.face.ssrnet)==null?void 0:x.enabled)&&!e.models.ssrnetgender&&(e.models.ssrnetgender=j2e(e.config)),e.config.face.enabled&&((A=e.config.face.mobilefacenet)==null?void 0:A.enabled)&&!e.models.mobilefacenet&&(e.models.mobilefacenet=zxe(e.config)),e.config.face.enabled&&((b=e.config.face.insightface)==null?void 0:b.enabled)&&!e.models.insightface&&(e.models.insightface=Lxe(e.config)),e.config.hand.enabled&&!e.models.handtrack&&((S=(w=e.config.hand.detector)==null?void 0:w.modelPath)==null?void 0:S.includes("handtrack"))&&(e.models.handtrack=Fbe(e.config)),e.config.hand.enabled&&e.config.hand.landmarks&&!e.models.handskeleton&&((_=(C=e.config.hand.detector)==null?void 0:C.modelPath)==null?void 0:_.includes("handtrack"))&&(e.models.handskeleton=Obe(e.config)),e.config.object.enabled&&!e.models.centernet&&((R=e.config.object.modelPath)==null?void 0:R.includes("centernet"))&&(e.models.centernet=$xe(e.config)),e.config.object.enabled&&!e.models.nanodet&&((D=e.config.object.modelPath)==null?void 0:D.includes("nanodet"))&&(e.models.nanodet=Gbe(e.config)),e.config.segmentation.enabled&&!e.models.segmentation&&(e.models.segmentation=p9(e.config));for await(let E of Object.keys(e.models))e.models[E]&&typeof e.models[E]<"u"&&(e.models[E]=await e.models[E])}var zs;function Bg(e,t,n){var s;if(e&&(zs=e),!t||(zs||he("instance not registred"),!zs.config.validateModels))return null;let r=["const","placeholder","noop","pad","squeeze","add","sub","mul","div"],a=["biasadd","fusedbatchnormv3","matmul"],o=[],i=[],l=t.modelUrl,u=t.executor;if((s=u?.graph)!=null&&s.nodes)for(let c of Object.values(u.graph.nodes)){let h=c.op.toLowerCase();o.includes(h)||o.push(h)}else!u&&zs.config.debug&&he("model not loaded",n);for(let c of o)!r.includes(c)&&!a.includes(c)&&!zs.env.kernels.includes(c)&&!zs.env.kernels.includes(c.replace("_",""))&&!zs.env.kernels.includes(c.replace("native",""))&&!zs.env.kernels.includes(c.replace("v2",""))&&i.push(c);return zs.config.debug&&i.length>0&&he("model validation failed:",n,i),i.length>0?{name:n,missing:i,ops:o,url:l}:null}function S2(e){zs=e;let t=[];for(let n of Object.keys(zs.models)){let s=zs.models[n];if(!s)continue;let r=Bg(zs,s,n);r&&t.push(r)}return t}var jn={cacheModels:!0,cacheSupported:!0,verbose:!0,debug:!1,modelBasePath:""},mr={};async function l5e(e,t){return jn.debug&&he("load model fetch:",e,t),fetch(e,t)}function u5e(e){jn.cacheModels=e.cacheModels,jn.verbose=e.debug,jn.modelBasePath=e.modelBasePath}async function Dt(e){var t,n,s,r;let a=x_(jn.modelBasePath,e||"");a.toLowerCase().endsWith(".json")||(a+=".json");let o=a.includes("/")?a.split("/"):a.split("\\"),i=o[o.length-1].replace(".json",""),l="indexeddb://"+i;mr[i]={name:i,sizeFromManifest:0,sizeLoadedWeights:0,sizeDesired:ON[i],inCache:!1},jn.cacheSupported=typeof indexedDB<"u";let u={};try{u=jn.cacheSupported&&jn.cacheModels?await Bs.listModels():{}}catch{jn.cacheSupported=!1}mr[i].inCache=jn.cacheSupported&&jn.cacheModels&&Object.keys(u).includes(l);let c=typeof fetch>"u"?{}:{fetchFunc:(p,f)=>l5e(p,f)},h=new Ig(mr[i].inCache?l:a,c),d=!1;try{h.findIOHandler(),jn.debug&&he("model load handler:",h.handler)}catch(p){he("error finding model i/o handler:",a,p)}try{let p=await((t=h.handler)==null?void 0:t.load())||null;mr[i].sizeFromManifest=((n=p?.weightData)==null?void 0:n.byteLength)||0,p?h.loadSync(p):h=await cC(mr[i].inCache?l:a,c),mr[i].sizeLoadedWeights=((r=(s=h.artifacts)==null?void 0:s.weightData)==null?void 0:r.byteLength)||0,jn.verbose&&he("load:",{model:i,url:h.modelUrl,bytes:mr[i].sizeLoadedWeights}),d=!0}catch(p){he("error loading model:",a,p)}if(d&&jn.cacheModels&&jn.cacheSupported&&!mr[i].inCache)try{let p=await h.save(l);jn.debug&&he("model saved:",l,p)}catch(p){he("error saving model:",a,p)}return Bg(null,h,`${e||""}`),h}var nS="2.10.2",c5e={};lo(c5e,{all:()=>b9,body:()=>Sv,canvas:()=>x9,face:()=>kv,gesture:()=>Tv,hand:()=>Iv,object:()=>Cv,options:()=>Ea,person:()=>A9});var hu=e=>{if(!e)he("draw error: invalid canvas");else if(!e.getContext)he("draw error: canvas context not defined");else{let t=e.getContext("2d");if(!t)he("draw error: cannot get canvas context");else return t}return null},Wu=e=>Math.round(e*180/Math.PI),ji=(e,t)=>{if(!t.useDepth||typeof e>"u")return t.color;let n=Uint8ClampedArray.from([127+2*e,127-2*e,255]);return`rgba(${n[0]}, ${n[1]}, ${n[2]}, ${t.alpha})`};function Vu(e,t,n,s,r){e.fillStyle=ji(s,r),e.beginPath(),e.arc(t,n,r.pointSize,0,2*Math.PI),e.fill()}function Lp(e,t,n,s,r,a){if(e.beginPath(),e.lineWidth=a.lineWidth,a.useCurves){let o=(t+t+s)/2,i=(n+n+r)/2;e.ellipse(o,i,s/2,r/2,0,0,2*Math.PI)}else e.moveTo(t+a.roundRect,n),e.lineTo(t+s-a.roundRect,n),e.quadraticCurveTo(t+s,n,t+s,n+a.roundRect),e.lineTo(t+s,n+r-a.roundRect),e.quadraticCurveTo(t+s,n+r,t+s-a.roundRect,n+r),e.lineTo(t+a.roundRect,n+r),e.quadraticCurveTo(t,n+r,t,n+r-a.roundRect),e.lineTo(t,n+a.roundRect),e.quadraticCurveTo(t,n,t+a.roundRect,n),e.closePath();e.stroke()}function y9(e,t,n){if(!(t.length<2)){e.beginPath(),e.moveTo(t[0][0],t[0][1]);for(let s of t)e.strokeStyle=ji(s[2]||0,n),e.lineTo(Math.trunc(s[0]),Math.trunc(s[1]));e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function d5e(e,t,n){if(!(t.length<2)){if(e.lineWidth=n.lineWidth,!n.useCurves||t.length<=2){y9(e,t,n);return}e.moveTo(t[0][0],t[0][1]);for(let s=0;s<t.length-2;s++){let r=(t[s][0]+t[s+1][0])/2,a=(t[s][1]+t[s+1][1])/2;e.quadraticCurveTo(t[s][0],t[s][1],r,a)}e.quadraticCurveTo(t[t.length-2][0],t[t.length-2][1],t[t.length-1][0],t[t.length-1][1]),e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function sS(e,t,n,s=5){let r,a,o;e.beginPath(),e.moveTo(t[0],t[1]),e.lineTo(n[0],n[1]),r=Math.atan2(n[1]-t[1],n[0]-t[0]),a=s*Math.cos(r)+n[0],o=s*Math.sin(r)+n[1],e.moveTo(a,o),r+=1/3*(2*Math.PI),a=s*Math.cos(r)+n[0],o=s*Math.sin(r)+n[1],e.lineTo(a,o),r+=1/3*(2*Math.PI),a=s*Math.cos(r)+n[0],o=s*Math.sin(r)+n[1],e.lineTo(a,o),e.closePath(),e.stroke(),e.fill()}var Ea={color:"rgba(173, 216, 230, 0.6)",labelColor:"rgba(173, 216, 230, 1)",shadowColor:"black",alpha:.5,font:'small-caps 16px "Segoe UI"',lineHeight:18,lineWidth:4,pointSize:2,roundRect:8,drawPoints:!1,drawLabels:!0,drawBoxes:!0,drawAttention:!0,drawGestures:!0,drawPolygons:!0,drawGaze:!0,fillPolygons:!1,useDepth:!0,useCurves:!1},ut;function h5e(e,t){var n,s;if(ut.drawLabels){let r=[];if(r.push(`face: ${Math.trunc(100*e.score)}%`),e.genderScore&&r.push(`${e.gender||""} ${Math.trunc(100*e.genderScore)}%`),e.age&&r.push(`age: ${e.age||""}`),e.iris&&r.push(`distance: ${e.iris}`),e.real&&r.push(`real: ${Math.trunc(100*e.real)}%`),e.live&&r.push(`live: ${Math.trunc(100*e.live)}%`),e.emotion&&e.emotion.length>0){let a=e.emotion.map(o=>`${Math.trunc(100*o.score)}% ${o.emotion}`);a.length>3&&(a.length=3),r.push(a.join(" "))}((n=e.rotation)==null?void 0:n.angle)&&((s=e.rotation)==null?void 0:s.gaze)&&(e.rotation.angle.roll&&r.push(`roll: ${Wu(e.rotation.angle.roll)}\xB0 yaw:${Wu(e.rotation.angle.yaw)}\xB0 pitch:${Wu(e.rotation.angle.pitch)}\xB0`),e.rotation.gaze.bearing&&r.push(`gaze: ${Wu(e.rotation.gaze.bearing)}\xB0`)),r.length===0&&r.push("face"),t.fillStyle=ut.color;for(let a=r.length-1;a>=0;a--){let o=Math.max(e.box[0],0),i=a*ut.lineHeight+e.box[1];ut.shadowColor&&ut.shadowColor!==""&&(t.fillStyle=ut.shadowColor,t.fillText(r[a],o+5,i+16)),t.fillStyle=ut.labelColor,t.fillText(r[a],o+4,i+15)}}}function p5e(e,t){var n,s,r,a;if(((n=e.annotations)==null?void 0:n.leftEyeIris)&&((s=e.annotations)==null?void 0:s.leftEyeIris[0])){t.strokeStyle=ut.useDepth?"rgba(255, 200, 255, 0.3)":ut.color,t.beginPath();let o=Math.abs(e.annotations.leftEyeIris[3][0]-e.annotations.leftEyeIris[1][0])/2,i=Math.abs(e.annotations.leftEyeIris[4][1]-e.annotations.leftEyeIris[2][1])/2;t.ellipse(e.annotations.leftEyeIris[0][0],e.annotations.leftEyeIris[0][1],o,i,0,0,2*Math.PI),t.stroke(),ut.fillPolygons&&(t.fillStyle=ut.useDepth?"rgba(255, 255, 200, 0.3)":ut.color,t.fill())}if(((r=e.annotations)==null?void 0:r.rightEyeIris)&&((a=e.annotations)==null?void 0:a.rightEyeIris[0])){t.strokeStyle=ut.useDepth?"rgba(255, 200, 255, 0.3)":ut.color,t.beginPath();let o=Math.abs(e.annotations.rightEyeIris[3][0]-e.annotations.rightEyeIris[1][0])/2,i=Math.abs(e.annotations.rightEyeIris[4][1]-e.annotations.rightEyeIris[2][1])/2;t.ellipse(e.annotations.rightEyeIris[0][0],e.annotations.rightEyeIris[0][1],o,i,0,0,2*Math.PI),t.stroke(),ut.fillPolygons&&(t.fillStyle=ut.useDepth?"rgba(255, 255, 200, 0.3)":ut.color,t.fill())}}function f5e(e,t){var n;if(ut.drawGaze&&((n=e.rotation)==null?void 0:n.angle)&&typeof Path2D<"u"){t.strokeStyle="pink";let s=e.box[0]+e.box[2]/2-e.box[3]*Wu(e.rotation.angle.yaw)/90,r=e.box[1]+e.box[3]/2+e.box[2]*Wu(e.rotation.angle.pitch)/90,a=new Path2D(`
      M ${e.box[0]+e.box[2]/2} ${e.box[1]}
      C
        ${s} ${e.box[1]},
        ${s} ${e.box[1]+e.box[3]},
        ${e.box[0]+e.box[2]/2} ${e.box[1]+e.box[3]}
    `),o=new Path2D(`
      M ${e.box[0]} ${e.box[1]+e.box[3]/2}
      C 
        ${e.box[0]} ${r},
        ${e.box[0]+e.box[2]} ${r},
        ${e.box[0]+e.box[2]} ${e.box[1]+e.box[3]/2}
    `);t.stroke(o),t.stroke(a)}}function m5e(e,t){var n;if(ut.drawGaze&&((n=e.rotation)==null?void 0:n.gaze.strength)&&e.rotation.gaze.bearing&&e.annotations.leftEyeIris&&e.annotations.rightEyeIris&&e.annotations.leftEyeIris[0]&&e.annotations.rightEyeIris[0]){t.strokeStyle="pink",t.fillStyle="pink";let s=[e.annotations.leftEyeIris[0][0]+Math.sin(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[3],e.annotations.leftEyeIris[0][1]+Math.cos(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[2]];sS(t,[e.annotations.leftEyeIris[0][0],e.annotations.leftEyeIris[0][1]],[s[0],s[1]],4);let r=[e.annotations.rightEyeIris[0][0]+Math.sin(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[3],e.annotations.rightEyeIris[0][1]+Math.cos(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[2]];sS(t,[e.annotations.rightEyeIris[0][0],e.annotations.rightEyeIris[0][1]],[r[0],r[1]],4)}}function g5e(e,t){if(ut.drawPolygons&&e.mesh.length>=468){t.lineWidth=1;for(let n=0;n<Xd.length/3;n++){let s=[Xd[n*3+0],Xd[n*3+1],Xd[n*3+2]].map(r=>e.mesh[r]);y9(t,s,ut)}p5e(e,t)}}function y5e(e,t){if(ut.drawPoints&&e.mesh.length>=468)for(let n=0;n<e.mesh.length;n++)Vu(t,e.mesh[n][0],e.mesh[n][1],e.mesh[n][2],ut),ut.drawAttention&&(w2.includes(n)&&Vu(t,e.mesh[n][0],e.mesh[n][1],e.mesh[n][2]+127,ut),Zd.includes(n)&&Vu(t,e.mesh[n][0],e.mesh[n][1],e.mesh[n][2]-127,ut),Yd.includes(n)&&Vu(t,e.mesh[n][0],e.mesh[n][1],e.mesh[n][2]-127,ut))}function A5e(e,t){ut.drawBoxes&&Lp(t,e.box[0],e.box[1],e.box[2],e.box[3],ut)}function kv(e,t,n){if(ut=is(Ea,n),!t||!e)return;let s=hu(e);if(!!s){s.font=ut.font,s.strokeStyle=ut.color,s.fillStyle=ut.color;for(let r of t)A5e(r,s),h5e(r,s),r.mesh&&r.mesh.length>0&&(y5e(r,s),g5e(r,s),f5e(r,s),m5e(r,s))}}function Sv(e,t,n){let s=is(Ea,n);if(!t||!e)return;let r=hu(e);if(!!r){r.lineJoin="round";for(let a=0;a<t.length;a++){if(r.strokeStyle=s.color,r.fillStyle=s.color,r.lineWidth=s.lineWidth,r.font=s.font,s.drawBoxes&&t[a].box&&t[a].box.length===4&&(Lp(r,t[a].box[0],t[a].box[1],t[a].box[2],t[a].box[3],s),s.drawLabels&&(s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(`body ${100*t[a].score}%`,t[a].box[0]+3,1+t[a].box[1]+s.lineHeight,t[a].box[2])),r.fillStyle=s.labelColor,r.fillText(`body ${100*t[a].score}%`,t[a].box[0]+2,0+t[a].box[1]+s.lineHeight,t[a].box[2]))),s.drawPoints&&t[a].keypoints)for(let o=0;o<t[a].keypoints.length;o++)!t[a].keypoints[o].score||t[a].keypoints[o].score===0||(r.fillStyle=ji(t[a].keypoints[o].position[2],s),Vu(r,t[a].keypoints[o].position[0],t[a].keypoints[o].position[1],0,s));if(s.drawLabels&&t[a].keypoints){r.font=s.font;for(let o of t[a].keypoints)!o.score||o.score===0||(r.fillStyle=ji(o.position[2],s),r.fillText(`${o.part} ${Math.trunc(100*o.score)}%`,o.position[0]+4,o.position[1]+4))}if(s.drawPolygons&&t[a].keypoints&&t[a].annotations)for(let o of Object.values(t[a].annotations))for(let i of o)d5e(r,i,s)}}}function Iv(e,t,n){let s=is(Ea,n);if(!t||!e)return;let r=hu(e);if(!!r){r.lineJoin="round",r.font=s.font;for(let a of t){if(s.drawBoxes&&(r.strokeStyle=s.color,r.fillStyle=s.color,Lp(r,a.box[0],a.box[1],a.box[2],a.box[3],s),s.drawLabels&&(s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(`hand:${Math.trunc(100*a.score)}%`,a.box[0]+3,1+a.box[1]+s.lineHeight,a.box[2])),r.fillStyle=s.labelColor,r.fillText(`hand:${Math.trunc(100*a.score)}%`,a.box[0]+2,0+a.box[1]+s.lineHeight,a.box[2])),r.stroke()),s.drawPoints&&a.keypoints&&a.keypoints.length>0)for(let o of a.keypoints)r.fillStyle=ji(o[2],s),Vu(r,o[0],o[1],0,s);if(s.drawLabels&&a.annotations){let o=(i,l)=>{if(!i||i.length===0||!i[0])return;let u=i[i.length-1][2]||-256;r.fillStyle=ji(u,s),r.fillText(l,i[i.length-1][0]+4,i[i.length-1][1]+4)};r.font=s.font,o(a.annotations.index,"index"),o(a.annotations.middle,"middle"),o(a.annotations.ring,"ring"),o(a.annotations.pinky,"pinky"),o(a.annotations.thumb,"thumb"),o(a.annotations.palm,"palm")}if(s.drawPolygons&&a.annotations){let o=i=>{if(!(!i||i.length===0||!i[0]))for(let l=0;l<i.length;l++){r.beginPath();let u=i[l][2]||0;r.strokeStyle=ji(l*u,s),r.moveTo(i[l>0?l-1:0][0],i[l>0?l-1:0][1]),r.lineTo(i[l][0],i[l][1]),r.stroke()}};r.lineWidth=s.lineWidth,o(a.annotations.index),o(a.annotations.middle),o(a.annotations.ring),o(a.annotations.pinky),o(a.annotations.thumb)}}}}function Cv(e,t,n){let s=is(Ea,n);if(!t||!e)return;let r=hu(e);if(!!r){r.lineJoin="round",r.font=s.font;for(let a of t)if(s.drawBoxes){if(r.strokeStyle=s.color,r.fillStyle=s.color,Lp(r,a.box[0],a.box[1],a.box[2],a.box[3],s),s.drawLabels){let o=`${a.label} ${Math.round(100*a.score)}%`;s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(o,a.box[0]+3,1+a.box[1]+s.lineHeight,a.box[2])),r.fillStyle=s.labelColor,r.fillText(o,a.box[0]+2,0+a.box[1]+s.lineHeight,a.box[2])}r.stroke()}}}function Tv(e,t,n){let s=is(Ea,n);if(!(!t||!e)&&s.drawGestures){let r=hu(e);if(!r)return;r.font=s.font,r.fillStyle=s.color;let a=1;for(let o=0;o<t.length;o++){let i=[],l=[];if([i,l]=Object.entries(t[o]),l.length>1&&l[1].length>0){let u=i[1]>0?`#${i[1]}`:"",c=`${i[0]} ${u}: ${l[1]}`;s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(c,8,2+a*s.lineHeight)),r.fillStyle=s.labelColor,r.fillText(c,6,0+a*s.lineHeight),a+=1}}}}var hA=0;function A9(e,t,n){let s=is(Ea,n);if(!t||!e)return;let r=hu(e);if(!!r){r.lineJoin="round",r.font=s.font;for(let a=0;a<t.length;a++)if(s.drawBoxes){if(r.strokeStyle=s.color,r.fillStyle=s.color,Lp(r,t[a].box[0],t[a].box[1],t[a].box[2],t[a].box[3],s),s.drawLabels){let o=`person #${a}`;s.shadowColor&&s.shadowColor!==""&&(r.fillStyle=s.shadowColor,r.fillText(o,t[a].box[0]+3,1+t[a].box[1]+s.lineHeight,t[a].box[2])),r.fillStyle=s.labelColor,r.fillText(o,t[a].box[0]+2,0+t[a].box[1]+s.lineHeight,t[a].box[2])}r.stroke()}}}function x9(e,t){if(!e||!t)return;let n=hu(t);!n||n.drawImage(e,0,0)}async function b9(e,t,n){if(!t?.performance||!e)return null;let s=pe(),r=is(Ea,n),a=Promise.all([kv(e,t.face,r),Sv(e,t.body,r),Iv(e,t.hand,r),Cv(e,t.object,r),Tv(e,t.gesture,r)]);return hA=ke.perfadd?hA+Math.round(pe()-s):Math.round(pe()-s),t.performance.draw=hA,a}var Ou=.1,pA=.5;function x5e(e,t,n){let s=!1,r=n.length-1;for(let a=0;a<n.length;r=a++)n[a].y>t!=n[r].y>t&&e<(n[r].x-n[a].x)*(t-n[a].y)/(n[r].y-n[a].y)+n[a].x&&(s=!s);return s}async function b5e(e){if(!e.tensor||!e.mesh||e.mesh.length<100)return e.tensor;let t=e.tensor.shape[2]||0,n=e.tensor.shape[1]||0,s=await e.tensor.buffer(),r=[];for(let o of ba.silhouette)r.push({x:(e.mesh[o][0]-e.box[0])/e.box[2],y:(e.mesh[o][1]-e.box[1])/e.box[3]});Ou&&Ou>0&&(r=r.map(o=>({x:o.x>.5?o.x+Ou:o.x-Ou,y:o.y>.5?o.y+Ou:o.y-Ou})));for(let o=0;o<t;o++)for(let i=0;i<n;i++)x5e(o/t,i/t,r)||(s.set(pA*s.get(0,i,o,0),0,i,o,0),s.set(pA*s.get(0,i,o,1),0,i,o,1),s.set(pA*s.get(0,i,o,2),0,i,o,2));let a=s.toTensor();return le(s),a}var v5e=e=>{let t=(h,d)=>Math.atan2(h[1]-d[1],h[0]-d[0]);if(!e.annotations.rightEyeIris||!e.annotations.leftEyeIris)return{bearing:0,strength:0};let n=[0,-.1],s=1,r=(e.mesh[33][2]||0)>(e.mesh[263][2]||0),a=r?e.mesh[473]:e.mesh[468],o=r?[(e.mesh[133][0]+e.mesh[33][0])/2,(e.mesh[133][1]+e.mesh[33][1])/2]:[(e.mesh[263][0]+e.mesh[362][0])/2,(e.mesh[263][1]+e.mesh[362][1])/2],i=r?[e.mesh[133][0]-e.mesh[33][0],e.mesh[23][1]-e.mesh[27][1]]:[e.mesh[263][0]-e.mesh[362][0],e.mesh[253][1]-e.mesh[257][1]],l=[(o[0]-a[0])/i[0]-n[0],s*(a[1]-o[1])/i[1]-n[1]],u=Math.sqrt(l[0]*l[0]+l[1]*l[1]);return u=Math.min(u,e.boxRaw[2]/2,e.boxRaw[3]/2),{bearing:(t([0,0],l)+Math.PI/2)%Math.PI,strength:u}},w5e=(e,t)=>{let n=m=>{let g=Math.sqrt(m[0]*m[0]+m[1]*m[1]+m[2]*m[2]);return m[0]/=g,m[1]/=g,m[2]/=g,m},s=(m,g)=>{let y=m[0]-g[0],x=m[1]-g[1],A=m[2]-g[2];return[y,x,A]},r=(m,g)=>{let y=m[1]*g[2]-m[2]*g[1],x=m[2]*g[0]-m[0]*g[2],A=m[0]*g[1]-m[1]*g[0];return[y,x,A]},a=m=>{let[g,y,x,A,b,w,S,C,_]=m,R,D,E;return A<1?A>-1?(E=Math.asin(A),D=Math.atan2(-S,g),R=Math.atan2(-w,b)):(E=-Math.PI/2,D=-Math.atan2(C,_),R=0):(E=Math.PI/2,D=Math.atan2(C,_),R=0),Number.isNaN(R)&&(R=0),Number.isNaN(D)&&(D=0),Number.isNaN(E)&&(E=0),{pitch:2*-R,yaw:2*-D,roll:2*-E}},o=e.meshRaw;if(!o||o.length<300)return{angle:{pitch:0,yaw:0,roll:0},matrix:[1,0,0,0,1,0,0,0,1],gaze:{bearing:0,strength:0}};let i=Math.max(e.boxRaw[2]*t[0],e.boxRaw[3]*t[1])/1.5,l=[o[10],o[152],o[234],o[454]].map(m=>[m[0]*t[0]/i,m[1]*t[1]/i,m[2]]),u=n(s(l[1],l[0])),c=n(s(l[3],l[2])),h=n(r(c,u));c=r(u,h);let d=[c[0],c[1],c[2],u[0],u[1],u[2],h[0],h[1],h[2]],p=a(d),f=o.length===478?v5e(e):{bearing:0,strength:0};return{angle:p,matrix:d,gaze:f}},rS=async(e,t)=>{var n,s,r,a,o,i,l,u,c,h,d,p,f,m,g,y,x,A,b,w,S,C,_,R,D,E,F,k,M;let z=pe(),W,H,j,Z,J,Q,ae,ne,ie,ue=[];e.state="run:face";let te=await tbe(t,e.config);if(e.performance.face=ke.perfadd?(e.performance.face||0)+Math.trunc(pe()-z):Math.trunc(pe()-z),!t.shape||t.shape.length!==4)return[];if(!te)return[];for(let oe=0;oe<te.length;oe++){if(e.analyze("Get Face"),!te[oe].tensor||te[oe].tensor.isDisposedInternal){he("Face object is disposed:",te[oe].tensor);continue}if((n=e.config.face.detector)!=null&&n.mask){let nt=await b5e(te[oe]);le(te[oe].tensor),nt&&(te[oe].tensor=nt)}let Ne=te[oe].mesh&&te[oe].mesh.length>200?w5e(te[oe],[t.shape[2],t.shape[1]]):null;e.analyze("Start Emotion:"),e.config.async?Z=(s=e.config.face.emotion)!=null&&s.enabled?pk(te[oe].tensor||lt([]),e.config,oe,te.length):[]:(e.state="run:emotion",z=pe(),Z=(r=e.config.face.emotion)!=null&&r.enabled?await pk(te[oe].tensor||lt([]),e.config,oe,te.length):[],e.performance.emotion=ke.perfadd?(e.performance.emotion||0)+Math.trunc(pe()-z):Math.trunc(pe()-z)),e.analyze("End Emotion:"),e.analyze("Start AntiSpoof:"),e.config.async?ae=(a=e.config.face.antispoof)!=null&&a.enabled?Yw(te[oe].tensor||lt([]),e.config,oe,te.length):0:(e.state="run:antispoof",z=pe(),ae=(o=e.config.face.antispoof)!=null&&o.enabled?await Yw(te[oe].tensor||lt([]),e.config,oe,te.length):0,e.performance.antispoof=ke.perfadd?(e.performance.antispoof||0)+Math.trunc(pe()-z):Math.trunc(pe()-z)),e.analyze("End AntiSpoof:"),e.analyze("Start Liveness:"),e.config.async?ne=(i=e.config.face.liveness)!=null&&i.enabled?qk(te[oe].tensor||lt([]),e.config,oe,te.length):0:(e.state="run:liveness",z=pe(),ne=(l=e.config.face.liveness)!=null&&l.enabled?await qk(te[oe].tensor||lt([]),e.config,oe,te.length):0,e.performance.liveness=ke.perfadd?(e.performance.antispoof||0)+Math.trunc(pe()-z):Math.trunc(pe()-z)),e.analyze("End Liveness:"),e.analyze("Start GEAR:"),e.config.async?H=(u=e.config.face.gear)!=null&&u.enabled?Vw(te[oe].tensor||lt([]),e.config,oe,te.length):null:(e.state="run:gear",z=pe(),H=(c=e.config.face.gear)!=null&&c.enabled?await Vw(te[oe].tensor||lt([]),e.config,oe,te.length):null,e.performance.gear=Math.trunc(pe()-z)),e.analyze("End GEAR:"),e.analyze("Start SSRNet:"),e.config.async?(W=(h=e.config.face.ssrnet)!=null&&h.enabled?Hw(te[oe].tensor||lt([]),e.config,oe,te.length):null,j=(d=e.config.face.ssrnet)!=null&&d.enabled?Xw(te[oe].tensor||lt([]),e.config,oe,te.length):null):(e.state="run:ssrnet",z=pe(),W=(p=e.config.face.ssrnet)!=null&&p.enabled?await Hw(te[oe].tensor||lt([]),e.config,oe,te.length):null,j=(f=e.config.face.ssrnet)!=null&&f.enabled?await Xw(te[oe].tensor||lt([]),e.config,oe,te.length):null,e.performance.ssrnet=Math.trunc(pe()-z)),e.analyze("End SSRNet:"),e.analyze("Start MobileFaceNet:"),e.config.async?J=(m=e.config.face.mobilefacenet)!=null&&m.enabled?yk(te[oe].tensor||lt([]),e.config,oe,te.length):null:(e.state="run:mobilefacenet",z=pe(),J=(g=e.config.face.mobilefacenet)!=null&&g.enabled?await yk(te[oe].tensor||lt([]),e.config,oe,te.length):null,e.performance.mobilefacenet=Math.trunc(pe()-z)),e.analyze("End MobileFaceNet:"),e.analyze("Start InsightFace:"),e.config.async?Q=(y=e.config.face.insightface)!=null&&y.enabled?vk(te[oe].tensor||lt([]),e.config,oe,te.length):null:(e.state="run:mobilefacenet",z=pe(),Q=(x=e.config.face.insightface)!=null&&x.enabled?await vk(te[oe].tensor||lt([]),e.config,oe,te.length):null,e.performance.mobilefacenet=Math.trunc(pe()-z)),e.analyze("End InsightFace:"),e.analyze("Start Description:"),e.config.async?ie=Tk(te[oe].tensor||lt([]),e.config,oe,te.length):(e.state="run:description",z=pe(),ie=await Tk(te[oe].tensor||lt([]),e.config,oe,te.length),e.performance.description=ke.perfadd?(e.performance.description||0)+Math.trunc(pe()-z):Math.trunc(pe()-z)),e.analyze("End Description:"),e.config.async&&([W,j,Z,J,Q,ie,H,ae,ne]=await Promise.all([W,j,Z,J,Q,ie,H,ae,ne])),e.analyze("Finish Face:"),((A=e.config.face.ssrnet)==null?void 0:A.enabled)&&W&&j&&(ie={...ie,age:W.age,gender:j.gender,genderScore:j.genderScore}),((b=e.config.face.gear)==null?void 0:b.enabled)&&H&&(ie={...ie,age:H.age,gender:H.gender,genderScore:H.genderScore,race:H.race}),((w=e.config.face.mobilefacenet)==null?void 0:w.enabled)&&J&&(ie.descriptor=J),((S=e.config.face.insightface)==null?void 0:S.enabled)&&Q&&(ie.descriptor=Q),(C=e.config.face.iris)!=null&&C.enabled;let _e=((D=(R=(_=te[oe])==null?void 0:_.annotations)==null?void 0:R.leftEyeIris)==null?void 0:D[0])&&((k=(F=(E=te[oe])==null?void 0:E.annotations)==null?void 0:F.rightEyeIris)==null?void 0:k[0])&&te[oe].annotations.leftEyeIris.length>0&&te[oe].annotations.rightEyeIris.length>0&&te[oe].annotations.leftEyeIris[0]!==null&&te[oe].annotations.rightEyeIris[0]!==null?Math.max(Math.abs(te[oe].annotations.leftEyeIris[3][0]-te[oe].annotations.leftEyeIris[1][0]),Math.abs(te[oe].annotations.rightEyeIris[4][1]-te[oe].annotations.rightEyeIris[2][1]))/t.shape[2]:0,Be=(M=e.config.face.detector)!=null&&M.return?mt(te[oe].tensor):null;le(te[oe].tensor),te[oe].tensor&&delete te[oe].tensor;let Oe={...te[oe],id:oe};ie.age&&(Oe.age=ie.age),ie.gender&&(Oe.gender=ie.gender),ie.genderScore&&(Oe.genderScore=ie.genderScore),ie.descriptor&&(Oe.embedding=ie.descriptor),ie.race&&(Oe.race=ie.race),Z&&(Oe.emotion=Z),ae&&(Oe.real=ae),ne&&(Oe.live=ne),_e&&_e!==0&&(Oe.iris=Math.trunc(500/_e/11.7)/100),Ne&&(Oe.rotation=Ne),Be&&(Oe.tensor=Be),ue.push(Oe),e.analyze("End Face")}return e.analyze("End FaceMesh:"),e.config.async&&(e.performance.face&&delete e.performance.face,e.performance.age&&delete e.performance.age,e.performance.gender&&delete e.performance.gender,e.performance.emotion&&delete e.performance.emotion),ue},k5e=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){let s=e[n].keypoints.find(l=>l.part==="leftWrist"),r=e[n].keypoints.find(l=>l.part==="rightWrist"),a=e[n].keypoints.find(l=>l.part==="nose");a&&s&&r&&s.position[1]<a.position[1]&&r.position[1]<a.position[1]?t.push({body:n,gesture:"i give up"}):a&&s&&s.position[1]<a.position[1]?t.push({body:n,gesture:"raise left hand"}):a&&r&&r.position[1]<a.position[1]&&t.push({body:n,gesture:"raise right hand"});let o=e[n].keypoints.find(l=>l.part==="leftShoulder"),i=e[n].keypoints.find(l=>l.part==="rightShoulder");o&&i&&Math.abs(o.positionRaw[1]-i.positionRaw[1])>.1&&t.push({body:n,gesture:`leaning ${o.position[1]>i.position[1]?"left":"right"}`})}return t},S5e=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++)if(e[n].mesh&&e[n].mesh.length>450){let s=(e[n].mesh[33][2]||0)-(e[n].mesh[263][2]||0),r=e[n].mesh[33][0]-e[n].mesh[263][0];Math.abs(s/r)<=.15?t.push({face:n,gesture:"facing center"}):t.push({face:n,gesture:`facing ${s<0?"left":"right"}`}),Math.abs(e[n].mesh[374][1]-e[n].mesh[386][1])/Math.abs(e[n].mesh[443][1]-e[n].mesh[450][1])<.2&&t.push({face:n,gesture:"blink left eye"}),Math.abs(e[n].mesh[145][1]-e[n].mesh[159][1])/Math.abs(e[n].mesh[223][1]-e[n].mesh[230][1])<.2&&t.push({face:n,gesture:"blink right eye"});let i=Math.min(100,500*Math.abs(e[n].mesh[13][1]-e[n].mesh[14][1])/Math.abs(e[n].mesh[10][1]-e[n].mesh[152][1]));i>10&&t.push({face:n,gesture:`mouth ${Math.trunc(i)}% open`});let l=e[n].mesh[152][2]||0;Math.abs(l)>10&&t.push({face:n,gesture:`head ${l<0?"up":"down"}`})}return t},I5e=e=>{var t,n,s,r;if(!e)return[];let a=[];for(let o=0;o<e.length;o++){if(!((n=(t=e[o].annotations)==null?void 0:t.leftEyeIris)!=null&&n[0])||!((r=(s=e[o].annotations)==null?void 0:s.rightEyeIris)!=null&&r[0]))continue;let i=e[o].annotations.leftEyeIris[3][0]-e[o].annotations.leftEyeIris[1][0],l=e[o].annotations.leftEyeIris[4][1]-e[o].annotations.leftEyeIris[2][1],u=Math.abs(i*l),c=e[o].annotations.rightEyeIris[3][0]-e[o].annotations.rightEyeIris[1][0],h=e[o].annotations.rightEyeIris[4][1]-e[o].annotations.rightEyeIris[2][1],d=Math.abs(c*h),p=!1;Math.abs(u-d)/Math.max(u,d)<.25&&(p=!0,a.push({iris:o,gesture:"facing center"}));let m=Math.abs(e[o].mesh[263][0]-e[o].annotations.leftEyeIris[0][0])/e[o].box[2],g=Math.abs(e[o].mesh[33][0]-e[o].annotations.rightEyeIris[0][0])/e[o].box[2];(m>.06||g>.06)&&(p=!1),m>g?m>.05&&a.push({iris:o,gesture:"looking right"}):g>.05&&a.push({iris:o,gesture:"looking left"});let y=Math.abs(e[o].mesh[145][1]-e[o].annotations.rightEyeIris[0][1])/e[o].box[3],x=Math.abs(e[o].mesh[374][1]-e[o].annotations.leftEyeIris[0][1])/e[o].box[3];(x<.01||y<.01||x>.022||y>.022)&&(p=!1),(x<.01||y<.01)&&a.push({iris:o,gesture:"looking down"}),(x>.022||y>.022)&&a.push({iris:o,gesture:"looking up"}),p&&a.push({iris:o,gesture:"looking center"})}return a},C5e=e=>{if(!e)return[];let t=[];for(let n=0;n<e.length;n++){let s=[];if(e[n].annotations)for(let[r,a]of Object.entries(e[n].annotations))r!=="palmBase"&&Array.isArray(a)&&a[0]&&s.push({name:r.toLowerCase(),position:a[0]});if(s&&s.length>0){let r=s.reduce((o,i)=>(o.position[2]||0)<(i.position[2]||0)?o:i);t.push({hand:n,gesture:`${r.name} forward`});let a=s.reduce((o,i)=>o.position[1]<i.position[1]?o:i);t.push({hand:n,gesture:`${a.name} up`})}if(e[n].keypoints){let r=Cbe(e[n].keypoints);for(let a of r)t.push({hand:n,gesture:a.name})}}return t},Te={face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null},fA=0;function T5e(e,t){var n,s,r,a,o,i,l,u,c,h,d,p,f,m,g,y,x,A,b,w,S,C,_;let R=pe();if(!e)return{face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null};let D=Date.now()-e.timestamp,E=D<1e3?8-Math.log(D+1):1;if(e.canvas&&(Te.canvas=e.canvas),e.error&&(Te.error=e.error),!Te.body||e.body.length!==Te.body.length)Te.body=JSON.parse(JSON.stringify(e.body));else for(let k=0;k<e.body.length;k++){let M=e.body[k].box.map((Z,J)=>((E-1)*Te.body[k].box[J]+Z)/E),z=e.body[k].boxRaw.map((Z,J)=>((E-1)*Te.body[k].boxRaw[J]+Z)/E),W=e.body[k].keypoints.map((Z,J)=>{var Q,ae,ne,ie,ue,te,oe,Ne,_e;return{score:Z.score,part:Z.part,position:[Te.body[k].keypoints[J]?((E-1)*(Te.body[k].keypoints[J].position[0]||0)+(Z.position[0]||0))/E:Z.position[0],Te.body[k].keypoints[J]?((E-1)*(Te.body[k].keypoints[J].position[1]||0)+(Z.position[1]||0))/E:Z.position[1],Te.body[k].keypoints[J]?((E-1)*(Te.body[k].keypoints[J].position[2]||0)+(Z.position[2]||0))/E:Z.position[2]],positionRaw:[Te.body[k].keypoints[J]?((E-1)*(Te.body[k].keypoints[J].positionRaw[0]||0)+(Z.positionRaw[0]||0))/E:Z.positionRaw[0],Te.body[k].keypoints[J]?((E-1)*(Te.body[k].keypoints[J].positionRaw[1]||0)+(Z.positionRaw[1]||0))/E:Z.positionRaw[1],Te.body[k].keypoints[J]?((E-1)*(Te.body[k].keypoints[J].positionRaw[2]||0)+(Z.positionRaw[2]||0))/E:Z.positionRaw[2]],distance:[Te.body[k].keypoints[J]?((E-1)*(((Q=Te.body[k].keypoints[J].distance)==null?void 0:Q[0])||0)+(((ae=Z.distance)==null?void 0:ae[0])||0))/E:(ne=Z.distance)==null?void 0:ne[0],Te.body[k].keypoints[J]?((E-1)*(((ie=Te.body[k].keypoints[J].distance)==null?void 0:ie[1])||0)+(((ue=Z.distance)==null?void 0:ue[1])||0))/E:(te=Z.distance)==null?void 0:te[1],Te.body[k].keypoints[J]?((E-1)*(((oe=Te.body[k].keypoints[J].distance)==null?void 0:oe[2])||0)+(((Ne=Z.distance)==null?void 0:Ne[2])||0))/E:(_e=Z.distance)==null?void 0:_e[2]]}}),H={},j={connected:{}};(n=t.body.modelPath)!=null&&n.includes("efficientpose")?j=XE:(s=t.body.modelPath)!=null&&s.includes("blazepose")?j=GE:(r=t.body.modelPath)!=null&&r.includes("movenet")&&(j=a9);for(let[Z,J]of Object.entries(j.connected)){let Q=[];for(let ae=0;ae<J.length-1;ae++){let ne=W.find(ue=>ue.part===J[ae]),ie=W.find(ue=>ue.part===J[ae+1]);ne&&ie&&Q.push([ne.position,ie.position])}H[Z]=Q}Te.body[k]={...e.body[k],box:M,boxRaw:z,keypoints:W,annotations:H}}if(!Te.hand||e.hand.length!==Te.hand.length)Te.hand=JSON.parse(JSON.stringify(e.hand));else for(let k=0;k<e.hand.length;k++){let M=e.hand[k].box.map((j,Z)=>((E-1)*Te.hand[k].box[Z]+j)/E),z=e.hand[k].boxRaw.map((j,Z)=>((E-1)*Te.hand[k].boxRaw[Z]+j)/E);Te.hand[k].keypoints.length!==e.hand[k].keypoints.length&&(Te.hand[k].keypoints=e.hand[k].keypoints);let W=e.hand[k].keypoints&&e.hand[k].keypoints.length>0?e.hand[k].keypoints.map((j,Z)=>j.map((J,Q)=>((E-1)*(Te.hand[k].keypoints[Z][Q]||1)+(J||0))/E)):[],H={};if(Object.keys(Te.hand[k].annotations).length!==Object.keys(e.hand[k].annotations).length)Te.hand[k].annotations=e.hand[k].annotations,H=Te.hand[k].annotations;else if(e.hand[k].annotations)for(let j of Object.keys(e.hand[k].annotations))H[j]=(i=(o=(a=e.hand[k])==null?void 0:a.annotations)==null?void 0:o[j])!=null&&i[0]?e.hand[k].annotations[j].map((Z,J)=>Z.map((Q,ae)=>((E-1)*Te.hand[k].annotations[j][J][ae]+Q)/E)):null;Te.hand[k]={...e.hand[k],box:M,boxRaw:z,keypoints:W,annotations:H}}if(!Te.face||e.face.length!==Te.face.length)Te.face=JSON.parse(JSON.stringify(e.face));else for(let k=0;k<e.face.length;k++){let M=e.face[k].box.map((W,H)=>((E-1)*Te.face[k].box[H]+W)/E),z=e.face[k].boxRaw.map((W,H)=>((E-1)*Te.face[k].boxRaw[H]+W)/E);if(e.face[k].rotation){let W={matrix:[0,0,0,0,0,0,0,0,0],angle:{roll:0,yaw:0,pitch:0},gaze:{bearing:0,strength:0}};W.matrix=(l=e.face[k].rotation)==null?void 0:l.matrix,W.angle={roll:((E-1)*(((c=(u=Te.face[k].rotation)==null?void 0:u.angle)==null?void 0:c.roll)||0)+(((d=(h=e.face[k].rotation)==null?void 0:h.angle)==null?void 0:d.roll)||0))/E,yaw:((E-1)*(((f=(p=Te.face[k].rotation)==null?void 0:p.angle)==null?void 0:f.yaw)||0)+(((g=(m=e.face[k].rotation)==null?void 0:m.angle)==null?void 0:g.yaw)||0))/E,pitch:((E-1)*(((x=(y=Te.face[k].rotation)==null?void 0:y.angle)==null?void 0:x.pitch)||0)+(((b=(A=e.face[k].rotation)==null?void 0:A.angle)==null?void 0:b.pitch)||0))/E},W.gaze={bearing:((E-1)*(((w=Te.face[k].rotation)==null?void 0:w.gaze.bearing)||0)+(((S=e.face[k].rotation)==null?void 0:S.gaze.bearing)||0))/E,strength:((E-1)*(((C=Te.face[k].rotation)==null?void 0:C.gaze.strength)||0)+(((_=e.face[k].rotation)==null?void 0:_.gaze.strength)||0))/E},Te.face[k]={...e.face[k],rotation:W,box:M,boxRaw:z}}else Te.face[k]={...e.face[k],box:M,boxRaw:z}}if(!Te.object||e.object.length!==Te.object.length)Te.object=JSON.parse(JSON.stringify(e.object));else for(let k=0;k<e.object.length;k++){let M=e.object[k].box.map((W,H)=>((E-1)*Te.object[k].box[H]+W)/E),z=e.object[k].boxRaw.map((W,H)=>((E-1)*Te.object[k].boxRaw[H]+W)/E);Te.object[k]={...e.object[k],box:M,boxRaw:z}}if(e.persons){let k=e.persons;if(!Te.persons||k.length!==Te.persons.length)Te.persons=JSON.parse(JSON.stringify(k));else for(let M=0;M<k.length;M++)Te.persons[M].box=k[M].box.map((z,W)=>((E-1)*Te.persons[M].box[W]+z)/E)}e.gesture&&(Te.gesture=e.gesture);let F=pe();return fA=ke.perfadd?fA+Math.round(F-R):Math.round(F-R),e.performance&&(Te.performance={...e.performance,interpolate:fA}),Te}var N5e={};lo(N5e,{distance:()=>Wg,match:()=>k9,similarity:()=>w9});function Wg(e,t,n={order:2,multiplier:25}){if(!e||!e)return Number.MAX_SAFE_INTEGER;let s=0;for(let r=0;r<e.length;r++){let a=!n.order||n.order===2?e[r]-t[r]:Math.abs(e[r]-t[r]);s+=!n.order||n.order===2?a*a:a**n.order}return(n.multiplier||20)*s}var v9=(e,t,n,s)=>{if(e===0)return 1;let r=t===2?Math.sqrt(e):e**(1/t),a=(1-r/100-n)/(s-n);return Math.max(Math.min(a,1),0)};function w9(e,t,n={order:2,multiplier:25,min:.2,max:.8}){let s=Wg(e,t,n);return v9(s,n.order||2,n.min||0,n.max||1)}function k9(e,t,n={order:2,multiplier:25,threshold:0,min:.2,max:.8}){if(!Array.isArray(e)||!Array.isArray(t)||e.length<64||t.length===0)return{index:-1,distance:Number.POSITIVE_INFINITY,similarity:0};let s=Number.MAX_SAFE_INTEGER,r=-1;for(let o=0;o<t.length;o++){let i=t[o].length===e.length?Wg(e,t[o],n):Number.MAX_SAFE_INTEGER;if(i<s&&(s=i,r=o),s<(n.threshold||0))break}let a=v9(s,n.order||2,n.min||0,n.max||1);return{index:r,distance:s,similarity:a}}function E5e(e,t,n,s,r){var a,o,i,l,u,c;let h=0,d=[];for(let p of e){let f={id:h++,face:p,body:null,hands:{left:null,right:null},gestures:[],box:[0,0,0,0]};for(let b of t)p.box[0]>b.box[0]&&p.box[0]<b.box[0]+b.box[2]&&p.box[1]+p.box[3]>b.box[1]&&p.box[1]+p.box[3]<b.box[1]+b.box[3]&&(f.body=b);if(f.body)for(let b of n)b.box[0]+b.box[2]>f.body.box[0]&&b.box[0]+b.box[2]<f.body.box[0]+f.body.box[2]&&b.box[1]+b.box[3]>f.body.box[1]&&b.box[1]+b.box[3]<f.body.box[1]+f.body.box[3]&&f.hands&&(f.hands.left=b),b.box[0]<f.body.box[0]+f.body.box[2]&&b.box[0]>f.body.box[0]&&b.box[1]+b.box[3]>f.body.box[1]&&b.box[1]+b.box[3]<f.body.box[1]+f.body.box[3]&&f.hands&&(f.hands.right=b);for(let b of s)(b.face!==void 0&&b.face===p.id||b.iris!==void 0&&b.iris===p.id||b.body!==void 0&&b.body===((a=f.body)==null?void 0:a.id)||b.hand!==void 0&&b.hand===((o=f.hands.left)==null?void 0:o.id)||b.hand!==void 0&&b.hand===((i=f.hands.right)==null?void 0:i.id))&&f.gestures.push(b);let m=[],g=[],y=b=>{b&&b.length===4&&(m.push(b[0],b[0]+b[2]),g.push(b[1],b[1]+b[3]))};y(f.face.box),y((l=f.body)==null?void 0:l.box),y((u=f.hands.left)==null?void 0:u.box),y((c=f.hands.right)==null?void 0:c.box);let x=Math.min(...m),A=Math.min(...g);f.box=[x,A,Math.max(...m)-x,Math.max(...g)-A],r?.[1]&&r?.[2]&&(f.boxRaw=[f.box[0]/r[2],f.box[1]/r[1],f.box[2]/r[2],f.box[3]/r[1]]),d.push(f)}return d}var Nv=`
/9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUA
AAABAAAARgEoAAMAAAABAAIAAAExAAIAAAARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABcGFpbnQu
bmV0IDQuMi4xMwAA/9sAQwAGBAUGBQQGBgUGBwcGCAoQCgoJCQoUDg8MEBcUGBgXFBYWGh0lHxob
IxwWFiAsICMmJykqKRkfLTAtKDAlKCko/9sAQwEHBwcKCAoTCgoTKBoWGigoKCgoKCgoKCgoKCgo
KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo/8AAEQgBAAEAAwEhAAIRAQMRAf/E
AB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE
EQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZH
SElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1
tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEB
AQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXET
IjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFla
Y2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
x8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+qaKACigApGOKAML
Xp8xlF5A7V4X8RtYs7PzfNImnx8sa8Kp9z3q2tEgp6angWs62ZZ5CTGoJ6DArGNz5p+UrID6EUrF
PUlW1EuN0XNW7PQ2L5j3JnoKXN0KijqNP0eYoqXBdgPuuo+ZPeupisWn2Jd4+0r924XgsQOCff3/
AJ1FzRKxDqGii6m3siiQ8F1XGfXI6YNWLfRbiRQMkcZI9fpTDluT2/h6Qy8gDPbtmtG38JeY480Z
5zSLUTZg8M28YwYxjAArXtdPt402qgHbpSaLWhma3o0Uqk7Nx9DWLaaVblgPs6qRyds2M/gRSQp9
zZOni2iWS2hlQ+kjYz9OMGrdjq89vIPPVhj+8M/lQyDq9P1WOYBlMZz1AOD+VdDaTiReOKulK0jO
tHmi0WDTlr0TyxRVhT8tJjIX+9SUxHXUV553BRQAVBcPhSBTSuxPY86+IGti0s5I7dsORy9fM3i6
8e8mfDO5P90ZrWWiJicNPpZZtxV/xrW0jQt4DOv6Vk2dEEdTY6BHuB25rpbPSo0QARjP0qTRI17W
wA/hFaMWmoQMgflQXYsDS142rU9tpqqenfNA7GgtihxkdKuRW6qMY/GkDZY8sY4Ap4hXbyB+VArk
EtuH4wPyrk/EGkOm+a3jw3suRQLc5i38SX9hJ9nnY+XnBUdPyNdFY6pa3KkkAE9l6f8AfJ/pSJT6
GhDmI+Zb4ZRycdv6ium0nUhKFydrelTsNnS2829RnrVgV6NKXNG55lWPLIM81Op+WrZkRMfmNNzT
A7GivPO4KKAEY4XNYWt3vkwPg4OK0giJdjw/xrqhm87Zs8tc7pX5A+leSajf6aHYJ50kn4AZpTep
rBWRm2Vobm4BXfyehPFdnpmnBFUY5rI2SN63tlToK0YI+KZpFF+3QdavwoKTLtoW0Toaswpk5pCb
LCxipAhoIuP2dKevHXoaYDylRyxhlwRQI4nxVoCXWZI1GfpXGtbSWjYPGP73+NIGupt6TqMsLruZ
ih4xnP5V09mQ+JLd8gn0xSYJnVaVdkook69K34zuUGunDS3Rx4qOzHVIp4rrOMY3NJQI7GivPO8K
KAILt9kZrz3xlebYiu8KCCWb0XvW0NFch6ysfO3jLVjfXLIn+pQkKorl7WxNxIPl71g2dUUdpo+l
pBGvHPet23iC8ihFosrxirkHQUFo0IF4FXI1O726CpKLacCrMJoJLYHAPpTwucHpSRJJ5e4AZI9x
UqpxzVpCuOC8cUpQUMRnXttuB4rjNdsYyeVwfXpmpGmcvcQyafMCFJjPY10eg34BUg4DcZP8jUO4
HaRq3lLNF+IHet7R7jz7c56rwa2wz9+xhiVeFy/T1PFegeaNPWigDsc0ZrzzvDNIaAM7VpNqdegr
xL4l6kywyRhseZ19lrdfAZL4jxYg3Fw20d63tJsdrDI5rm3Z3R0R0Mce1eKnQYAplIkWrMJ45oZS
NO3PHbNXIyfpSGWowSOasxLUiZdjFSqtNEMkUemKlAGKsRJjAppFAiORMjmsTVrNZEO4cfSoZSOD
1eJ7WXBUzQZ+7nkfSo7e2Ei+ZaMzxntjBX2NSU1Y6/wxqojiEFzkA8KTXYaUoWRyv3W5rSjpNHPX
+BmpSg8V6J5gUUAdhRXnneFFAGHrTfu5PpXzj8S70/aZtxzztXFbv4DKHxHI+H4GZiz9zxXXW8G3
GBXMjvLRXAx0oPGPSmMVeOnWrMTYpFI0bcg1fh54xmgovRcD3qxETSIZcRvzp+/BpEkqsBUqsM9K
q4Em4Gkxk0yRGXrVW6i8yFhkg+tJjRxGsWrxllkUMh9eK5uMz6bcebbnfG33kPcVkay2OntPKuo0
nhXI67c8qa7Lw3c+adjcEDGK1paSRhVV4s6A0or0jyRRQ1AHX0V553hRQBz+vNtt5z3xXzX8Qbdm
uic5YnOMdK3l8JnTXvlbwpYl+WySOgrp5YfLOOB9O1c62O7qQkc+9RsKChFPWp4DluOlSykaNruH
ArUgHShFNF2NT1qxGO3NBmyxGcE1N2560CFzjrUysO9JAPDDjFOVuKoQuSRTWouBkazbCa3cd8cV
wF7IISQccHBzUSWpV9C3o1x5b5GAjdQD1rs9DjC3kckbEhqKfxIzn8LOupRXqnkPccBSkUAzraK8
87wooA5rxMSI3HqK8B8bQl9Q8sffY5b/AAraXwkUviNrw9pH2W1ViMMRTdRjw4HpWNtDti9TPc4P
FQs2M5qdyyMHLcfjV63HTAoBGtap0wK0YxigpsuRDtVhVYd6GQydVwwIqdRnqKCR23I5pCMUW6gD
YNKuetAEise9KTxQBWuFyhrznxNZkXjFeN3I+tTIZg2OqmzmxNF0PO3vXp/g2+hukVl4zyPanTXv
JmVR+60dpThXpnlPceopWFAbnV0V553hSGgRynjC5FujOey14Ssp1HxNmTnc+a3kvcIpv37HoEYQ
QmMdVHSsnVbYJF5jVk0dsNzlruVIsl2wKxbjWrVHILjg1CRbZJb+ILHPzyhfStODWLQgFJFYd+el
UJM27HUIXxhga1Y5lLVLKLkMnoauxnPPrSEx7ShF+Y/n2qrc6xBbhizDAqkK1zJuvG9nbg8ZA681
ly/Ei052RO3uKAsZlx8QGd8xxvt9Aa1NH8dK7AXMcip64zigdkdrZX8F7EJLdwwNXMkrz1qRMRly
CK4TxmpidWI49felPYSOMmi80NIoOV6qRzXYeA5SskYPfirpfEjGr8LPWVHyD6U4CvQPL3ZItOYc
UDOoNFeed4Uhpks4H4iE/Z5MeleMeGULeLgjds10S+BGdL+Jc9OSBU2Huc5Nc74yvUtrcDBrJnZF
63PJdXvLy/lKWw46bvQVz82jXhkLO5Y+9ZlsYthcRnbIjY9R3q3awTRkEM3WmJI6C0ea3dGRsr1x
XY6TqW9FLHnjrUs0izpLK5DDjofSta3ckH09KRUkZuuTvFGdvPauE1Y3U6Mqbssf/rUxHPTaJPK2
ZmJPbBqzY6DCZh5xJC9s9aBJHU6dpemJjfEmfetJtI0+VPkUr/unFOxdiextHs33W07YHQHk11mk
Xb3KbZ1xIvcd6LEyWho4Nct41sTPYb16ipexCPPZN+wYGCvH1rrPAEJmvkPoc1VL4kZVvgZ6yFwK
cBXoHkkqinFaVyzo80GuE7WJRQSziPiGdthK5HQV4x4J/wBI8WPIewNdEvgRNL42emO/yj1UHNef
eNpRczbC+I17DvWT2OqJxc0sMK4TCisy41q0hfEkqj8aixdwTXNOlwvmqD9anS9tXH7uVG+hosO4
/wC0oOhrR0+6G4YNIEzsNEuCxAPNdjZruA4xxUmjINSjURksOlcbqFykbnjFA1sYGoassaknCqO5
rl7rxhGm7yBnBxuJq0rkSlYpw+NLlsfd5P8AerVsvHEqSBHwPVgcgVpyMyVXU3rXxcHYETAk+hru
/DWti6ZSTyOKzZqndHaxvvUGq2rQ+dYyqR24qWI8dvbr7LqDxyDAzXpvw6FvIxePGSM06Xxoyr/A
zviKFHNegeX1J41zUhXioGbuaSuM6wpCaBHG/EcA6HN/exxXjXw2jL67cv8A3Qa6H8CFR+NnoWpO
I4XI44rxLxrqjQzSEsQM1gdSPM9U1uR1YbmWIdXHf2rmpIb67YS28UrRlsLI3c/jW0VZGUpO5pW1
jfLNOjahawzwReYI5cjzMkDavHJ5/SrVv9uhtPtVxCPLBwzxnlT9KGghLU3tKvvPjHzbl7EGuisJ
GRxWLOg7nRXJEbDjmvSNK+aFSfSoZr0KutRkphc4NcRrdkVjL9aVio7Hk3iqS8ubhrWzUlsZY9kG
cZNc5D4aee5MclzJIFTzHAO0MfatqSOWu7bFS1srDUZEis0vIZoUxPvfcC+4/dx2xjr712XiTwXb
WmlQ6hol3cRhoFd4rlg3zY5wR0GelavQwjq7GD4etdVvSnk2wAB+9v8A8mvcfA2kXiRo0/UdcDis
ZnTTulqeoWqbUAJqWUb42X1FZlnjfjSwlGrr5S/eNdD4RkvLAAQ4yRyaUZcruVKl7TQ9I0G+mnzH
ckFwM8VuIK7ac3KF2eXiKapz5UWYxipNtMyNejNch0jSar3cjR27uoyQCRVRWom9DxTx54gu5fMi
lbKdMVjfCZPNlv5v9rFbVHpYqjGzbOn8SzFI9o715L4u0r7arYzk+lYdTqSujy7U/C0u4vHk+WwO
xuh9q3J9dgvbdVukMV1EwbDDgn04rZMwlHoZ+orZ6hfQ3RWVnQYCgZAq+8U0ln5NtBsV2yxYcfgK
JtW0CnB31LlroVwJ1nQLGDjeP7w+lb0dsFxjrWB0tHS6NuWPJ6A16ToUm63T3Gallr4S7cxiTjrX
PaxaF7dlVeSMUhxZ5jd+H7qCa4eF3DSE5x3zXN3Wk6jbyeaiFWUY6ZyPStYS5SalPmVipFbX0E4c
W0alvmPHJrag0rVvEE6LdljGpG2NRtQD+tW5XMI0uU9M8NeFo9PiQhecDIIrtrOMIoG3H4VlJm9t
C6CB06VPGM1IHLeItGS6uw+ORT7e3jsbQvj7gzUNam0JaWE+HN7NqOqX80n3FO1RXo8YzXdS+BHk
4z+KyzGPapcU2YIv7qQtiuaxvcaWqG4O6FwfSrS1JbPnrxoxkv7qIfejcitj4V2f2exumI+8+aKn
xHTT+G5d8Txlm4rjLxMsQwzWT3OiK0Mm6sEkVsAcjFc1d+FEmlGwEDPQVopaEuOpr6f4ZWNAu3tW
vHpAj5ZQcUFIWaDjGMVUMQ3cVDBmvbhY7QAV2nh+T/R1yeKhlrY31+b61FcQK6nIoJMi401WblRi
qr6PCw5UYq9y+YgOgWzNkRrx3xWjp+nx2v3FQcelAbmko9anQ4GBUNisPHWr1qMrQhS2K11HvmYV
hamcxSRZ5xRIqluS/DKAQQXZxyXrvo2FdlL4EeZjH+/ZbjNSZpswLNBrE1Gt7VE4ODVIlnh/j61F
j4lmeTGyUbq6LwdEqWbeX0YbhSqfEddP4Bddj4JIrhL5d8h7VjI6oLQqKNzelWre3yc4/ClFjaL6
wqBxxUUxwCKu5BmXRA6c+9ZjP83FSBoQuPs4BrsNBlUW659KmRrDY6G1lyQtW3Hy0lqQ1qVJnAbm
oy3b9KYJCqRj3o4zRctIlhjLHmpSuOBRbQOpLGpPFaES7UqkZzKN1KsEc87/AHUUmvPLTVGv72aQ
k7WJwKmRrQ3ud74Ltilgz4++2a6iNDXdS0gjyMU71my7GpqTbxSbMki3SViajTTHqkSeR/GeyZmg
nQHkEE1S+F+oPPavBL96I4/Cia1udVF+4dVrkW+Fq8+v4tjMDWUkdVJ6WM0cNV+F+MVmjUcZgqnP
1qpNNnkcVRLiZtxIS1UzzIF7mghlxUZpVQdq6nTVdAoAOKzkbQWhvwM6gMM1twOJYx3NOJE11Kt1
H1/pVVlwBkk+9NocXoOQ45FPj+fkUJFF2NSB700v/hTEty5ZpkjvVyUgcCq6GM9zC14/8Se6GcZQ
1574Xs5WkI2HBPHFQ1dm1KSSZ7Rotn9l0+KPHIHNacae1dy0Vjxaj5ptlhVp+2s2CJ9ppCKzuWNx
zSFc1SYrHNeNdIGpaYw25ZeRXmvheyk0jVpEdcLJ0q3ZxNKTa0O3vQHg/DNcHrsJDmsmjspnNzNt
fFIJ24GazOhC+azDmgZIOOKBsp3J2qSaZodubq58yQ4QAnmhGT3NO18pb7BORmu205LfYpyKVkWp
Oxr5gKYWoIZWgfGfloFq1qTPLubnGO1RPtxg4P0oBAkY/hBz6VNDDkZ6AU0W2WSdqkdKr9ZOaGSj
VtcLHmnOcgmmYvcz7mBLy3MbdD1q9ouiRK6bUAVeelOC1InPlidSsWMDFOCEdq3uefykqrinYqGy
rFvApMVka2DAowKAsMkRXQqwyDXn/iWyitNQ3qPl6itIvRoF8RXinW4tQ6HI6GuW8SIVBPalc6qe
5x9x97r3qruwTjrWZ0ksZ9TUmcDNAmZ9/wAoao63rR0+w22MLPtAzt6mghmfofiB76LdJBJBIp5D
d/oa7bSdWLIPnpDi9TM8TeKdas51XTbIyxd3J/pXS+E/EFxqNoFu7do5OmD60maHWrnZyDRkn/69
MlEyOR0xntVoNx+FUgYjPxg4FLCuWDZyKQr2RoRnP0qO+nEFpJITgAUzLqZnhu6+0rknOTXpOmwJ
Fbrt5yMmnHYyr6Oxb2ijaKLnPYMClwKQWK3n0hn+lachHOJ9pNNN0apQFzsY10a4v4hXQh0xpieQ
MA1XLZNjhK80cT8OdV+3Wl3A7ZZJCw+hrR1qLcjZ/CsbnfHRnFXseHJArOYYbrUs1uPhYbuatqFP
ByfSkMq3UIINYkto+87Tx6GkSxfsDbflGD7CtTw/pk4nzITtPIFMFudsukh4Rxz71paTpKwP5jcn
0qTRy0NORMDgVCqewoJTJgAoxjntTiTu7fWmFxAcnn1q3EPl+X8KZMi4gKqB1Peob/Tv7Us5bfeU
yOoq4R5nYxqT5I8xieH9J1DTbvyJELRg8ODwa9Ms5mSFV9BWiptbnNVrKdmif7Q1KLg96XIZc5Is
pNL5pqeUrmMtZs0jzV08phchaY00zH1p2ZNxjS1g+LdJOt6U9ssmxjyGp2urDjLlaZzng/wUPDqz
TSTmWeTrjpVjVk3Rvjr2rnqQ5dDvo1XUd2cTqSNk9OKxXGCeKxZ1DAxHTr2q5C/y8GokUhsz54qu
uCxzSQjQ0+FZblR2ro4bZYiMVQ0dBb7Qi5x0qzuG5QOh71LYErDufpSeWrHnimIXbjkUjLkH1Hem
gGxryc+tXI19KYmWegq9YLiLJ7mtqS945cS7QsWehqxA9dEjz4krPSxyZqbFFhGxUm6smjRM55Lk
HvSvNxXTY57kLT+9MNwKdhXGm5FIbkU7Bca1wMEVhaiuQcVhXWiZ14R6tHGanGBI2OtYkqEHjgVy
s9ErEeo6UBsHipKEZs5qpPdRxcbhx70NCSuybTNWihc5brW9Fq6vjMnFSdEIdDRi8RRKygZbHFbu
m6nb3RA3gMegNJhOm0jbXGOoxTuCc1Rz3FyoGKawz9KaAVcZqeMgCmIkB4FaUTbYwB6V00Fuzixb
0SFMuDU8Mlbs4UPeXHeiOXkUrDuXYnyKk3cVk0ap6HMxxketSMhrcwRC0dMMZFMQ3yzSeVQAeUaz
9Vj8uPd271nVV4m+GdpnHX67pCeKyLtBtNcR6xlk9RVeWTb3qRnO6trgttyIfm71z7ai8j7/AJmN
DNqUVa5Yi1AnjynHuBV+11YJhWWXcP8AZNSzqgmaEerSsf3NtIQP4mGKtRavdRgMIpVI9KjU0a7n
R6T43uYQI7qN2Tpkqciu503VVuQGAYZHQjFVc4alPlZrpKGAznpTwxOc9+lWjIlUACnM4XApiLNk
nmvnsK0NvpXZRVonmYqV52GsmanhXitTmFkSiJTSAvwrxUxXIrJ7miOfjf1pzNWxkRlqYWpgJupu
6gQbuahvIxPA6eo4pNXVioS5WmefakGhndH4INZs5DJXA10PaTurmLO21uKpSZqGMoXGnRzBiyjd
9Kx5rcQS428fSkjanLoaOliHGZFB56VswW+mtPufcBsGOAfmxz+tFkd8HpoaUx09FAtFY8DO71qb
Sms/Nb7RbecG6AEjFLS5c78t+p0djpVs9wsyQiJAdyr1rW+zqjErzSe559Sbk9S3C+MA1bjbgE1S
MSXzMVG0vNUI2tPKrAuCMnrVzNd0PhR49W/O2xrHmp4TxVMzQshpIzzQBehqesnuaI5VGzT2bitz
FEbNTC1ADS1JupgG6l3UAc14s04yR/aYRll+8BXCtLncDXFWjys9TCz5oW7GddH5qqNzWDOgQnC8
VSuo1kHzAGkPYopEY2+RWxV23Vzj5G/Kg3jWaNazhZuqNXS6TaKhB2c0jR1nJWOlhOxRxU4YkCgx
Y0OQatQyDbyaaFYe8uF4NY3iC9ltbVGj43NTIL3h7WzMihjzXVQXYYDdW9Cf2WcOJpfaRZ3g9KsQ
mupnCLIabGeaAL0LcVY3cVmzRHIxtUhetzEjZqjLUAIWpN1ArhupwagAfDKQ3Q1594v0c2bm6tx+
5Y8j+6ayrR5onThp8s7dzkZjuqAAmuBnqC7c0iwgtzSA0rWzjfGRW3ZadDu4AoNYo2rfS4v7orSh
05UA2r0pDbsTm29KRottBNyJ0wpJ9KhD7f6U0ikNWffIFBz60zVUW52ow4UcUN6EPcx44WsbgOmd
ua7TT5Bd24KHnFKnLlZFSN4koluLdueRWvp14swweG9DXoxldHlTjYtzGoo25qzEvwtUxas2jRPQ
5CNqkLVsYoYzUzdQA3dSFqBBmnqaBhuqhriCXTpVIzxUz+Fl03aSPI9QTypW2/dz0qKNw3SvOPZR
Mqin8VLKRcs3O4Cuk0w/MDjt1NBtHY6O2IIHY1pxgFaETIRwMkjtVSUEk4570MlFW5bap6dKzWm8
1tqH8aY+hp2FvGoGayNevVt7/ap4xzUvYjqTLtvLPcvJxSaVcyWsxTnFZlnT2t15xHmCtOBYwQy4
B9q7cPO+jPPxFO2qLEj5HWo42+aus4HpoX4W4FTF+KlotbHII9SFuK0MUNZqiLUDE3UbqBBupwag
Bc1DefPbyD/ZND2KjujyPWlKzuPesRZjHJXms9lMuw3StjnmphKDSLTJ7OfE3JrpbO4GQc9qlnRA
3LO82k5NbFvdADkjBoCSHyXIIIzgVQvdRigT7wzjgUzO1jHknlvG7qnp61etYFQDIpCZoqVijzXn
3iC8EmsOuaCGb/heR/s0ijkVv6fbxy3QMg5xmsnuX0Ldzut3+UYTPWk+2GJSe+M1pFtamcldalmx
1eO4XaThhWnC+TXqR2PHqL3maUJ4qRjxSEjj42qXdxVmaGs1MJoATfSbqBAG5p6mgAzTJTmNvpQU
tzzHXY83D/U1zF5FhjgV5r3Pa6FMsV5HWnLe7RhqBRdmTwagN2d2K2rPU1C5LAnPrUs6Iysbdrq6
f3gK0BrUKj/WClY05iM6xLOcQAj3NT29uznfKSzHuadzNu7NSBFjHNSm5VO9IRnajqoWMhTzXFtA
bvUfMduSeg702Qz0rS7FbTToQFwzjJqaGTFyfK5PQViyzUuFmuIdgGABya5u/vTaN5cnUHFUmLoZ
zyskwlgJweSK6zQdUEwVJeGr0aUrxPLxEfe0OrhPAqVjxWhznGRtUwatDK4jNxURbmkAm6jNABup
6tQAFqhupNtu59qUnZFwV5JHnWsHdIx96w5lz15rzT2uhRmt85xWbcxMnUGmZlB0bdxmrNvFIcfM
350mWjbs7YkDJY/jW5ZWW4jikWkdNp9mqYJFaJdEHHakUULu/VB1rLn1Ld/FgetMGYd/qWSQmSa0
/AemS32pfa7piLeLkg9z6UmQtz0W7uQ2cZx0A9BVzR7cAea6j2rPqX0L99KRat5A6Dk1wOoKZ52a
YfMORTYRLujiGWEq6/NWza2yKQVHNdOHerRy4laJo6TTnbbtb8KuM3Fdh5z3OJjbmpt3FaMxAtUZ
agBN1GaQBzTwaAAms3VbjERUGsa07RsdeFpuUuY4jUjljWTKK4j02RE4IpJYFk6imQkVl0xWarsO
mAEcUi0bNnZBR0rWtoguMCkUi21wI161mXuocEKaYXMS4u+pY/hVCSWSY4HT0pEmlouiSahdpEBl
mOceleiwWcNjClvHgJH97Hc1EmVFFi3Czy7mwIl/WtJbjP7uLgd/apQ2VNVvtsBhiPzdK5S4nAuR
nqOCaTGi9pcytPlU+XpmumtWII44rah8ZjiNIXRuWeNvvViQ/LXpJWPJbu7nCRvVkNxVsxBmqJmo
EPiXca0YLMuOlJsuKuPlsSi5IrNuG8s4HWs5VEkbwoOTKsk+FJY4rC1K53k1xTk5O7PSpwVNWRzt
4cms+WpKICtSLTETQj5q0YeBSGiys23pUguGxQMq3E59ayrm4x3yaAKiRtO2WPHcmhruKFxFajzZ
ScA44qRHoXhuMaLpxaUg6hcDLMf4F9KlhuDeXGASIl+8azZslYma68y48m1+7nFW5rtbRNhb5z1p
iMKbUg0zuW4A4rPgb7VdKXOMmpA7HRbMS7nUYiUda0lkQOBngVrS+JGdbWLRt2bAx5BqeQ/LXpnj
PQ4GJ+ashuK0MhWaoWcA0AaOmASMK7jRNPWYBmHyiuepO2x10qfcv6vYxCzYqoGK4HVYVTJrmb5l
c6oaM5TUJ8EgGsG4kLNUHT0M64OaqMMikSRsuKbnFMRLG3zVehOaGNE445NNlnVFpDMu6uie9Vo1
8z5mOAOST2pDK91cNN+5tsrH3PrW54a06KxT7fdrlh/q1Pc+tJ6IUdZGvHPLezMcnBOWbsPap5r3
ylFtbdT1xUWNWzU0/Zbwlgfmx8zGsHWtRHmMqE59aAMyNifvHPc1f0gtPdqkY5JosJHeNci2tktY
euPnNY+oXWZEVJNrZ9aun8SIq/CzodHuriIokhDIR1ronbKZr0o6o8ipoz//2Q==`,Ev=`
/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAsICAoIBwsKCQoNDAsNERwSEQ8PESIZGhQcKSQrKigk
JyctMkA3LTA9MCcnOEw5PUNFSElIKzZPVU5GVEBHSEX/2wBDAQwNDREPESESEiFFLicuRUVFRUVF
RUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUX/wAARCASwBLADASIA
AhEBAxEB/8QAGwABAAIDAQEAAAAAAAAAAAAAAAEDAgQFBgf/xABDEAEAAgECBAMECQIDBgUFAQAA
AQIDBBEFEiExE0FRBiJhcRQjMkJSgZGhsWLBJDNyFSVTY3OSNEPR4fAHFjWCokT/xAAYAQEAAwEA
AAAAAAAAAAAAAAAAAQIDBP/EACARAQEBAQADAQEBAQEBAAAAAAABAhEDITFBEjJRIhP/2gAMAwEA
AhEDEQA/APqYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAKNTq8OkxzfNkisQC8eb1XtRNbzXT4q7eU2nu0MntRq/D8StMccvW29ZmdvgjsTyvZjxOLj
+s8WLxn8TFPXs6Oj9oct7c14rkxz22nrB2I49KOdTjelmszfmpMeUxv/AA28OqwZ4icWWtt/SUi4
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmdo3nsPNe0Pt
Fh09Z0+DNWL7+9O/7A3eJcZppsV5raI27esvH6jX5ddM25p79Ilo59VbUZOe2Tm/PeGvfPfT2iKR
PLv1+DO678XmW/a97U6TtOyzTbTF538/T9WjTNecm9a7126tqk3rSYxY5ta1plRZqZNXGjyZcPXl
mZmsx+qjBrsuO16xM7eXRt04JrdTltk5OWJnfaWf0a2lty5MdZnfzSn+WOHiOutFpjHa9e8bQ2fp
+alYy462pk7zXbuxjPesbRS0f6ZZV1ET1tErzXFLHo+A+1ddZf6NrI8PJHa1vN6iJi0bxMTHwfOa
zhzd61v1846utwniM6DUdb3nBaNrVmd9vjC/ZVePYirBqMWppz4rxaPgtEAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAItaK1m09ojcHnvarjM8P0vh49+a/eY8ng9D
h1fGM1rxjtGPfvbzdbjuTJxHX48cTPNltM/KsS9Dw7S49Jp6UpHaGe2vjz1y9J7LYK13vHWe7bj2
ex1tvM80ekuxW3RnW3Vm6P5jRx8H0+OYmMcb+bapo8GKPdpC6bQwtdHU8JpWkdJ/JweL6e23iU67
d4dubSqyVi9Zi0bwIs68XGp36TtEq7ZJmZmevzdbifCKWtbJinkt6eTgZPFw32t+sRurbWVzxs1y
Rv6T8V1NZNPtfq0seTm+Kevr+SZuxXjvaPiV8N4viycto9HseG6+uu08W6Rkj7UPmFck1tE1nlmP
Ld3eA8V8HVVi1pjq6Ma/pnqce/ERMTETHaUrKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAADW19+TQ5p/p2bLS4v04Zmt5VjeQeJ4bjnLqsupv+Ka1+ERLv4reTmcNxcuC
vy3l0qdI2hlr66sT02ot0ZV7qqrInruzrVZLGSZ37JjqgYTG0K5lbaFVhDT1Ub456RPweY4hixWi
eSdpjvD1eWejz3FNHWYtkpvFo9EIseb3tS3SerOms22rfpPqZKzvvHSYUz70TExG6Gdbs2rljeJ/
Mx5L0vEzPaelnOi98c9J2bFNTFpit47+a+PVUvx9T9nOIfT+GV5p3yY/ds67wvsXqpxau+G09Lx+
r3TqrEAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADV4ljnLw3U0jvO
O0fs2lWqyUw6XLkyfYrWZkHldBEV09eveG3Fq1mI3jd4vPrOIaid8G9MP3Y38k6fNrt/rMk9Ou8s
tfXXn49rGWInuy8SO/k5Gl1E3rG/fzbOe94wTy99mbRvTrMOOvNfJWsesywniukrG/jU6fF43WYN
TmtEeJtEQ06aSmK2+bNtEd+qfSO17unF9Hmvy1y13XWyVmN4tExLxVK8PmNq5NrT58zawam+m/yc
0Xj8NpRYSvQZ7xEOdqI3rPozxayNRXe0ct/ON03jmrKB5nV4q1yTO20Obmv4c+cx8HoeI6WZpNoj
q83niYmYscU0r8aJ6T1n49zeJ+Meqm1drb9J+Kd5p136StGVem9l9TbHxLDFp7W7+sS+q1nesT6w
+PcAzVjiGHftzQ+v4f8AJpv6On8jH9ZgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAABp8VrW/C9TW0ztOO3b5Nxp8VmI4bn37TWYB8f1HFtTfUfR9FWJmsdZ9I7MtJxDX5s
d8ta1y0xzteaR2277rcuhycP12SceLxMeWNpjttHwlu8I0mfQ1y+D7k5YmJmY36T36Ka43z/AF1t
cI1ds+qxVj7/AEej19PCw9HJ4NoK4OIU5Y35YmZdzVTGebVZabx5jJS+Tmns81rNLm1Wrzc9rVw4
Yibbem72mXTTS0w0M3BvEta1bWrM95ie5EanY87wXgNOL6XPfxraXLhra/W28bR/dzYzarBqJxRe
bzE7Rt5vWU9n8mPHOGmS0Ypnea1naJb+k9ncNLR7u2y/WcxXO4TOoyUrN6zD0FaW5Y3hu49FiwUi
KxCvLMR0hlW0jn6ukWw3iXjOJzbDlneOj3GaN6zDzfFOH+LE7SRGo83XNSZ2lbG2/WfdlvaT2cy6
rNFInlrv1mfJ37cK4PwTTxOoidRm2+/2/KFuyMp47XB4LivXiunrH2b2iH2qn2K/J8x4fGDNxTSZ
9Nh8OviRvTyfT6xtWI+DeXs9MNZubypASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAOZx6/LoOWPvWiHTcf2hiZ0e8fc2mf1E5+vP/AEeuSd7RC2uKtI6QjHfeINTfwtPf
Jvty9WPfbt/lucP03gxfJf7d/wBoReYpm97zaNeLb4Ims9Nt94auDjem1Wo5PFi1onylS+1o7l8V
bxvtupjDMdNkYtXS1+Stt+m63xImEJ4xjHER2ZxMUjeUTO3VRmydBbjLJqPi08mbeVOXJPq1sl5Q
Vbkz9+rRy35rxHqzmZlVEe/Ez5LRlW5iyfR6zffaIjq1OSNZps2a21rZInafSPJhxGMl9LStLRWM
lorM/A4dkrWbYfLZC2W/7K6eubX6b4RzT+W76K8b7G6X62cu3Sten59nsm3j+OXz3/0ANGIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0OIYfpOHPijvNNo+fdvtXJO18k/
/OwPFYbz2ls3jx8VqW6xMdWPEdP9D4lkx/dt79flLLHbkxTPwY6nt2512ORTRzE2x4/dpE7cvkme
E4IrW3hRMxO8THRtU1FKWtvtvK2upx22rzRCtXkqzh2jtF7ZbT122b01ndnpuWuP3Z3+Ky20qDVv
fauzVy3mejZzNK8dVjqi87KLRLYtXruqvXzkQp7Qoid88R6rcl+WGlW0/Sa22mfhCZOq2x082ix6
jkm822pO8VrPdr4dNObVeDo8XW3uzMbzK+mvxT7szE27cvnu9j7PcNjSaXx8mOIzZevbrEeic5tN
+SZnpt8J4fHD9HXHO3PPW0x/DeBtJxx29vaAJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAKNRim9Z5e89Nl4DzXtVh5babURHrSf7f3ec1+qnDorWrvvt5Pccb0n0zhmWk
Rvevv1+cPE2rGTFNZU26PFfxwa5dVkjelI2772nZnX6bbrEUq3o0d678u8wmuDL2ittvVjXdneeK
cGv4jpJ6U56+kS7+j118+GLXpakzHaWlp9NNY3tv+bbiYiNoQy1y30uyZJlrWmZnuym6q1iIJnop
yW2Te8bdWnnypQqzZOadokiIpSZntWN5lrxki19vNRxrUeBwnNNd+fJEY6/OejXLn3Xe/wDp9wyn
E8uo4lqqxblv7lJ26T6vpD5X7G8QycKzeBMbzMRM1/FH/wA/h9QwZ6ajDXLitvWzRgsAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeL45w+dDrZvWv1OWd4+E+j2jX
12jx67TWw5Y6T2nzifU+rZ1y9eHwzDYxxEy18+DJodXfT5o96vafWPVbjyxDn1OOzHudbM0rt2UW
iI69mVtRXZq5tREb9VUoy2iIlRbJ0UX1VZ6btTLrI7V6yk62M2oisT1c7JmtkttVMUyZp6x0beDS
RWOvdKijDimvWd3G9pNRMfRcNfvZOb9Hpb0itJeP47k/3hgjaZnbaP1XxWW3T0movbNS0W645nbf
0nrMPpXs3xamoxdJiLbe/X1n8Uf3fKsOTw4jbaXo+EarJhtGTHMxeJ6xH7Sti9Zaj6x3HM4NxXFx
DS1mtoi8dJrv2l011QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AGjxLhODieOIye7kr9m8d4eM4to9RwjPXFa0ZIvG9bR0fQXmPbDFvTTZPOJmEWS/V8bs9R43NxLL
G8eFbePg1bajU5/s0l1ceKLx1hbjwRE9mOpx0y2uRTSZsm3PMw2aaKtIjo6kYo9EXpET0hVLXxYK
xC6MZvyx1lFs0RHfaPiCnU12pLyHGNDbUajBekWma2npWN3p8+opa20e9LSyZLxExTlpM+vdOdcZ
a9tPS8MyUvFrzWlI6727u1pYxYrbVmb7x+TQx6au3Nqcl7/0rcmW9axGnwZJj1novmxnZXV0fFp4
ZxLBPgTGK8xzXr5fOH0bFlpmxVyY7Rato3iYfNuG2x56Wrqa8s2jz+7Lu8O12bS6jkwzN6THNNI6
tvrN68Y4rxlx1vHa0bskAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAA4XtTTm0OKfTJ/aXdcL2pyRGjwU362yb7fkJz9eTxxyZJjyltRXzUZK7TFtl9Lbwy06YzrHwa+
fJFd/wCVt8m0bQ0eS2qzcm+1K/an+zNZFL5M1pjFXeI72ky48eGnPkvNp27+TPU6nHpMfLXaIjpE
erk5dRMxOfN1mPeisfshW1ne1a1577Y6x5R3U0zze31FOWI6ze0byU098kRlzbxM9qrMlPDpyRMR
Md5Vt/Ihp5898mWZm1pjftE91uCt7fCI7dWeHDEW3t723l6rslqxWZnasR+SYhFbzhnfxJ2jyeq9
lcGXWZcmW0zWKxHLaI7794eJx5fpfEKabT8t8l5isddo3l9S4VjrwrRUwzSJt3tav3pdOL6Y6dXD
j8HFWm+/KsU4NRXPvtWazHquWVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAa+fXYNP9u8b+kdZBsDkZOO135cWOZn4y5Wu4xqctbe9y19Kp4njt6vi+PDm8DFMWybbzPlV
5PiGtz67UxbNbeKTtWIjaIXYpnwuaftT5tXJT3vmi1pMsrU5qIrG1V1a+5DCa7b9GFbRr5J6Wnbt
Cu+Wmk0m8956z8ZWZNorbfzcbX5rZslazPux3hUt41NTntktObJ13+zX1bek01r4/HzVm0bxPXy/
+bNfDgjVa2uOY92kdfg6ufJOKvLXtttVVSqbcta2vM7zXtHpLQy5ZtMd+vWd+7Zy3mdJHXra3f0c
vUarw7zFY5rT2hH1Lavnrgx81p3U49Pk4nE5L35MO/StfNRXR5tXnrS8W67WvfyiPSPi7uLHFK1p
jrtSsbR5Lc4RzsXBaYreP4l45esRD2HD9fnw6evvWvO3Tfr0aGk0U55ra0TFInv6uzgrXFXlx0i0
77RPlC83Yj+JW7oddqr6vHzTTw9/f6dod+L1t9m0T8pcbFSmPHER3892W0zPuz+jSbVvidkcqmfP
Sel7bekrI4n4dZnPWIrHeYnZee2Wpy8dEaml4npNZblw5qzb8M9JbYgAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAABEzFYmZnaI7yCXL1XGa0jJXT0571nbee27DiXEprp8nhbxG20W8
5cbD0ikfnKO+urTPvjoZdXqctdsmTaPSvRpWmsdZ6yztfaGplvv3lWW1tyRlz1x0vkn7Vo5atTNe
Y0+1o79V2KsZsvX7Ne5mwxnyTNvsx2iGneM/rCdRSuOsTasTt5kRFtpjqmOH4t4nk7estiMNa97R
Hwhna0iuKTEdmGWa4672nZtRele1N59Zlq6vLOSsYorEc07qcW65euzRvtXvPZy52naZ7ujr6fXV
rWdukREK8+njHgmZmPc67bq6ivVWhxxgxZLztNrT1mZ/SP4VZs0zaOvfp84WUtNsXLvtv3699+rU
z7+Jtt5qURqMnPpctaR1rMSw4ZoK57eNk6xHaJRh97Ltt7lo5Z+L1HAPZvVauZ2nFTSzMTzeJEz8
to6xPfvsZntPZ9rXxabmxzefdrv0j1dXh/BcmstW1qxTHHasR3+b0GPhGl+kWmd64dNEVjf73T7X
y8vy+Ddx6O3iRakxTH5RXrMw1/lX+3Itw2MFIraN48qRHdZi0cUjmmPen9noox1iO0fNzdXEYrTt
stcmd9aX0bJ+HePmiKTitO8TMLZ1cVjrMfqpz6ys4pjfrPRWZ9rXXptUit6zO+23VyaRHEc05L1/
w9J9ys/en1ljqdVbwYw452tlnl3jyjzbmmiMeKtYjpEbLeTXPUU8ee/+qjJpsV5rbkrFqzE1tEbT
DpYNbW21Mnu29fKWna0KbqTdjXXjld0cvQ63ltGHNPSfs2n+HUbS9c2s2UASqAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAOVxPWe99HpP8ArmP4b+r1EabT3yT3iOkesvMVtN7za07zad5l
XV5GmM9vVfEstvDx0jtaVVMlq+UJ18b5cMRvPeSuK87bUt+i2Z3PtG7zXpjkzXt6R+TXyTMzvM7t
ydHqZ+zhv1+Cv/ZuqvPTHMfOYaTMil1a1K2vHSLTELq2v+KWzThGo84rH5rq8JzedqR+ZeI7WnOS
34pYTafWXR/2Pln/AMyrKOCWnvmiPyR6O1y9585lhWJvl557Q6eo4T4dYiMvW3b3UanhldHpJtGX
e09unmjsT7eb1l4trI2t0hsZfrdNO0bzy+nzU20/+NmkzO9esz+TZxWis9dttvPv+Tn21jjaW8zn
26bTG3mp1M/Wzv3t0jyWXiKZJmsTERaZhXXDbNl8WaztWenxZLstPp5pau8frDtVrNMM5cfTfpMf
3aunxxbes9d/R09Dp8ebJi09ptFr3jtt2WyrW9wy1Jx132mK+Xq9PotT0iIU19ntLtExa3T47T+q
6nBaYvsZstZ+cT/LeMnUi0TXffo1s2m8Ws2/OIMWk5Jib5L328rS2t94Sh5TV4ppklpW6PT6rh+P
NbebTHyas8E081mZy5P2W6OFhjxNTE/hr/LoRO0Kvo9dPqctKzMxEx1la5t3tdnjnMs4noievcrO
yZjeFF1OSnNV0OG62cn1GWffj7Mz5w05joovzY7xes7TE7w0xrjPeex6Ua+j1UarBFu1o6Wj0lsN
3JfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrU5o0+nvlt92P3BxuM6nxNRGCs+7Tv8
2hToxm1r3m9utrTvMsonqyt7XTmcja0u3O6FMfi5t/u0/lzdJM81p9O3zdvHTwsUR5+bfPqOfX1h
dqV+3O7bs1+T31oqmI3TEM4rvCdkDGIIhlFd2daboS0NXG2bD6bufxXU1vlmu/u4us/N0+L1tTSx
kr9qk7w89j1FNZMV3jxLzvaJ8mer+LSOZqK2xZotbvljfr/89U453rXt9lse081xZtNjx7TGKu0t
DHlrevSevaN5Y6+tJ8c7VRNMt63n3ub+6/R54rERMztDYy4a5omclYmfxKcenrjtHLvtPrCnVmdb
eFe3JXmjy6eS/DrMuLVYsta9Mdt++6qLxO+0dEc8UmInr18iUfReHcXrqccb9Z27Q61Lb13eJ9nc
1Z35rTvE9avY4bTkpG8xEfB05vYxqybc07R281naGMREdoT5JQqy9mply7Q3bV3iXG1eXw7TWSka
c258t7+tpT5/BjT7MfHqndz12Z+M4lMMKyziUJJiN1WSu9fku23RaOgKNJqbaTU1t9yelo+D0cTE
xEx1iXmM1Nt3W4PqvFweDaffx9vjDbGvxz+TP66QDRiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAOJxzU73rp6z296zsZMkYsdr2naKxvLyObNOfNfJbvad1dXkaeOdpvsc2yuZVzfbfqybutwu
s5s8R92J3dvJb3tnO4HSMegtmt3nfZvYp8SZl0z45NfSK7onH1bNcfRFqnUKJr0Y7dVtq7prjEsK
0XVpEM6028mW20IHK41aPo3J6zs4ODhdcvPnvExFevNXpMOrxi/PlrTee7PLX6Pwa09uaNlKtHg9
dM3z5d7ReOu02nu0JzZMfblrv5R5uvrcdImZ26T1mYhxs1Os7RH93PZ7axuafNfLitvbaYU3yZYt
PXs9NwHhui1HBa5LVicsb81onrEuVqNNSuS8Y67dZ6xPZa59Il9uX41vEitImZme3q2Kxbxora0T
Md/ROSa4Ztkj7c9OafL5LuGYubmyX3iu/TfbdSfVnpvZLT/XZK233+Mbbva1xRXyiPk8pwbH4N6T
adq5a71n0tD1WDL4tPe6Xr0tDpz8YVnJHWEXYxbqlBedoef4tW0XraO09HdyztSZcbUz43C+ee9b
SVMaeOfqq7+jGckQ1Yz7+7v2RN/WXPXZPjci2+2yyJaVMuy+uSJlA2d+pNoVRbeDcSxyTE+TDDlt
pdRXLTynrHrDOyiyZeVFnY9TjvXJjres71tG8MnJ4Nqt4tp7T1jrV1nRL1x2cvABKAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAHJ49qfD09cNZ97JPX5PPw2uI6j6Vrsl/ux7tfk1mWr7dOM8iLdm
vfebREefRsWldw7SxqNbWbR7lPesrn3Vteo7dYjDpMGCvfbeXQ0uLlxRLRxROfUc34p6fCHYrXlr
EejqrjY8uzCYW7MZjdVKqK9VlaxCYrsnYExBMRMJRPZA8/xPHtmpP9W2xx76vhWOInvt/C7ike7N
vwzE9kcapGfhlevTaFbFo8RqJ5vy8/RoW09ek0msxHfp3dzNoLzp4zUmZpMbT8HJyYJi20X2n0lh
ZY1li/RaidBF4w2mK3jrHaFGp1lN+tptPp5IjBkid5mIp16TKu0abBPv33vPlM7z+iPdFNcWXU5I
tkrNce/b1W5db1nTaf3ax9q0fxDW1ebNk2phty1mOu09VOm8W19orEz23j1TwfSeERFuEYMddptW
d43dvBn21eKJ75KbW+cf/JcTgMxXTb3nbljz+TpcPmc2uyZO1KRtVtGVdi0bx07qJnllsRO6rNTe
N4XVamsy8mnvPwc3R2jPwe8TPbdlxXNOPSZfhWWpwO85OFzv57qrODkzeHntSe8Sn6Rv0a3EZ218
8nXekfr1a0ZLVnqx19dWb6demXybOO7lYMvNMdW9S/VVLo0us7tPHdtUtEwJiZU3jq2Jhham8CVG
PNODNTJXvWd3qcWSubFXJWd4tG8PK3pPd1OB6veLaa89Y61/u2xfxh5c/rsgNHOAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAANLimq+i6O0xPv392rdeZ4rq/pOqnlnelOkIt5F8Z7Wj27I2I6sb25YY
V1ImY3dbQ08LRc23vZp2j5OJG+XJWle9p2h6HHtbJXFT7OOIpX+7TxT31j5rycdTh+Dpz+XaG/sw
w18PHWseULN2trBE9UcrJKBhFU7JAQi0dEomegNDUYovM7x3jb5tO1ZvpbaTLtzRExWfWPJ08kbT
Ex5NXWYYyV5omYtHWJieyeDzuizfRs19Jn6TM7Ru1uMcJxZqTkw+5f4ebqa7SV1MR4tdrx2vEfy1
axqsNOTLjnLXytVXi3Xj8+nmsxTLM16d5npPyUzpekTtSK+U7vS6vQ/SYmK1vWPS1HOn2dvvvvE/
tDO5XlcO+LbfHSd/W3o6/BdDOXPTnj3Kz38rS6Wm4FNrRyRzTH3p6RH/AKvR8L4dXSzE3jmtHn5I
mbfqLV+m4dbLSsZInHjr3iI6zLpYaxS01rHuxHRHiT9mv6s67Vj1aqL6326MrWiYa+/Q54BxPaGe
XRZpj8MquB4+Xg8zPnB7SX30to379GxpK1xcHiKz5IS8xr8PLPixH2bftLTy05o6dHYyVjLhy0t1
izjZa3pMVv3iO/qz1G2L+NbSajbNyW7xLsY8kTDz+fJXFqKZN4iZnafi6WHL0iYlStI7OO+7axW2
crFl7dW9jvE9ULN+J3ZbdFGOy+AYWpEqN7afNXLj+1Wd23KrJVMvCzseh0+auow1yU7WhY4fCdV4
OadPefcvPuz6S7jol649Tl4AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV581NPhtkvO0R+4NPi2
r8DB4dJ9+/7Q83Po2NTqLanNbLfvPaPSFDHV66sZ5ET0hRknyW2lTtMyouz0c8usx2n7s7vScKwx
zc1vu/y85p+maJh6Th+SOWeveXR4/wDLm8v+nX5mUWa9bbrInolmu5jdTNkxYFk2Isr3TuCzeGMz
+THdEyDDJO9Ja823rt2XWnya946pGvktDXta0ztWu/ybvLE9dkcoOf4GbJPWK1j49VmLh9JtE33v
Mevb9G7WsW8l1ccREISophiJ2jpDYpijbaOjOuOJ8ujOdqxsgVcsUjaETYvbaFFrgu5lVsm0yUtu
ryg43H5m+GIj1XcJzePoL4pnrWGtxmfchr8JvfHS1622if3QljzTTLes+qrNjrkiYtCzPMxnm095
YZJ6boS5teB49Tqscza97VtvWvlv8V/FOF34RrIxTM2xXjelp/eHoeA6XnzReY3ivX/0dfivDcfE
9HbDbaLx1pb0lOs+jO7K8Lis3cN+0NKcd9PmthzV5clJ2mF9J9GHHVL108dm1SznYr/Ft0tuhLb8
mNohFbMhLWy0mJ3rPXvDvcO1karBG8/WV6Wj+7kWrvDDBlvpdRGSnbzj1hpjX4z8mOx6UYYstc2O
uSk71tG7Ns5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeXneJ62dVl5KT9VTt8Z9W9xbWclPo+O
fft9qfSHEU1pv48ftYST23ZTDC/p0YtlVuvVjMbM5+LCZjYGWGdrTPxiHY4ffaf3cjTxz1v6xMS6
Olty2iXVj/Dk8n+ndrkhnGRo1v8AFdW3RCrZ5uiYsqrboncSu508yjmZRYQt50TfowYTbYGVrKrT
uTZjvukQnYhMIGVY2ZxPVWyrHVCWzXpVXkt3TE7Va+W4K7X3jv1auTNy3jdba0RZpamfroQN7Hk3
6wr1GTaN2OOJiu6Mu98NvgDi8Wy74d/yZ8PiPAiO2zU4nb6qIn1bugjfFE/ASp1ke9u15mbbRDZ1
Mb823kx0Ontn1OOkedoJCvT8I03gaKsz9q/WW+isRWsVjtHRKyrhe0XCfpWL6Vgr9fjjrEfeh5fF
feH0V5Dj3DPoOo+k4a/U5J6xH3ZZ7z3228evytOk7NvFbo0cdols47bSybt7HbddHVqUs2aW3Qnq
xVeu8LILR3SlZw3V/R8nhXn6u0/pLuPMXjeHT4Zruf6jLPvR9mZ8/g1xrvpz+TH7HUAaMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAABRq9VXSYJyW79qx6yvmdo3l5viGs+maqYrO+OnSvx+KLeLZz2te1rZL2v
ed7WneZYWnZl5K72YV1xEyxmeqJljzIEWlVkszvbZp5soN3h2SJz3pP3odCnuWmPRxuERfJrZmtZ
mtY96fR28kbX3dXj/wAuTyf6bmK+9YX1s0cNtm3Sd4LFY2K23W1s16StiUJW7bp22RW3RluBuruz
mWEgrmCGWyNkoExKE1QlPmsqRDKeyBjaejWy2W3ttDUyz1QKslvehVqKTNosyyTvELabXptIJpaP
B39Ia2mz+JGpr51jdZefDx2hzuHZObNq58poJaGtjxJ2+LoaKP8ADRPo5+T3skx5OhpOmC0fBNQ0
5yTbn+bt8A0u9raiY6RHLVwY62mI6zMvaaHBGn0mPHt1iN5+aYVsACBXqMFNTgviyxvW0bSsAeE1
mkvw7V2w5Ote9besJx2er4rw2nEdNNekZa9aW9JeQjnxZLYskTW9Z2mJY7zz26fHrrdpbZsY7NGt
mxjvso1b9NmUwpx33XRO4K7VUTE1nmrvEx1bVo2VWiJE/XY4frY1WPlt0y17x6/FuPM0m+HJGTHO
1qu9pNVXVYt46Xj7VfRtnXXL5MfzexsALsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHM4jxOMFJphmJv529Dq
ZLfjDjPEIx450+K3v2+1MeUOHSOWFc3nJkmZnf4yujpVlqunOeFpV2nctLCZUXRM7MJtsWlRkv3Q
ky5NmpWt9RnrixVm17TtEQnJabXisRMzPSIew9n+CRoccajURvqLx5/chfOest642OGcIpoOG2w7
ROW9d72+LQvXevyejcPUU5M+SvpLeOataraw2a0dLbLqTtK1G3Es4lVWWUSoldFtmcXUbpidgXzK
GEW3TuCUSncnsDFMMLSms9EC6J6FpVzbZE5ALy0809ZbFr9GtfrEoFMzuuwz0Ueey3HbaBLDXe7i
tMOfwWnP9I+NZbuttvhs1uBRtXPb4SDm3iIvf57N7Dbl0VrS5+XrltEd+Z1Jx7cNms9N4TURRw3T
+PrcO3WszEvZOD7P6aYiMlvu16S7y1QAIAABxOPcLnUY/pWCv1tI96I+9DtgmXl68Biy7/NtUu3+
O8HnFa2s0tfd75KR5fFyMWTdhrPHVnX9R0cd21S3Rzsdm1iuqs256wrmGcT0RYSx5d047X02SMmO
esd49YRE9WcdSXhZ2O1p89NRji9J+cei1xMc3wXi+KZj1j1dTTaqmor06WjvWW+ddcu8XK8BZmAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAMMmWmKu952UZ9XFZmuP3revlDTtzWnmvO8q3XGmfHb9ZanV3yxtWeWn7y4es
vPNtDqZJ6Ts5mppvdl/XXRMyfGvSNlu/RVvtOzLfoipLT1VTKbSpvfogRkvtDVyZOhkyvQcA4Dzz
XV6yvTvTHMfvK+c9U3rkW+zvA/D21urr789cdZ8vi9KDb45rejl8Rry6iJ/FV1HP4vXbBTJEfYt1
+UpiHM295bXsqrO9l8QkZ0lZEqqLeyBZHZLGvZkhIndADKJ3TMoqWQMZ6pjsxll2jsCLSrmU2lFY
36gieyu0LJk3jbsga0wdqzK20QpyztQGprL/AFMrOE05NLkt6qdVWZxNrSe5o9vWBLiUjnzXn0vL
q555dHt8HOwV928/1z/LpzXxbYccRvzTB+jucOwxh0dI22mY3ltIrHLWIjyjZKyoAAAAACJiJjaY
3iXleM8InR5J1GniZw2n3oj7s/8Ao9Wi9a3rNbRE1mNpifNFnVs65XhcWTdt47bnFuF24dm8TFEz
p7T0/pn0a+HJux1OOrOux08d1ndqY7tillVkzExLOk7yd4YxGwluViJhE45raL0na0dtlWO0+bZr
1TKi+2zptZGTamT3b/tLacvJjiY3XaTWdYxZZ6/dtPm1zrv1z78fPcbwC7EAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhkyV
xUm152iAZWtFazNp2iGhm1Vss8uP3aevnKrNntqLdelI7VRHRnrX/HRjx/tZREVjZXeybW6KbWZt
pCZ6S08tN7Nmbb7zCrJtyoS5145bSx5mWafelr3tsKmS/o08uXyhlly7RPV2+AcBnPNdZrK+53pS
fP4ytnPVda4y4BwHxOXV6uvu96Unz+MvVxG0bQRG0bR2G0nHLb2gCUDX12LxtFmpHeazt82wT1gH
mMN4tWs+rcr2aEV8DU5sM/cvO3yb+O0csLUTSdrLphRE8tlkZI7Atr2ZMazDJVKTYSCawi7Ksq7z
1QERvLK3ZGPrKbyCrbdnMcsbeaa18/RhvvM7oGEwTG0JmYYTIML22a2e28xELM19oURPNO4lOem+
n3ZY5+prVnMc2GYU4/L4A0a15cNf6rz/AC6fC6+NxCPOuOu/5tHJTbHj+F5/l1+BYumXJMd9o3/d
MRXYASgAAAAAAABhlxUz4rY8lYtS0bTEvH8R4ffhmo6bzhtPu29Pg9mq1Gnx6rDbFmrzVsizq2df
zXkMWTeIbNL7tbXaHLwzUctvexWn3bmPL8WFnHVL326VZ91MfFVjvvVlz79kLrcf2m7j7bNHH3bl
J2SirLQoy4t1++7G0dBC/RanxI8PJPv18/WG241+alovSdrV6w6mDNGfFF4/OPSW2b1zeTPL1aAs
zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAVZ9RXBTe3WZ7R6iZOpzZq4ac1p+UermZMl89+a/byj0Ra9815ted59PQ32hlrXXRjH
DpCLX6ML5NlNsm/ZRqstfdXzbsZt06sLZNvNB1Za8RDWyZdo7q8udq5Mu/mIMt4md2lmy7JzZuWJ
dHgfBL8RvGo1MTXTxPSPx/8AstJ1XWpIs4BwSdbeNVqq/URPu0n73/s9hEREbRG0QUpWlYrWIisR
tER5JbSccur2gCUAAAAPM8Sry8Uyz67fwuxbzVPGsE49XGbvF42V4M0TEL33ERnktsxpk3sumK2j
admFdPFZ33VS2Mdui2J3UU6LYlFSsN2O5NkCyJ6K7T1TEsbAsxdpReerKkTFGMxvYEz0rsqtbbpC
b2VT1QEzuwtbaGUxspuJU3neWdKoiu8rq12gCI92YatLcublnzbEz1aOptyZqTuDHLfxN6R0+t5X
qdJhjBp6UiPLeXl9NSMnEKxHa1+bb8nrlvxUAAAAAAAAAAABTqtNj1eC2LLXeto/R43VabJw/VTh
ydY+7b1h7ho8V4dXiGlmvbJXrS3xRZ1fGv5rzeHN02bEW3cys3xZJx5ImtqztMS3MeTeGFjqlb2O
8btql3NpbZtYsnSBLeiWfdTjtutid+ghherHS5p0+f3vsX6T8Fkw181d4lMvEWdnHaGnw/UeNh5L
T7+PpPxbjdyWcvAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAo1Oprgr63ntAmTqdRqK4K9etp7Q5d7Wy2m953lNrWyWm953mVd77R0
Za1104xxlN9lV8qnJl2a9s3xUXX2ybsJyRDWtl3YWydEC+2VRkzeW6q+T4tbJm+KRdfK1cmWZnlr
vNp7RC/R6HU8SycmCk7ed57Q9ZwvgOn4fEXtHi5/O9o7fJaZ6z1uRyOEezVstq6jiEbV71xevzer
rWtKxWsRFY6REeSRrJxz22gCUAAAAAANbX6aNVpL0npMRvWfSXlKamsRMVvXm+EvZXjmpaPWHzfL
oNRjzXicfWJ8phfPxFejx72x7xMzK+sXiNoiXlq+Pi6fWV/VfTNqfLJl/WTg9Pji8R70LqvMV1Gq
j/zcv6yz+lanzzZP1lWpelTET6S81Gp1P/Gyf90s412rjtnyfqql6asREdWM9+jz9eJ6yP8Az7uh
odZqMt458tpB1JvEViI3/RhzRt13/R1MNaziiZiJn5K9ZNceKZiIiQcu/WekT+iYrWI3lzdTrs+8
8uW0fJzcur1Np/zsn6g79phVaIeetqNR/wAXJ/3SwnUaj/i5P+6UD0ldonum161h5mNRqP8Ai5P1
lNtRqJjacuT9Qd22WN5aGeZyZd/KHJy59RHbLf8AVq31Gp/4uT9ZEvS8Lr/vSs2npzRtL1z53wK+
oza/HW2XJNd99pmX0Rb8VAAAAAAAAAAAAAAcHj/C5yV+l4I9+v24jzj1cLFk8nu5jeNpeW41wmdL
knU6ev1Vp96sfdn/ANFdTrXG+eq1q5F2LLtbZoY8m8d11bbSydErsYsm+zZrO/zcnBm226uhiyRK
EtrvCrJDOJTeu8A1MWX6Lqq5N/dnpb5O5ExMbx2cPNTeJb/DM/iYPDtPvY+nzhri/jDy5/W6AuwA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAa2p1UYo5adbz+xbxMlvqJ1OqjDHLXree0ejmzNrWm953tPmTPWbWneZ7yoy5YhjrXXTjH8s75N
mtkyxt0VZM2/m175N1V03yTKubMLXVXybeYLLX2VXy7eam+b0bOg4VquJW+rry4/O9uyZOq3UjVm
9r25axMzPaIdvhns1kzbZddM0p5Y47z8/R2+HcF03Doi1a8+Xzvbv+TotJnjDXkt+K8ODHp8cY8N
IpSO0RCwF2YAAAAAAAAACvUZYw6fJkntWN3k8dfHz2vLucdz8mkjFE9bz1+UOZosX1UzPm0nqI/W
MYo9FlcPNklfFGeH/NshLGun+Cz6PtHZtVZWlRLS+jxPkRpIn7rdoupHTdA5s6SI+7H6Mfo+32Y2
+To3neSIiZ7A0IjPXpXLePlMotGW3272t85datKzHZjbTVnsDj+FG/2Y/RlGP4R+jo20u7H6N1Ql
o+H8I/REY957R+jpfReiK6eOYHLtj2tttH6KrY/6Y/R2c+kjeJiFVtLG24hxpw7/AHY/RRkw9O37
O99Hrt1YX0tfOBLjcGp4XF8c+u8fs9c4dcVcGemSI61nd3IneN1orQAAAAAAAAAAAAABFqxes1tE
TE9JiUgPKcX4RbRXnNgiZwWnrH4XPi28PdXpW9JraImsxtMS8pxXhF9DecuGJtgmf+1TWW2N/la1
L7N7T5e3Vy6W3hsYcvLbqzbO9jvvCzvDR0+XeO7crO6FmGSvRThy/RtVXJ92elvk2rRvDUzU7pl4
izsd2J3jeBpcNz+Lg5LT7+Pp+Xk3W7js5eAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs0NTrN96Yp6edkW8Wzm6+LNTq4pvTHO9vOfRoWtt
1mes95YWvs1s2fZldddOczLPLn2ju0MmebT3YZc2/mpm3qqllN1drsbZIhr3yzvtHf4AsvlYYseb
V5Yx4KTe0+UQ6nDvZ3UazbJqd8OKeu33peq0eh0+hxcmnxxWPOfOfm0mP+steT/ji8N9mKY9suum
L37+HHaPm9DSlaVitKxWsdohI0Y22gAgAAAAAAAAAABXnyRhw3yT92Nwef4xm8bVzET0rPJH5d12
CvLhho3rN9RWs9Z23n5y6O21YhrVYbdGOCfrrLPJRpv863zVS6FS09SvZj3lVZZRdPSqmnSWdrIE
ebOkK4ldTsgW1WKqd1oMZhEVZyRAImOjGI6rJ7IiATNd46qL02bHkiaxaoNGY2n4ImPgtyV2n0Vo
Gvlx7x2beiyTk08RPevSVUxux00+Fn2n7N+n5rRFb4AAAAAAAAAAAAAAACLVres1tETWekxKQHlu
L8InR2nPp43wz3j8P/s5dLveWrFqzW0bxPeJeV4xwmdFec+CJnDM9Y/CrY1xv8qvTZ+WYdbDk5oh
5zHk283U0eo3jaZZ2N5XYjrCnLSJhOK+8d1kxvCqzSwZvousrb7k9LfJ3nB1OLeJdLhufx9LEWn3
6e7LXN9Ofy5/W4AuxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAETaKxMzO0Qi9646Ta07RDmZ9VbPbaOlI7Qi3i+c3TPUaqcu9adKfy0722ZXvFa9
XO1OrjrESxt66ZJmcjPUanlidmhkzTZVfLN5VWvsC2b7R3U3yqrZZtO1esz2h2+F+zWTUcuXXTNM
feKR3n5+iZLVbqRzNJo9TxHLyaekz62ntD1fDOA6fQbZL7Zc/wCKY6R8odLBgxabFGPDSKUjyiFj
SZkYa3aALKAAAAAAAAAAAAAADQ4pl2pTFH3p3n5Q33E12Tn1eSfKscsLZ+orS00eJqbW+Lfnu1tF
XaJnZsz3WpCfsyp00fWSvmPdVYOmSUDd8kR3InoQosy7JmUX7MdwZ17ro7KKT1XRPRAsrO0rYndr
79V1ZBaQiJ6JgCSIJASwrO07MpV2nqBlrv1a1o2bf2qtfLXaQUTO0sb05o3jv3ZXhjS20xEphW5h
yeJjjf7UdJWNKLziyRePsz0lux1SgAQAAAAAAAAAAAAAADG9K5KTS8Rato2mJZAPIcU4ZbQZuekT
OC3afT4NXFkmlntc2GmoxWx5K71tG0vHa/RX0GpmlutJ61t6wrY2xr8dXS5uesN+tt4ef0eaa223
2dnHk3juyreM81OaFGiy/RtZET9jJ7s/2bdutd2jqKeic3iNTsd8a2h1H0jTVtP2o6W+bZbOO+gA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABje9cdJt
adohGTLXFTmvO0fy52bJfU23t0pHaqLeL5xdK9Rnvqb+cUjtCi94xxvK3JetKuHrdZvaa1ljb10y
cnIs1Wt3naJc++TmVWvMz1YWybfMGdsm3eWek0mo4jm8PT0mfW3lDf4V7P5tdMZdRviwfvZ6/TaX
DpMMYsFIpWPTzXmf+steT8jn8L4Dp+HxF77Zc/4pjpHydYGjC3oAAAAAAAAAAAAAAAAADG9opS1p
7RG7zszN6WtPe0zLua+3Joss/wBOzhzG2OsL5+IrY09dsSyYRijbHEMvOChb7KjF0yS2LQ169Mso
S24noyrPVXWejNVKbTuw3T3REdQWU6LYlVvsyiUDPfqupPRr79VuOQX1lZEqoZxIMksd0gT2VT0l
bPZVbuCaW8i8bwr32WxbcGnkjaZa9p2ndv5qbw5+aNugLItF6TEtvTX5sMb969HMpfazc0d9stqe
vVZDdAQAAAAAAAAAAAAAAAADV1+iprtPOO/2u9bektoB4TJTJpNRbHkja1Z6uto8viVht+0HDvpG
H6Tjj6zHHvbecONw7Ltfkmeqmo6Ma69DXbbZTkr1mGWO3RneOaGbZRoM30fVzSelMnT83aef1FZ7
x3h1tBqfpGnjmn369LNc3sc3kzy9bQCzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAa+q1dNNXr7157VhGp1Xh70x+9f9ocy283m1p5rz3mVbrjXHjt91lz
5c9+fJ1nyjyhdM8lZlOOIiqrUXikd+kMreunnI5XEdX4dZiZcG+XmtNl/F83PeeWWHDOGanieSKY
q+5H2rz2hMzWd1Iqx1yajJXHhrNrW6REeb1nCPZumn2z62Ivl7xTyr/6uhwzhGn4Zj2xxzZJ+1kn
vLoNJnjHW7TbbsAszAAAAAAAAAAAAAAAAAAAAaPFrbaSK/itEOXt0rDf4xb/ACa/GZacRvaF58Q2
IjasQnzPIhCU92tMbZGzHmotG10C6nZkwpPRmipIllEbMIZIE7solgmJBnCyk9VMM6z1BtVllEqK
z0WRILYlluriWcSDJVbusV27gwInaSWM9ECyZ3hqamnSWxFmOSOaqRx725bNnSZNs9J+OynVY+WZ
YYr7TE+nVaIr0Ais81Yn1hKAAAAAAAAAAAAAAAAAABExvG09peU4nov9n66L0j6q/WPg9Y1OJaON
ZpL0+9HWs/EWzeVz9PbmrEtnyc3h9reHy26TWdnSr2YX6657ijLXpLX0+onSamL/AHJ6W+Tbv2aW
ekTv16JzeI1Ox6KJiYiY7Slz+E6jxdN4dp3vj6fl5Og2clnKACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeQRMxEbzO0Q08uqtkma4ulfO3r8lefUePMxWf
cjy9WvlzVxV6T1Z61/x0Y8f7Wc7Ur1lqVy+LqOWJ2hp6rXddon5rOF1tfmz5OkT0qzb8dWbxjp1c
biuuilJ5Z6r+IcQrixzEy8zl1E6rNt1tMztFY81sztU1eRucN4ffi2p5esRM72n0h7rS6XFo8FcO
CkVpX082nwXh3+z9FWLxHi36328vg6TZyW9ABAAAAAAAAAAAAAAAAAAAAAADj8Unm1tK/hqppHvw
y1k8/EMk+m0GOPeafiFpCZYwolnXspvHvLa9mF46gmnZmwozRUiUCBKYYsoBLOFbKAX0llEqqyzi
QXRLOJVRLOOwLIljZMEgrlhKyYYTAK5nZPN0RZjugUanHzVlz6xtLq361c+9eXItPpXX0dubTU+E
bL2lw2++O1fSW6m/VYAISAAAAAAAAAAAAAAAAAp1GbwcfTreelYEydcuMcRrM/L9nnlsV6wqpi2r
tv133mfWVkRyRtEdGFva7MzkYZNoamWN4bV4mYa9qztKIujhVppxGI8r1mJegeZpknBqKZY+7L0t
LRekWrO8TG8Ns/HJ5ZypAWZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAADS12fp4VJ6z9qVuq1HgUiI+3bpDl589cOKZmevqprXPTbx477rDJlrhr1nq4+s182tMRP
RqaziXiZJrWekNG17ZbxWJ336M5LXRbI3dLTJrs07RMY6fan1dHLrowY+X7MVjt6N3R6Kul0EbWm
s7bz8Z+LnabQX43r7Y53php/mXj+Dnv0f1JO1x/8ZxbUzj02O15mfLtD13AvZqnDds+pmMmo26el
XX0Wh0/D8EYtNjilY7+s/NstpOOTW7QBKgAAAAAAAAAAAAAAAAAAAAAADG88tLW9I3BwJtz6nNf1
vK/DHVqYJ3pzT5y3MPZeojOWMQylEKpTVjZnDCwkqzYQyRRICATCITAJZQxhMAshnEq4ZQC2srKq
qrIBZCWNZZgwswmFloVyCu0dFcx1WyrtCBhv5NTPHXds2U5o3hIz4ffbPt+KHUcTSW5c9Jme0u2v
VYAKpAAAAAAAAAAAAAAAAYZctcVOa35R6tLrltN795/YvknNqrfhpPLH92V5isd9mWq6fHjk6rn0
ZxG8KK5Jm/wbVZiYZtqrmkqL023bkxvCiY3lJHNyRG81mHS4Rn5sNsNp64+3yaWaNrzOzHBl+i6q
mT7s9J+S+ay8mex6EIneN47SNXKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAImYiJme0JafEs3h6fkidrZOn5eaLeJk7eOdm1Hi2vmtPTry/CHmOJcUvmvOPF1n09Pm
6HF9ZGm01qxO3R5vSY7XwzmzTy47zzTEd7en5Mfvt2/PURWdo3tvPrPlKymbktFqTtMTvHzbOLDG
f63JXbFX7FdnoODcDprZpq9TjiMMTvSn4vj8l5fxnrk91saPSa7i2hpOfbTVt5x1m0fLydzR6PDo
dPGHBXasd585n1lsRERG0dIF5OOe6tAEqgAAAAAAAAAAAAAAAAAAAAAAADX11+TRZrf0y2Gjxe22
gtH4piP3TPpXKwxtjhuYo9xq442iIblI2pC1RET2ILd9kxCqRjZmwlCSEohIJAQAAJZISDKGUd2M
MoBnVbVVCyAWVWeSuqyOwIlXZZKue4MJV2WWYT2QKbKL9YlfdRdIo35b7/Hd3KTzUrPrDh27uxpb
c2mpPwX/ABX9XAKpAAAAAAAAAAAAAACekTIp1eTwtJmv+GkyJn1oafeazbfpMzLR4jq/o8b823zX
6XNF8ERCvTcNpxLV5LauvPhx9Irv3lhztdtv8TtaWLicXrt03jzjzb2k1nid56ty3s/w+a7Uwzjn
1raejlarhmbhl/FpbxMO/fzj5p/ixSeXOvTtRfeI280ZI26tfDm3pWe63LaZx7qtGvniJ6tPLvOK
fOa9WzbJvTbza02jl3n5SSljscK1MajSxWZ96nSW88xw/VfQ9XMT9nfa3yemid43jtLeXsce88qQ
EqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADia3UTm1l4j7OP3Y/u
7Vp2rM+kPJW1PhYcmS0+9MzKm/jbwz31weMzbV8UppazPL9q0/BF4rk1GLDSNqxPWPhCnHmnNrtT
qPKteWPm6U6OdHaZvO+SaRNvhv12Ub/q3FhtrNVj0uKOt56z6R5y9zix1w4qY6RtWsREOJ7L6OKa
S2rvX6zNM7T6Vh3mmZyOfya7eACzIAAAAAAAAAAAAAAAAAAAAAAAAAAczjVvqMVfW/8AZ03I41bf
Lp6/OVs/UVrY47NyOzUxd4bUJpEbb3Z7IiOrKIVSjZhMLJYyhKIgmGUQSDESIEbJEgQmCITEAmGU
IiGUAyhZVhDOoM4Wx2VQtqBKuyyWEgqlhKyyuyBVaGtkbNmvk7A15l1eH2300R6TMORPSXT4ZO+O
8fFefEX63gEAAAAAAAAAAAAAAAq1WPxdLlp+Kkx+y1Fvsz8gjhaDauGK8sx07y3OE3m1tT6RaP4c
vU6yMNKUx73zT0ilY3l2eF6a+m0kRl/zbzz3+Ez5M8z26fJruW6wzYq5sV8d43raNpZjRzPPaTmx
5b6bJ9rHO3zb2WJ8GWPEscY9bgzxH2t62n19GWW0eHOzHU5XbjXZ1x8WTnz2iZ7S2M1IjH2+LX0V
KTqs8zO9ot0j8nUthi1J3UaOFMTfLFo6xMbS9BwHWTqdHOO8+/hnln5eTjYMFo1WTH5VnePzXcIm
2k4zlpPSmXy/hfF5eMfJns69OA2cgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAADG/2LfJ874rW845mubliY7bPoto5qzHrDz0+yePNF41OotaJ7RWNtpV1OtfHqZ715fhu
j8adNpcVfeyzE2/vLuanhOu1nEctIxTTFa/+ZPbZ3eHcF0vDbTfFE2yzG03t32+DokynXl9+leDB
TTYKYccbUpWIhYCzEAAAAAAAAAAAAAAAAAAAAAAAAAAAAcXjE/4zDH9M/wAu04XF5/3jj/0f3Wz9
RUYmzDWxS2I7FSyjuzY1ZKpRKEygEwiWUIkGIk2QJNhKQhMIhkCYZQxhlAMoZwwZwgWQshVCyATL
CWc9ldpBhZXLOVdpQK7NfJPRdaWvknoDVvPvOnwuel4+TlXn3nS4VPvXj4QtEV0wAAAAAAAAAAAA
AAAAAVV02CmTxK4qRf8AFFeq0AAAanEsfPpZmO9Ji0NDLfkwdOsulrumiyzHlVzJrz4Ovoy26vB8
cTBa9NffLtMY77Rv8Yegx5ImkKdJoY1HC81Y+3OSbVn0mGGkmbY45u6tnrrTOu2xGO0RxCd+nNVj
qKxTV1vH2pjaGtnyzXXYdo96ZmGXEMk15b7/AGZiVerWPTYckZcNbx5wzc7hGbnxXxzPWk7x8pdF
0S9jh1OXgAlUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAcPjEf4/FP9H93ccXjMf4vDP9Mx+62fqKrx+S+GvibEFSsqyYwlVK
ZYsmIMoRKYJQIPIEiQ2ATCUQygCGUIhMAyhnDCGUIFkLIV1ZxIMpVWWSrsCuyqyyyq09ECq8tfJK
66jJ2Bp5J6upwn7dv9Lk5J951uE/av8AJaIrqAAAAAAAAAAAAAAAAAAAAAAq1Mc2myxPnWf4cmtu
XT9fR0tffk0WSe28bfq5Wbamm3326MtunwfK6PCv/AxPraZ/dz9PO97/AOqf5dHhdZrw7Dv3mOb9
XOxRFM+avpe38mvkPHf/AFWlrKba7Tzt99ZxKkfR7euyNXMTrtPHfa0z+zPiM/UR8Zj+Wbdu8HpN
M2bfzrV13M4dO2pyR61dNvj44/J/oAWZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADj8bj63BPzdhyeNx0wz8ZWz9RWri7Nmv
VrYu0NmqaRZHZlDGGSiwxZSgCEkCBCQSCQBMJRCYgEsoYx3Z17AlMIhlCBnDOGEM4AlhZZKq4KrK
7LLKrIFN2vdfZReAaObu6/CO9vk5OePR1uEd7fJeIrqAIAAAAAAAAAAAAAAAAAAAAGtxCk5NFliI
3mI32+XVyNTyZOHTee946PQKPoeDffw4777eW/yVs60xv+ZxOnr4Okx1t05KRv8Ao41Z5q3yed5m
XY1szXRZ5jvFJ/hxItP0aOSN9q7yrtr4f2tHFM5+KT16Yq/vK/iGSbXw4vO14UcPx5MGfNbPG18m
1oj4THRsTw7VanPXVYpi3gzMcnrvCnG11JOupwuN8+a3pEQ6jT4divjxWnJExa09pbjbM5HHu90A
JUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAHM41H1GOf6nTc/jEf4Ws+lls/UX45uGekNujTwdm5RNIthKIZKLDFlsiQIShIC
EgCUJ7AmGTGO7IDzZQhMSDJMMYZQgZwzhhDOATuqssmVdgVWVWWyqtCBTeVF19lF+wNLNG7q8I+9
8nLyupwnt+S8RXUAQAAAAAAAAAAAAAAAAAAAAAAItWL1mto3iY2lyrcLyUxzix2ia2nvPeK+jrCL
OrTVnxpanhuPPemSs8l6RtE7dJj0ldpNP9GwRSZ3neZmV4cR/Vs4AJQAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANHi1d9H
M+kt5ra+vPoskfDdOfqK4mn7Q3aNHBPZu0W0RdDOGFWcKLCJZeTGQQlCQSgASBsCYZQxhlAJTAmA
TsmAgGcM4YQyjsgRLC3VnaVcgwsrt3Z2V2QK7tbJ1bN5a9waeWO7p8Knt8nNyebpcK8vkvlFdQBA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9RXmwZI+ErEWjesx6wQeZwejeo0cccuW8
elpblJaaRGxVnCuss4ZrMvJEgCAASISCQIBlCYYpieoM0wx8k7gzIRueYM4Z79FcSy3QEsLJmWFp
BjaVVpZWlXMoGNmvkXXlr3kGtknu6XCf7OXkl1OEdl8orqgIAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAHmskcmtzV/rls0U62OXiWX4zErcc9GmkRfWVkSqqziWayxCPIANwBIhIJSxS
CRG6dwZwlhEs4BluMdzfqgZxLLdXuy3AmVdpZTKuZBjaVVpWWV2QlhZRdfZRcGpl7urwfrzfJy8r
rcH61vPyWitdMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHA4nHLxKZ9awnH2ZcY
jbW459aq8fZpfiI2IZwrqzhmsz3Ebm4JN0AMhCQSIASndiAziWUSriWcAyRujc80DM3RCfIETLCW
UsZEsJYSslXZAwlTddPZTkBp5e7r8Gj6rJPxhx8k9Xa4PG2C8/FaK10QAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAcfjcbZMFvnDWx9m5x2PqcNvS+zSxT7sNPxH62YZQwqzhRZO6UCB
KUAJTux3SDIRuAncQAmJZRLBMSgZ7iIAZRKd2DICUSlAljLCYWMLIFVukNfI2bNbIDTyT7zu8Ijb
Sz/qcG/2nf4T/wCE/wD2WnxWt4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHL9oL
+Hw2cm28VvEuPptfgyVj6yIn0no7/FtJfW8NzYMe3PaPd39d3iMug1WktNc2C9dvPbeP1aZ9xF+v
T471tHu2iflK2HkqWmvaZj5Surqc9Ps5bx+alTHqYHm68S1Vf/NmfnC2vGNTXvyT84Ql6A3cSvHM
sfaxVn5Ssrxyv3sM/lKB1xza8bwT3pePyWV4tpZ+/MfOEjfGrXiGlt2zV/PotrqcN/s5aT/+wLRj
FontMSlAlKEgndO6IAZQljDIEgeQljLCzOVdkCu/SGrkbF56NPNeKxMzMRHxENe0+89DwuNtHHzl
5PJr8NcnLW3Pbf7r1nCZm2gpae8zMrz4i/W6AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAETETG0xukB4HVaeMHEtRi26RedvkyjBSfX9W77QYvC4xz7dMlYlrU7M929dWJLFc6aPK0q
7YLxPS0S22FlP6q38Zac0yR92s/KVc3tHfFf8tpbcsLRvB/dR/8ALLVnU0r9uL1+dZI1mnmdvGpv
6TOy6ym+Oto2tWJ+cJ/tW+KLK5KW+zes/KU7tG+h01p64qx8Y6NXNo6Y+uPJlp8rLf0rfG7MXtHa
0x8pZxqs9e2a8f8A7Oj7HaTHn0+f6RWM23LETfr6vRW4PoL99NT8ui7F4+vEdXXtnt+fVbXjGsr/
AOZE/OsPS29nuH27YrV+VpeV9pdPXhOtw49NG9Mld55+vXcTPd42I47qo7xSfyWV9oM8d8VJ/VxM
d8l46xWF9cV7en6o/qLfxp2I9ob+eCv/AHMo9op89P8A/wBORGmyT5R+qfo2X8P7n9Q/jTsx7RR5
6ef+4/8AuHftg/8A6cWcOSO9J/WEbWr3pY7Efzp2Lcfv5YK/9zWy8d1E/ZpSv5Oba1/+Hb9lc+LP
bFt87I7E/wAabWbiurvEx4nL/pjZzc2bJkn372t85ZXx55/BX85lucC0vPxnTxlnnjm32mOiZqUu
LJ2p4TwnVavNWaYbRTfre0bQ99pcH0bT0xb78vmtiIiNojaErMwAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAHnfarF7umzRHaZrLjYrdIen9ocPi8JyTt1xzF4eUw23rCm3R4r6bMy
wt6kdTaWLdjswmNoZontsCm0K5XWjopnuDC0dGpqG5bs08/daKV672MjbSaif6oh6Z5f2LtvptRX
0tEvUN3Jfo8f7cYve0eX4zV7B5z20xc/C8eSPuZIRficfXlcPaG7ino08HWIbePpLF2NuiyOyrHK
3fZFSwuovHVfaVF4QK5YWTM9UT0EKry6Ps1Tn4zjn8NZn9nOtLseydObiWW34cf918fWfk+PYANn
KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq1WKM+ly4p+/WYeBxTNd6zG0xO0
vobw3FcP0bi2em20Tbmj5Srr418V9sa2Z7qKyzi07MXUylhaU7yjqhLCeiq3ddaFNxFYW7NLNG8t
zya+WO6Va9J7FW66mvwidnrXiPY3Ny8RyUn71Jj9Ht3RPjk19HK9pMHj8D1ER3rHN+jqqtTjjNps
uOe16zAifXzfTz7kNyndpYazS9qT0mszDdoxrsi6m8LazMq6zDOsq1ZEyrt1WWlXaUCqyq0rbKbi
Fdp6PReyFd8uqv8ACsfy83aXrPZHHto89/xX2/SP/dpj6y8vx6EBq5gAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAB5n2q03LfDqqx39y39npmlxbS/TOG5se29tuavzgWzeV4mtui2
O3RRSY2hdVhqO2MvI36iu9lUsrSrvDHn6spnmSiq5jooyV6tq1VV69RC32byTh43h8otMx+r6I+Z
aK/g8TwX7bXh9Mid4iW+fjl8n1ICWb57xLBOm4zqse20Tbmj8+qKdnS9q8PhcTw5tumSm0/OHMxz
0Za+uzx3sX1t0Zxurr1ZxvspWiZYWZbsbT0QK7KLrZVZJFaqt5vbezNOTg9J/FaZeJns93wCvLwb
T/GJn92uGHldIBowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuAPA67F9H4l
qMW20VvO3yRWW97T4fC4rXJHSMtI/WGhVlue3b473K2KzMML4+62tujG9pnozXaOSOVFMnVbmq1t
trJRW5E7wwvUxTvCyY6CHOt7moxz6Wh9PxTzYaT61h8x1MbZK/OH0zTf+Fxf6I/htj45vL9WgLMn
mvbPFvocGWO9L7fq85p5maw9d7VYvE4JkmPu2if3eW0+PasdFNOnxfF1Y2hlykRsmY+LJ0MZjZXa
eq2eyi8oQTO0KLdZWzPRjWu6VaqtHR73g0bcI0sf0Q8Nkq93wqNuFaWP+XDTDDytwBowAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAef9q8HNpcGaI60vtPyl56k9Iew49j8ThGe
PwxFv0l4zH2U26fDfTYiyJljvsjf4sm6vJ1hrXjq2MkqLdZEVbgbMx0auGdmzNt6iHN1Ub5af6of
TdPG2nxx6Vj+HzaaTm1+nx/iyVj930ysbViPRrj45vL9SAuyc7j1efguqj+jd4/T33rD3HEcPj8O
1GP8WOY/Z4TTT7sKadHhbcsZnaCJ3TPZk6VdrKbTutmP0U2nqgrGOsr8deiuI2X09EqKM1dt3uuG
f/jdN/06/wAPE546S9rwud+Gaaf+XH8NMMPK2wGjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABrcRp4nDtRWPPHP8PCYusPoWSvNjtX1iYfPuWaXtX8MzCuvjfw32siu8ptXoxi
0wy5t4YulReqmazu2skbquURWFInddM7VYRGyL291KFnCcfj8e0le/Lbmn8n0N4b2Ur4nHLWmPsY
5e5a5+OXyXugBZmiY3iY9Xz7NjnTa3Ph/BeYj5PoTxftFg8Hjk2iOmWkW/Psrr418V5WrWd2faFc
V2jdnEMXWxntupmN7NiYU27iWML6dVMVnddjgVqMsdHr+CW5uE6f4Rt+7yuSsTDv+zWXn0WTHP3L
/tK+GHl+O0A1c4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8Dn93W56/wDM
t/L3z59qp24jn+OS38lnpr4r7ZxHQ2TEstt3PXUrt27K57rr1VT0BjKnJPRbMqMs7QlV2fYvHvrd
VknyrEfu9m8f7FZI8fVU85iJewbT45NfQBKo817W4eulzxHaZrL0rje09ItwqbfhtBVs3leai8RD
KLw1sduesL606dWFdsZT1jdhNeq6K9DlhCVUU6s4jZnt1YzAhnM71dH2bycmszY/K1d/0c6OzY4R
fwuK4p8rTstn6z8k7HrwGzkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHz3
Vxvr80/8y38voTwGpj/F5/8AqT/JfjTx/WVeyY6FPspc9dZPVXaOq2WEwIUTVRmjo2rNfLHRI3vZ
DJycXtX8dZh7t879nsnhcbwz23tt+r6I2nxyb+gCVBzuPY/E4PqI9K7ui19fTxNBnp60n+Aj5/pJ
3jZu1aOnnltMNussdfXbm+l3ZM9URHREdZVXTuT1Nk7boQiOkJw28PU47/htEp5eivJPLMTCZ9Vv
x7mJ3iJ9UqNHk8XR4b+tIXuhxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD
weqjbWZ4/wCZP8vePCaz/wDIaiP+Zb+UX408f0r9lOxWOifJhXWjfyYWllPRXYQxnrCrJHRd3YZI
6A1NJecHEsN/S0T+76bE7xE+r5dk93LW3pL6ZpMni6PDf8VIn9m2fjm8s9rgFmQxvHNS0esbMiew
PnHLyai9fS0w2aNfUTtrs3+uf5bGPqy068fF227KtSsdFlKqNGMV6myyY6sbdIQI8tlOWOi6Jhhk
j3RD0vA8nicMx9etZmHRcT2Zyb6XNT8N9/2dt0T449T2AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAHhdfG3E9TH9cvdPEcXjk4zqI/q3L8aeP6xr2TsxpLOekMK6mFo6qpXSrm
OqBixvHSVmzC4OfqK7S9/wAByeLwbTW9K7fo8Fqo6Paeyl+fglI/Da0NcMPK7QC7AAB8313TiOf/
AKk/y2MHWrX4jG3E9R/1Lfyv0/aFNOrHxuU7LI7MMayGTVlHWUXhNe6Z6wIUsb9d1m20q7dkDpez
N9tRqKT5xEvRvKez9+Xis1/FSYerb5+OTyf6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAB43j9eXjN/jWJ/Z7J5L2mry8Upb8VIF8f6aGOey2eynHvOy7bowrrYSxZSwQJ2YXZ
92N4BoanrEvVexmTm4blr+HJ/aHltRHSXofYm/1Wrp5RaJaYY+X49WA0c4AD51xONuKan/qW/lbp
+0MOLRtxbU/9SU4J7KadWPjep2WQrr2WRPRk1TvsndXMpiRCb9FNu0rbTuqvKBscCjfi9PhWZeue
V9n434rafTHL1TfPxy+T/QAszAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHmv
avHtfTZfnV6VxPajHzcNrf8ABeJFs/XnMcr4no18c+6vr2YadkY2YM57sEDLyY37Mo7MMnYGlqO0
vQ+xNfqNVb1tEfs87qZ2rL0/sVX/AHdnt65P7Q0wx8vx6UBo5wAHz/jUbcX1PT78qtO2vaCnJxjP
8Zif2amnnspp04+OjWejKJ6MKdmcMmyJn4m5ZHzEVPMwtJv0VZLbQDqezcb8RzT6Y/7vUPM+ytZt
n1OTyiIh6Ztn45N/6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABocbxeLw
nUR5xXm/Rvq8+OMuDJjntaswEeBxT0bNZ6NatZpNqz3rO0rqsdO3PxlaWEMpY+aqWXkryT0ZT2V3
7A0dVPuy9f7G124NM/iyT/Z4zWT7sw957MYfB4Fp4/FE2/WWmGHldcBowAAeM9qKcvFeb8VIly9P
0nq7ntbTbVYL+tJj93CwT76unR4/jo0nozhhTsy3Y1sWljM9Ce7HyQIm3RRlttVbaWrnt0Sh6n2U
x8vD8mSfv3/h3XN4Bi8Lg2nj8Uc36y6TeOPXugCUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAPD8RxeBxXUU26Tbmj8+quro+02Lw+I4ssdslNvzhzazvDPbq8d7GW7Dfqz2VzG
0s2qd+iu/Zn5Ksk9BVztX1mI8930zh2LwOHabH+HHWP2fNYp4+vwYvxXiP3fUqxtWIjyjZtj45/L
faQFmQADzftfj3w6fJ6WmHmsP23rvaqnNwqLfhvEvIYZ+sV038bo0noy36MK9oZQxrdMyrlnMbMZ
QKrS1M07zEestq/RRjr4utwY/wAV4j91p9V18fQdJj8LR4ccfdpEfsuREbREJbuMAAAAAAAAAAAA
BAJAAAAEAJEAJQAJQAJEAJQAJQAJEACUJAQlAJEAJQAJQJAAAEAJEAJBAAAJAABAJEJAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwvanDzaPFmjvjv8A
tLztJ3h7HjGHx+FainnFeaPnHV4vFbeIU038VbHeGF+kso7Mb9mTdhKnLK3dRm7SIrHhGPxeP6Sv
9cT/AHfSnz72Zx+J7Q45/BWZ/Z9BbZ+OXyfQBZQABzeP4/E4NqI9Ii36S8Ng/wAx9C4jTxOH6ivr
jn+Hz3B/mQi/GvjdCnWNlsdI2V07LIlg6USrt2ZzZXMoFV+zPhGLxeOaavpbm/RVltEN72Yx+Jxm
b7dKUmf7L5+s9/HtRA2cqRACRACRACRACUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQCQQCRACRACRCQBCQBCQB
ACRACRACRACRACL1i9LVntMbPATTwdRkxT3pea/u+gPE8Xx+DxrPHlaYt+qNfGvjvtXXsi0dOrKk
dEXjZg6VMtbP2bMtXUdpEV0/Y2nNxbNf8OP+727xvsXH+N1U/wBEfy9k3nxyb+gCVQAGOWvNivX1
rMPnGGOXNNfOJ2fSZ6w+dZKeHxDPX8N7R+6L8a+L63KdoZ7q6zvEMpnowdKJ6ywmWUyqvIKM0vQ+
x+D6rU55+9aKx+TzWa36vbezmDwODYenW+95/Nphj5L6dQBo5wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAEiAAAEoA
AAAAAAAAAAAAAEAkEAkRuAkQbgkQAkQAkQAkQAl5T2nx8nEMOT8dNv0l6pwfarHvpcGWPu32/WCr
YvK4mOem6b9mGKd4Z3idmFdka0y1c892zfpMtLPaNpEV6D2Kj/Eauf6YeweQ9ieuTVz8K/3evbT4
5NfQBKoAA8FxCvJxrUx/XMvevD8Zry8fz/Haf2RfjTx/6RSOnRMyypHu9kXjowrqVSrvPRnZVl6V
kK0775MsUjvadn0nT4ow6bFijtSsVfPuFYvpPGtNTy54mfy6vorXDm8l9pEC7JIgBIgBIgBIgBIg
BIgBIhIAgBIhIAgBIgBIIBIAAhIAhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAAAAAAAAAAAA
AAAAAAAAABAJQkAEAAAAAAAAAAjc3BIjdG4Mkbo5kcwMjdhzHMDPc3V8xzAs3N1fMjmBZubq+Y5g
Wbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmTzAz3N2HMnmBlu5ftFTx
OEZJ/DMW/d0t2rxKni8N1FPWkiZ9eS08e7Cy8dGGn6UhZaJljXZGnmc3UT3dPP2cnUT78xCIV6j2
H/8A9c/6f7vXPI+w8bU1U+vL/d63du5NfUiDcVSIAS8b7RV5eOb/AIqRL2TyXtNX/e2KfXH/AHlF
+NPH/pr4+2xcxx0hFpY11K7R16KM32ZWz3UaidqSgrc9kcPicWyZJjfw6T+727y3sXh2xarN+K0V
h6lvPjj3e0ASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQAAAAAkQAkQAkAAAAAAAAAAAAAAA
EgAAAAAAAAAAAAAAAAAAAAAgAAABKDcAN0bgkY8xzAyRux5kcwM9zdXNkTcFm6OZXzMeYFvMibKu
ZHMC2bo51U2RuC2bom6rc3BZzom6sBZzI52ADPnOdggFnMc6skFnMc6rc3BbznOp3RzAv50c6nml
HMC/nOf4qOY5wX85zqOc5wbHOc7X5znBsc6edr85zg2ec52vzpi4NjmY5bROG+/bllVzsNTk5dLl
n0pP8BHmMHWNmzt0aum8obm08vVjfrtnxztR0mXHzTvaZdjVRMTLkZo6yiFen9iZ2pqY/wBP93rN
3kPY+/LfPX1rE/u9XzN3HfqzdO6vmTuIZ7m7Hc3Bnu8t7TR/vHBP9E/y9Pu837SV31umn+if5Rfi
/j/01MMb1hjkrtKzBG0bMsmOZY11tOYamr6Und0LUc7XT7u3rJPqL8er9lcPhcFpbzyWm39v7O00
+FYvA4Zpsc94xxu227jv1IAgAAAAAAAAABKAAAASgASgBIgBIgBIgBIhIAAAAAAAAAAAAAAAAAAC
UACUJAAAAAAAAAAAABIAAAAAAAAAAAAAAAAAAAAg3AEbomQZbo3YzLGbAz3RNlc3YzcFs2YzdVN2
M2Bdzom6nmNwW86JurTAMuY3REJ2BB1ZRVMVBhsbSsiqeUFXLucq3lTygp5TlXcpygp5TlXcpygp
5TlXcqOUFXKjlXcrGYBXysdlswiYBVMdUTCyY6sZBWxlnMMZgGLGZZSwkDdHMiWO4MuY5mEyjcFn
N1OdVzHMC3nTzqeY5gX85zqOZPMC+Lqdbk20eb/RKOZr8QybaK/XvtH7iZ9aGlp2luzT3fg19NHS
OjbmPcYX67XH1XSZ9XIzRvMuzrK7zLkZYmYnciunb9lZ5dTk+OP+71cXeP8AZnJ/ip2nf3J/l6iL
/Fu5L9bMWZczXi6YuIbEWTzKIuyiwLt3nuO25uI4a/hx7/rLuczg8TicvFLbfdpEK6+NPH/phhjo
stLGkctUWnoxrrU3j1cnWTzZq1jzl1clo5Zcu8c+txR63iP3Tn6pv4+g4o5cVI9IiGe7CJ2iE7t3
GyN2O6dwSINwSISAlAAlACRAAlAAlACRACRCQAAAAAAAAAASgASISAAAAAAAAAAAAACQAAAAAAAA
AAAAAASAAAAAAAAAAAAAAAAIAAAQCAJljuljsCJlhMs9mOwMJYys5TkBVsjZdyHICrZPKt5E8oK4
qmKrOVOwMIqyirPY2Bjyp2ZbAI2NmSARsbMgEbI2ZAMdjZICNkbMkSCNmOzJEgx2YyzljMAwlhKy
WEwCuWErJhhMArlhLOWEgxljMpljIImWMyTKJA3N0IBO5vux3NwZbnMx3NwZczT4jf3MdPW27a3a
fJOq1XNP2KdIRfi+J2trSYfcjeF+Wm1OicVeWIiN9kai8xjY12ORqultnI1Ecsujq79XP1FovWYI
rTgeq+j8QrWZ+3Mx+r2UXeC0WG2Ti2kiN5mL807eUREvbzbaejefHJv62Iv8WUXa0WTFhVtRdlF2
rz9WUXBtc7jR9dqc2T1ttHyhvZMvJitb0jdq6XHNcNenWVN3028U99WRj6Kb02be3Tq18/SN2Lpc
3UdN9nOmZrqKX/DaJ/d0svvTLRzV3jomK6+Pd1vvWJj0ZczT0mXxNJht60hfFnQ4qu3N1cWTEgs3
Tur5k7gz3N2O5uDM3Y7m4MtxBuCQASIASIASAAAAAAACRCQAAAAAAAAEoSAAAAAAAAAAAlAAlCQA
AAAAAAAAAAASAAAAAAAAAAAAIASgAAAEJAQJQCNkbMgGOyOVnsAw5TlZ7GwMOVPKy2NgY7GzIBGx
skA2AAAAAAAAAAQkBAEghEskAxYzDPZGwK5hjMLJhjMAqmGEwumrCagomFcw2JqqtUFEsLLrV82F
o7gqljKyYYTGwMZRKUSCAQAboJnaN5Bjkneu0d5W4ccViIiOzHFWbTzNumP1Zarr8eeRMbxDW1Mx
NO67NbkhzNVnmInqzaOZrL93JyZeV0M1++7S02jvxDWxhxx033tPpC8Z6rrezWjmZyazJG2/u03h
2vFibTHoqvamiwVwY+nLGzV0+SZ1Mx8G0/45tOhzJ5lXMc3UVXRdlF1HP+iYsDPLPPy49/tz1+Te
pSIr0ho6ak5Ms5J8o2q6NImOrHV7XX488ypzTtHXo0s9t6zG7c1G1qz6ubeZiZ3UatXJG3yauSO7
cvMTEx5tPLb3prPRMVr0HB8vicNxf0+7+kt+LOJwTJyY/Bnz3tH93X36N58cWvq6LSyiyndMSlC7
mZcymLJiwLosmJVRLKLAtiU7q4lMSCzc3YxJuDMRuAlKAEgAAAlAkAAAAAABKAEgAAAAAJAAAAAA
AAAAAAAEgAAAAAAAAAAAAAkAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAhIAAACAAAASgAAAAAAEAAAA
hGzJAImGMwzQDDZjNVuyNgUTVhNGxysZqDVmiu1G5NN2M4waM0+DCaN2cbGcQNGaMZq3JxMJxA1J
qx2bU4kU09slorWNwa20z02RXHbJbl26QvtFovbHWkxEdJt5y2MOHlr2U1W3jx+1hiw8vSO63lmI
XRTaEWmtY6snRHO1VpmJ+DjavpSZl2s8b7y4HFcnh0n0gha5ebJN55KRM2mdoiPN6fh+kpwXh0Wy
RHj5Otp/s5Ps1p62y31+em9aTMYt/OfVfxTiPjZ52naI7fBrI5t66xz5+a1rW7yx0eSL6iZjtEOX
qNbSletom3lENjh2fbHzbbWt3iVozruc+5ztWubf4M4ybpQ2Oboyrva0Vjza8WdDR4OkXt3n9ldX
kaePP9VtYqctYhdvt5oivTeCZ2YOxXk6ubqMfV0b9mrljfqlFcq88k7z2U5axeItDa1OPessuC8P
ya7XRWYnwqdbT/ZMilvIu4dpslNdixXja8Y5tt85djZdbDWnGOesRtXFtuw6T27No5Kx2OrKYQlC
ExKJgBnEpiyvdlEgsizKLKollFgWxLKJVRLKJBbEp3VxLKJBnuMWQJEbpBIAAAJAAAABIAAAAAAA
lAJAAAAAAAAAAAAAASAAAAAAAAAAAAAJAAAABAJABAlAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAA
AAABAJQAAAAgAABAAI2EoBGyJhkgGPKxmqxAKpownHC+YRMdN5BrTj67R3bOn01o7p01Iv71u89o
b9a7LfBTfS1vWI2jf12VfQPSW8KX2mas+NC2iv6xMNfJpMnLtEbuuxtMRCtzF55NR5rPps1N/ctP
y6uHreE6nXZ4pak48X3rT06fB7fNeI33cbX6mI32R/MWu7XF116aDSRhxbRERs8f499bkyZeeKae
kzE2mdon81/tfxDLGOunwbzlzbx08oaHBvZHJlx48mrvaa94pu04y617576rNGLRRM0397JEd/lu
9Dw/S3x4qxffo6mm4NjwUiKY4iI9Ib1dHFY6QIaNabbrYrLfrpJtaK1rMzPZb/s+05IpP59OyLeJ
k7eNfRaOc1ue32I7fGXYpi5Y77M8OGMeOKxHSFsU3Y29deZMzirl6dlVvhLatCjJHeYQv1rXnps1
8k9/VsW6qLVmZIi1rzitlvFKRvaZ2h6TSaenC9FFY+3brM+sqeG8Prp4+kZ+lvuxPkr1mqm95nfp
DXM459676a2q1dsV7XietvNno78+CJn1cjX6mOeIm0bR33dfRU5NJjidt9t5afjG/V6JZ7I2QMNh
nyo2BhsMuVG3wAhMSbbQRAMolnE+iuGUSCyJZRKuGUSCyJZK4llEgyZMYTuCUsYSCQASISAAAlCQ
AAAAAAEoASCASAAAAAAAAAAAAlACRACQAAAAAAAAAEgCEoASCAAAAAAAAAAAAAAAAAAAAAAABAAA
AAAAAAAISAIAAAAAAQAAACASgAAAQJAQAAhIDHZhln3do7z0WS18mWsajHjmes7pg3dNi5aRMNqO
yvDHTpPRaigHZhN4hHRlaVN59JY3zRENLUavaO+yq0iNVlitJ6vNcR1MVi0zO0era1/Ea0rPvbz5
PM5MWp45qvo2GZrhmfrsnpHpHzTCseEcM/2vrr8Q1Eb4qzy44nziPN63HpYiIiI7LNHoqabBTFii
IpSNohuVxrKtWMEejPwY9G1FFmHB4mWJn7MdfnIM9JpIx15to5pbUaas/a6rqViI7MxPxqX0UT1r
O3wVzpbR2hviP5i03Y5s6a879FNtHljydhExCv8AMTPJXBnRZbz0iG5ptFjwe/l96zctMVamTJtE
yTMibu1VrdTzRMR0j0ed4lr64MVpm0RERvMz5NvX62uOJ69XhOKX1HH9bHDtFvNYnfJeOy0Z2ojX
6jjnEq6fRUmccTvN/J9H0eKcOnx45neaxEbubwHgOHg+milI3vP2resu3Wu0JQmITsmISDHZHKz2
JgFc1RMLJhGwK9iIZ7MZgEdgmAEwyiWCdwWRLKJVxKYsC2JTuriWUSDNlEsIlMAySx3SCRCQSIAS
AAACRACQAAAAAAASIASAAAAAAAAAAAAAAACRACRACQASIAAAAAAAAAAAAAAAAAAAAAAAAQCUAAAA
AAAAAAIAAAAAAAAQAAAAAACBICBICAAEJAQJQCJcLjuS2ny6fPG/LWdpd1o8T0X07SXx/e7wCdJx
Wa0jmneHQpxPDMdZmJfNtZm49weZrh0/j4o7VtSZ2+Uw0/8A7o49k92vBLc/ntFohFW9PqGXimOI
6Tu1L8T3eCx6r2t1O3JwvHjifO99v7t/Bwf2l1PXU6rS6eJ8qUm8x+so5TsekzcSjbvs4mt4rzW5
K2mbT0itesy2cHsvbvqtbmyz5xERWP2jd1tJwrTaONsOKtZ8585+cnDrzmn4Rq+IZObUROHD32n7
Vv8A0ej0uhxaXFGPFSK1j0bkY4jyZRVZVXFGUVWbGwKsk8mObekNrSW3pWf1a2aYjHbm7bNnQ1id
PW0TvuDdhJEbQABMsLW2R0ZTMQrvfbz2YWzVhpanUxEd0dWkW5c8R5uXxDX1w4pnfr5Q19XxKuOJ
2neXltVqtVxbV/RdJ715+1bypANfiOu1HENV9C0MTfNeesx2rD1PAeBYuE6aKx72W3W9/WVnBuB4
eF4dqRzZbdb5J72l160WVK02ZxCYhOwI23TsnY2BGxsnYBjsiYZsZBjMMZZSgGEolMsQDdG6NwZ7
piVe6YkFsSziVMWZRILolMSriWUSCyJTuwhMSDMRCQSI3SAlACRCQAAEoAEoASAAAAAAAAACUACR
ACQAAAAAAAAAAAAASAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAABAAAAAAAAAAAAACBKAAAAAAAQ
JQAAAhICEbJAYTWJ7wx8KvpC0BV4ceieWGewDHlNmWwCNjZICNhIDmcZredBecdpiY69FXCOLW+i
UiZidukulmxxlx2paN4mNng+K4+I8Hy2yaTfl37TXetoCPfRxfp1qi3F48ofKMvtvxak8s6LDv61
rZji9rPaLUf5PC+bfttS0q8q3p9W/wBrRMdpUZuKdN99nzvFqPbTVz7nD8OKs+do2/mW3h4D7Xaq
ZnPrtNpqz35aRaYOHY9Zk4pNt9rR+rl6zi+OnS+WN57Rv1lXp/YrNaYtruL6zNPnGO3hxP6O5w/2
f0HDuun09Yv55Le9afznqcOvO4tBreMTHu30unnva0bWt8on+70nDuE4OHYYx4Kbesz3tPrMuhGO
IjpDOKrK9YVpsyiGUQnYGOyUgI2SlAIEmwMWMs9kTAMJYzDOYRMArmGErZhhMArlHmzmGMwDE3Ts
bAbs4swj5pgFkSziVcM4BZEsolXDKAZwyhjCYBkACQhIAAAAAAAJAAAAAAAAAAAAAAAAAAAShIAA
AAAAAAJAAAAAAAAAAAAAABAJEAAAAAAAAAAAAAAAIEoBKAAAAAAAAAAAAAAABAlAAAAAAAIAAAAA
BAkBAkBAkBAlACEgMZjdjbFW8bWrEx8YWANb6Fp+bfwab+vLDKMFK9qxH5L0bAr8OPRPKz2AY7J2
SbAjYZAI2E7AIEgIEgIEgMdkSy2NgY7MdlmyNoBXsxmFuyNgVTVjNV3KjlBRNTlXTVHKCrlIqt5T
lBhEMohlFerLlBjEMohMVTEARDKCITsAk2AEgAAAkAAAAAAAAAAAAAAAAAAAAAAAASAAAAAAAAD/
2Q==`;async function _5e(e){let t=(r,a="application/octet-stream")=>fetch(`data:${a};base64,${r}`).then(o=>o.blob()),n,s;switch(e.config.warmup){case"face":n=await t(Nv);break;case"body":case"full":n=await t(Ev);break;default:n=null}if(n){let r=await createImageBitmap(n);s=await e.detect(r,e.config),r.close()}return s}async function R5e(e){return new Promise(t=>{let n;switch(e.config.warmup){case"face":n="data:image/jpeg;base64,"+Nv;break;case"full":case"body":n="data:image/jpeg;base64,"+Ev;break;default:n=""}let s;if(typeof Image<"u")s=new Image;else if(ke.Image)s=new ke.Image;else return;s.onload=async()=>{let r=Er(s.naturalWidth,s.naturalHeight);if(!r)he("Warmup: Canvas not found"),t(void 0);else{let a=r.getContext("2d");a&&a.drawImage(s,0,0);let o=await e.image(r),i=o.tensor?await e.detect(o.tensor,e.config):void 0;t(i)}},n?s.src=n:t(void 0)})}async function $5e(e){let t=r=>Buffer.from(r,"base64"),n;e.config.warmup==="face"?n=t(Nv):n=t(Ev);let s;if("node"in C2&&vn()==="tensorflow"){let r=(void 0).decodeJpeg(n),a=Jt(r,0);e.tf.dispose(r),s=await e.detect(a,e.config),e.tf.dispose(a)}else e.config.debug&&he("Warmup tfjs-node not loaded");return s}async function D5e(e){let t;return typeof createImageBitmap=="function"?t=await _5e(e):typeof Image<"u"||ke.Canvas!==void 0?t=await R5e(e):t=await $5e(e),t}async function F5e(e){var t,n,s,r;if(!K().flagRegistry.ENGINE_COMPILE_ONLY)return;let a=vn(),o=yr();if(a!=="webgl"&&a!=="humangl"||!o?.checkCompileCompletion)return;K().set("ENGINE_COMPILE_ONLY",!0);let i=bn().state.numTensors,l=[];for(let[h,d]of Object.entries(e.models).filter(([p,f])=>p!==null&&f!==null)){let p=(n=(t=d.inputs)==null?void 0:t[0])!=null&&n.shape?[...d.inputs[0].shape]:[1,64,64,3],f=(r=(s=d.inputs)==null?void 0:s[0])!=null&&r.dtype?d.inputs[0].dtype:"float32";for(let g=0;g<p.length;g++)p[g]===-1&&(p[g]=g===0?1:64);let m=Vt(p,f);try{let g=d.execute(m);l.push(h),Array.isArray(g)?g.forEach(y=>le(y)):le(g)}catch{he("compile fail model:",h)}le(m)}let u=await o.checkCompileCompletionAsync();o.getUniformLocations(),e.config.debug&&he("compile pass:",{models:l,kernels:u.length}),K().set("ENGINE_COMPILE_ONLY",!1);let c=bn().state.numTensors;c-i>0&&he("tensor leak:",c-i)}async function O5e(e,t){await k2(e,!1);let n=pe();return e.state="warmup",t&&(e.config=is(e.config,t)),!e.config.warmup||e.config.warmup.length===0||e.config.warmup==="none"?{face:[],body:[],hand:[],gesture:[],object:[],performance:e.performance,timestamp:pe(),persons:[],error:null}:new Promise(async s=>{await LE.load(e),await F5e(e);let r=await D5e(e),a=pe();e.config.debug&&he("warmup",e.config.warmup,Math.round(a-n),"ms"),e.emit("warmup"),s(r)})}var Qd,um,cm,I2,Ri,S9=class{constructor(e){me(this,"version"),me(this,"config"),me(this,"result"),me(this,"state"),me(this,"process"),me(this,"tf"),me(this,"env"),me(this,"draw"),me(this,"models"),me(this,"events"),me(this,"faceTriangulation"),me(this,"faceUVMap"),me(this,"performance"),_d(this,Qd,void 0),_d(this,um,void 0),_d(this,cm,void 0),me(this,"gl"),me(this,"analyze",(...s)=>{if(!ia(this,um))return;let r=this.tf.engine().state.numTensors,a=ia(this,Qd);vf(this,Qd,r);let o=r-a;o!==0&&he(...s,o)}),_d(this,I2,s=>{if(!ia(this,cm))return null;if(!s)return"input is not defined";if(this.env.node&&!(s instanceof et))return"input must be a tensor";try{this.tf.getBackend()}catch{return"backend not loaded"}return null}),me(this,"similarity",w9),me(this,"distance",Wg),me(this,"match",k9),me(this,"emit",s=>{var r;(r=this.events)!=null&&r.dispatchEvent&&this.events.dispatchEvent(new Event(s))}),_d(this,Ri,{}),this.env=ke;let t=(yv.tfjs||fI).replace(/-(.*)/,"");Tu.wasmPath=`https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@${t}/dist/`,Tu.modelBasePath=ke.browser?"../models/":"file://models/",Tu.backend=ke.browser?"webgl":"tensorflow",this.version=nS,Object.defineProperty(this,"version",{value:nS}),this.config=JSON.parse(JSON.stringify(Tu)),Object.seal(this.config),this.config.cacheModels=typeof indexedDB<"u",e&&(this.config=is(this.config,e)),u5e(this.config),this.tf=C2,this.state="idle",vf(this,Qd,0),vf(this,um,!1),vf(this,cm,!1),this.performance={},this.events=typeof EventTarget<"u"?new EventTarget:void 0,this.models=new f9,this.draw={options:Ea,canvas:(s,r)=>x9(s,r),face:(s,r,a)=>kv(s,r,a),body:(s,r,a)=>Sv(s,r,a),hand:(s,r,a)=>Iv(s,r,a),gesture:(s,r,a)=>Tv(s,r,a),object:(s,r,a)=>Cv(s,r,a),person:(s,r,a)=>A9(s,r,a),all:(s,r,a)=>b9(s,r,a)},this.result={face:[],body:[],hand:[],gesture:[],object:[],performance:{},timestamp:0,persons:[],error:null},this.process={tensor:null,canvas:null},this.faceTriangulation=sbe,this.faceUVMap=rbe,this.gl=_t,Bg(this,null,""),this.emit("create"),(this.config.debug||this.env.browser)&&he(`version: ${this.version}`),this.config.debug&&he(`tfjs version: ${this.tf.version["tfjs-core"]}`);let n=JSON.parse(JSON.stringify(this.env));delete n.kernels,delete n.initial,delete n.perfadd,this.config.debug&&he("environment:",n)}reset(){let e=this.config.backend;this.config=JSON.parse(JSON.stringify(Tu)),this.config.backend=e,Lw(),ke.initial=!0}validate(e){let t=iS(Tu,e||this.config);return t.length===0&&(this.config=is(this.config,e)),t}check(){return S2(this)}now(){return pe()}image(e,t=!0){return Gm(e,this.config,t)}async segmentation(e,t){return i5e(e,t,this.config)}enhance(e){return YE(e)}compare(e,t){return z2e(this.config,e,t)}async init(){await k2(this,!0),await this.tf.ready(),Lw()}async load(e){this.state="load";let t=pe(),n=Object.values(this.models).filter(a=>a).length;e&&(this.config=is(this.config,e)),this.env.initial&&(await k2(this,!1)||he("error: backend check failed"),await G2(),this.env.browser&&(this.config.debug&&he("configuration:",this.config),this.config.debug&&he("tf flags:",this.tf.ENV.flags))),await g9(this),this.env.initial&&this.config.debug&&he("tf engine state:",this.tf.engine().state.numBytes,"bytes",this.tf.engine().state.numTensors,"tensors"),this.env.initial=!1,Object.values(this.models).filter(a=>a).length!==n&&(S2(this),this.emit("load"));let r=Math.trunc(pe()-t);r>(this.performance.loadModels||0)&&(this.performance.loadModels=this.env.perfadd?(this.performance.loadModels||0)+r:r)}next(e=this.result){return T5e(e,this.config)}getModelStats(){return m9(this)}async warmup(e){let t=pe(),n=await O5e(this,e),s=pe();return this.performance.warmup=Math.trunc(s-t),n}async profile(e,t){let n=await this.tf.profile(()=>this.detect(e,t)),s={},r=0;for(let o of n.kernels)s[o.name]?s[o.name]+=o.kernelTimeMs:s[o.name]=o.kernelTimeMs,r+=o.kernelTimeMs;let a=[];Object.entries(s).forEach(o=>a.push({kernel:o[0],time:o[1],perc:0}));for(let o of a)o.perc=Math.round(1e3*o.time/r)/1e3,o.time=Math.round(1e3*o.time)/1e3;return a.sort((o,i)=>i.time-o.time),a.length=20,a}async detect(e,t){return this.state="detect",new Promise(async n=>{var s,r,a,o,i,l,u,c,h,d,p,f,m,g,y,x,A,b,w,S,C;this.state="config";let _;this.config=is(this.config,t),this.state="check";let R=ia(this,I2).call(this,e);R&&(he(R,e),this.emit("error"),n({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:pe(),persons:[],error:R}));let D=pe();await this.load(),_=pe(),this.state="image";let E=await Gm(e,this.config);if(this.process=E,this.performance.inputProcess=this.env.perfadd?(this.performance.inputProcess||0)+Math.trunc(pe()-_):Math.trunc(pe()-_),this.analyze("Get Image:"),!E.tensor){this.config.debug&&he("could not convert input to tensor"),this.emit("error"),n({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:pe(),persons:[],error:"could not convert input to tensor"});return}this.emit("image"),_=pe(),this.config.skipAllowed=await M2e(this.config,E.tensor),this.performance.totalFrames||(this.performance.totalFrames=0),this.performance.cachedFrames||(this.performance.cachedFrames=0),this.performance.totalFrames++,this.config.skipAllowed&&this.performance.cachedFrames++,this.performance.cacheCheck=this.env.perfadd?(this.performance.cacheCheck||0)+Math.trunc(pe()-_):Math.trunc(pe()-_),this.analyze("Check Changed:");let F=[],k=[],M=[],z=[];this.state="detect:face",this.config.async?(F=this.config.face.enabled?rS(this,E.tensor):[],this.performance.face&&delete this.performance.face):(_=pe(),F=this.config.face.enabled?await rS(this,E.tensor):[],this.performance.face=this.env.perfadd?(this.performance.face||0)+Math.trunc(pe()-_):Math.trunc(pe()-_)),this.config.async&&(this.config.body.maxDetected===-1||this.config.hand.maxDetected===-1)&&(F=await F),this.analyze("Start Body:"),this.state="detect:body";let W=this.config.body.maxDetected===-1?is(this.config,{body:{maxDetected:this.config.face.enabled?1*F.length:1}}):this.config;this.config.async?((s=this.config.body.modelPath)!=null&&s.includes("posenet")?k=this.config.body.enabled?tS(E.tensor,W):[]:(r=this.config.body.modelPath)!=null&&r.includes("blazepose")?k=this.config.body.enabled?ok(E.tensor,W):[]:(a=this.config.body.modelPath)!=null&&a.includes("efficientpose")?k=this.config.body.enabled?ck(E.tensor,W):[]:(o=this.config.body.modelPath)!=null&&o.includes("movenet")&&(k=this.config.body.enabled?Kk(E.tensor,W):[]),this.performance.body&&delete this.performance.body):(_=pe(),(i=this.config.body.modelPath)!=null&&i.includes("posenet")?k=this.config.body.enabled?await tS(E.tensor,W):[]:(l=this.config.body.modelPath)!=null&&l.includes("blazepose")?k=this.config.body.enabled?await ok(E.tensor,W):[]:(u=this.config.body.modelPath)!=null&&u.includes("efficientpose")?k=this.config.body.enabled?await ck(E.tensor,W):[]:(c=this.config.body.modelPath)!=null&&c.includes("movenet")&&(k=this.config.body.enabled?await Kk(E.tensor,W):[]),this.performance.body=this.env.perfadd?(this.performance.body||0)+Math.trunc(pe()-_):Math.trunc(pe()-_)),this.analyze("End Body:"),this.analyze("Start Hand:"),this.state="detect:hand";let H=this.config.hand.maxDetected===-1?is(this.config,{hand:{maxDetected:this.config.face.enabled?2*F.length:1}}):this.config;this.config.async?((d=(h=this.config.hand.detector)==null?void 0:h.modelPath)!=null&&d.includes("handdetect")?M=this.config.hand.enabled?zk(E.tensor,H):[]:(f=(p=this.config.hand.detector)==null?void 0:p.modelPath)!=null&&f.includes("handtrack")&&(M=this.config.hand.enabled?Gk(E.tensor,H):[]),this.performance.hand&&delete this.performance.hand):(_=pe(),(g=(m=this.config.hand.detector)==null?void 0:m.modelPath)!=null&&g.includes("handdetect")?M=this.config.hand.enabled?await zk(E.tensor,H):[]:(x=(y=this.config.hand.detector)==null?void 0:y.modelPath)!=null&&x.includes("handtrack")&&(M=this.config.hand.enabled?await Gk(E.tensor,H):[]),this.performance.hand=this.env.perfadd?(this.performance.hand||0)+Math.trunc(pe()-_):Math.trunc(pe()-_)),this.analyze("End Hand:"),this.analyze("Start Object:"),this.state="detect:object",this.config.async?((A=this.config.object.modelPath)!=null&&A.includes("nanodet")?z=this.config.object.enabled?Yk(E.tensor,this.config):[]:(b=this.config.object.modelPath)!=null&&b.includes("centernet")&&(z=this.config.object.enabled?lk(E.tensor,this.config):[]),this.performance.object&&delete this.performance.object):(_=pe(),(w=this.config.object.modelPath)!=null&&w.includes("nanodet")?z=this.config.object.enabled?await Yk(E.tensor,this.config):[]:(S=this.config.object.modelPath)!=null&&S.includes("centernet")&&(z=this.config.object.enabled?await lk(E.tensor,this.config):[]),this.performance.object=this.env.perfadd?(this.performance.object||0)+Math.trunc(pe()-_):Math.trunc(pe()-_)),this.analyze("End Object:"),this.state="detect:await",this.config.async&&([F,k,M,z]=await Promise.all([F,k,M,z])),this.state="detect:gesture";let j=[];this.config.gesture.enabled&&(_=pe(),j=[...S5e(F),...k5e(k),...C5e(M),...I5e(F)],this.config.async?this.performance.gesture&&delete this.performance.gesture:this.performance.gesture=this.env.perfadd?(this.performance.gesture||0)+Math.trunc(pe()-_):Math.trunc(pe()-_)),this.performance.total=this.env.perfadd?(this.performance.total||0)+Math.trunc(pe()-D):Math.trunc(pe()-D);let Z=((C=this.process.tensor)==null?void 0:C.shape)||[];this.result={face:F,body:k,hand:M,gesture:j,object:z,performance:this.performance,canvas:this.process.canvas,timestamp:Date.now(),error:null,get persons(){return E5e(F,k,M,j,Z)}},le(E.tensor),this.emit("detect"),this.state="idle",n(this.result)})}async sleep(e){return new Promise(t=>{setTimeout(t,e)})}async video(e,t=!0,n=0){t?(ia(this,Ri)[e.id]||(this.config.debug&&he("video start",e.id),ia(this,Ri)[e.id]=!0),!e.paused&&ia(this,Ri)[e.id]&&e.readyState>=2&&await this.detect(e),n>0&&await this.sleep(n),ia(this,Ri)[e.id]&&requestAnimationFrame(()=>this.video(e,t,n))):(this.config.debug&&he("video stop",e.id),ia(this,Ri)[e.id]=!1)}};Qd=new WeakMap;um=new WeakMap;cm=new WeakMap;I2=new WeakMap;Ri=new WeakMap;var gd;onmessage=async e=>{if(gd||(gd=new S9(e.data.config)),e.data.image){let t=gd.tf.tensor(e.data.image,[1,e.data.height,e.data.width,3],"float32"),n=await gd.detect(t,e.data.config);gd.tf.dispose(t),postMessage({result:n,state:JSON.stringify(gd.tf.engine().state)})}};
//# sourceMappingURL=worker.js.map
